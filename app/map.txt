# compiler: R8
# compiler_version: 1.4.94
# min_api: 16
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    20:21:void <init>() -> <init>
    91:67:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    10:10:void <init>() -> <init>
    12:12:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    16:16:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.MediaBrowserCompat -> android.support.v4.media.MediaBrowserCompat:
    109:109:void <clinit>() -> <clinit>
    187:197:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    209:209:void connect() -> connect
    217:217:void disconnect() -> disconnect
    270:270:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
android.support.v4.media.MediaBrowserCompat$CallbackHandler -> android.support.v4.media.MediaBrowserCompat$CallbackHandler:
    2080:2081:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl) -> <init>
    2086:2135:void handleMessage(android.os.Message) -> handleMessage
    2141:2141:void setCallbacksMessenger(android.os.Messenger) -> setCallbacksMessenger
android.support.v4.media.MediaBrowserCompat$ConnectionCallback -> android.support.v4.media.MediaBrowserCompat$ConnectionCallback:
    622:627:void <init>() -> <init>
    651:651:void setInternalConnectionCallback(android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal) -> setInternalConnectionCallback
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$StubApi21 -> android.support.v4.media.MediaBrowserCompat$ConnectionCallback$StubApi21:
    661:661:void <init>(android.support.v4.media.MediaBrowserCompat$ConnectionCallback) -> <init>
    666:669:void onConnected() -> onConnected
    682:685:void onConnectionFailed() -> onConnectionFailed
    674:677:void onConnectionSuspended() -> onConnectionSuspended
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver -> android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    2310:2322:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    2246:2249:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21:
    1623:1628:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    1634:1634:void connect() -> connect
    1639:1646:void disconnect() -> disconnect
    1674:1678:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    1880:1899:void onConnected() -> onConnected
    1906:1909:void onConnectionSuspended() -> onConnectionSuspended
    1932:1962:void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> onLoadChildren
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23:
    1978:1978:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi26 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi26:
    1995:1995:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase:
    1006:1008:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    1024:1030:void connect() -> connect
    1085:1086:void disconnect() -> disconnect
    1481:1490:void dump() -> dump
    1125:1134:void forceCloseConnection() -> forceCloseConnection
    1171:1172:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    1457:1457:java.lang.String getStateLabel(int) -> getStateLabel
    1139:1139:boolean isConnected() -> isConnected
    1466:1469:boolean isCurrent(android.os.Messenger,java.lang.String) -> isCurrent
    1372:1389:void onConnectionFailed(android.os.Messenger) -> onConnectionFailed
    1396:1430:void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> onLoadChildren
    1329:1366:void onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> onServiceConnected
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1:
    1030:1030:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    1034:1046:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2:
    1086:1086:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    1090:1108:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection:
    1497:1497:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    1592:1597:boolean isCurrent(java.lang.String) -> isCurrent
    1502:1502:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    1552:1552:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    1581:1584:void postOrRun(java.lang.Runnable) -> postOrRun
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$1 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$1:
    1502:1502:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection,android.content.ComponentName,android.os.IBinder) -> <init>
    1505:1543:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$2 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$2:
    1552:1552:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection,android.content.ComponentName) -> <init>
    1555:1575:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    563:563:void <clinit>() -> <clinit>
    524:526:void <init>(android.support.v4.media.MediaDescriptionCompat,int) -> <init>
    538:540:void <init>(android.os.Parcel) -> <init>
    487:494:android.support.v4.media.MediaBrowserCompat$MediaItem fromMediaItem(java.lang.Object) -> fromMediaItem
    508:513:java.util.List fromMediaItemList(java.util.List) -> fromMediaItemList
    556:560:java.lang.String toString() -> toString
    550:551:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$1:
    564:564:void <init>() -> <init>
    564:564:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    567:567:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    564:564:java.lang.Object[] newArray(int) -> newArray
    572:572:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    2276:2279:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper -> android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper:
    2149:2151:void <init>(android.os.IBinder,android.os.Bundle) -> <init>
    2169:2173:void addSubscription(java.lang.String,android.os.IBinder,android.os.Bundle,android.os.Messenger) -> addSubscription
    2156:2159:void connect(android.content.Context,android.os.Messenger) -> connect
    2163:2163:void disconnect(android.os.Messenger) -> disconnect
    2195:2198:void registerCallbackMessenger(android.content.Context,android.os.Messenger) -> registerCallbackMessenger
    2225:2230:void sendRequest(int,android.os.Bundle,android.os.Messenger) -> sendRequest
    2202:2202:void unregisterCallbackMessenger(android.os.Messenger) -> unregisterCallbackMessenger
android.support.v4.media.MediaBrowserCompat$Subscription -> android.support.v4.media.MediaBrowserCompat$Subscription:
    2037:2039:void <init>() -> <init>
    2055:2057:android.support.v4.media.MediaBrowserCompat$SubscriptionCallback getCallback(android.os.Bundle) -> getCallback
    2051:2051:java.util.List getCallbacks() -> getCallbacks
    2047:2047:java.util.List getOptionsList() -> getOptionsList
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback:
    698:707:void <init>() -> <init>
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi21 -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi21:
    765:765:void <init>(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> <init>
    801:809:java.util.List applyOptions(java.util.List,android.os.Bundle) -> applyOptions
    770:784:void onChildrenLoaded(java.lang.String,java.util.List) -> onChildrenLoaded
    793:793:void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi26 -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi26:
    821:821:void <init>(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> <init>
    827:827:void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> onChildrenLoaded
    833:833:void onError(java.lang.String,android.os.Bundle) -> onError
android.support.v4.media.MediaBrowserCompatApi21 -> android.support.v4.media.MediaBrowserCompatApi21:
    45:45:void connect(java.lang.Object) -> connect
    40:40:java.lang.Object createBrowser(android.content.Context,android.content.ComponentName,java.lang.Object,android.os.Bundle) -> createBrowser
    35:35:java.lang.Object createConnectionCallback(android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback) -> createConnectionCallback
    74:74:java.lang.Object createSubscriptionCallback(android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback) -> createSubscriptionCallback
    49:49:void disconnect(java.lang.Object) -> disconnect
    66:66:android.os.Bundle getExtras(java.lang.Object) -> getExtras
    70:70:java.lang.Object getSessionToken(java.lang.Object) -> getSessionToken
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallbackProxy -> android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallbackProxy:
    97:98:void <init>(android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback) -> <init>
    103:103:void onConnected() -> onConnected
    113:113:void onConnectionFailed() -> onConnectionFailed
    108:108:void onConnectionSuspended() -> onConnectionSuspended
android.support.v4.media.MediaBrowserCompatApi21$MediaItem -> android.support.v4.media.MediaBrowserCompatApi21$MediaItem:
    149:149:java.lang.Object getDescription(java.lang.Object) -> getDescription
    145:145:int getFlags(java.lang.Object) -> getFlags
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallbackProxy -> android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallbackProxy:
    126:127:void <init>(android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback) -> <init>
    133:133:void onChildrenLoaded(java.lang.String,java.util.List) -> onChildrenLoaded
    138:138:void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompatApi26 -> android.support.v4.media.MediaBrowserCompatApi26:
    31:31:java.lang.Object createSubscriptionCallback(android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback) -> createSubscriptionCallback
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallbackProxy -> android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallbackProxy:
    54:54:void <init>(android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback) -> <init>
    60:61:void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> onChildrenLoaded
    66:67:void onError(java.lang.String,android.os.Bundle) -> onError
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    418:418:void <clinit>() -> <clinit>
    190:198:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    201:211:void <init>(android.os.Parcel) -> <init>
    375:410:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    331:332:java.lang.Object getMediaDescription() -> getMediaDescription
    220:220:java.lang.String getMediaId() -> getMediaId
    316:316:java.lang.String toString() -> toString
    300:310:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    419:419:void <init>() -> <init>
    419:419:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    422:425:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    419:419:java.lang.Object[] newArray(int) -> newArray
    431:431:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    451:451:void <init>() -> <init>
    552:552:android.support.v4.media.MediaDescriptionCompat build() -> build
    495:495:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    530:530:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    507:507:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    519:519:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    461:461:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    541:541:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    483:483:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    472:472:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.MediaDescriptionCompatApi21:
    62:62:java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    42:42:java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    54:54:android.os.Bundle getExtras(java.lang.Object) -> getExtras
    46:46:android.graphics.Bitmap getIconBitmap(java.lang.Object) -> getIconBitmap
    50:50:android.net.Uri getIconUri(java.lang.Object) -> getIconUri
    30:30:java.lang.String getMediaId(java.lang.Object) -> getMediaId
    38:38:java.lang.CharSequence getSubtitle(java.lang.Object) -> getSubtitle
    34:34:java.lang.CharSequence getTitle(java.lang.Object) -> getTitle
    58:58:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    100:100:java.lang.Object build(java.lang.Object) -> build
    67:67:java.lang.Object newInstance() -> newInstance
    84:84:void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
    96:96:void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    88:88:void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> setIconBitmap
    92:92:void setIconUri(java.lang.Object,android.net.Uri) -> setIconUri
    72:72:void setMediaId(java.lang.Object,java.lang.String) -> setMediaId
    80:80:void setSubtitle(java.lang.Object,java.lang.CharSequence) -> setSubtitle
    76:76:void setTitle(java.lang.Object,java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaDescriptionCompatApi23 -> android.support.v4.media.MediaDescriptionCompatApi23:
    26:26:android.net.Uri getMediaUri(java.lang.Object) -> getMediaUri
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> android.support.v4.media.MediaDescriptionCompatApi23$Builder:
    31:31:void setMediaUri(java.lang.Object,android.net.Uri) -> setMediaUri
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    308:641:void <clinit>() -> <clinit>
    373:374:void <init>(android.os.Parcel) -> <init>
    607:613:android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    562:562:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    642:642:void <init>() -> <init>
    642:642:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    645:645:android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    642:642:java.lang.Object[] newArray(int) -> newArray
    650:650:android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    51:51:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    128:128:void <clinit>() -> <clinit>
    106:108:void <init>(int,float) -> <init>
    119:119:int describeContents() -> describeContents
    113:114:java.lang.String toString() -> toString
    124:125:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    129:129:void <init>() -> <init>
    129:129:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    137:137:android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    129:129:java.lang.Object[] newArray(int) -> newArray
    142:142:android.support.v4.media.RatingCompat[] newArray(int) -> newArray
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    19:20:void <init>() -> <init>
    183:47:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    30:34:android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    622:623:void <init>(android.os.IBinder) -> <init>
    627:627:android.os.IBinder asBinder() -> asBinder
    690:700:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    666:684:boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    273:275:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    310:308:boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    693:697:void <init>() -> <init>
    823:823:void binderDied() -> binderDied
    843:846:void postToHandler(int,java.lang.Object,android.os.Bundle) -> postToHandler
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    854:855:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    927:929:void onAudioInfoChanged(int,int,int,int,int) -> onAudioInfoChanged
    918:920:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    894:896:void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    881:886:void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    902:904:void onQueueChanged(java.util.List) -> onQueueChanged
    910:912:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    860:862:void onSessionDestroyed() -> onSessionDestroyed
    868:874:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    938:939:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    992:994:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    944:946:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    1023:1025:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    968:970:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    960:962:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    976:978:void onQueueChanged(java.util.List) -> onQueueChanged
    984:986:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    1001:1003:void onRepeatModeChanged(int) -> onRepeatModeChanged
    952:954:void onSessionDestroyed() -> onSessionDestroyed
    1044:1046:void onSessionReady() -> onSessionReady
    1014:1016:void onShuffleModeChanged(int) -> onShuffleModeChanged
    1031:1038:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    1961:1965:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    2017:2017:boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    2203:2218:void processPendingCallbacksLocked() -> processPendingCallbacksLocked
    2198:2198:void requestExtraBinder() -> requestExtraBinder
    2179:2179:void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    2225:2226:void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21) -> <init>
    2231:2243:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback:
    2249:2249:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    2279:2279:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    2261:2261:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    2267:2267:void onQueueChanged(java.util.List) -> onQueueChanged
    2273:2273:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    2255:2255:void onSessionDestroyed() -> onSessionDestroyed
    2285:2285:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23:
    2450:2450:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24:
    2479:2479:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase:
    1466:1467:void <init>(android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    1505:1502:boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    1363:1368:void <init>(int,int,int,int,int) -> <init>
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    46:46:java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
    117:117:boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent) -> dispatchMediaButtonEvent
    42:42:java.lang.Object fromToken(android.content.Context,java.lang.Object) -> fromToken
    130:130:void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    283:284:void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> <init>
    326:326:void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    320:321:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    305:305:void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    300:300:void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    310:310:void onQueueChanged(java.util.List) -> onQueueChanged
    315:315:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    289:289:void onSessionDestroyed() -> onSessionDestroyed
    294:295:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    200:200:android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    204:205:int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    228:237:int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    929:929:void ensureClassLoader(android.os.Bundle) -> ensureClassLoader
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    1875:1875:void <clinit>() -> <clinit>
    1772:1774:void <init>(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    1784:1786:void <init>(android.os.Parcel) -> <init>
    1844:1851:android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> fromQueueItem
    1865:1870:java.util.List fromQueueItemList(java.util.List) -> fromQueueItemList
    1891:1891:java.lang.String toString() -> toString
    1805:1806:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    1876:1876:void <init>() -> <init>
    1876:1876:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1880:1880:android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    1876:1876:java.lang.Object[] newArray(int) -> newArray
    1885:1885:android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    1917:1917:void <clinit>() -> <clinit>
    1912:1913:void <init>(android.os.Parcel) -> <init>
    1936:1936:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    1917:1917:void <init>() -> <init>
    1917:1917:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1920:1920:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    1917:1917:java.lang.Object[] newArray(int) -> newArray
    1925:1925:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    1726:1726:void <clinit>() -> <clinit>
    1556:1556:void <init>(java.lang.Object) -> <init>
    1560:1560:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession) -> <init>
    1563:1566:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,android.os.Bundle) -> <init>
    1632:1643:boolean equals(java.lang.Object) -> equals
    1581:1581:android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object) -> fromToken
    1599:1600:android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object,android.support.v4.media.session.IMediaSession) -> fromToken
    1664:1664:android.support.v4.media.session.IMediaSession getExtraBinder() -> getExtraBinder
    1656:1656:java.lang.Object getToken() -> getToken
    1621:1624:int hashCode() -> hashCode
    1672:1672:void setExtraBinder(android.support.v4.media.session.IMediaSession) -> setExtraBinder
    1688:1688:void setSessionToken2Bundle(android.os.Bundle) -> setSessionToken2Bundle
    1612:1615:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    1727:1727:void <init>() -> <init>
    1727:1727:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1731:1736:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    1727:1727:java.lang.Object[] newArray(int) -> newArray
    1741:1741:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompatApi21 -> android.support.v4.media.session.MediaSessionCompatApi21:
    57:60:java.lang.Object verifyToken(java.lang.Object) -> verifyToken
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    270:270:java.lang.Object getDescription(java.lang.Object) -> getDescription
    274:274:long getQueueId(java.lang.Object) -> getQueueId
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    65:65:void <clinit>() -> <clinit>
    42:47:void <init>(android.os.Parcel) -> <init>
    57:61:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    66:66:void <init>() -> <init>
    66:66:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    66:66:java.lang.Object[] newArray(int) -> newArray
    74:74:android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    864:864:void <clinit>() -> <clinit>
    556:567:void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    570:582:void <init>(android.os.Parcel) -> <init>
    798:825:android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    587:599:java.lang.String toString() -> toString
    609:620:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    865:865:void <init>() -> <init>
    865:865:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    868:868:android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    865:865:java.lang.Object[] newArray(int) -> newArray
    873:873:android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    965:965:void <clinit>() -> <clinit>
    893:897:void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    900:904:void <init>(android.os.Parcel) -> <init>
    932:941:android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    1022:1022:java.lang.String toString() -> toString
    909:912:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    966:966:void <init>() -> <init>
    966:966:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    970:970:android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    966:966:java.lang.Object[] newArray(int) -> newArray
    975:975:android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    45:45:long getActions(java.lang.Object) -> getActions
    61:61:long getActiveQueueItemId(java.lang.Object) -> getActiveQueueItemId
    37:37:long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    57:57:java.util.List getCustomActions(java.lang.Object) -> getCustomActions
    49:49:java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    53:53:long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    41:41:float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    33:33:long getPosition(java.lang.Object) -> getPosition
    29:29:int getState(java.lang.Object) -> getState
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    82:82:java.lang.String getAction(java.lang.Object) -> getAction
    93:93:android.os.Bundle getExtras(java.lang.Object) -> getExtras
    90:90:int getIcon(java.lang.Object) -> getIcon
    86:86:java.lang.CharSequence getName(java.lang.Object) -> getName
android.support.v4.media.session.PlaybackStateCompatApi22 -> android.support.v4.media.session.PlaybackStateCompatApi22:
    29:29:android.os.Bundle getExtras(java.lang.Object) -> getExtras
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    15:16:void <init>() -> <init>
    27:31:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    62:58:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    68:69:void <init>(android.os.IBinder) -> <init>
    73:73:android.os.IBinder asBinder() -> asBinder
    81:95:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    142:142:void <clinit>() -> <clinit>
    136:139:void <init>(android.os.Parcel) -> <init>
    94:105:void send(int,android.os.Bundle) -> send
    128:133:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    143:143:void <init>() -> <init>
    143:143:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    146:146:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    143:143:java.lang.Object[] newArray(int) -> newArray
    150:150:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    65:65:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    68:71:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    54:56:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    61:61:void run() -> run
androidx.appcompat.R$styleable -> androidx.appcompat.R$styleable:
    1177:1632:void <clinit>() -> <clinit>
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1377:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1386:void <init>(int,int) -> <init>
    1399:1401:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1405:1374:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    182:205:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:222:boolean canTextInput(android.view.View) -> canTextInput
    829:832:void centerButton(android.widget.Button) -> centerButton
    410:414:android.widget.Button getButton(int) -> getButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    231:233:void installContent() -> installContent
    750:753:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    443:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    324:344:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:257:void setCustomTitle(android.view.View) -> setCustomTitle
    359:367:void setIcon(int) -> setIcon
    378:386:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:263:void setMessage(java.lang.CharSequence) -> setMessage
    560:631:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    271:273:void setView(int) -> setView
    280:282:void setView(android.view.View) -> setView
    290:296:void setView(android.view.View,int,int,int,int) -> setView
    763:824:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:742:void setupContent(android.view.ViewGroup) -> setupContent
    640:668:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:713:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:552:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:146:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$2:
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:596:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$3:
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:603:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$4:
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:615:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$5:
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:622:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    924:927:void <init>(android.content.Context) -> <init>
    931:975:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1097:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1002:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1016:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1024:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1070:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1081:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:157:void <init>(android.content.DialogInterface) -> <init>
    162:167:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1104:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    840:840:void <init>(android.content.Context) -> <init>
    844:850:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    856:860:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    98:99:void <init>(android.content.Context,int) -> <init>
    131:131:android.widget.Button getButton(int) -> getButton
    278:279:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    114:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    145:146:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:313:void <init>(android.content.Context) -> <init>
    342:345:void <init>(android.content.Context,int) -> <init>
    981:990:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:660:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    579:579:androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    398:398:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:445:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    631:632:androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
<<<<<<< HEAD
=======
    643:644:androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
>>>>>>> rename package name,fix action event info list same time crash
    418:418:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    509:510:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    522:523:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    545:546:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    558:559:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    620:620:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    473:474:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    486:487:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    783:786:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    853:856:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    367:367:androidx.appcompat.app.AlertDialog$Builder setTitle(int) -> setTitle
    377:377:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    902:904:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
    1006:1007:androidx.appcompat.app.AlertDialog show() -> show
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    62:66:void <init>() -> <init>
    155:155:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    586:589:void closeOptionsMenu() -> closeOptionsMenu
    529:535:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    191:191:android.view.View findViewById(int) -> findViewById
    519:522:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    483:483:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    135:135:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    540:543:android.content.res.Resources getResources() -> getResources
    110:110:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    431:431:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    245:245:void invalidateOptionsMenu() -> invalidateOptionsMenu
    160:166:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    470:470:void onContentChanged() -> onContentChanged
    71:85:void onCreate(android.os.Bundle) -> onCreate
    348:348:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    210:211:void onDestroy() -> onDestroy
    569:572:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    196:203:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    494:494:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    505:505:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    97:98:void onPostCreate(android.os.Bundle) -> onPostCreate
    172:173:void onPostResume() -> onPostResume
    510:511:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    178:179:void onStart() -> onStart
    184:185:void onStop() -> onStop
    393:412:boolean onSupportNavigateUp() -> onSupportNavigateUp
    216:217:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    577:580:void openOptionsMenu() -> openOptionsMenu
    552:559:boolean performMenuItemShortcut(int,android.view.KeyEvent) -> performMenuItemShortcut
    140:140:void setContentView(int) -> setContentView
    145:145:void setContentView(android.view.View) -> setContentView
    150:150:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    130:130:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    90:92:void setTheme(int) -> setTheme
    293:293:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    240:240:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    464:464:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    235:235:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    448:448:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    208:208:void <init>() -> <init>
    182:182:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    191:191:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    486:486:int getDefaultNightMode() -> getDefaultNightMode
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    116:157:void <clinit>() -> <clinit>
    244:251:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> <init>
    484:487:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2004:2016:boolean applyDayNight() -> applyDayNight
    731:764:void applyFixedSizeWindow() -> applyFixedSizeWindow
    1761:1780:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1643:1653:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    1657:1657:void closePanel(int) -> closePanel
    1661:1688:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    551:555:android.view.ViewGroup createSubDecor() -> createSubDecor
    1234:1266:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    1976:1996:void dismissPopups() -> dismissPopups
    1165:1184:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1848:1869:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1104:1105:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    2117:2118:void ensureAutoNightModeManager() -> ensureAutoNightModeManager
    517:545:void ensureSubDecor() -> ensureSubDecor
    1785:1789:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    403:404:android.view.View findViewById(int) -> findViewById
    377:383:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2728:2728:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    391:396:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2066:2066:int getNightMode() -> getNightMode
    1798:1808:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    306:307:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    850:854:java.lang.CharSequence getTitle() -> getTitle
    315:315:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    319:332:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1518:1535:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1424:1426:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1475:1512:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1300:1305:void installViewFactory() -> installViewFactory
    929:932:void invalidateOptionsMenu() -> invalidateOptionsMenu
    1839:1843:void invalidatePanelMenu(int) -> invalidatePanelMenu
    1100:1100:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2046:2055:int mapNightMode(int) -> mapNightMode
    1111:1118:boolean onBackPressed() -> onBackPressed
    411:424:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:291:void onCreate(android.os.Bundle) -> onCreate
    1316:1316:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1324:1324:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    500:512:void onDestroy() -> onDestroy
    1217:1225:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1693:1696:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1128:1154:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1190:1206:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1704:1750:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    884:888:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    896:896:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    875:877:void onMenuOpened(int) -> onMenuOpened
    859:868:void onPanelClosed(int) -> onPanelClosed
    299:299:void onPostCreate(android.os.Bundle) -> onPostCreate
    449:451:void onPostResume() -> onPostResume
    492:494:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    431:431:void onStart() -> onStart
    436:443:void onStop() -> onStop
    1329:1420:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    311:311:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    1815:1831:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1539:1637:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1431:1471:void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> reopenMenu
    769:802:boolean requestWindowFeature(int) -> requestWindowFeature
    1959:1963:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    457:461:void setContentView(android.view.View) -> setContentView
    466:470:void setContentView(int) -> setContentView
    475:479:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    338:345:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    837:844:void setTitle(java.lang.CharSequence) -> setTitle
    1090:1090:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1278:1294:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    2129:2142:boolean shouldRecreateOnNightModeChange() -> shouldRecreateOnNightModeChange
    905:902:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    936:1084:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    1951:1952:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    2074:2104:boolean updateForNightMode(int) -> updateForNightMode
    1883:1944:int updateStatusGuard(int) -> updateStatusGuard
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.AppCompatDelegateImpl$1:
    132:132:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    148:151:boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
    135:143:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    223:223:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    226:233:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    638:638:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    642:654:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$4 -> androidx.appcompat.app.AppCompatDelegateImpl$4:
    660:660:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    663:663:void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    715:715:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    721:721:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    991:991:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    994:1017:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1002:1002:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1010:1012:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1005:1005:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1045:1045:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1058:1060:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1048:1052:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
    2732:2732:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2240:2240:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2254:2254:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2245:2247:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2155:2156:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2171:2171:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2161:2161:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2176:2202:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2166:2166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2184:2184:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2187:2195:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    2526:2527:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    2532:2533:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2538:2539:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    2544:2549:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    2587:2588:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    2594:2595:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    2560:2579:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    2653:2660:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    2601:2610:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    2638:2646:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    2620:2629:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    2673:2675:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    2719:2721:void cleanup() -> cleanup
    2685:2688:void dispatchTimeChanged() -> dispatchTimeChanged
    2680:2681:int getApplyableNightMode() -> getApplyableNightMode
    2693:2715:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    2699:2699:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    2705:2705:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    2490:2491:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    2496:2497:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2520:2520:boolean isOutOfBounds(int,int) -> isOutOfBounds
    2502:2511:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2516:2516:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2323:2326:void <init>(int) -> <init>
    2391:2400:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2330:2333:boolean hasPanelItems() -> hasPanelItems
    2379:2386:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2347:2375:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState:
    2470:2470:void <clinit>() -> <clinit>
    2440:2440:void <init>() -> <init>
    2459:2464:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    2450:2454:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1:
    2470:2470:void <init>() -> <init>
    2470:2470:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2470:2470:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2473:2473:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2478:2478:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2470:2470:java.lang.Object[] newArray(int) -> newArray
    2483:2483:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int) -> newArray
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2207:2207:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2212:2222:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2229:2232:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    57:66:void <init>(android.content.Context,int) -> <init>
    128:128:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    205:206:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    111:111:android.view.View findViewById(int) -> findViewById
    168:171:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    177:179:int getThemeResId(android.content.Context,int) -> getThemeResId
    161:161:void invalidateOptionsMenu() -> invalidateOptionsMenu
    76:78:void onCreate(android.os.Bundle) -> onCreate
    133:134:void onStop() -> onStop
    94:94:void setContentView(int) -> setContentView
    99:99:void setContentView(android.view.View) -> setContentView
    104:104:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    116:117:void setTitle(java.lang.CharSequence) -> setTitle
    122:123:void setTitle(int) -> setTitle
    200:200:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    152:152:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$1:
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    62:74:void <clinit>() -> <clinit>
    60:77:void <init>() -> <init>
    291:306:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    223:223:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    187:187:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    207:207:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    217:217:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    192:192:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    202:202:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    182:182:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    229:229:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    212:212:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    234:234:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    239:239:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    197:197:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    177:177:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    87:169:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    311:323:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    255:281:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    336:357:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    244:244:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    373:375:void <init>(android.view.View,java.lang.String) -> <init>
    380:387:void onClick(android.view.View) -> onClick
    399:424:void resolveMethod(android.content.Context,java.lang.String) -> resolveMethod
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    46:54:void flush(android.content.res.Resources) -> flush
    60:77:void flushLollipops(android.content.res.Resources) -> flushLollipops
    84:108:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    113:160:void flushNougats(android.content.res.Resources) -> flushNougats
    166:205:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.ToolbarActionBar -> androidx.appcompat.app.ToolbarActionBar:
    68:73:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    428:428:boolean closeOptionsMenu() -> closeOptionsMenu
    440:441:boolean collapseActionView() -> collapseActionView
    504:511:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    323:323:int getDisplayOptions() -> getDisplayOptions
    543:548:android.view.Menu getMenu() -> getMenu
    146:146:android.content.Context getThemedContext() -> getThemedContext
    77:77:android.view.Window$Callback getWrappedWindowCallback() -> getWrappedWindowCallback
    413:413:void hide() -> hide
    433:434:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    186:186:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    489:489:void onDestroy() -> onDestroy
    476:481:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    468:469:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    423:423:boolean openOptionsMenu() -> openOptionsMenu
    448:461:void populateOptionsMenu() -> populateOptionsMenu
    275:275:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    259:260:void setDisplayOptions(int,int) -> setDisplayOptions
    218:218:void setTitle(java.lang.CharSequence) -> setTitle
    223:223:void setTitle(int) -> setTitle
    228:228:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    406:406:void show() -> show
androidx.appcompat.app.ToolbarActionBar$1 -> androidx.appcompat.app.ToolbarActionBar$1:
    53:53:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    56:56:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> androidx.appcompat.app.ToolbarActionBar$2:
    61:61:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    64:64:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback:
    554:554:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    568:577:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    559:560:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback:
    583:583:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    593:598:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper -> androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper:
    516:517:void <init>(androidx.appcompat.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    536:538:android.view.View onCreatePanelView(int) -> onCreatePanelView
    522:525:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    95:136:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    69:71:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    110:124:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:138:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:101:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    148:191:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:205:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    84:85:void <clinit>() -> <clinit>
    169:175:void <init>(android.app.Activity,boolean) -> <init>
    179:181:void <init>(android.app.Dialog) -> <init>
    876:907:void animateToMode(boolean) -> animateToMode
    975:976:boolean collapseActionView() -> collapseActionView
    312:315:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    351:358:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    837:863:void doHide(boolean) -> doHide
    788:832:void doShow(boolean) -> doShow
    674:674:void enableContentAnimations(boolean) -> enableContentAnimations
    237:243:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    518:518:int getDisplayOptions() -> getDisplayOptions
    513:513:int getNavigationMode() -> getNavigationMode
    921:933:android.content.Context getThemedContext() -> getThemedContext
    705:707:void hide() -> hide
    712:717:void hideForActionMode() -> hideForActionMode
    723:725:void hideForSystem() -> hideForSystem
    195:206:void init(android.view.View) -> init
    259:259:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    963:965:void onContentScrollStarted() -> onContentScrollStarted
    1402:1410:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    321:321:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1395:1396:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    380:380:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    474:478:void setDisplayOptions(int,int) -> setDisplayOptions
    249:249:void setElevation(float) -> setElevation
    263:284:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    731:736:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    395:395:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    333:335:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    400:400:void setTitle(int) -> setTitle
    441:441:void setTitle(java.lang.CharSequence) -> setTitle
    446:446:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    916:916:boolean shouldAnimateContextView() -> shouldAnimateContextView
    679:681:void show() -> show
    686:691:void showForActionMode() -> showForActionMode
    697:699:void showForSystem() -> showForSystem
    523:537:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    771:782:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:147:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:156:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:165:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    993:998:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1060:1064:boolean dispatchOnCreate() -> dispatchOnCreate
    1013:1039:void finish() -> finish
    1117:1117:android.view.View getCustomView() -> getCustomView
    1008:1008:android.view.Menu getMenu() -> getMenu
    1003:1003:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1101:1101:java.lang.CharSequence getSubtitle() -> getSubtitle
    1096:1096:java.lang.CharSequence getTitle() -> getTitle
    1044:1055:void invalidate() -> invalidate
    1112:1112:boolean isTitleOptional() -> isTitleOptional
    1122:1123:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1150:1154:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1070:1071:void setCustomView(android.view.View) -> setCustomView
    1076:1076:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1091:1091:void setSubtitle(int) -> setSubtitle
    1081:1081:void setTitle(java.lang.CharSequence) -> setTitle
    1086:1086:void setTitle(int) -> setTitle
    1106:1107:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    48:53:void <clinit>() -> <clinit>
    148:156:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addColorStateListToCache
    128:142:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> getCachedColorStateList
    65:84:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    102:102:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    171:174:android.util.TypedValue getTypedValue() -> getTypedValue
    110:120:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> inflateColorStateList
    160:165:boolean isColorInt(android.content.Context,int) -> isColorInt
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry:
    184:186:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    109:109:void <init>() -> <init>
    114:119:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    89:89:boolean canApplyTheme() -> canApplyTheme
    89:89:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    89:89:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    613:613:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    170:173:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    89:89:void draw(android.graphics.Canvas) -> draw
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    200:208:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    482:496:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    471:471:void init() -> init
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    263:269:void jumpToCurrentState() -> jumpToCurrentState
    604:606:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    277:285:boolean onStateChange(int[]) -> onStateChange
    563:597:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    509:547:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    292:348:boolean selectTransition(int) -> selectTransition
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    717:719:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    89:89:void setDither(boolean) -> setDither
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    213:219:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    448:466:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
    369:370:void <init>(android.graphics.drawable.Animatable) -> <init>
    375:375:void start() -> start
    380:380:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    633:640:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    666:667:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    651:660:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    680:680:int getKeyframeIdAt(int) -> getKeyframeIdAt
    672:676:int indexOfKeyframe(int[]) -> indexOfKeyframe
    684:685:int indexOfTransition(int,int) -> indexOfTransition
    689:690:boolean isTransitionReversed(int,int) -> isTransitionReversed
    646:647:void mutate() -> mutate
    701:701:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    707:707:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    694:695:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
    432:433:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    438:438:void start() -> start
    443:443:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
    391:405:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    410:410:boolean canReverse() -> canReverse
    420:420:void reverse() -> reverse
    415:415:void start() -> start
    425:425:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    731:732:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    758:771:float getInterpolation(float) -> getInterpolation
    753:753:int getTotalDuration() -> getTotalDuration
    736:748:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    352:352:void <init>() -> <init>
    352:352:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
androidx.appcompat.graphics.drawable.DrawableContainer -> androidx.appcompat.graphics.drawable.DrawableContainer:
    55:77:void <init>() -> <init>
    538:574:void animate(boolean) -> animate
    598:598:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    604:604:boolean canApplyTheme() -> canApplyTheme
    89:93:void draw(android.graphics.Canvas) -> draw
    157:157:int getAlpha() -> getAlpha
    99:100:int getChangingConfigurations() -> getChangingConfigurations
    609:611:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    581:581:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    417:417:int getCurrentIndex() -> getCurrentIndex
    299:302:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    345:348:int getIntrinsicHeight() -> getIntrinsicHeight
    337:340:int getIntrinsicWidth() -> getIntrinsicWidth
    361:364:int getMinimumHeight() -> getMinimumHeight
    353:356:int getMinimumWidth() -> getMinimumWidth
    408:409:int getOpacity() -> getOpacity
    135:136:void getOutline(android.graphics.Outline) -> getOutline
    111:127:boolean getPadding(android.graphics.Rect) -> getPadding
    494:533:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    372:376:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    247:247:boolean isAutoMirrored() -> isAutoMirrored
    253:274:void jumpToCurrentState() -> jumpToCurrentState
    619:623:android.graphics.drawable.Drawable mutate() -> mutate
    106:106:boolean needsMirroring() -> needsMirroring
    221:225:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    332:332:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    319:323:boolean onLevelChange(int) -> onLevelChange
    308:312:boolean onStateChange(int[]) -> onStateChange
    1207:1207:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    382:383:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    430:484:boolean selectDrawable(int) -> selectDrawable
    142:149:void setAlpha(int) -> setAlpha
    236:239:void setAutoMirrored(boolean) -> setAutoMirrored
    172:176:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1155:1166:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    162:165:void setDither(boolean) -> setDither
    280:281:void setHotspot(float,float) -> setHotspot
    287:293:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    183:186:void setTintList(android.content.res.ColorStateList) -> setTintList
    192:195:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    396:401:boolean setVisible(boolean,boolean) -> setVisible
    389:390:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    592:592:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> androidx.appcompat.graphics.drawable.DrawableContainer$1:
    471:471:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    474:475:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    1172:1172:void <init>() -> <init>
    1193:1194:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1200:1201:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1181:1182:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1176:1176:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    687:758:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    774:788:int addChild(android.graphics.drawable.Drawable) -> addChild
    899:909:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    916:926:boolean canApplyTheme() -> canApplyTheme
    1136:1150:boolean canConstantState() -> canConstantState
    1047:1062:void computeConstantSize() -> computeConstantSize
    805:812:void createAllFutures() -> createAllFutures
    801:801:int getCapacity() -> getCapacity
    764:764:int getChangingConfigurations() -> getChangingConfigurations
    833:846:android.graphics.drawable.Drawable getChild(int) -> getChild
    826:826:int getChildCount() -> getChildCount
    1020:1023:int getConstantHeight() -> getConstantHeight
    1040:1043:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1030:1033:int getConstantMinimumWidth() -> getConstantMinimumWidth
    971:975:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1010:1013:int getConstantWidth() -> getConstantWidth
    1086:1097:int getOpacity() -> getOpacity
    1127:1129:void growArray(int,int) -> growArray
    796:797:void invalidateCache() -> invalidateCache
    1003:1003:boolean isConstantSize() -> isConstantSize
    817:821:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    996:996:void setConstantSize(boolean) -> setConstantSize
    1067:1067:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1075:1075:void setExitFadeDuration(int) -> setExitFadeDuration
    858:871:boolean setLayoutDirection(int,int) -> setLayoutDirection
    964:964:void setVariablePadding(boolean) -> setVariablePadding
    883:891:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:47:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:52:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:137:int getIntrinsicHeight() -> getIntrinsicHeight
    132:132:int getIntrinsicWidth() -> getIntrinsicWidth
    147:147:int getMinimumHeight() -> getMinimumHeight
    142:142:int getMinimumWidth() -> getMinimumWidth
    122:122:int getOpacity() -> getOpacity
    152:152:boolean getPadding(android.graphics.Rect) -> getPadding
    102:102:int[] getState() -> getState
    127:127:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    220:220:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    160:160:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    191:191:boolean isAutoMirrored() -> isAutoMirrored
    92:92:boolean isStateful() -> isStateful
    107:107:void jumpToCurrentState() -> jumpToCurrentState
    57:57:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:181:boolean onLevelChange(int) -> onLevelChange
    168:168:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    82:82:void setAlpha(int) -> setAlpha
    186:186:void setAutoMirrored(boolean) -> setAutoMirrored
    62:62:void setChangingConfigurations(int) -> setChangingConfigurations
    87:87:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    72:72:void setDither(boolean) -> setDither
    77:77:void setFilterBitmap(boolean) -> setFilterBitmap
    211:211:void setHotspot(float,float) -> setHotspot
    216:216:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    97:97:boolean setState(int[]) -> setState
    196:196:void setTint(int) -> setTint
    201:201:void setTintList(android.content.res.ColorStateList) -> setTintList
    206:206:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    224:231:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    176:176:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.StateListDrawable -> androidx.appcompat.graphics.drawable.StateListDrawable:
    401:405:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    412:414:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    389:390:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    78:78:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    317:317:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    233:250:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    308:310:android.graphics.drawable.Drawable mutate() -> mutate
    111:120:boolean onStateChange(int[]) -> onStateChange
    395:397:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    330:335:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    349:350:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    379:382:void growArray(int,int) -> growArray
    355:358:int indexOfStateSet(int[]) -> indexOfStateSet
    341:345:void mutate() -> mutate
    368:368:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    374:374:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    37:38:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:47:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:59:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:103:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:81:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:57:void setTag(java.lang.Object) -> setTag
    134:134:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    48:48:void <init>() -> <init>
    63:64:void <init>(android.content.Context,int) -> <init>
    77:78:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    83:83:void attachBaseContext(android.content.Context) -> attachBaseContext
    195:195:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:121:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    156:162:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    142:151:android.content.res.Resources$Theme getTheme() -> getTheme
    137:137:int getThemeResId() -> getThemeResId
    181:189:void initializeTheme() -> initializeTheme
    177:177:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    126:128:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    50:58:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:111:void finish() -> finish
    131:131:android.view.View getCustomView() -> getCustomView
    116:116:android.view.Menu getMenu() -> getMenu
    136:136:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    126:126:java.lang.CharSequence getSubtitle() -> getSubtitle
    121:121:java.lang.CharSequence getTitle() -> getTitle
    100:100:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    141:141:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    161:162:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    94:95:void setCustomView(android.view.View) -> setCustomView
    68:68:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:78:void setSubtitle(int) -> setSubtitle
    63:63:void setTitle(java.lang.CharSequence) -> setTitle
    73:73:void setTitle(int) -> setTitle
    83:84:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    48:50:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    80:80:void finish() -> finish
    110:110:android.view.View getCustomView() -> getCustomView
    85:85:android.view.Menu getMenu() -> getMenu
    120:120:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    100:100:java.lang.CharSequence getSubtitle() -> getSubtitle
    55:55:java.lang.Object getTag() -> getTag
    90:90:java.lang.CharSequence getTitle() -> getTitle
    125:125:boolean getTitleOptionalHint() -> getTitleOptionalHint
    75:75:void invalidate() -> invalidate
    135:135:boolean isTitleOptional() -> isTitleOptional
    115:115:void setCustomView(android.view.View) -> setCustomView
    70:70:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    105:105:void setSubtitle(int) -> setSubtitle
    60:60:void setTag(java.lang.Object) -> setTag
    65:65:void setTitle(java.lang.CharSequence) -> setTitle
    95:95:void setTitle(int) -> setTitle
    130:130:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    149:153:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    191:202:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    181:184:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    171:171:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    158:158:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    177:177:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    164:164:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    82:84:void <clinit>() -> <clinit>
    100:103:void <init>(android.content.Context) -> <init>
    230:234:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    223:226:java.lang.Object getRealOwner() -> getRealOwner
    118:134:void inflate(int,android.view.Menu) -> inflate
    144:215:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    241:241:void <clinit>() -> <clinit>
    246:256:void <init>(java.lang.Object,java.lang.String) -> <init>
    263:270:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    348:351:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    529:530:void addItem() -> addItem
    534:536:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    460:460:char getShortcut(java.lang.String) -> getShortcut
    541:541:boolean hasAddedItem() -> hasAddedItem
    548:553:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    367:378:void readGroup(android.util.AttributeSet) -> readGroup
    385:453:void readItem(android.util.AttributeSet) -> readItem
    355:360:void resetGroup() -> resetGroup
    465:524:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    48:49:void <init>() -> <init>
    90:96:void cancel() -> cancel
    86:86:void onAnimationsEnded() -> onAnimationsEnded
    53:54:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:63:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:101:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:108:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:115:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:82:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:148:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:132:void onAnimationStart(android.view.View) -> onAnimationStart
    137:139:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    50:52:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    171:171:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:166:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:129:void onAttachedToWindow() -> onAttachedToWindow
    119:119:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:134:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:139:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:184:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:178:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:114:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:124:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    83:89:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    434:443:void applyIconTint() -> applyIconTint
    337:337:android.view.ActionProvider getActionProvider() -> getActionProvider
    99:99:int getAlphabeticModifiers() -> getAlphabeticModifiers
    94:94:char getAlphabeticShortcut() -> getAlphabeticShortcut
    389:389:java.lang.CharSequence getContentDescription() -> getContentDescription
    104:104:int getGroupId() -> getGroupId
    109:109:android.graphics.drawable.Drawable getIcon() -> getIcon
    415:415:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    430:430:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    114:114:android.content.Intent getIntent() -> getIntent
    119:119:int getItemId() -> getItemId
    134:134:int getNumericModifiers() -> getNumericModifiers
    129:129:char getNumericShortcut() -> getNumericShortcut
    139:139:int getOrder() -> getOrder
    149:149:java.lang.CharSequence getTitle() -> getTitle
    154:154:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    400:400:java.lang.CharSequence getTooltipText() -> getTooltipText
    164:164:boolean isCheckable() -> isCheckable
    169:169:boolean isChecked() -> isChecked
    174:174:boolean isEnabled() -> isEnabled
    179:179:boolean isVisible() -> isVisible
    332:332:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    322:322:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    342:342:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    184:184:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    190:191:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    197:197:android.view.MenuItem setCheckable(boolean) -> setCheckable
    208:208:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    383:383:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    214:214:android.view.MenuItem setEnabled(boolean) -> setEnabled
    220:223:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    229:232:android.view.MenuItem setIcon(int) -> setIcon
    405:408:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    420:423:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    238:238:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    244:244:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    250:251:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    378:378:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    257:257:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    263:264:android.view.MenuItem setShortcut(char,char) -> setShortcut
    271:274:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    357:357:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    352:352:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    280:280:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    286:286:android.view.MenuItem setTitle(int) -> setTitle
    292:292:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    394:394:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    298:298:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:134:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:151:void onClick(android.view.View) -> onClick
    92:95:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:294:void onMeasure(int,int) -> onMeasure
    333:333:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    179:182:void setExpandedFormat(boolean) -> setExpandedFormat
    215:233:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:156:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:114:void setPadding(int,int,int,int) -> setPadding
    160:160:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    188:209:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:300:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:306:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:316:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:65:void <init>(android.content.Context,int,int) -> <init>
    134:138:void addItemView(android.view.View,int) -> addItemView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    148:148:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    243:243:int getId() -> getId
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:72:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:214:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:221:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:154:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    247:247:void setId(int) -> setId
    91:121:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    38:39:void <init>(android.content.Context,java.lang.Object) -> <init>
    43:57:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    66:78:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    87:91:void internalClear() -> internalClear
    96:106:void internalRemoveGroup(int) -> internalRemoveGroup
    112:122:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.BaseWrapper -> androidx.appcompat.view.menu.BaseWrapper:
    23:25:void <init>(java.lang.Object) -> <init>
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    222:236:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    354:359:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    245:253:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    287:294:void dismiss() -> dismiss
    655:657:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    516:518:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    537:580:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    315:315:int getInitialMenuPosition() -> getInitialMenuPosition
    765:767:android.widget.ListView getListView() -> getListView
    329:344:int getNextMenuPosition(int) -> getNextMenuPosition
    588:588:boolean isShowing() -> isShowing
    667:720:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    599:610:void onDismiss() -> onDismiss
    302:303:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    629:641:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    749:753:void setAnchorView(android.view.View) -> setAnchorView
    623:623:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    241:241:void setForceShowIcon(boolean) -> setForceShowIcon
    740:742:void setGravity(int) -> setGravity
    772:773:void setHorizontalOffset(int) -> setHorizontalOffset
    760:760:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    784:784:void setShowTitle(boolean) -> setShowTitle
    778:779:void setVerticalOffset(int) -> setVerticalOffset
    259:277:void show() -> show
    369:501:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    616:617:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:108:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    127:133:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:193:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:143:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:188:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    800:803:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:73:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:81:void onDetachedFromWindow() -> onDetachedFromWindow
    92:92:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    76:76:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:99:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:141:void addContentView(android.view.View) -> addContentView
    145:148:void addContentView(android.view.View,int) -> addContentView
    350:356:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    330:333:android.view.LayoutInflater getInflater() -> getInflater
    169:169:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    126:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    312:316:void insertCheckBox() -> insertCheckBox
    297:300:void insertIconView() -> insertIconView
    304:308:void insertRadioButton() -> insertRadioButton
    104:121:void onFinishInflate() -> onFinishInflate
    285:293:void onMeasure(int,int) -> onMeasure
    174:213:void setCheckable(boolean) -> setCheckable
    222:234:void setChecked(boolean) -> setChecked
    153:153:void setForceShowIcon(boolean) -> setForceShowIcon
    342:343:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    259:276:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    245:253:void setShortcut(boolean,char) -> setShortcut
    238:239:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    159:163:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:73:void <init>(android.content.Context,int) -> <init>
    81:83:void <init>(int,int) -> <init>
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    212:212:int getId() -> getId
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:173:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    228:228:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    217:222:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    143:148:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    200:202:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    192:196:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    138:138:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:133:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    234:235:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:289:void findExpandedIndex() -> findExpandedIndex
    240:242:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    268:272:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:295:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    44:49:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:126:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    94:109:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:132:void notifyDataSetChanged() -> notifyDataSetChanged
    57:57:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    229:241:void <init>(android.content.Context) -> <init>
    472:472:android.view.MenuItem add(java.lang.CharSequence) -> add
    477:477:android.view.MenuItem add(int) -> add
    482:482:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    487:487:android.view.MenuItem add(int,int,int,int) -> add
    526:546:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    447:458:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    256:256:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    269:271:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    492:492:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    497:497:android.view.SubMenu addSubMenu(int) -> addSubMenu
    502:504:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    511:511:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    847:848:void changeMenuMode() -> changeMenuMode
    610:615:void clear() -> clear
    1219:1223:void clearHeader() -> clearHeader
    1036:1047:void close(boolean) -> close
    1052:1052:void close() -> close
    1379:1395:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    466:466:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    840:840:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    290:301:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    350:363:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    327:346:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    306:320:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1357:1373:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    730:730:int findGroupIndex(int) -> findGroupIndex
    734:743:int findGroupIndex(int,int) -> findGroupIndex
    853:855:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    699:705:android.view.MenuItem findItem(int) -> findItem
    717:721:int findItemIndex(int) -> findItemIndex
    936:962:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    888:917:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1169:1205:void flagActionItems() -> flagActionItems
    1209:1210:java.util.ArrayList getActionItems() -> getActionItems
    836:836:android.content.Context getContext() -> getContext
    1401:1401:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1322:1322:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1318:1318:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1326:1326:android.view.View getHeaderView() -> getHeaderView
    758:758:android.view.MenuItem getItem(int) -> getItem
    1214:1215:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1353:1353:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    787:788:int getOrdering(int) -> getOrdering
    832:832:android.content.res.Resources getResources() -> getResources
    1124:1139:java.util.ArrayList getVisibleItems() -> getVisibleItems
    681:689:boolean hasVisibleItems() -> hasVisibleItems
    520:520:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    798:798:boolean isQwertyMode() -> isQwertyMode
    763:763:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    828:828:boolean isShortcutsVisible() -> isShortcutsVisible
    1118:1119:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1107:1108:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1063:1073:void onItemsChanged(boolean) -> onItemsChanged
    977:977:boolean performIdentifierAction(int,int) -> performIdentifierAction
    981:981:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    985:1016:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    865:874:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    560:571:void removeGroup(int) -> removeGroup
    555:555:void removeItem(int) -> removeItem
    586:590:void removeItemAtInt(int,boolean) -> removeItemAtInt
    281:284:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    411:430:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    375:375:void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    381:401:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    371:371:void savePresenterStates(android.os.Bundle) -> savePresenterStates
    440:440:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    245:245:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    619:633:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    638:644:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    516:516:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    669:674:void setGroupEnabled(int,boolean) -> setGroupEnabled
    651:664:void setGroupVisible(int,boolean) -> setGroupVisible
    1289:1289:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1301:1301:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1228:1254:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1265:1265:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1277:1277:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1313:1313:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1410:1410:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    768:770:void setQwertyMode(boolean) -> setQwertyMode
    818:820:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    753:753:int size() -> size
    1092:1096:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1084:1087:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    42:43:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    139:140:void dismiss() -> dismiss
    169:169:void onClick(android.content.DialogInterface,int) -> onClick
    151:155:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    146:146:void onDismiss(android.content.DialogInterface) -> onDismiss
    95:125:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    161:162:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    53:89:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    137:145:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    691:691:void actionFormatChanged() -> actionFormatChanged
    403:403:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:582:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    832:842:boolean collapseActionView() -> collapseActionView
    818:824:boolean expandActionView() -> expandActionView
    782:782:android.view.ActionProvider getActionProvider() -> getActionProvider
    764:768:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    885:885:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:508:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    788:788:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:477:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    899:899:java.lang.CharSequence getTooltipText() -> getTooltipText
    849:853:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:176:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    865:865:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    710:710:boolean requiresActionButton() -> requiresActionButton
    776:776:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    745:750:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    756:758:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    859:860:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:254:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:269:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    595:598:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:624:android.view.MenuItem setChecked(boolean) -> setChecked
    631:634:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    876:878:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    191:196:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:605:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:519:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:531:android.view.MenuItem setIcon(int) -> setIcon
    539:543:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:559:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:228:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    715:717:void setIsActionButton(boolean) -> setIsActionButton
    682:682:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:296:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:310:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    870:870:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:672:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:320:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:333:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    736:740:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    812:812:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:430:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    793:800:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:458:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:493:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    890:892:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:665:android.view.MenuItem setVisible(boolean) -> setVisible
    655:657:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    722:722:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    800:800:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    803:803:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    52:52:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    313:313:boolean collapseActionView() -> collapseActionView
    385:385:androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
    308:308:boolean expandActionView() -> expandActionView
    299:301:android.view.ActionProvider getActionProvider() -> getActionProvider
    283:285:android.view.View getActionView() -> getActionView
    180:180:int getAlphabeticModifiers() -> getAlphabeticModifiers
    175:175:char getAlphabeticShortcut() -> getAlphabeticShortcut
    336:336:java.lang.CharSequence getContentDescription() -> getContentDescription
    62:62:int getGroupId() -> getGroupId
    112:112:android.graphics.drawable.Drawable getIcon() -> getIcon
    358:358:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    369:369:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    123:123:android.content.Intent getIntent() -> getIntent
    57:57:int getItemId() -> getItemId
    245:245:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    158:158:int getNumericModifiers() -> getNumericModifiers
    153:153:char getNumericShortcut() -> getNumericShortcut
    67:67:int getOrder() -> getOrder
    233:233:android.view.SubMenu getSubMenu() -> getSubMenu
    84:84:java.lang.CharSequence getTitle() -> getTitle
    95:95:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    347:347:java.lang.CharSequence getTooltipText() -> getTooltipText
    228:228:boolean hasSubMenu() -> hasSubMenu
    318:318:boolean isActionViewExpanded() -> isActionViewExpanded
    191:191:boolean isCheckable() -> isCheckable
    202:202:boolean isChecked() -> isChecked
    223:223:boolean isEnabled() -> isEnabled
    212:212:boolean isVisible() -> isVisible
    292:292:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    261:264:android.view.MenuItem setActionView(android.view.View) -> setActionView
    271:276:android.view.MenuItem setActionView(int) -> setActionView
    163:163:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    169:169:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    185:185:android.view.MenuItem setCheckable(boolean) -> setCheckable
    196:196:android.view.MenuItem setChecked(boolean) -> setChecked
    330:330:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    217:217:android.view.MenuItem setEnabled(boolean) -> setEnabled
    374:380:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    100:100:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    106:106:android.view.MenuItem setIcon(int) -> setIcon
    352:352:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    363:363:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    117:117:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    141:141:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    147:147:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    323:323:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    238:238:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    128:128:android.view.MenuItem setShortcut(char,char) -> setShortcut
    135:135:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    250:250:void setShowAsAction(int) -> setShowAsAction
    255:255:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    72:72:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    78:78:android.view.MenuItem setTitle(int) -> setTitle
    89:89:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    341:341:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    207:207:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    422:424:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    439:439:boolean hasSubMenu() -> hasSubMenu
    429:429:android.view.View onCreateActionView() -> onCreateActionView
    434:434:boolean onPerformDefaultAction() -> onPerformDefaultAction
    444:444:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    458:460:void <init>(android.view.View) -> <init>
    474:474:android.view.View getWrappedView() -> getWrappedView
    470:470:void onActionViewCollapsed() -> onActionViewCollapsed
    465:465:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    404:405:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    415:415:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    410:410:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    391:392:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    397:397:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuItemWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperJB:
    39:39:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    44:44:androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
androidx.appcompat.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB:
    51:52:void <init>(androidx.appcompat.view.menu.MenuItemWrapperJB,android.content.Context,android.view.ActionProvider) -> <init>
    67:67:boolean isVisible() -> isVisible
    83:84:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    57:57:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    62:62:boolean overridesItemVisibility() -> overridesItemVisibility
    77:78:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    147:164:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:128:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:71:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    203:207:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    79:79:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    84:90:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    224:257:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    298:299:void dismiss() -> dismiss
    156:159:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    320:320:boolean isShowing() -> isShowing
    312:315:void onDismiss() -> onDismiss
    105:105:void setAnchorView(android.view.View) -> setAnchorView
    118:120:void setForceShowIcon(boolean) -> setForceShowIcon
    132:132:void setGravity(int) -> setGravity
    94:94:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    325:327:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    143:144:void show() -> show
    263:290:void showPopup(int,int,boolean,boolean) -> showPopup
    169:177:boolean tryShow() -> tryShow
    205:213:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    334:334:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    337:337:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperFactory -> androidx.appcompat.view.menu.MenuWrapperFactory:
    41:41:android.view.Menu wrapSupportMenu(android.content.Context,androidx.core.internal.view.SupportMenu) -> wrapSupportMenu
    45:48:android.view.MenuItem wrapSupportMenuItem(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> wrapSupportMenuItem
    53:53:android.view.SubMenu wrapSupportSubMenu(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> wrapSupportSubMenu
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    35:35:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    40:40:android.view.MenuItem add(java.lang.CharSequence) -> add
    45:45:android.view.MenuItem add(int) -> add
    50:50:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int,int,int,int) -> add
    84:92:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    60:60:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    65:65:android.view.SubMenu addSubMenu(int) -> addSubMenu
    70:70:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    113:114:void clear() -> clear
    154:154:void close() -> close
    139:139:android.view.MenuItem findItem(int) -> findItem
    149:149:android.view.MenuItem getItem(int) -> getItem
    134:134:boolean hasVisibleItems() -> hasVisibleItems
    164:164:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    169:169:boolean performIdentifierAction(int,int) -> performIdentifierAction
    159:159:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    107:108:void removeGroup(int) -> removeGroup
    101:102:void removeItem(int) -> removeItem
    119:119:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    129:129:void setGroupEnabled(int,boolean) -> setGroupEnabled
    124:124:void setGroupVisible(int,boolean) -> setGroupVisible
    174:174:void setQwertyMode(boolean) -> setQwertyMode
    144:144:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    117:135:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    215:216:void dismiss() -> dismiss
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:305:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:243:void onDismiss() -> onDismiss
    330:331:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:290:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:325:void setAnchorView(android.view.View) -> setAnchorView
    258:258:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:140:void setForceShowIcon(boolean) -> setForceShowIcon
    145:145:void setGravity(int) -> setGravity
    350:350:void setHorizontalOffset(int) -> setHorizontalOffset
    339:339:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:360:void setShowTitle(boolean) -> setShowTitle
    355:355:void setVerticalOffset(int) -> setVerticalOffset
    208:209:void show() -> show
    149:201:boolean tryShow() -> tryShow
    249:252:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:70:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    87:91:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    42:45:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    137:137:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    89:90:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    132:132:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    142:146:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    74:74:android.view.MenuItem getItem() -> getItem
    69:69:android.view.Menu getParentMenu() -> getParentMenu
    84:84:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    156:156:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    55:55:boolean isQwertyMode() -> isQwertyMode
    65:65:boolean isShortcutsVisible() -> isShortcutsVisible
    79:79:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    151:151:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    107:107:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    112:112:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    117:117:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    122:122:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    127:127:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    95:95:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    101:101:android.view.SubMenu setIcon(int) -> setIcon
    50:50:void setQwertyMode(boolean) -> setQwertyMode
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    38:38:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    78:78:void clearHeader() -> clearHeader
    95:95:android.view.MenuItem getItem() -> getItem
    43:43:androidx.core.internal.view.SupportSubMenu getWrappedObject() -> getWrappedObject
    60:60:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    66:66:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    48:48:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    54:54:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    72:72:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    83:83:android.view.SubMenu setIcon(int) -> setIcon
    89:89:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    52:52:void <init>(android.content.Context) -> <init>
    56:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:67:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    34:34:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    34:34:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    151:154:int getAnimatedVisibility() -> getAnimatedVisibility
    144:144:int getContentHeight() -> getContentHeight
    246:252:int measureChildView(android.view.View,int,int,int) -> measureChildView
    73:83:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    118:132:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    94:107:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    260:267:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    185:189:void setVisibility(int) -> setVisibility
    158:173:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    273:274:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    300:300:void onAnimationCancel(android.view.View) -> onAnimationCancel
    292:295:void onAnimationEnd(android.view.View) -> onAnimationEnd
    286:287:void onAnimationStart(android.view.View) -> onAnimationStart
    279:280:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:33:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:47:void draw(android.graphics.Canvas) -> draw
    68:75:void getOutline(android.graphics.Outline) -> getOutline
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    54:54:void <init>(android.content.Context) -> <init>
    58:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    158:166:void drawableStateChanged() -> drawableStateChanged
    257:258:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    233:233:android.view.View getTabContainer() -> getTabContainer
    253:253:boolean isCollapsed(android.view.View) -> isCollapsed
    172:180:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    83:85:void onFinishInflate() -> onFinishInflate
    212:212:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    199:199:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    293:335:void onLayout(boolean,int,int,int,int) -> onLayout
    263:285:void onMeasure(int,int) -> onMeasure
    204:204:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    89:103:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    125:138:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    107:121:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    219:228:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    192:193:void setTransitioning(boolean) -> setTransitioning
    143:147:void setVisibility(int) -> setVisibility
    247:247:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    152:153:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    58:58:void <init>(android.content.Context) -> <init>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    193:194:void closeMode() -> closeMode
    233:233:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    40:40:int getAnimatedVisibility() -> getAnimatedVisibility
    40:40:int getContentHeight() -> getContentHeight
    130:130:java.lang.CharSequence getSubtitle() -> getSubtitle
    126:126:java.lang.CharSequence getTitle() -> getTitle
    161:189:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    134:156:void initTitle() -> initTitle
    378:378:boolean isTitleOptional() -> isTitleOptional
    200:202:void killMode() -> killMode
    88:91:void onDetachedFromWindow() -> onDetachedFromWindow
    40:40:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    359:366:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    323:348:void onLayout(boolean,int,int,int,int) -> onLayout
    243:245:void onMeasure(int,int) -> onMeasure
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    97:97:void setContentHeight(int) -> setContentHeight
    101:112:void setCustomView(android.view.View) -> setCustomView
    121:122:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    116:117:void setTitle(java.lang.CharSequence) -> setTitle
    371:374:void setTitleOptional(boolean) -> setTitleOptional
    40:40:void setVisibility(int) -> setVisibility
    40:40:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    207:208:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    170:170:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    173:173:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    129:129:void <clinit>() -> <clinit>
    137:137:void <init>(android.content.Context) -> <init>
    141:144:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    603:604:void addActionBarHideOffset() -> addActionBarHideOffset
    265:280:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    684:685:boolean canShowOverflowMenu() -> canShowOverflowMenu
    335:335:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    738:739:void dismissPopups() -> dismissPopups
    451:458:void draw(android.graphics.Canvas) -> draw
    287:308:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    54:54:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    320:320:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    54:54:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    325:325:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    330:330:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    569:569:int getActionBarHideOffset() -> getActionBarHideOffset
    544:550:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    532:532:int getNestedScrollAxes() -> getNestedScrollAxes
    627:628:java.lang.CharSequence getTitle() -> getTitle
    580:583:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    708:709:boolean hideOverflowMenu() -> hideOverflowMenu
    148:157:void init(android.content.Context) -> init
    633:636:void initFeature(int) -> initFeature
    193:193:boolean isInOverlayMode() -> isInOverlayMode
    696:697:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    690:691:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    223:225:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    162:163:void onDetachedFromWindow() -> onDetachedFromWindow
    425:444:void onLayout(boolean,int,int,int,int) -> onLayout
    340:417:void onMeasure(int,int) -> onMeasure
    508:516:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    488:489:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    477:481:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    469:472:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    494:502:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    230:248:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    255:258:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    593:594:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    588:589:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    536:539:void pullChildren() -> pullChildren
    598:599:void removeActionBarHideOffset() -> removeActionBarHideOffset
    573:576:void setActionBarHideOffset(int) -> setActionBarHideOffset
    167:175:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    197:197:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    555:559:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    666:667:void setIcon(int) -> setIcon
    672:673:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    678:679:void setLogo(int) -> setLogo
    720:721:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    714:715:void setMenuPrepared() -> setMenuPrepared
    181:188:void setOverlayMode(boolean) -> setOverlayMode
    615:616:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    621:622:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    608:610:boolean shouldHideActionBarOnFling(float,float) -> shouldHideActionBarOnFling
    702:703:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    96:96:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    105:106:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    99:100:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    110:110:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    113:115:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    119:119:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    122:125:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    744:744:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    748:748:void <init>(int,int) -> <init>
    752:752:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    88:84:void <init>(android.content.Context) -> <init>
    53:53:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    53:53:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    53:53:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    53:53:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    53:53:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    53:53:androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    211:220:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    381:382:boolean dismissPopupMenus() -> dismissPopupMenus
    279:280:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    321:328:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    421:554:boolean flagActionItems() -> flagActionItems
    195:204:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    185:188:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    175:178:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    362:370:boolean hideOverflowMenu() -> hideOverflowMenu
    392:393:boolean hideSubMenus() -> hideSubMenus
    93:133:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    407:407:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    403:403:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    562:563:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    137:141:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    575:584:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    568:569:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    285:316:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    593:595:void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    162:162:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    600:601:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    166:170:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    152:153:void setReserveOverflow(boolean) -> setReserveOverflow
    225:225:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    340:349:boolean showOverflowMenu() -> showOverflowMenu
    230:274:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    747:756:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    761:764:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    814:814:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    819:819:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    796:797:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    802:809:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    642:652:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    685:690:boolean performClick() -> performClick
    706:719:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    652:652:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    655:659:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    664:664:boolean onForwardingStarted() -> onForwardingStarted
    673:677:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    729:732:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    737:742:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    769:769:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    783:788:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    776:778:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> androidx.appcompat.widget.ActionMenuPresenter$SavedState:
    624:624:void <clinit>() -> <clinit>
    607:607:void <init>() -> <init>
    610:611:void <init>(android.os.Parcel) -> <init>
    621:621:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> androidx.appcompat.widget.ActionMenuPresenter$SavedState$1:
    625:625:void <init>() -> <init>
    625:625:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    628:628:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    625:625:java.lang.Object[] newArray(int) -> newArray
    633:633:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    76:76:void <init>(android.content.Context) -> <init>
    80:86:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:724:void dismissPopupMenus() -> dismissPopupMenus
    48:48:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:585:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    597:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:617:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    113:113:int getPopupTheme() -> getPopupTheme
    736:743:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:639:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    404:432:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    128:135:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:545:void onDetachedFromWindow() -> onDetachedFromWindow
    439:537:void onLayout(boolean,int,int,int,int) -> onLayout
    147:172:void onMeasure(int,int) -> onMeasure
    178:386:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:756:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    141:141:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:555:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:578:void setOverflowReserved(boolean) -> setOverflowReserved
    97:102:void setPopupTheme(int) -> setPopupTheme
    122:123:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    793:793:void <init>() -> <init>
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    833:833:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:837:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:842:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:847:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    775:775:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:787:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserModel -> androidx.appcompat.widget.ActivityChooserModel:
    218:223:void <clinit>() -> <clinit>
androidx.appcompat.widget.ActivityChooserView -> androidx.appcompat.widget.ActivityChooserView:
    200:200:void <init>(android.content.Context) -> <init>
    210:210:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    221:290:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    410:414:boolean dismissPopup() -> dismissPopup
    479:479:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    523:531:androidx.appcompat.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    426:426:boolean isShowingPopup() -> isShowingPopup
    431:436:void onAttachedToWindow() -> onAttachedToWindow
    441:453:void onDetachedFromWindow() -> onDetachedFromWindow
    472:474:void onLayout(boolean,int,int,int,int) -> onLayout
    458:467:void onMeasure(int,int) -> onMeasure
    299:302:void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel) -> setActivityChooserModel
    514:514:void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    332:333:void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    318:318:void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    500:500:void setInitialActivityCount(int) -> setInitialActivityCount
    488:488:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    342:342:void setProvider(androidx.core.view.ActionProvider) -> setProvider
    351:355:boolean showPopup() -> showPopup
    365:366:void showPopupUnchecked(int) -> showPopupUnchecked
    539:565:void updateAppearance() -> updateAppearance
androidx.appcompat.widget.ActivityChooserView$1 -> androidx.appcompat.widget.ActivityChooserView$1:
    134:134:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    138:139:void onChanged() -> onChanged
    143:144:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ActivityChooserView$2 -> androidx.appcompat.widget.ActivityChooserView$2:
    148:148:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    151:157:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.ActivityChooserView$3 -> androidx.appcompat.widget.ActivityChooserView$3:
    250:250:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    253:254:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
androidx.appcompat.widget.ActivityChooserView$4 -> androidx.appcompat.widget.ActivityChooserView$4:
    257:257:void <init>(androidx.appcompat.widget.ActivityChooserView,android.view.View) -> <init>
    260:260:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    265:265:boolean onForwardingStarted() -> onForwardingStarted
    271:271:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActivityChooserView$5 -> androidx.appcompat.widget.ActivityChooserView$5:
    281:281:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    284:285:void onChanged() -> onChanged
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter -> androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter:
    685:677:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    831:831:int getActivityCount() -> getActivityCount
    717:722:int getCount() -> getCount
    839:839:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    820:820:android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    835:835:int getHistorySize() -> getHistorySize
    730:738:java.lang.Object getItem(int) -> getItem
    702:702:int getItemViewType(int) -> getItemViewType
    853:853:boolean getShowDefaultActivity() -> getShowDefaultActivity
    751:780:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    791:807:int measureContentWidth() -> measureContentWidth
    689:697:void setDataModel(androidx.appcompat.widget.ActivityChooserModel) -> setDataModel
    813:815:void setMaxActivityCount(int) -> setMaxActivityCount
    844:848:void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    824:826:void setShowFooterView(boolean) -> setShowFooterView
androidx.appcompat.widget.ActivityChooserView$Callbacks -> androidx.appcompat.widget.ActivityChooserView$Callbacks:
    575:575:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    654:655:void notifyOnDismissListener() -> notifyOnDismissListener
    613:626:void onClick(android.view.View) -> onClick
    647:649:void onDismiss() -> onDismiss
    581:601:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    633:639:boolean onLongClick(android.view.View) -> onLongClick
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    864:864:void <clinit>() -> <clinit>
    869:872:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:55:void <init>(android.content.Context) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    218:232:void forceUniformWidth(int,int) -> forceUniformWidth
    265:342:void onLayout(boolean,int,int,int,int) -> onLayout
    64:66:void onMeasure(int,int) -> onMeasure
    248:256:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:348:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    75:203:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    58:58:void <clinit>() -> <clinit>
    66:66:void <init>(android.content.Context) -> <init>
    70:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:175:void drawableStateChanged() -> drawableStateChanged
    136:137:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:165:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    189:189:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    106:108:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:100:void setBackgroundResource(int) -> setBackgroundResource
    200:199:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    93:93:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    121:122:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:150:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    181:183:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    41:43:void <init>(android.view.View) -> <init>
    173:191:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    118:131:void applySupportBackgroundTint() -> applySupportBackgroundTint
    100:100:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    114:114:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    47:70:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    84:87:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    75:80:void onSetBackgroundResource(int) -> onSetBackgroundResource
    139:147:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    91:96:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    104:110:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    151:155:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    63:63:void <init>(android.content.Context) -> <init>
    67:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    155:160:void drawableStateChanged() -> drawableStateChanged
    321:325:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    305:309:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    289:293:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    337:344:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    271:277:int getAutoSizeTextType() -> getAutoSizeTextType
    121:122:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    149:150:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    174:175:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    180:181:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    186:188:void onLayout(boolean,int,int,int,int) -> onLayout
    205:207:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    237:242:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    255:259:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    218:222:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    91:93:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    83:85:void setBackgroundResource(int) -> setBackgroundResource
    369:368:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    357:358:void setSupportAllCaps(boolean) -> setSupportAllCaps
    106:107:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    134:135:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    166:168:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    194:198:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    56:56:void <init>(android.content.Context) -> <init>
    60:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    87:89:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    113:114:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    138:139:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    74:76:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    82:82:void setButtonDrawable(int) -> setButtonDrawable
    100:101:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    125:126:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    40:40:void <clinit>() -> <clinit>
    47:47:void <init>(android.content.Context) -> <init>
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:64:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:84:void drawableStateChanged() -> drawableStateChanged
    90:90:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    69:69:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    101:100:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    74:76:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    51:52:void <init>(android.widget.CompoundButton) -> <init>
    115:131:void applyButtonTint() -> applyButtonTint
    136:141:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    90:90:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    101:101:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    56:78:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    105:111:void onSetButtonDrawable() -> onSetButtonDrawable
    83:86:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    94:97:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    78:174:void <clinit>() -> <clinit>
    69:183:void <init>() -> <init>
    489:492:void addDelegate(java.lang.String,androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate) -> addDelegate
    415:425:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    568:576:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    502:502:boolean arrayContains(int[],int) -> arrayContains
    746:756:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    586:586:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    596:621:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    226:226:long createCacheKey(android.util.TypedValue) -> createCacheKey
    590:590:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    580:580:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    231:255:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    625:667:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    720:721:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    89:93:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    394:410:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    191:191:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    196:214:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    727:735:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    522:555:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    559:561:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    513:514:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    100:103:void installDefaultInflateDelegates(androidx.appcompat.widget.AppCompatDrawableManager) -> installDefaultInflateDelegates
    762:763:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    308:384:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    218:223:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    430:437:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    739:742:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    263:294:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    693:711:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    442:475:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatDrawableManager$AsldcInflateDelegate -> androidx.appcompat.widget.AppCompatDrawableManager$AsldcInflateDelegate:
    801:801:void <init>() -> <init>
    807:809:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.AppCompatDrawableManager$AvdcInflateDelegate -> androidx.appcompat.widget.AppCompatDrawableManager$AvdcInflateDelegate:
    784:784:void <init>() -> <init>
    792:794:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache -> androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache:
    673:673:void <init>(int) -> <init>
    687:687:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    677:677:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    681:681:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.AppCompatDrawableManager$VdcInflateDelegate -> androidx.appcompat.widget.AppCompatDrawableManager$VdcInflateDelegate:
    767:767:void <init>() -> <init>
    775:777:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    61:61:void <init>(android.content.Context) -> <init>
    65:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:76:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:172:void drawableStateChanged() -> drawableStateChanged
    133:134:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:162:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    55:55:java.lang.CharSequence getText() -> getText
    85:90:android.text.Editable getText() -> getText
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:105:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:97:void setBackgroundResource(int) -> setBackgroundResource
    197:196:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    118:119:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:147:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:180:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    28:37:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    65:65:void <init>(android.content.Context) -> <init>
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:246:void drawableStateChanged() -> drawableStateChanged
    152:153:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    180:181:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    207:208:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    235:236:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    252:252:boolean hasOverlappingRendering() -> hasOverlappingRendering
    122:124:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    114:116:void setBackgroundResource(int) -> setBackgroundResource
    98:100:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    90:92:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    85:85:void setImageResource(int) -> setImageResource
    106:108:void setImageURI(android.net.Uri) -> setImageURI
    137:138:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    165:166:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    192:193:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    220:221:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    45:46:void <init>(android.widget.ImageView) -> <init>
    196:214:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    137:154:void applySupportImageTint() -> applySupportImageTint
    119:119:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    133:133:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    99:100:boolean hasOverlappingRendering() -> hasOverlappingRendering
    50:80:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    86:95:void setImageResource(int) -> setImageResource
    110:115:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    123:129:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    174:178:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    252:257:void drawableStateChanged() -> drawableStateChanged
    162:163:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    190:191:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    218:219:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    246:247:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    263:263:boolean hasOverlappingRendering() -> hasOverlappingRendering
    132:134:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    124:126:void setBackgroundResource(int) -> setBackgroundResource
    108:110:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    100:102:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    92:94:void setImageResource(int) -> setImageResource
    116:118:void setImageURI(android.net.Uri) -> setImageURI
    147:148:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    175:176:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    203:204:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    231:232:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    55:55:void <clinit>() -> <clinit>
    63:63:void <init>(android.content.Context) -> <init>
    67:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:172:void drawableStateChanged() -> drawableStateChanged
    133:134:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:162:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:105:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:97:void setBackgroundResource(int) -> setBackgroundResource
    90:90:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    118:119:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:147:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:180:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:47:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:59:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:93:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:68:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:77:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:86:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    38:38:void <clinit>() -> <clinit>
    47:48:void <init>(android.widget.ProgressBar) -> <init>
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    145:145:android.graphics.Bitmap getSampleTime() -> getSampleTime
    52:65:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    73:109:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    122:133:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    56:56:void <init>(android.content.Context) -> <init>
    60:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:88:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    112:113:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    137:138:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    73:75:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    81:81:void setButtonDrawable(int) -> setButtonDrawable
    99:100:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    124:125:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    40:40:void <init>(android.content.Context) -> <init>
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:64:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:62:void drawableStateChanged() -> drawableStateChanged
    67:68:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    55:57:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    42:43:void <init>(android.widget.SeekBar) -> <init>
    125:139:void applyTickMarkTint() -> applyTickMarkTint
    162:179:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    151:154:void drawableStateChanged() -> drawableStateChanged
    145:146:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:73:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:92:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    71:71:void <clinit>() -> <clinit>
    107:107:void <init>(android.content.Context) -> <init>
    133:133:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    148:148:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:167:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    196:282:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    551:580:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    536:538:void drawableStateChanged() -> drawableStateChanged
    358:361:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    333:336:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    377:380:int getDropDownWidth() -> getDropDownWidth
    314:317:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    290:293:android.content.Context getPopupContext() -> getPopupContext
    457:457:java.lang.CharSequence getPrompt() -> getPrompt
    501:502:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    530:531:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    404:407:void onDetachedFromWindow() -> onDetachedFromWindow
    421:425:void onMeasure(int,int) -> onMeasure
    413:416:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    434:443:boolean performClick() -> performClick
    69:69:void setAdapter(android.widget.Adapter) -> setAdapter
    389:398:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    470:472:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    462:464:void setBackgroundResource(int) -> setBackgroundResource
    343:346:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    324:327:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    368:371:void setDropDownWidth(int) -> setDropDownWidth
    300:303:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    309:309:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    448:451:void setPrompt(java.lang.CharSequence) -> setPrompt
    486:487:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    515:516:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    246:246:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    249:249:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    254:255:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    604:622:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    679:681:boolean areAllItemsEnabled() -> areAllItemsEnabled
    630:630:int getCount() -> getCount
    650:651:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    635:635:java.lang.Object getItem(int) -> getItem
    640:640:long getItemId(int) -> getItemId
    645:645:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    656:656:boolean hasStableIds() -> hasStableIds
    713:713:boolean isEmpty() -> isEmpty
    693:695:boolean isEnabled(int) -> isEnabled
    661:662:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    668:669:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    722:729:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    717:717:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    758:791:void computeContentWidth() -> computeContentWidth
    749:749:java.lang.CharSequence getHintText() -> getHintText
    849:849:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    744:745:void setAdapter(android.widget.ListAdapter) -> setAdapter
    754:754:void setPromptText(java.lang.CharSequence) -> setPromptText
    796:833:void show() -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    729:729:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    732:737:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    818:818:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    821:828:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    833:833:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    836:838:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    64:66:void <init>(android.widget.TextView) -> <init>
    371:371:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    352:364:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    408:408:void autoSizeText() -> autoSizeText
    377:381:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    453:453:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    449:449:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    445:445:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    457:457:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    441:441:int getAutoSizeTextType() -> getAutoSizeTextType
    414:414:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    71:237:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    304:308:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    390:391:void onLayout(boolean,int,int,int,int) -> onLayout
    314:343:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    348:348:void setAllCaps(boolean) -> setAllCaps
    430:430:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    436:436:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    422:422:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    398:400:void setTextSize(int,float) -> setTextSize
    418:418:void setTextSizeInternal(int,float) -> setTextSizeInternal
    242:276:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.AppCompatTextHelper$1:
    252:252:void <init>(androidx.appcompat.widget.AppCompatTextHelper,java.lang.ref.WeakReference) -> <init>
    255:255:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    79:79:void <init>(android.content.Context) -> <init>
    83:83:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:94:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    464:468:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    179:184:void drawableStateChanged() -> drawableStateChanged
    349:353:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    330:334:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    311:315:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    368:375:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    290:296:int getAutoSizeTextType() -> getAutoSizeTextType
    406:406:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    411:411:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    137:138:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    165:166:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    477:478:java.lang.CharSequence getText() -> getText
    437:437:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    380:380:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    190:192:void onLayout(boolean,int,int,int,int) -> onLayout
    500:501:void onMeasure(int,int) -> onMeasure
    209:211:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    249:254:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    271:275:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    226:230:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    107:109:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    99:101:void setBackgroundResource(int) -> setBackgroundResource
    426:425:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    386:389:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    396:399:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    416:416:void setLineHeight(int) -> setLineHeight
    460:460:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    122:123:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    150:151:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    171:173:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    494:495:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    447:447:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    198:202:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    61:70:void <clinit>() -> <clinit>
    99:101:void <init>(android.widget.TextView) -> <init>
    547:581:void autoSizeText() -> autoSizeText
    447:469:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    585:590:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    711:727:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    737:755:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    642:644:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    404:404:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    388:388:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    372:372:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    417:417:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    358:358:int getAutoSizeTextType() -> getAutoSizeTextType
    786:798:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    769:776:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    811:811:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    109:178:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    265:278:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    308:335:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    198:201:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    604:632:void setRawTextSize(float) -> setRawTextSize
    596:600:void setTextSizeInternal(int,float) -> setTextSizeInternal
    510:537:boolean setupAutoSizeText() -> setupAutoSizeText
    421:429:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    434:442:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    666:699:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    820:820:boolean supportsAutoSizeText() -> supportsAutoSizeText
    502:486:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    50:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    150:150:int getMinimumHeight() -> getMinimumHeight
    140:141:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    171:171:boolean isStacked() -> isStacked
    68:135:void onMeasure(int,int) -> onMeasure
    57:62:void setAllowStacking(boolean) -> setAllowStacking
    154:166:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    59:59:void <init>(android.content.Context) -> <init>
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:76:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    195:196:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    200:201:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    185:186:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    190:191:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    175:176:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    180:181:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    206:208:void onAttachedToWindow() -> onAttachedToWindow
    214:216:void onDetachedFromWindow() -> onDetachedFromWindow
    99:170:void onMeasure(int,int) -> onMeasure
    80:80:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    91:93:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    43:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    47:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:51:void <init>(android.content.Context) -> <init>
    56:79:void onMeasure(int,int) -> onMeasure
    92:91:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    46:55:void <clinit>() -> <clinit>
    129:160:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    118:120:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    171:180:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> fixVectorDrawableTinting
    69:109:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    193:188:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    118:126:void <init>(android.content.Context,boolean) -> <init>
    629:641:void clearPressedItem() -> clearPressedItem
    542:543:void clickPressedItem(android.view.View,int) -> clickPressedItem
    200:203:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    565:569:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    186:193:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    290:349:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    471:472:void onDetachedFromWindow() -> onDetachedFromWindow
    485:531:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    430:458:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:624:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    586:599:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    575:579:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    554:554:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:689:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    169:180:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    373:374:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    558:560:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    382:383:void <init>(android.graphics.drawable.Drawable) -> <init>
    400:401:void draw(android.graphics.Canvas) -> draw
    387:387:void setEnabled(boolean) -> setEnabled
    407:408:void setHotspot(float,float) -> setHotspot
    414:415:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    392:393:boolean setState(int[]) -> setState
    421:422:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    700:700:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:712:void cancel() -> cancel
    716:716:void post() -> post
    706:707:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    37:37:void <init>(android.content.Context) -> <init>
    41:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:46:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    37:37:void <init>(android.content.Context) -> <init>
    41:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:46:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    68:77:void <init>(android.view.View) -> <init>
    216:221:void clearCallbacks() -> clearCallbacks
    156:158:boolean onForwardingStopped() -> onForwardingStopped
    226:248:void onLongPress() -> onLongPress
    94:111:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:280:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:188:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    121:125:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    289:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:311:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:300:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:316:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:323:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:329:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:334:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    145:145:void <init>(android.content.Context) -> <init>
    149:149:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    153:184:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1751:1751:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    322:358:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    295:317:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    363:365:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    369:371:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1317:1332:void forceUniformHeight(int,int) -> forceUniformHeight
    895:910:void forceUniformWidth(int,int) -> forceUniformWidth
    57:57:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1734:1737:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1721:1721:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1744:1744:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    423:428:int getBaseline() -> getBaseline
    480:480:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    221:221:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    268:268:int getDividerPadding() -> getDividerPadding
    278:278:int getDividerWidth() -> getDividerWidth
    1700:1700:int getGravity() -> getGravity
    1667:1667:int getOrientation() -> getOrientation
    212:212:int getShowDividers() -> getShowDividers
    505:505:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    518:518:int getVirtualChildCount() -> getVirtualChildCount
    529:529:float getWeightSum() -> getWeightSum
    567:573:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1521:1639:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1426:1503:void layoutVertical(int,int,int,int) -> layoutVertical
    1377:1377:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    928:1309:void measureHorizontal(int,int) -> measureHorizontal
    595:889:void measureVertical(int,int) -> measureVertical
    283:290:void onDraw(android.graphics.Canvas) -> onDraw
    1756:1757:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1762:1763:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1406:1409:void onLayout(boolean,int,int,int,int) -> onLayout
    550:553:void onMeasure(int,int) -> onMeasure
    392:392:void setBaselineAligned(boolean) -> setBaselineAligned
    488:490:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1645:1645:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    232:244:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    257:257:void setDividerPadding(int) -> setDividerPadding
    1679:1689:void setGravity(int) -> setGravity
    1705:1707:void setHorizontalGravity(int) -> setHorizontalGravity
    418:418:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1654:1656:void setOrientation(int) -> setOrientation
    195:198:void setShowDividers(int) -> setShowDividers
    1713:1715:void setVerticalGravity(int) -> setVerticalGravity
    545:545:void setWeightSum(float) -> setWeightSum
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1789:1796:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1803:1804:void <init>(int,int) -> <init>
    1826:1783:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    84:100:void <clinit>() -> <clinit>
    218:218:void <init>(android.content.Context) -> <init>
    242:242:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    255:271:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1138:1305:int buildDropDown() -> buildDropDown
    826:831:void clearListSelection() -> clearListSelection
    930:930:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    752:756:void dismiss() -> dismiss
    454:454:android.view.View getAnchorView() -> getAnchorView
    417:417:android.graphics.drawable.Drawable getBackground() -> getBackground
    471:471:int getHorizontalOffset() -> getHorizontalOffset
    926:926:android.widget.ListView getListView() -> getListView
    1421:1430:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    487:490:int getVerticalOffset() -> getVerticalOffset
    529:529:int getWidth() -> getWidth
    848:848:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    339:339:boolean isModal() -> isModal
    840:840:boolean isShowing() -> isShowing
    769:773:void removePromptView() -> removePromptView
    281:292:void setAdapter(android.widget.ListAdapter) -> setAdapter
    464:464:void setAnchorView(android.view.View) -> setAnchorView
    435:435:void setAnimationStyle(int) -> setAnimationStyle
    426:426:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    549:554:void setContentWidth(int) -> setContentWidth
    522:522:void setDropDownGravity(int) -> setDropDownGravity
    512:512:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    480:480:void setHorizontalOffset(int) -> setHorizontalOffset
    791:791:void setInputMethodMode(int) -> setInputMethodMode
    329:330:void setModal(boolean) -> setModal
    765:765:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    603:603:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    1318:1319:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1411:1415:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    306:306:void setPromptPosition(int) -> setPromptPosition
    810:816:void setSelection(int) -> setSelection
    499:500:void setVerticalOffset(int) -> setVerticalOffset
    539:539:void setWidth(int) -> setWidth
    647:742:void show() -> show
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1147:1147:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1151:1153:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1166:1166:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1172:1175:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1341:1341:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1346:1346:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1323:1323:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1328:1330:void onChanged() -> onChanged
    1336:1336:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1387:1387:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1398:1401:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1366:1366:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1371:1380:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1351:1351:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1356:1360:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    60:63:void <clinit>() -> <clinit>
    70:70:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    75:76:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    113:114:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    121:122:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    81:82:void setEnterTransition(java.lang.Object) -> setEnterTransition
    87:88:void setExitTransition(java.lang.Object) -> setExitTransition
    93:93:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    101:105:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    138:148:void <init>(android.content.Context,boolean) -> <init>
    129:129:boolean hasFocus() -> hasFocus
    129:129:boolean hasWindowFocus() -> hasWindowFocus
    129:129:boolean isFocused() -> isFocused
    129:129:boolean isInTouchMode() -> isInTouchMode
    129:129:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    129:129:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    184:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    162:178:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    129:129:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    153:153:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    129:129:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    48:49:void <init>(android.content.res.Resources) -> <init>
    183:183:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    168:168:boolean getBoolean(int) -> getBoolean
    158:158:int getColor(int) -> getColor
    163:163:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    245:245:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    240:240:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    130:130:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    142:142:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    148:148:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    250:250:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    173:173:int getInteger(int) -> getInteger
    178:178:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    153:153:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    270:270:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    255:255:java.lang.String getResourceName(int) -> getResourceName
    260:260:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    265:265:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    209:209:void getValue(int,android.util.TypedValue,boolean) -> getValue
    222:222:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    216:216:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    188:188:android.content.res.XmlResourceParser getXml(int) -> getXml
    227:227:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    193:193:java.io.InputStream openRawResource(int) -> openRawResource
    198:198:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    203:203:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    282:282:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    276:276:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    232:234:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:70:void setAbsolute(int,int) -> setAbsolute
    74:88:void setDirection(boolean) -> setDirection
    55:63:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    77:77:void <clinit>() -> <clinit>
    82:91:void <init>(android.content.Context) -> <init>
    260:272:void animateToTab(int) -> animateToTab
    214:219:android.widget.Spinner createSpinner() -> createSpinner
    204:208:androidx.appcompat.widget.LinearLayoutCompat createTabLayout() -> createTabLayout
    293:304:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    146:146:boolean isCollapsed() -> isCollapsed
    277:280:void onAttachedToWindow() -> onAttachedToWindow
    225:231:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    286:288:void onDetachedFromWindow() -> onDetachedFromWindow
    371:372:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:136:void onMeasure(int,int) -> onMeasure
    154:169:void performCollapse() -> performCollapse
    173:178:boolean performExpand() -> performExpand
    150:150:void setAllowCollapse(boolean) -> setAllowCollapse
    199:200:void setContentHeight(int) -> setContentHeight
    183:194:void setTabSelected(int) -> setTabSelected
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
    264:264:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    267:269:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
    522:522:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    527:527:int getCount() -> getCount
    532:532:java.lang.Object getItem(int) -> getItem
    543:545:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
    552:552:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    557:562:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    390:405:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    409:410:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    517:517:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    424:426:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    431:434:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    439:443:void onMeasure(int,int) -> onMeasure
    415:418:void setSelected(boolean) -> setSelected
    449:512:void update() -> update
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener -> androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener:
    567:568:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    594:594:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    586:589:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    580:581:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    175:175:void <clinit>() -> <clinit>
    266:266:void <init>(android.content.Context) -> <init>
    270:270:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    274:385:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1363:1382:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    496:500:void clearFocus() -> clearFocus
    1536:1558:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1655:1689:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1581:1634:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1566:1568:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1201:1201:void dismissSuggestions() -> dismissSuggestions
    1696:1697:void forceSuggestionQuery() -> forceSuggestionQuery
    850:854:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1087:1096:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    451:451:int getImeOptions() -> getImeOptions
    473:473:int getInputType() -> getInputType
    776:776:int getMaxWidth() -> getMaxWidth
    863:864:int getPreferredHeight() -> getPreferredHeight
    858:859:int getPreferredWidth() -> getPreferredWidth
    558:558:java.lang.CharSequence getQuery() -> getQuery
    618:623:java.lang.CharSequence getQueryHint() -> getQueryHint
    393:393:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    389:389:int getSuggestionRowLayout() -> getSuggestionRowLayout
    754:754:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    892:900:boolean hasVoiceSearch() -> hasVoiceSearch
    682:682:boolean isIconified() -> isIconified
    1701:1701:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    909:909:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1499:1501:void launchIntent(android.content.Intent) -> launchIntent
    1516:1517:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1476:1482:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1278:1282:void onActionViewCollapsed() -> onActionViewCollapsed
    1290:1296:void onActionViewExpanded() -> onActionViewExpanded
    1205:1219:void onCloseClicked() -> onCloseClicked
    963:965:void onDetachedFromWindow() -> onDetachedFromWindow
    1387:1391:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1398:1400:boolean onItemSelected(int) -> onItemSelected
    831:844:void onLayout(boolean,int,int,int,int) -> onLayout
    782:825:void onMeasure(int,int) -> onMeasure
    972:972:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1352:1359:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1344:1346:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1225:1229:void onSearchClicked() -> onSearchClicked
    1187:1195:void onSubmitQuery() -> onSubmitQuery
    1042:1054:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1173:1183:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1257:1262:void onTextFocusChanged() -> onTextFocusChanged
    1235:1252:void onVoiceClicked() -> onVoiceClicked
    1268:1270:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    944:944:void postUpdateFocusedState() -> postUpdateFocusedState
    479:490:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1443:1461:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    428:428:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    669:671:void setIconified(boolean) -> setIconified
    641:644:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    440:440:void setImeOptions(int) -> setImeOptions
    463:463:void setInputType(int) -> setInputType
    763:765:void setMaxWidth(int) -> setMaxWidth
    519:519:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    528:528:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    510:510:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    549:549:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    537:537:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    570:578:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1509:1511:void setQuery(java.lang.CharSequence) -> setQuery
    593:594:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    722:724:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    405:418:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    694:695:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    744:746:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    932:939:void updateCloseButton() -> updateCloseButton
    948:958:void updateFocusedState() -> updateFocusedState
    1101:1102:void updateQueryHint() -> updateQueryHint
    1109:1139:void updateSearchAutoComplete() -> updateSearchAutoComplete
    923:928:void updateSubmitArea() -> updateSubmitArea
    914:918:void updateSubmitButton(boolean) -> updateSubmitButton
    868:888:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1153:1157:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    177:177:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    180:180:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1708:1708:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1715:1715:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    184:184:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    187:188:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    330:330:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    333:334:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    375:375:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    379:379:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    975:975:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    978:987:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    997:997:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1001:1025:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1160:1160:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1167:1167:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1406:1406:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1414:1414:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1418:1418:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1426:1426:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector:
    2025:2043:void <init>() -> <init>
    2059:2061:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2050:2052:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2068:2070:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1324:1324:void <clinit>() -> <clinit>
    1303:1303:void <init>(android.os.Parcelable) -> <init>
    1307:1308:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1319:1320:java.lang.String toString() -> toString
    1313:1314:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1324:1324:void <init>() -> <init>
    1324:1324:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1324:1324:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1327:1327:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1332:1332:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1324:1324:java.lang.Object[] newArray(int) -> newArray
    1337:1337:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1837:1837:void <init>(android.content.Context) -> <init>
    1841:1841:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1845:1846:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1926:1926:boolean enoughToFilter() -> enoughToFilter
    1959:1963:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1871:1871:boolean isEmpty() -> isEmpty
    1978:1981:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1851:1853:void onFinishInflate() -> onFinishInflate
    1916:1917:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1934:1952:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1898:1909:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1997:2016:void setImeVisibility(boolean) -> setImeVisibility
    1858:1858:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1863:1864:void setThreshold(int) -> setThreshold
    1987:1991:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1829:1829:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1832:1832:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1755:1761:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1773:1812:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1765:1768:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
    95:105:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    275:321:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    217:235:void changeCursor(android.database.Cursor) -> changeCursor
    583:588:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    419:432:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    336:344:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    647:652:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    625:635:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    676:677:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    606:612:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    550:575:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    699:702:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    507:534:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    473:481:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    362:370:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    374:378:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    741:778:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    685:687:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    450:458:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    244:249:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    181:183:void notifyDataSetChanged() -> notifyDataSetChanged
    189:191:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    329:331:void onClick(android.view.View) -> onClick
    146:165:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    118:118:void setQueryRefinement(int) -> setQueryRefinement
    388:401:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    352:357:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    593:593:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    195:204:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
    264:269:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    101:183:void <clinit>() -> <clinit>
    193:193:void <init>(android.content.Context) -> <init>
    204:204:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    218:290:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1025:1030:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    694:708:void applyThumbTint() -> applyThumbTint
    571:585:void applyTrackTint() -> applyTrackTint
    1034:1035:void cancelPositionAnimator() -> cancelPositionAnimator
    984:987:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    1133:1193:void draw(android.graphics.Canvas) -> draw
    1353:1362:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1331:1347:void drawableStateChanged() -> drawableStateChanged
    1263:1268:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1275:1280:int getCompoundPaddingRight() -> getCompoundPaddingRight
    792:792:boolean getShowText() -> getShowText
    733:733:boolean getSplitTrack() -> getSplitTrack
    446:446:int getSwitchMinWidth() -> getSwitchMinWidth
    421:421:int getSwitchPadding() -> getSwitchPadding
    1040:1040:boolean getTargetCheckedState() -> getTargetCheckedState
    761:761:java.lang.CharSequence getTextOff() -> getTextOff
    742:742:java.lang.CharSequence getTextOn() -> getTextOn
    630:630:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1293:1298:int getThumbOffset() -> getThumbOffset
    1302:1313:int getThumbScrollRange() -> getThumbScrollRange
    469:469:int getThumbTextPadding() -> getThumbTextPadding
    661:661:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    690:690:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    509:509:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    539:539:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    567:567:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    888:900:boolean hitThumb(float,float) -> hitThumb
    1373:1385:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    874:880:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1322:1324:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1198:1258:void onDraw(android.graphics.Canvas) -> onDraw
    1391:1392:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1397:1407:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1077:1128:void onLayout(boolean,int,int,int,int) -> onLayout
    797:859:void onMeasure(int,int) -> onMeasure
    865:869:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    906:980:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1060:1071:void setChecked(boolean) -> setChecked
    1419:1418:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    781:783:void setShowText(boolean) -> setShowText
    723:724:void setSplitTrack(boolean) -> setSplitTrack
    433:434:void setSwitchMinWidth(int) -> setSwitchMinWidth
    409:410:void setSwitchPadding(int) -> setSwitchPadding
    300:335:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    366:380:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    392:397:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    350:354:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    770:771:void setTextOff(java.lang.CharSequence) -> setTextOff
    751:752:void setTextOn(java.lang.CharSequence) -> setTextOn
    599:606:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1049:1050:void setThumbPosition(float) -> setThumbPosition
    618:618:void setThumbResource(int) -> setThumbResource
    457:458:void setThumbTextPadding(int) -> setThumbTextPadding
    648:651:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    676:679:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    480:487:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    498:498:void setTrackResource(int) -> setTrackResource
    526:529:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    553:556:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    996:1020:void stopDrag(android.view.MotionEvent) -> stopDrag
    1055:1055:void toggle() -> toggle
    1368:1368:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
    102:102:void <init>(java.lang.Class,java.lang.String) -> <init>
    102:102:java.lang.Object get(java.lang.Object) -> get
    105:105:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    102:102:void set(java.lang.Object,java.lang.Object) -> set
    110:110:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    28:40:void <clinit>() -> <clinit>
    83:95:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    63:68:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    109:111:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    73:78:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    100:103:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:102:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:116:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:72:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    22:22:void <init>() -> <init>
    29:32:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:36:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:49:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    67:69:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    151:151:boolean getBoolean(int,boolean) -> getBoolean
    163:163:int getColor(int,int) -> getColor
    167:177:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    185:185:float getDimension(int,float) -> getDimension
    189:189:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    193:193:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    73:79:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    83:86:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    159:159:float getFloat(int,float) -> getFloat
    112:119:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    155:155:int getInt(int,int) -> getInt
    181:181:int getInteger(int,int) -> getInteger
    201:201:int getLayoutDimension(int,int) -> getLayoutDimension
    209:209:int getResourceId(int,int) -> getResourceId
    143:143:java.lang.String getString(int) -> getString
    139:139:java.lang.CharSequence getText(int) -> getText
    213:213:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    233:233:boolean hasValue(int) -> hasValue
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    245:245:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    225:225:void <init>(android.content.Context) -> <init>
    229:229:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    233:342:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2131:2136:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2019:2041:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1390:1405:void addSystemView(android.view.View,boolean) -> addSystemView
    507:507:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2101:2101:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    715:718:void collapseActionView() -> collapseActionView
    585:586:void dismissPopupMenus() -> dismissPopupMenus
    1371:1380:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2168:2169:void ensureContentInsets() -> ensureContentInsets
    685:686:void ensureLogoView() -> ensureLogoView
    1033:1041:void ensureMenu() -> ensureMenu
    1046:1054:void ensureMenuView() -> ensureMenuView
    1361:1366:void ensureNavButtonView() -> ensureNavButtonView
    142:142:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2096:2096:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    142:142:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    142:142:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2078:2078:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2083:2090:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2048:2049:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    1968:1973:int getChildTop(android.view.View,int) -> getChildTop
    2007:2007:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1146:1146:int getContentInsetEnd() -> getContentInsetEnd
    1268:1270:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1189:1189:int getContentInsetLeft() -> getContentInsetLeft
    1209:1209:int getContentInsetRight() -> getContentInsetRight
    1126:1126:int getContentInsetStart() -> getContentInsetStart
    1225:1227:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1321:1327:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1340:1342:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1355:1357:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1306:1308:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2066:2068:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    643:643:android.graphics.drawable.Drawable getLogo() -> getLogo
    681:681:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1007:1008:android.view.Menu getMenu() -> getMenu
    1059:1059:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    889:889:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    981:981:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2177:2177:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1028:1029:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2181:2181:android.content.Context getPopupContext() -> getPopupContext
    369:369:int getPopupTheme() -> getPopupTheme
    784:784:java.lang.CharSequence getSubtitle() -> getSubtitle
    728:728:java.lang.CharSequence getTitle() -> getTitle
    466:466:int getTitleMarginBottom() -> getTitleMarginBottom
    444:444:int getTitleMarginEnd() -> getTitleMarginEnd
    400:400:int getTitleMarginStart() -> getTitleMarginStart
    422:422:int getTitleMarginTop() -> getTitleMarginTop
    2072:2073:int getVerticalMargins(android.view.View) -> getVerticalMargins
    1923:1936:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2111:2114:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    701:701:boolean hasExpandedActionView() -> hasExpandedActionView
    541:541:boolean hideOverflowMenu() -> hideOverflowMenu
    1071:1071:void inflateMenu(int) -> inflateMenu
    2140:2140:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    523:523:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    517:517:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    1943:1950:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    1956:1963:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1532:1549:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1507:1523:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1451:1452:void onDetachedFromWindow() -> onDetachedFromWindow
    1486:1499:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1705:1919:void onLayout(boolean,int,int,int,int) -> onLayout
    1575:1700:void onMeasure(int,int) -> onMeasure
    1423:1440:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    483:488:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1411:1417:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1462:1475:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1445:1446:void postShowOverflowMenu() -> postShowOverflowMenu
    2118:2125:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    2150:2151:void setCollapsible(boolean) -> setCollapsible
    1289:1292:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1247:1250:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1168:1169:void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    1105:1106:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    501:501:void setLogo(int) -> setLogo
    622:631:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    655:655:void setLogoDescription(int) -> setLogoDescription
    667:671:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    547:578:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2160:2163:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    903:903:void setNavigationContentDescription(int) -> setNavigationContentDescription
    917:921:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    940:940:void setNavigationIcon(int) -> setNavigationIcon
    959:968:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    994:995:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1083:1083:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1017:1018:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    353:358:void setPopupTheme(int) -> setPopupTheme
    795:795:void setSubtitle(int) -> setSubtitle
    806:829:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    848:850:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    872:874:void setSubtitleTextColor(int) -> setSubtitleTextColor
    740:740:void setTitle(int) -> setTitle
    752:775:void setTitle(java.lang.CharSequence) -> setTitle
    386:391:void setTitleMargin(int,int,int,int) -> setTitleMargin
    477:478:void setTitleMarginBottom(int) -> setTitleMarginBottom
    455:457:void setTitleMarginEnd(int) -> setTitleMarginEnd
    411:413:void setTitleMarginStart(int) -> setTitleMarginStart
    433:435:void setTitleMarginTop(int) -> setTitleMarginTop
    837:839:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    860:862:void setTitleTextColor(int) -> setTitleTextColor
    1556:1562:boolean shouldCollapse() -> shouldCollapse
    2062:2062:boolean shouldLayout(android.view.View) -> shouldLayout
    532:532:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    200:200:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    203:204:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    218:218:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    220:220:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1380:1380:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1383:1383:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2309:2309:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2407:2418:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2370:2397:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2315:2318:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2329:2345:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2216:2213:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2220:2221:void <init>(int,int) -> <init>
    2234:2236:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2240:2213:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2244:2247:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2251:2213:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2255:2258:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2287:2287:void <clinit>() -> <clinit>
    2271:2273:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2277:2277:void <init>(android.os.Parcelable) -> <init>
    2282:2284:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2287:2287:void <init>() -> <init>
    2287:2287:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2287:2287:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2290:2290:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2295:2295:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2287:2287:java.lang.Object[] newArray(int) -> newArray
    2300:2300:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:96:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    101:182:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:232:void collapseActionView() -> collapseActionView
    208:210:int detectDisplayOptions() -> detectDisplayOptions
    375:375:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    380:380:int getDisplayOptions() -> getDisplayOptions
    677:677:android.view.Menu getMenu() -> getMenu
    458:458:int getNavigationMode() -> getNavigationMode
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:286:void initIndeterminateProgress() -> initIndeterminateProgress
    281:281:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    448:448:void setCollapsible(boolean) -> setCollapsible
    540:545:void setCustomView(android.view.View) -> setCustomView
    196:201:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    385:414:void setDisplayOptions(int) -> setDisplayOptions
    422:432:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    301:301:void setIcon(int) -> setIcon
    306:307:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:312:void setLogo(int) -> setLogo
    317:318:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:370:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    672:672:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    360:360:void setMenuPrepared() -> setMenuPrepared
    620:621:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:626:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:594:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    273:275:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:256:void setTitle(java.lang.CharSequence) -> setTitle
    260:262:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    661:661:void setVisibility(int) -> setVisibility
    237:237:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:244:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:569:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
    630:634:void updateHomeAccessibility() -> updateHomeAccessibility
    611:614:void updateNavigationIcon() -> updateNavigationIcon
    323:330:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:188:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    586:586:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:580:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:574:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    41:44:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    108:116:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:224:void cancelPendingShow() -> cancelPendingShow
    250:251:void clearAnchorPos() -> clearAnchorPos
    192:206:void hide() -> hide
    129:140:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:123:boolean onLongClick(android.view.View) -> onLongClick
    159:159:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:220:void scheduleShow() -> scheduleShow
    210:215:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    93:104:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:188:void show(boolean) -> show
    235:242:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.TooltipCompatHandler$1:
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:57:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.TooltipCompatHandler$2:
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:63:void run() -> run
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    58:71:void <init>(android.content.Context) -> <init>
    104:181:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    187:202:android.view.View getAppRootView(android.view.View) -> getAppRootView
    90:95:void hide() -> hide
    99:99:boolean isShowing() -> isShowing
    77:86:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    55:56:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    66:70:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    75:75:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    83:83:int getInflatedId() -> getInflatedId
    144:144:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    113:113:int getLayoutResource() -> getLayoutResource
    196:235:android.view.View inflate() -> inflate
    149:149:void onMeasure(int,int) -> onMeasure
    97:97:void setInflatedId(int) -> setInflatedId
    137:137:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    129:129:void setLayoutResource(int) -> setLayoutResource
    248:248:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    173:183:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:50:void <clinit>() -> <clinit>
    66:70:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:90:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:59:void <init>() -> <init>
    96:96:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    69:76:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:101:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:45:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:53:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    34:38:void <init>() -> <init>
    56:56:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    74:74:boolean isMainThread() -> isMainThread
    61:69:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    38:41:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    45:46:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    75:76:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:50:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:57:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    150:151:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    184:201:boolean equals(java.lang.Object) -> equals
    46:51:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    207:209:int hashCode() -> hashCode
    140:141:java.util.Iterator iterator() -> iterator
    160:161:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:85:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:70:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    283:283:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    300:300:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    362:364:void <init>(java.lang.Object,java.lang.Object) -> <init>
    395:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    318:316:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
    324:326:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    234:236:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:272:java.util.Map$Entry next() -> next
    263:266:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    247:257:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.cardview.R$styleable -> androidx.cardview.R$styleable:
    54:54:void <clinit>() -> <clinit>
androidx.cardview.widget.CardView -> androidx.cardview.widget.CardView:
    81:92:void <clinit>() -> <clinit>
    113:113:void <init>(android.content.Context) -> <init>
    117:117:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    121:162:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    79:79:void access$001(androidx.cardview.widget.CardView,int,int,int,int) -> access$001
    79:79:void access$101(androidx.cardview.widget.CardView,int) -> access$101
    79:79:void access$201(androidx.cardview.widget.CardView,int) -> access$201
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:260:void onMeasure(int,int) -> onMeasure
    283:283:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:293:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:376:void setCardElevation(float) -> setCardElevation
    226:227:void setContentPadding(int,int,int,int) -> setContentPadding
    402:402:void setMaxCardElevation(float) -> setMaxCardElevation
    272:273:void setMinimumHeight(int) -> setMinimumHeight
    266:267:void setMinimumWidth(int) -> setMinimumWidth
    441:443:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:354:void setRadius(float) -> setRadius
    203:205:void setUseCompatPadding(boolean) -> setUseCompatPadding
androidx.cardview.widget.CardView$1 -> androidx.cardview.widget.CardView$1:
    447:447:void <init>(androidx.cardview.widget.CardView) -> <init>
    485:485:android.graphics.drawable.Drawable getCardBackground() -> getCardBackground
    490:490:android.view.View getCardView() -> getCardView
    463:463:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    458:458:boolean getUseCompatPadding() -> getUseCompatPadding
    452:453:void setCardBackground(android.graphics.drawable.Drawable) -> setCardBackground
    475:479:void setMinWidthHeightInternal(int,int) -> setMinWidthHeightInternal
    468:469:void setShadowPadding(int,int,int,int) -> setShadowPadding
androidx.cardview.widget.CardViewApi17Impl -> androidx.cardview.widget.CardViewApi17Impl:
    25:25:void <init>() -> <init>
    29:29:void initStatic() -> initStatic
androidx.cardview.widget.CardViewApi17Impl$1 -> androidx.cardview.widget.CardViewApi17Impl$1:
    30:30:void <init>(androidx.cardview.widget.CardViewApi17Impl) -> <init>
    34:34:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
androidx.cardview.widget.CardViewApi21Impl -> androidx.cardview.widget.CardViewApi21Impl:
    26:26:void <init>() -> <init>
    118:118:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> getBackgroundColor
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> getCardBackground
    83:83:float getElevation(androidx.cardview.widget.CardViewDelegate) -> getElevation
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    31:37:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    103:103:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> onCompatPaddingChanged
    108:108:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    113:113:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    78:78:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> setElevation
    51:53:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    42:42:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> setRadius
    88:98:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.CardViewBaseImpl -> androidx.cardview.widget.CardViewBaseImpl:
    27:29:void <init>() -> <init>
    93:93:androidx.cardview.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float) -> createBackground
    125:125:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> getBackgroundColor
    146:146:float getElevation(androidx.cardview.widget.CardViewDelegate) -> getElevation
    157:157:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    167:167:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    162:162:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    136:136:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    171:171:androidx.cardview.widget.RoundRectDrawableWithShadow getShadowBackground(androidx.cardview.widget.CardViewDelegate) -> getShadowBackground
    37:37:void initStatic() -> initStatic
    83:87:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    114:115:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    120:120:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    141:141:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> setElevation
    151:152:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    130:131:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> setRadius
    99:103:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.CardViewBaseImpl$1 -> androidx.cardview.widget.CardViewBaseImpl$1:
    38:38:void <init>(androidx.cardview.widget.CardViewBaseImpl) -> <init>
    43:74:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
androidx.cardview.widget.RoundRectDrawable -> androidx.cardview.widget.RoundRectDrawable:
    55:61:void <init>(android.content.res.ColorStateList,float) -> <init>
    209:210:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintFilter
    87:100:void draw(android.graphics.Canvas) -> draw
    164:164:android.content.res.ColorStateList getColor() -> getColor
    127:127:void getOutline(android.graphics.Outline) -> getOutline
    82:82:float getPadding() -> getPadding
    155:155:float getRadius() -> getRadius
    197:198:boolean isStateful() -> isStateful
    121:122:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:189:boolean onStateChange(int[]) -> onStateChange
    141:141:void setAlpha(int) -> setAlpha
    65:66:void setBackground(android.content.res.ColorStateList) -> setBackground
    159:160:void setColor(android.content.res.ColorStateList) -> setColor
    146:146:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    70:78:void setPadding(float,boolean,boolean) -> setPadding
    131:136:void setRadius(float) -> setRadius
    169:171:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:178:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    106:115:void updateBounds(android.graphics.Rect) -> updateBounds
androidx.cardview.widget.RoundRectDrawableWithShadow -> androidx.cardview.widget.RoundRectDrawableWithShadow:
    41:41:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float) -> <init>
    334:337:void buildComponents(android.graphics.Rect) -> buildComponents
    297:327:void buildShadowCorners() -> buildShadowCorners
    190:190:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    181:181:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    238:245:void draw(android.graphics.Canvas) -> draw
    249:293:void drawShadow(android.graphics.Canvas) -> drawShadow
    382:382:android.content.res.ColorStateList getColor() -> getColor
    341:341:float getCornerRadius() -> getCornerRadius
    345:345:void getMaxShadowAndCornerPadding(android.graphics.Rect) -> getMaxShadowAndCornerPadding
    361:361:float getMaxShadowSize() -> getMaxShadowSize
    371:373:float getMinHeight() -> getMinHeight
    365:367:float getMinWidth() -> getMinWidth
    170:174:boolean getPadding(android.graphics.Rect) -> getPadding
    357:357:float getShadowSize() -> getShadowSize
    210:210:boolean isStateful() -> isStateful
    137:138:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    198:204:boolean onStateChange(int[]) -> onStateChange
    124:125:void setAddPaddingForCorners(boolean) -> setAddPaddingForCorners
    130:132:void setAlpha(int) -> setAlpha
    108:109:void setBackground(android.content.res.ColorStateList) -> setBackground
    377:378:void setColor(android.content.res.ColorStateList) -> setColor
    215:215:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    228:225:void setCornerRadius(float) -> setCornerRadius
    353:353:void setMaxShadowSize(float) -> setMaxShadowSize
    150:143:void setShadowSize(float,float) -> setShadowSize
    349:349:void setShadowSize(float) -> setShadowSize
    117:117:int toEven(float) -> toEven
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:57:void <init>() -> <init>
    64:64:void <init>(int) -> <init>
    71:71:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:144:void putAll(java.util.Map) -> putAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:119:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:104:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:114:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    53:54:void <clinit>() -> <clinit>
    243:243:void <init>() -> <init>
    250:257:void <init>(int) -> <init>
    364:404:boolean add(java.lang.Object) -> add
    752:755:boolean addAll(java.util.Collection) -> addAll
    164:198:void allocArrays(int) -> allocArrays
    285:289:void clear() -> clear
    318:318:boolean contains(java.lang.Object) -> contains
    737:739:boolean containsAll(java.util.Collection) -> containsAll
    298:306:void ensureCapacity(int) -> ensureCapacity
    594:603:boolean equals(java.lang.Object) -> equals
    203:234:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    666:714:androidx.collection.MapCollections getCollection() -> getCollection
    622:625:int hashCode() -> hashCode
    86:113:int indexOf(java.lang.Object,int) -> indexOf
    328:328:int indexOf(java.lang.Object) -> indexOf
    124:151:int indexOfNull() -> indexOfNull
    346:346:boolean isEmpty() -> isEmpty
    726:726:java.util.Iterator iterator() -> iterator
    465:467:boolean remove(java.lang.Object) -> remove
    768:769:boolean removeAll(java.util.Collection) -> removeAll
    479:523:java.lang.Object removeAt(int) -> removeAt
    783:785:boolean retainAll(java.util.Collection) -> retainAll
    554:554:int size() -> size
    560:561:java.lang.Object[] toArray() -> toArray
    568:575:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    639:657:java.lang.String toString() -> toString
    338:338:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    667:667:void <init>(androidx.collection.ArraySet) -> <init>
    710:710:void colClear() -> colClear
    675:675:java.lang.Object colGetEntry(int,int) -> colGetEntry
    690:690:java.util.Map colGetMap() -> colGetMap
    670:670:int colGetSize() -> colGetSize
    680:680:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    685:685:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    695:695:void colPut(java.lang.Object,java.lang.Object) -> colPut
    705:705:void colRemoveAt(int) -> colRemoveAt
    700:700:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    70:70:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    47:47:void <clinit>() -> <clinit>
    58:58:void <init>() -> <init>
    68:77:void <init>(int) -> <init>
    369:395:void append(long,java.lang.Object) -> append
    353:361:void clear() -> clear
    46:46:java.lang.Object clone() -> clone
    85:89:androidx.collection.LongSparseArray clone() -> clone
    128:133:void delete(long) -> delete
    158:178:void gc() -> gc
    106:106:java.lang.Object get(long) -> get
    115:120:java.lang.Object get(long,java.lang.Object) -> get
    312:316:int indexOfKey(long) -> indexOfKey
    272:276:long keyAt(int) -> keyAt
    189:231:void put(long,java.lang.Object) -> put
    149:151:void removeAt(int) -> removeAt
    251:255:int size() -> size
    407:428:java.lang.String toString() -> toString
    286:290:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:53:void <init>(int) -> <init>
    88:84:java.lang.Object get(java.lang.Object) -> get
    143:139:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    348:350:java.lang.String toString() -> toString
    171:187:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:32:void <init>() -> <init>
    459:461:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    518:522:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:493:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:509:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    43:45:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:55:java.lang.Object next() -> next
    64:65:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:184:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:204:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    259:263:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:283:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    349:351:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:310:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    79:81:void <init>(androidx.collection.MapCollections) -> <init>
    137:138:boolean equals(java.lang.Object) -> equals
    110:111:java.lang.Object getKey() -> getKey
    119:120:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:152:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:91:java.util.Map$Entry next() -> next
    99:100:void remove() -> remove
    128:129:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:371:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:383:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:404:boolean remove(java.lang.Object) -> remove
    412:417:boolean removeAll(java.util.Collection) -> removeAll
    428:433:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:239:void <init>() -> <init>
    246:253:void <init>(int) -> <init>
    260:262:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    166:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    597:637:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    363:364:java.lang.Object get(java.lang.Object) -> get
    656:661:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    402:402:boolean isEmpty() -> isEmpty
    373:373:java.lang.Object keyAt(int) -> keyAt
    415:465:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    481:491:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    504:506:java.lang.Object remove(java.lang.Object) -> remove
    518:571:java.lang.Object removeAt(int) -> removeAt
    393:394:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    581:581:int size() -> size
    675:700:java.lang.String toString() -> toString
    382:382:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    72:81:void <init>(int) -> <init>
    388:414:void append(int,java.lang.Object) -> append
    372:380:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    89:93:androidx.collection.SparseArrayCompat clone() -> clone
    132:137:void delete(int) -> delete
    175:195:void gc() -> gc
    110:110:java.lang.Object get(int) -> get
    119:124:java.lang.Object get(int,java.lang.Object) -> get
    329:333:int indexOfKey(int) -> indexOfKey
    347:352:int indexOfValue(java.lang.Object) -> indexOfValue
    289:293:int keyAt(int) -> keyAt
    206:248:void put(int,java.lang.Object) -> put
    146:146:void remove(int) -> remove
    268:272:int size() -> size
    426:447:java.lang.String toString() -> toString
    303:307:java.lang.Object valueAt(int) -> valueAt
androidx.coordinatorlayout.R$styleable -> androidx.coordinatorlayout.R$styleable:
    161:207:void <clinit>() -> <clinit>
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
    116:150:void <clinit>() -> <clinit>
    197:197:void <init>(android.content.Context) -> <init>
    201:201:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    206:227:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    154:156:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1580:1591:void addPreDrawListener() -> addPreDrawListener
    1724:1724:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1036:1047:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    825:838:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1489:1497:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1222:1246:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    305:316:void drawableStateChanged() -> drawableStateChanged
    1550:1563:void ensurePreDrawListener() -> ensurePreDrawListener
    111:111:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1719:1719:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    111:111:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    111:111:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1704:1704:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1709:1714:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    949:950:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1513:1518:java.util.List getDependencies(android.view.View) -> getDependencies
    1541:1542:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1531:1536:java.util.List getDependents(android.view.View) -> getDependents
    705:705:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1060:1065:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    962:1032:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    574:580:int getKeyline(int) -> getKeyline
    935:936:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    374:374:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    1950:1950:int getNestedScrollAxes() -> getNestedScrollAxes
    627:655:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    300:300:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    715:715:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    710:710:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    416:427:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1572:1572:boolean hasDependencies(android.view.View) -> hasDependencies
    1668:1673:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1163:1186:void layoutChild(android.view.View,int) -> layoutChild
    1076:1084:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1100:1152:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    1380:1457:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1617:1654:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    237:251:void onAttachedToWindow() -> onAttachedToWindow
    1275:1376:void onChildViewsChanged(int) -> onChildViewsChanged
    256:265:void onDetachedFromWindow() -> onDetachedFromWindow
    896:901:void onDraw(android.graphics.Canvas) -> onDraw
    503:513:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    876:889:void onLayout(boolean,int,int,int,int) -> onLayout
    860:862:void onLayoutChild(android.view.View,int) -> onLayoutChild
    739:821:void onMeasure(int,int) -> onMeasure
    733:733:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1898:1918:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1927:1942:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1850:1850:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1859:1890:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1813:1813:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1820:1844:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1759:1759:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1764:1777:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3147:3166:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3174:3191:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1729:1729:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1736:1751:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1785:1785:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1790:1807:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    525:558:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    588:622:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    437:496:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    662:694:void prepareChildren() -> prepareChildren
    923:924:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    162:163:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1599:1605:void removePreDrawListener() -> removePreDrawListener
    3197:3205:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    566:569:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    384:408:void resetTouchBehaviors(boolean) -> resetTouchBehaviors
    908:909:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1461:1465:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1470:1474:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    232:232:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    275:289:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    353:353:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    342:342:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    327:331:void setVisibility(int) -> setVisibility
    357:364:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> setWindowInsets
    3209:3231:void setupForInsets() -> setupForInsets
    322:322:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$1:
    3216:3216:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3220:3220:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    2024:2024:void <init>() -> <init>
    2035:2035:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2162:2162:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2543:2543:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2493:2493:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2403:2403:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2687:2687:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2360:2360:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2443:2443:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener:
    3125:3125:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3130:3131:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3137:3140:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    2778:2773:void <init>(int,int) -> <init>
    2782:2812:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2817:2773:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2821:2773:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2825:2773:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2912:2912:boolean checkAnchorChanged() -> checkAnchorChanged
    3007:3009:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    2923:2926:boolean didBlockInteraction() -> didBlockInteraction
    3032:3040:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    2835:2835:int getAnchorId() -> getAnchorId
    2861:2861:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    2987:2987:boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    2904:2904:android.graphics.Rect getLastChildRect() -> getLastChildRect
    2941:2946:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    2981:2979:boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    2995:2995:void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    2962:2962:void resetNestedScroll(int) -> resetNestedScroll
    2958:2958:void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    3048:3082:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> resolveAnchorView
    2874:2886:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> setBehavior
    2991:2991:void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    2896:2896:void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    2971:2968:void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    3117:3120:boolean shouldDodge(android.view.View,int) -> shouldDodge
    3093:3109:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> verifyAnchorView
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener:
    1953:1953:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    1956:1956:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    3277:3277:void <clinit>() -> <clinit>
    3239:3250:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3255:3255:void <init>(android.os.Parcelable) -> <init>
    3260:3273:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    3278:3278:void <init>() -> <init>
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3281:3281:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3286:3286:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object[] newArray(int) -> newArray
    3291:3291:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
    1964:1964:void <init>() -> <init>
    1964:1964:int compare(java.lang.Object,java.lang.Object) -> compare
    1967:1968:int compare(android.view.View,android.view.View) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    39:44:void <init>() -> <init>
    76:77:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:55:void addNode(java.lang.Object) -> addNode
    143:149:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    174:179:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    205:207:java.util.ArrayList getEmptyList() -> getEmptyList
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    110:116:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    162:170:java.util.ArrayList getSortedList() -> getSortedList
    130:132:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    213:214:void poolList(java.util.ArrayList) -> poolList
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.ViewGroupUtils:
    35:36:void <clinit>() -> <clinit>
    77:78:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    82:92:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:65:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
androidx.core.R$styleable -> androidx.core.R$styleable:
    144:179:void <clinit>() -> <clinit>
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    287:290:void finishAffinity(android.app.Activity) -> finishAffinity
    304:307:void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    169:169:androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> getPermissionCompatDelegate
    411:412:void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    491:505:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    383:387:void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    402:406:void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    548:549:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
    233:236:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    270:274:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    417:418:void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
androidx.core.app.ActivityCompat$1 -> androidx.core.app.ActivityCompat$1:
    505:505:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    508:519:void run() -> run
androidx.core.app.ActivityCompat$SharedElementCallback21Impl -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl:
    572:573:void <init>(androidx.core.app.SharedElementCallback) -> <init>
    603:603:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    609:609:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    597:597:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    592:592:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    586:586:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    579:579:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    616:616:void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1 -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1:
    617:617:void <init>(androidx.core.app.ActivityCompat$SharedElementCallback21Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> <init>
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    175:177:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    75:76:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    105:108:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    121:124:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.BundleCompat$BundleCompatBaseImpl -> androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    48:64:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    71:88:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    46:56:void <init>() -> <init>
    122:126:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    113:117:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    94:94:androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class) -> getExtraData
    99:99:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    75:76:void onCreate(android.os.Bundle) -> onCreate
    82:83:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    69:69:void putExtraData(androidx.core.app.ComponentActivity$ExtraData) -> putExtraData
    108:108:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.ComponentActivity$ExtraData -> androidx.core.app.ComponentActivity$ExtraData:
    133:133:void <init>() -> <init>
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    37:37:void <init>() -> <init>
    72:73:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    43:43:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    49:49:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    62:62:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    56:56:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    68:68:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.JobIntentService -> androidx.core.app.JobIntentService:
    105:106:void <clinit>() -> <clinit>
    416:420:void <init>() -> <init>
    639:648:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    599:603:boolean doStopCurrentWork() -> doStopCurrentWork
    607:613:void ensureProcessorRunningLocked(boolean) -> ensureProcessorRunningLocked
    529:539:androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int) -> getWorkEnqueuer
    465:466:android.os.IBinder onBind(android.content.Intent) -> onBind
    426:434:void onCreate() -> onCreate
    476:481:void onDestroy() -> onDestroy
    444:451:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    618:634:void processorFinished() -> processorFinished
androidx.core.app.JobIntentService$CommandProcessor -> androidx.core.app.JobIntentService$CommandProcessor:
    383:383:void <init>(androidx.core.app.JobIntentService) -> <init>
    383:383:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    390:394:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    383:383:void onCancelled(java.lang.Object) -> onCancelled
    404:404:void onCancelled(java.lang.Void) -> onCancelled
    383:383:void onPostExecute(java.lang.Object) -> onPostExecute
    409:409:void onPostExecute(java.lang.Void) -> onPostExecute
androidx.core.app.JobIntentService$CompatWorkEnqueuer -> androidx.core.app.JobIntentService$CompatWorkEnqueuer:
    163:174:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    224:234:void serviceProcessingFinished() -> serviceProcessingFinished
    210:219:void serviceProcessingStarted() -> serviceProcessingStarted
    201:205:void serviceStartReceived() -> serviceStartReceived
androidx.core.app.JobIntentService$CompatWorkItem -> androidx.core.app.JobIntentService$CompatWorkItem:
    363:365:void <init>(androidx.core.app.JobIntentService,android.content.Intent,int) -> <init>
    376:376:void complete() -> complete
    370:370:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobServiceEngineImpl -> androidx.core.app.JobIntentService$JobServiceEngineImpl:
    275:276:void <init>(androidx.core.app.JobIntentService) -> <init>
    281:281:android.os.IBinder compatGetBinder() -> compatGetBinder
    311:316:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    287:289:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    296:301:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem -> androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem:
    255:256:void <init>(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem) -> <init>
    266:270:void complete() -> complete
    261:261:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobWorkEnqueuer -> androidx.core.app.JobIntentService$JobWorkEnqueuer:
    332:336:void <init>(android.content.Context,android.content.ComponentName,int) -> <init>
androidx.core.app.JobIntentService$WorkEnqueuer -> androidx.core.app.JobIntentService$WorkEnqueuer:
    118:119:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    123:127:void ensureJobId(int) -> ensureJobId
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    129:148:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    168:177:android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    195:204:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:256:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    108:113:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:64:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationCompat -> androidx.core.app.NotificationCompat:
    5041:5044:android.os.Bundle getExtras(android.app.Notification) -> getExtras
androidx.core.app.NotificationCompat$Action -> androidx.core.app.NotificationCompat$Action:
<<<<<<< HEAD
=======
    3157:3157:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3163:3172:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    3184:3184:android.app.PendingIntent getActionIntent() -> getActionIntent
    3199:3199:boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
    3233:3233:androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    3191:3191:android.os.Bundle getExtras() -> getExtras
    3176:3176:int getIcon() -> getIcon
    3208:3208:androidx.core.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    3219:3219:int getSemanticAction() -> getSemanticAction
    3241:3241:boolean getShowsUserInterface() -> getShowsUserInterface
    3180:3180:java.lang.CharSequence getTitle() -> getTitle
androidx.core.app.NotificationCompat$Builder -> androidx.core.app.NotificationCompat$Builder:
    734:742:void <init>(android.content.Context,java.lang.String) -> <init>
    751:751:void <init>(android.content.Context) -> <init>
<<<<<<< HEAD
    1585:1585:android.app.Notification build() -> build
    1332:1335:android.os.Bundle getExtras() -> getExtras
    1590:1591:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    1139:1139:androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    898:898:androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    911:911:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    828:828:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    820:820:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    1177:1179:androidx.core.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    1186:1188:void setFlag(int,boolean) -> setFlag
    1095:1095:androidx.core.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    1128:1128:androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    888:890:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    796:796:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
=======
    1355:1355:androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    1374:1374:androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    1295:1298:androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    1390:1390:androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addInvisibleAction
    1403:1403:androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action) -> addInvisibleAction
    1237:1237:androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    1585:1585:android.app.Notification build() -> build
    1568:1568:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender) -> extend
    1609:1609:android.widget.RemoteViews getBigContentView() -> getBigContentView
    1647:1647:int getColor() -> getColor
    1601:1601:android.widget.RemoteViews getContentView() -> getContentView
    1332:1335:android.os.Bundle getExtras() -> getExtras
    1617:1617:android.widget.RemoteViews getHeadsUpContentView() -> getHeadsUpContentView
    1577:1577:android.app.Notification getNotification() -> getNotification
    1637:1637:int getPriority() -> getPriority
    1627:1627:long getWhenIfShowing() -> getWhenIfShowing
    1590:1591:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    986:1002:android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap) -> reduceLargeIconSize
    1139:1139:androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    1544:1544:androidx.core.app.NotificationCompat$Builder setBadgeIconType(int) -> setBadgeIconType
    1162:1162:androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    1505:1505:androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String) -> setChannelId
    1433:1433:androidx.core.app.NotificationCompat$Builder setColor(int) -> setColor
    1118:1119:androidx.core.app.NotificationCompat$Builder setColorized(boolean) -> setColorized
    898:898:androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    879:879:androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    911:911:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    828:828:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    820:820:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    1482:1482:androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews) -> setCustomBigContentView
    1469:1469:androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews) -> setCustomContentView
    1495:1495:androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews) -> setCustomHeadsUpContentView
    1177:1179:androidx.core.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    923:923:androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    1317:1317:androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    1186:1188:void setFlag(int,boolean) -> setFlag
    946:947:androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    1253:1253:androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    1559:1559:androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int) -> setGroupAlertBehavior
    1265:1265:androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    977:977:androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    1074:1078:androidx.core.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    1150:1150:androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    871:871:androidx.core.app.NotificationCompat$Builder setNumber(int) -> setNumber
    1095:1095:androidx.core.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    1128:1128:androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    1210:1210:androidx.core.app.NotificationCompat$Builder setPriority(int) -> setPriority
    888:890:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    1458:1458:androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    861:861:androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[]) -> setRemoteInputHistory
    1530:1530:androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String) -> setShortcutId
    768:768:androidx.core.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    796:796:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    811:812:androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    1282:1282:androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    1018:1024:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    1041:1047:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    1416:1419:androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style) -> setStyle
    842:842:androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    957:957:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    968:969:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    1514:1514:androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long) -> setTimeoutAfter
    784:784:androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    1064:1064:androidx.core.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    1445:1445:androidx.core.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    759:759:androidx.core.app.NotificationCompat$Builder setWhen(long) -> setWhen
>>>>>>> rename package name,fix action event info list same time crash
androidx.core.app.NotificationCompatBuilder -> androidx.core.app.NotificationCompatBuilder:
    62:205:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    255:287:void addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    216:247:android.app.Notification build() -> build
    293:413:android.app.Notification buildInternal() -> buildInternal
    418:421:void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
androidx.core.app.NotificationCompatJellybean -> androidx.core.app.NotificationCompatJellybean:
    58:62:void <clinit>() -> <clinit>
    73:79:android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    249:264:android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action) -> getBundleForAction
    90:118:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    286:287:android.os.Bundle toBundle(androidx.core.app.RemoteInput) -> toBundle
    319:321:android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[]) -> toBundleArray
    141:151:android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action) -> writeActionAndGetExtras
androidx.core.app.NotificationCompatSideChannelService -> androidx.core.app.NotificationCompatSideChannelService:
    45:45:void <init>() -> <init>
    114:119:void checkPermission(int,java.lang.String) -> checkPermission
    48:54:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    75:75:void <init>(androidx.core.app.NotificationCompatSideChannelService) -> <init>
    92:97:void cancel(java.lang.String,int,java.lang.String) -> cancel
    103:108:void cancelAll(java.lang.String) -> cancelAll
    81:86:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
androidx.core.app.RemoteInput -> androidx.core.app.RemoteInput:
    433:435:android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[]) -> fromCompat
    442:442:android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput) -> fromCompat
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    82:83:void <init>(android.content.Context) -> <init>
    121:121:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    139:146:androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    160:175:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    201:210:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    256:256:java.util.Iterator iterator() -> iterator
    268:268:void startActivities() -> startActivities
    283:284:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    150:150:void <clinit>() -> <clinit>
    544:541:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    522:525:int getColor(android.content.Context,int) -> getColor
    500:503:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    462:478:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    430:433:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    377:380:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    220:223:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    340:360:void <clinit>() -> <clinit>
    339:339:void <init>() -> <init>
    382:386:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    815:817:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    824:825:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    830:831:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    541:542:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    575:589:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    493:498:java.lang.String getType(android.net.Uri) -> getType
    417:418:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    513:513:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    790:808:int modeToMode(java.lang.String) -> modeToMode
    564:566:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    601:608:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    454:477:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    523:523:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    695:696:void <init>(java.lang.String) -> <init>
    704:705:void addRoot(java.lang.String,java.io.File) -> addRoot
    759:767:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    723:725:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    97:114:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:134:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    65:74:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    92:95:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    107:169:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    181:181:int modulateColorAlpha(int,float) -> modulateColorAlpha
    174:175:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    61:64:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:160:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:142:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    109:114:boolean onStateChanged(int[]) -> onStateChanged
    90:90:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    230:235:int getType(android.content.res.TypedArray,int) -> getType
    168:174:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    247:270:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    181:186:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    193:225:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    285:313:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    320:320:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    276:278:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    153:154:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    158:158:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    113:119:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    123:123:java.lang.String getFileName() -> getFileName
    143:143:int getResourceId() -> getResourceId
    139:139:int getTtcIndex() -> getTtcIndex
    135:135:java.lang.String getVariationSettings() -> getVariationSettings
    127:127:int getWeight() -> getWeight
    131:131:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    82:85:void <init>(androidx.core.provider.FontRequest,int,int) -> <init>
    93:93:int getFetchStrategy() -> getFetchStrategy
    89:89:androidx.core.provider.FontRequest getRequest() -> getRequest
    97:97:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
    195:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    90:93:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:185:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    209:204:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
    217:223:void <init>(java.util.List,java.util.List) -> <init>
    227:229:void <init>(int,int) -> <init>
    232:234:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    43:49:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    59:64:int[] append(int[],int,int) -> append
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    81:84:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    204:207:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    295:301:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    313:316:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    336:342:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
    356:358:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    214:214:void <init>() -> <init>
    264:266:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    245:247:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$1:
    247:247:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    250:250:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$2:
    266:266:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    269:269:void run() -> run
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    86:90:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    121:125:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    139:153:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    69:73:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    103:107:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    166:170:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    184:188:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    57:57:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    216:218:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    200:204:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    136:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    366:366:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    189:189:void addNode(java.util.ArrayList,char,float[]) -> addNode
    141:146:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    58:56:float[] copyOfRange(float[],int,int) -> copyOfRange
    98:113:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    74:80:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    124:126:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    259:298:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    210:211:float[] getFloats(java.lang.String) -> getFloats
    173:174:int nextStart(java.lang.String,int) -> nextStart
    162:165:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
    198:198:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    320:322:void <init>(char,float[]) -> <init>
    325:327:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    366:609:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    717:747:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    624:686:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    356:357:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    337:341:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    49:66:void <clinit>() -> <clinit>
    155:155:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    104:128:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    140:144:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    89:89:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    77:77:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    46:46:void <init>() -> <init>
    66:82:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    51:54:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:87:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    156:167:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    134:150:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:98:boolean isUsable() -> isUsable
    103:105:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    75:108:void <init>() -> <init>
    196:198:void abortCreation(java.lang.Object) -> abortCreation
    140:145:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    156:160:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    170:175:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    206:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    228:274:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    284:297:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    184:187:boolean freeze(java.lang.Object) -> freeze
    115:119:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:129:java.lang.Object newFamily() -> newFamily
    331:331:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    315:315:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    321:321:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    336:339:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    306:306:java.lang.Class obtainFontFamily() -> obtainFontFamily
    310:310:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    327:327:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    51:56:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    63:66:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    42:42:void <init>() -> <init>
    140:144:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    108:119:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    86:101:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    154:169:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    124:124:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    58:60:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    71:71:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    71:71:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    71:71:int getWeight(java.lang.Object) -> getWeight
    74:74:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    71:71:boolean isItalic(java.lang.Object) -> isItalic
    79:79:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> androidx.core.graphics.TypefaceCompatBaseImpl$2:
    124:124:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    124:124:int getWeight(java.lang.Object) -> getWeight
    127:127:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    124:124:boolean isItalic(java.lang.Object) -> isItalic
    132:132:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    172:172:void closeQuietly(java.io.Closeable) -> closeQuietly
    119:129:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    138:152:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    162:165:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    63:67:java.io.File getTempFile(android.content.Context) -> getTempFile
    83:87:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    98:108:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    188:189:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    197:198:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    221:250:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    177:178:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    210:211:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    391:410:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    268:271:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    95:96:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:62:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:79:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:111:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:124:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:374:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:138:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:152:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:166:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:335:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:316:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    176:176:void <clinit>() -> <clinit>
    307:177:void <init>() -> <init>
    356:360:int getResId() -> getResId
    945:951:int getResId(android.graphics.drawable.Icon) -> getResId
    338:342:java.lang.String getResPackage() -> getResPackage
    916:922:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    757:763:void onPostParceling() -> onPostParceling
    721:726:void onPreParceling(boolean) -> onPreParceling
    680:716:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    9:9:void <init>() -> <init>
    11:19:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    24:32:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.WrappedDrawableApi14:
    41:41:void <clinit>() -> <clinit>
    52:54:void <init>(androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    62:65:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    103:105:int getChangingConfigurations() -> getChangingConfigurations
    210:212:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    322:322:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    251:251:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    130:133:boolean isStateful() -> isStateful
    81:81:void jumpToCurrentState() -> jumpToCurrentState
    220:228:android.graphics.drawable.Drawable mutate() -> mutate
    243:243:androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
    91:92:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    272:272:boolean onLevelChange(int) -> onLevelChange
    259:259:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:120:void setAlpha(int) -> setAlpha
    198:198:void setAutoMirrored(boolean) -> setAutoMirrored
    98:98:void setChangingConfigurations(int) -> setChangingConfigurations
    125:125:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:110:void setDither(boolean) -> setDither
    115:115:void setFilterBitmap(boolean) -> setFilterBitmap
    138:139:boolean setState(int[]) -> setState
    277:277:void setTint(int) -> setTint
    282:283:void setTintList(android.content.res.ColorStateList) -> setTintList
    288:289:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    330:348:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    267:267:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:75:void updateLocalState(android.content.res.Resources) -> updateLocalState
    293:312:boolean updateTint(int[]) -> updateTint
androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState -> androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState:
    363:368:void <init>(androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    389:389:boolean canConstantState() -> canConstantState
    384:385:int getChangingConfigurations() -> getChangingConfigurations
    375:375:android.graphics.drawable.Drawable newDrawable() -> newDrawable
androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperStateBase -> androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperStateBase:
    396:396:void <init>(androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    402:402:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.WrappedDrawableApi21:
    44:45:void <init>(android.graphics.drawable.Drawable) -> <init>
    49:50:void <init>(androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    160:164:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    71:71:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    65:65:void getOutline(android.graphics.Outline) -> getOutline
    114:116:boolean isCompatTintEnabled() -> isCompatTintEnabled
    143:143:androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
    55:55:void setHotspot(float,float) -> setHotspot
    60:60:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    103:106:boolean setState(int[]) -> setState
    85:88:void setTint(int) -> setTint
    76:79:void setTintList(android.content.res.ColorStateList) -> setTintList
    94:97:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableApi21$DrawableWrapperStateLollipop -> androidx.core.graphics.drawable.WrappedDrawableApi21$DrawableWrapperStateLollipop:
    149:149:void <init>(androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    155:155:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.net.ConnectivityManagerCompat -> androidx.core.net.ConnectivityManagerCompat:
    99:108:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
androidx.core.os.EnvironmentCompat -> androidx.core.os.EnvironmentCompat:
    55:68:java.lang.String getStorageState(java.io.File) -> getStorageState
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    44:45:void beginSection(java.lang.String) -> beginSection
    57:58:void endSection() -> endSection
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    56:63:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    125:125:java.util.List getCertificates() -> getCertificates
    137:137:int getCertificatesArrayResId() -> getCertificatesArrayResId
    143:143:java.lang.String getIdentifier() -> getIdentifier
    95:95:java.lang.String getProviderAuthority() -> getProviderAuthority
    104:104:java.lang.String getProviderPackage() -> getProviderPackage
    113:113:java.lang.String getQuery() -> getQuery
    148:167:java.lang.String toString() -> toString
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    174:776:void <clinit>() -> <clinit>
    805:807:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    793:797:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    720:727:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    769:773:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    816:870:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> getFontFromProvider
    186:188:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int) -> getFontInternal
    234:303:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> getFontSync
    736:739:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    681:696:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
androidx.core.provider.FontsContractCompat$1 -> androidx.core.provider.FontsContractCompat$1:
    256:256:void <init>(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String) -> <init>
    256:256:java.lang.Object call() -> call
    259:261:androidx.core.provider.FontsContractCompat$TypefaceResult call() -> call
androidx.core.provider.FontsContractCompat$2 -> androidx.core.provider.FontsContractCompat$2:
    275:275:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> <init>
    275:275:void onReply(java.lang.Object) -> onReply
    279:284:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$3 -> androidx.core.provider.FontsContractCompat$3:
    304:304:void <init>(java.lang.String) -> <init>
    304:304:void onReply(java.lang.Object) -> onReply
    308:314:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$5 -> androidx.core.provider.FontsContractCompat$5:
    776:776:void <init>() -> <init>
    776:776:int compare(java.lang.Object,java.lang.Object) -> compare
    779:784:int compare(byte[],byte[]) -> compare
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    428:430:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    438:438:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    434:434:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    347:352:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    389:389:int getResultCode() -> getResultCode
    366:366:int getTtcIndex() -> getTtcIndex
    359:359:android.net.Uri getUri() -> getUri
    373:373:int getWeight() -> getWeight
    380:380:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$TypefaceResult -> androidx.core.provider.FontsContractCompat$TypefaceResult:
    213:215:void <init>(android.graphics.Typeface,int) -> <init>
androidx.core.provider.SelfDestructiveThread -> androidx.core.provider.SelfDestructiveThread:
    79:83:void <init>(java.lang.String,int,int) -> <init>
    223:232:void onDestruction() -> onDestruction
    214:219:void onInvokeRunnable(java.lang.Runnable) -> onInvokeRunnable
    107:116:void post(java.lang.Runnable) -> post
    136:137:void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    166:209:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
androidx.core.provider.SelfDestructiveThread$1 -> androidx.core.provider.SelfDestructiveThread$1:
    58:58:void <init>(androidx.core.provider.SelfDestructiveThread) -> <init>
    61:66:boolean handleMessage(android.os.Message) -> handleMessage
androidx.core.provider.SelfDestructiveThread$2 -> androidx.core.provider.SelfDestructiveThread$2:
    137:137:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    142:147:void run() -> run
androidx.core.provider.SelfDestructiveThread$2$1 -> androidx.core.provider.SelfDestructiveThread$2$1:
    147:147:void <init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    150:150:void run() -> run
androidx.core.provider.SelfDestructiveThread$3 -> androidx.core.provider.SelfDestructiveThread$3:
    171:171:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    175:184:void run() -> run
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
    85:222:void <clinit>() -> <clinit>
    262:265:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:306:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markAfter
    328:334:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markBefore
    412:426:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
    139:140:void <init>() -> <init>
    205:209:androidx.core.text.BidiFormatter build() -> build
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:169:void initialize(boolean) -> initialize
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
    584:586:void <clinit>() -> <clinit>
    628:631:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:859:byte dirTypeBackward() -> dirTypeBackward
    816:829:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:707:int getEntryDir() -> getEntryDir
    744:748:int getExitDir() -> getExitDir
    944:955:byte skipEntityBackward() -> skipEntityBackward
    929:929:byte skipEntityForward() -> skipEntityForward
    901:919:byte skipTagBackward() -> skipTagBackward
    872:887:byte skipTagForward() -> skipTagForward
androidx.core.text.ICUCompat -> androidx.core.text.ICUCompat:
    35:58:void <clinit>() -> <clinit>
    125:133:java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
    110:116:java.lang.String getScript(java.lang.String) -> getScript
    88:101:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    72:73:void <clinit>() -> <clinit>
    723:723:char charAt(int) -> charAt
    512:512:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    698:698:int getSpanEnd(java.lang.Object) -> getSpanEnd
    703:703:int getSpanFlags(java.lang.Object) -> getSpanFlags
    693:693:int getSpanStart(java.lang.Object) -> getSpanStart
    688:688:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    718:718:int length() -> length
    708:708:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    674:675:void removeSpan(java.lang.Object) -> removeSpan
    662:663:void setSpan(java.lang.Object,int,int,int) -> setSpan
    728:728:java.lang.CharSequence subSequence(int,int) -> subSequence
    733:733:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    195:200:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    204:209:void <init>(android.text.PrecomputedText$Params) -> <init>
    330:338:boolean equals(java.lang.Object) -> equals
    266:313:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    243:243:int getBreakStrategy() -> getBreakStrategy
    255:255:int getHyphenationFrequency() -> getHyphenationFrequency
    231:231:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    218:218:android.text.TextPaint getTextPaint() -> getTextPaint
    347:366:int hashCode() -> hashCode
    374:395:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    115:126:void <init>(android.text.TextPaint) -> <init>
    190:190:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    144:144:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    162:162:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    180:180:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
    235:236:void <clinit>() -> <clinit>
    231:232:void <init>(boolean) -> <init>
    208:226:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
    193:193:void <clinit>() -> <clinit>
    190:190:void <init>() -> <init>
    185:185:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    114:115:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:146:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    130:131:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    156:157:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    254:254:void <clinit>() -> <clinit>
    245:245:void <init>() -> <init>
    250:250:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    33:33:void <clinit>() -> <clinit>
    119:119:int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    90:100:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
    33:45:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.LogWriter -> androidx.core.util.LogWriter:
    43:44:void <init>(java.lang.String) -> <init>
    48:48:void close() -> close
    52:52:void flush() -> flush
    68:70:void flushBuilder() -> flushBuilder
    57:62:void write(char[],int,int) -> write
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    50:53:boolean equals(java.lang.Object,java.lang.Object) -> equals
    92:95:int hash(java.lang.Object[]) -> hash
androidx.core.util.Pair -> androidx.core.util.Pair:
    37:39:void <init>(java.lang.Object,java.lang.Object) -> <init>
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    71:71:java.lang.String toString() -> toString
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:96:void <init>(int) -> <init>
    104:108:java.lang.Object acquire() -> acquire
    128:129:boolean isInPool(java.lang.Object) -> isInPool
    116:117:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    153:143:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    189:189:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    99:99:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    116:116:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
androidx.core.util.TimeUtils -> androidx.core.util.TimeUtils:
    40:41:void <clinit>() -> <clinit>
    163:166:void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    172:172:void formatDuration(long,java.io.PrintWriter) -> formatDuration
    179:182:void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
    81:147:int formatDurationLocked(long,int) -> formatDurationLocked
    61:74:int printField(char[],int,char,int,boolean,int) -> printField
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    110:110:void <clinit>() -> <clinit>
    117:118:void <init>() -> <init>
    186:186:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    288:291:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    125:125:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    226:226:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    245:245:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    206:206:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    270:270:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    314:315:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    143:143:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    165:165:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    52:53:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    59:59:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    98:101:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    64:64:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:70:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    76:76:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    82:82:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    106:106:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    87:87:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    92:92:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    139:140:void <init>(android.content.Context) -> <init>
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    312:313:void reset() -> reset
    289:289:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    299:304:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    279:280:void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    64:67:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    145:146:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    96:106:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:137:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:173:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    83:92:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:153:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    71:86:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    139:149:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    61:64:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:45:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    99:102:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    207:211:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    463:466:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:325:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:506:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:537:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:421:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    351:354:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    488:488:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    477:477:int getActionIndex(android.view.MotionEvent) -> getActionIndex
    499:499:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    510:510:float getX(android.view.MotionEvent,int) -> getX
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:57:void <init>(android.view.View) -> <init>
    327:330:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    347:350:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    264:264:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    278:308:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    220:241:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    387:385:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:73:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    398:395:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:161:boolean startNestedScroll(int,int) -> startNestedScroll
    175:175:void stopNestedScroll() -> stopNestedScroll
    186:189:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:51:void <init>(android.view.ViewGroup) -> <init>
    89:89:int getNestedScrollAxes() -> getNestedScrollAxes
    64:64:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    77:77:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    100:100:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    111:111:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.PointerIconCompat -> androidx.core.view.PointerIconCompat:
    107:108:void <init>(java.lang.Object) -> <init>
    116:116:java.lang.Object getPointerIcon() -> getPointerIcon
    130:133:androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> getSystemIcon
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    452:468:void <clinit>() -> <clinit>
    1754:1760:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    2995:3001:void compatOffsetLeftAndRight(android.view.View,int) -> compatOffsetLeftAndRight
    2947:2953:void compatOffsetTopAndBottom(android.view.View,int) -> compatOffsetTopAndBottom
    2259:2265:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    3505:3508:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    3497:3500:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    1475:1476:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    2355:2359:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2400:2404:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3039:3040:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3160:3166:android.view.Display getDisplay(android.view.View) -> getDisplay
    2038:2039:float getElevation(android.view.View) -> getElevation
    473:481:android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    2164:2165:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    999:1000:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    730:731:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1297:1298:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1720:1736:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1686:1702:int getMinimumWidth(android.view.View) -> getMinimumWidth
    1542:1545:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1526:1529:int getPaddingStart(android.view.View) -> getPaddingStart
    1335:1338:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    2095:2101:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2108:2109:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    2886:2887:float getZ(android.view.View) -> getZ
    856:872:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3061:3062:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2315:2316:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    886:887:boolean hasTransientState(android.view.View) -> hasTransientState
    3049:3052:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    2855:2858:boolean isLaidOut(android.view.View) -> isLaidOut
    2479:2483:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    2328:2329:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    2964:2990:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    2916:2942:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2234:2240:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    650:650:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1099:1100:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    915:918:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    937:940:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    955:958:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    977:980:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    2119:2122:void requestApplyInsets(android.view.View) -> requestApplyInsets
    676:676:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    1511:1512:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    2341:2344:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2371:2388:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2418:2435:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    3024:3025:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2027:2028:void setElevation(android.view.View,float) -> setElevation
    2180:2180:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    900:901:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1026:1036:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    774:775:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    1274:1281:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    2203:2209:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1563:1566:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    3142:3143:void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat) -> setPointerIcon
    3113:3114:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    2073:2079:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    2520:2523:void stopNestedScroll(android.view.View) -> stopNestedScroll
    2665:2668:void stopNestedScroll(android.view.View,int) -> stopNestedScroll
    3007:3009:void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    2209:2209:void <init>(androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    2212:2214:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    3515:3515:void <clinit>() -> <clinit>
    3511:3530:void <init>() -> <init>
    3540:3544:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    3550:3561:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    3569:3583:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    3533:3536:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    3628:3633:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    3595:3618:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    3668:3692:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    39:44:void <clinit>() -> <clinit>
    106:117:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    57:57:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    157:163:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    379:387:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    416:424:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    339:352:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    294:309:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int) -> onNestedScroll
    217:231:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    176:190:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    251:264:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
    63:63:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    37:38:void <init>(android.view.View) -> <init>
    137:138:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    463:464:void cancel() -> cancel
    236:237:long getDuration() -> getDuration
    122:123:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    253:254:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    727:732:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    740:757:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    285:286:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    774:785:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    643:644:void start() -> start
    182:183:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    740:740:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    743:743:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    748:748:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    753:753:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$2:
    778:778:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    781:781:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    45:46:void <init>(androidx.core.view.ViewPropertyAnimatorCompat) -> <init>
    100:106:void onAnimationCancel(android.view.View) -> onAnimationCancel
    74:94:void onAnimationEnd(android.view.View) -> onAnimationEnd
    52:68:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    35:36:void <init>(java.lang.Object) -> <init>
    195:196:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    380:384:boolean equals(java.lang.Object) -> equals
    113:114:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    62:63:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    96:97:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    79:80:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    130:131:boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    389:389:int hashCode() -> hashCode
    164:165:boolean isConsumed() -> isConsumed
    213:215:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    397:397:java.lang.Object unwrap(androidx.core.view.WindowInsetsCompat) -> unwrap
    393:393:androidx.core.view.WindowInsetsCompat wrap(java.lang.Object) -> wrap
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    283:284:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    264:265:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityManagerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat:
    165:169:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    184:188:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
    201:202:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    215:220:boolean equals(java.lang.Object) -> equals
    207:207:int hashCode() -> hashCode
    225:225:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1319:1320:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1610:1610:void addAction(int) -> addAction
    1625:1626:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1522:1522:void addChild(android.view.View) -> addChild
    1540:1541:void addChild(android.view.View,int) -> addChild
    3425:3433:boolean equals(java.lang.Object) -> equals
    1595:1595:int getActions() -> getActions
    1805:1805:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    1829:1829:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1490:1490:int getChildCount() -> getChildCount
    2212:2212:java.lang.CharSequence getClassName() -> getClassName
    2260:2260:java.lang.CharSequence getContentDescription() -> getContentDescription
    2823:2826:android.os.Bundle getExtras() -> getExtras
    1713:1714:int getMovementGranularities() -> getMovementGranularities
    2188:2188:java.lang.CharSequence getPackageName() -> getPackageName
    2236:2236:java.lang.CharSequence getText() -> getText
    2319:2320:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    3414:3414:int hashCode() -> hashCode
    1980:1981:boolean isAccessibilityFocused() -> isAccessibilityFocused
    1853:1853:boolean isCheckable() -> isCheckable
    1877:1877:boolean isChecked() -> isChecked
    2035:2035:boolean isClickable() -> isClickable
    2083:2083:boolean isEnabled() -> isEnabled
    1901:1901:boolean isFocusable() -> isFocusable
    1925:1925:boolean isFocused() -> isFocused
    2059:2059:boolean isLongClickable() -> isLongClickable
    2107:2107:boolean isPassword() -> isPassword
    2131:2131:boolean isScrollable() -> isScrollable
    2011:2011:boolean isSelected() -> isSelected
    1949:1950:boolean isVisibleToUser() -> isVisibleToUser
    1358:1358:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1386:1386:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1397:1397:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    2286:2286:void recycle() -> recycle
    1645:1646:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    2000:2001:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    3484:3489:void setBooleanProperty(int,boolean) -> setBooleanProperty
    1820:1820:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    1844:1844:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    2769:2770:void setCanOpenPopup(boolean) -> setCanOpenPopup
    1868:1868:void setCheckable(boolean) -> setCheckable
    1892:1892:void setChecked(boolean) -> setChecked
    2227:2227:void setClassName(java.lang.CharSequence) -> setClassName
    2050:2050:void setClickable(boolean) -> setClickable
    2423:2424:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    2432:2433:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2275:2275:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    2522:2523:void setContentInvalid(boolean) -> setContentInvalid
    3109:3110:void setDismissable(boolean) -> setDismissable
    2098:2098:void setEnabled(boolean) -> setEnabled
    2620:2621:void setError(java.lang.CharSequence) -> setError
    1916:1916:void setFocusable(boolean) -> setFocusable
    1940:1940:void setFocused(boolean) -> setFocused
    2599:2602:void setHintText(java.lang.CharSequence) -> setHintText
    2074:2074:void setLongClickable(boolean) -> setLongClickable
    1702:1703:void setMovementGranularities(int) -> setMovementGranularities
    2203:2203:void setPackageName(java.lang.CharSequence) -> setPackageName
    1770:1770:void setParent(android.view.View) -> setParent
    1793:1795:void setParent(android.view.View,int) -> setParent
    2146:2146:void setScrollable(boolean) -> setScrollable
    2026:2026:void setSelected(boolean) -> setSelected
    3310:3313:void setShowingHintText(boolean) -> setShowingHintText
    1406:1406:void setSource(android.view.View) -> setSource
    1429:1430:void setSource(android.view.View,int) -> setSource
    2251:2251:void setText(java.lang.CharSequence) -> setText
    1969:1970:void setVisibleToUser(boolean) -> setVisibleToUser
    3441:3480:java.lang.String toString() -> toString
    1337:1337:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1330:1330:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    49:441:void <clinit>() -> <clinit>
    454:454:void <init>(int,java.lang.CharSequence) -> <init>
    458:459:void <init>(java.lang.Object) -> <init>
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    560:561:void <init>(java.lang.Object) -> <init>
    530:537:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    684:685:void <init>(java.lang.Object) -> <init>
    651:658:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    104:110:void <init>() -> <init>
    120:121:void <init>(java.lang.Object) -> <init>
    128:128:java.lang.Object getProvider() -> getProvider
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    38:39:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    44:49:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    56:65:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    73:73:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    80:80:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    85:89:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    506:507:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    556:557:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    137:138:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    210:225:void <init>(android.view.View) -> <init>
    687:691:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    638:645:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:543:void requestStop() -> requestStop
    420:420:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:359:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:240:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:403:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:297:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:316:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:452:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:436:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:380:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:338:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:529:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:761:void <init>() -> <init>
    831:832:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:804:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    795:796:boolean isFinished() -> isFinished
    788:791:void requestStop() -> requestStop
    769:769:void setRampDownDuration(int) -> setRampDownDuration
    765:765:void setRampUpDuration(int) -> setRampUpDuration
    852:853:void setTargetVelocity(float,float) -> setTargetVelocity
    776:781:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:695:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:711:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    39:39:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    123:142:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    57:60:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:96:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.ContentLoadingProgressBar -> androidx.core.widget.ContentLoadingProgressBar:
    68:68:void <init>(android.content.Context) -> <init>
    72:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    77:78:void onAttachedToWindow() -> onAttachedToWindow
    83:84:void onDetachedFromWindow() -> onDetachedFromWindow
    88:89:void removeCallbacks() -> removeCallbacks
androidx.core.widget.ContentLoadingProgressBar$1 -> androidx.core.widget.ContentLoadingProgressBar$1:
    45:45:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    49:51:void run() -> run
androidx.core.widget.ContentLoadingProgressBar$2 -> androidx.core.widget.ContentLoadingProgressBar$2:
    55:55:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    59:62:void run() -> run
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    152:155:void onPull(android.widget.EdgeEffect,float,float) -> onPull
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    37:41:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    76:80:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:67:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    90:107:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:35:void <init>(android.widget.ListView) -> <init>
    51:73:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:40:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    67:85:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    37:53:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    175:177:void <clinit>() -> <clinit>
    189:189:void <init>(android.content.Context) -> <init>
    193:193:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:214:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    443:444:void addView(android.view.View) -> addView
    452:453:void addView(android.view.View,int) -> addView
    461:462:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    470:471:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1286:1330:boolean arrowScroll(int) -> arrowScroll
    494:498:boolean canScroll() -> canScroll
    1472:1472:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1465:1465:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1458:1458:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1507:1552:void computeScroll() -> computeScroll
    1604:1663:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1451:1451:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1444:1444:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1420:1430:int computeVerticalScrollRange() -> computeVerticalScrollRange
    592:592:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    288:288:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    293:293:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    244:244:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    283:283:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    237:237:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    277:277:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1362:1365:void doScrollY(int) -> doScrollY
    1888:1932:void draw(android.graphics.Canvas) -> draw
    1839:1846:void endDrag() -> endDrag
    1874:1882:void ensureGlows() -> ensureGlows
    604:626:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1107:1140:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    1816:1824:void fling(int) -> fling
    1829:1834:void flingWithNestedDispatch(int) -> flingWithNestedDispatch
    1223:1238:boolean fullScroll(int) -> fullScroll
    406:414:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    427:427:int getMaxScrollAmount() -> getMaxScrollAmount
    379:379:int getNestedScrollAxes() -> getNestedScrollAxes
    1080:1085:int getScrollRange() -> getScrollRange
    391:396:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1000:1011:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    231:231:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    271:271:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    646:652:boolean inChild(int,int) -> inChild
    658:661:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    431:438:void initScrollView() -> initScrollView
    666:667:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    256:256:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1340:1340:boolean isOffScreen(android.view.View) -> isOffScreen
    1804:1805:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1348:1352:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1478:1488:void measureChild(android.view.View,int,int) -> measureChild
    1494:1502:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1771:1773:void onAttachedToWindow() -> onAttachedToWindow
    972:988:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    699:794:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1733:1766:void onLayout(boolean,int,int,int,int) -> onLayout
    556:584:void onMeasure(int,int) -> onMeasure
    366:366:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    374:374:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    331:331:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    360:360:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    320:324:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    354:354:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    307:308:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    343:343:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1017:1017:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1700:1712:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1969:1977:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1982:1984:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    547:550:void onScrollChanged(int,int,int,int) -> onScrollChanged
    955:965:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1778:1792:void onSizeChanged(int,int,int,int) -> onSizeChanged
    338:338:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    313:314:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    348:348:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    799:950:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1025:1073:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1185:1206:boolean pageScroll(int) -> pageScroll
    672:674:void recycleVelocityTracker() -> recycleVelocityTracker
    1670:1676:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1719:1722:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    681:683:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1727:1728:void requestLayout() -> requestLayout
    1256:1273:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    1858:1868:void scrollTo(int,int) -> scrollTo
    1562:1570:void scrollToChild(android.view.View) -> scrollToChild
    1583:1589:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    524:526:void setFillViewport(boolean) -> setFillViewport
    251:251:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    487:487:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    542:542:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    1377:1399:void smoothScrollBy(int,int) -> smoothScrollBy
    1409:1409:void smoothScrollTo(int,int) -> smoothScrollTo
    221:221:boolean startNestedScroll(int,int) -> startNestedScroll
    261:261:boolean startNestedScroll(int) -> startNestedScroll
    226:226:void stopNestedScroll(int) -> stopNestedScroll
    266:266:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2027:2027:void <init>() -> <init>
    2084:2092:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2065:2076:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2030:2044:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2013:2013:void <clinit>() -> <clinit>
    1992:1992:void <init>(android.os.Parcelable) -> <init>
    1996:1997:void <init>(android.os.Parcel) -> <init>
    2008:2009:java.lang.String toString() -> toString
    2002:2003:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2014:2014:void <init>() -> <init>
    2014:2014:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2017:2017:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2014:2014:java.lang.Object[] newArray(int) -> newArray
    2022:2022:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    90:106:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:170:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:79:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    293:308:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    766:766:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    776:776:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    224:239:int getMaxLines(android.widget.TextView) -> getMaxLines
    955:969:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    899:933:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    813:825:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    114:117:java.lang.reflect.Field retrieveField(java.lang.String) -> retrieveField
    124:126:int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView) -> retrieveIntFromField
    149:155:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    691:713:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    736:754:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    794:800:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    882:884:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    281:284:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    840:865:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    517:527:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    547:550:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    669:669:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    657:659:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    628:637:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    663:665:boolean isEditable(android.widget.TextView) -> isEditable
    644:651:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    566:566:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    555:555:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    571:571:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    560:561:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    575:622:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    150:151:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    334:336:void changeCursor(android.database.Cursor) -> changeCursor
    216:217:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:288:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:230:java.lang.Object getItem(int) -> getItem
    241:243:long getItemId(int) -> getItemId
    262:263:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    179:198:void init(android.content.Context,android.database.Cursor,int) -> init
    469:471:void onContentChanged() -> onContentChanged
    351:371:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
    476:477:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    487:487:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
    492:492:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:498:void onChanged() -> onChanged
    503:504:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
    39:40:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:58:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:68:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    82:84:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    37:38:void <init>() -> <init>
    46:48:void <init>(android.os.Parcelable) -> <init>
    68:70:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:93:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    100:347:void <clinit>() -> <clinit>
    135:137:void <init>(android.view.View) -> <init>
    998:1001:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1046:1054:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    481:481:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    641:639:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    677:700:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    653:654:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    791:812:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    734:747:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:190:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    218:251:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:433:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:329:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    450:455:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    932:948:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    720:723:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:280:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    660:663:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    755:758:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    899:897:boolean performAction(int,int,android.os.Bundle) -> performAction
    918:914:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    904:904:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    968:983:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1016:1033:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    505:515:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    612:622:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:339:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
    1238:1238:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1245:1247:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1257:1262:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1252:1252:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    243:272:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    334:329:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:178:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:53:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:69:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:84:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    203:228:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    308:299:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    351:345:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    378:372:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    406:400:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    435:427:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
    101:103:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:129:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    332:332:void <clinit>() -> <clinit>
    383:385:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    525:534:void abort() -> abort
    511:516:void cancel() -> cancel
    471:472:void captureChildView(android.view.View,int) -> captureChildView
    1276:1289:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1306:1314:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    1334:1336:boolean checkTouchSlop(int) -> checkTouchSlop
    1359:1374:boolean checkTouchSlop(int,int) -> checkTouchSlop
    670:670:int clampMag(int,int,int) -> clampMag
    687:687:float clampMag(float,float,float) -> clampMag
    790:800:void clearMotionHistory() -> clearMotionHistory
    804:814:void clearMotionHistory(int) -> clearMotionHistory
    642:656:int computeAxisDuration(int,int,int) -> computeAxisDuration
    617:632:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    735:769:boolean continueSettling(boolean) -> continueSettling
    355:355:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    369:370:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    779:785:void dispatchViewReleased(float,float) -> dispatchViewReleased
    696:696:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1426:1440:void dragTo(int,int,int,int) -> dragTo
    818:843:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1487:1491:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    597:612:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    487:487:android.view.View getCapturedView() -> getCapturedView
    459:459:int getEdgeSize() -> getEdgeSize
    1501:1504:int getEdgesTouched(int,int) -> getEdgesTouched
    503:503:int getTouchSlop() -> getTouchSlop
    431:431:int getViewDragState() -> getViewDragState
    1455:1455:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    884:884:boolean isPointerDown(int) -> isPointerDown
    1510:1511:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1471:1474:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1097:1127:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1413:1420:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1256:1271:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    848:852:void saveInitialMotion(float,float,int) -> saveInitialMotion
    856:866:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    888:893:void setDragState(int) -> setDragState
    447:447:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    411:411:void setMinVelocity(float) -> setMinVelocity
    577:578:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    552:559:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    908:914:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    332:332:void <init>() -> <init>
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    340:340:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    343:343:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    152:152:void <init>() -> <init>
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
    104:192:void <clinit>() -> <clinit>
    306:306:void <init>(android.content.Context) -> <init>
    310:310:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    314:366:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    514:517:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> addDrawerListener
    1911:1941:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2057:2075:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1961:1970:void cancelChildViewTouch() -> cancelChildViewTouch
    950:950:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    1901:1901:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1747:1747:void closeDrawer(android.view.View) -> closeDrawer
    1757:1758:void closeDrawer(android.view.View,boolean) -> closeDrawer
    1637:1637:void closeDrawers() -> closeDrawers
    1642:1668:void closeDrawers(boolean) -> closeDrawers
    1309:1320:void computeScroll() -> computeScroll
    1536:1539:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    850:871:void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    878:894:void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    916:921:void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    774:784:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> dispatchTransformedGenericPointerEvent
    1401:1458:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    986:990:android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    955:959:android.view.View findOpenDrawer() -> findOpenDrawer
    1949:1952:android.view.View findVisibleDrawer() -> findVisibleDrawer
    1887:1887:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1892:1892:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1906:1906:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    393:394:float getDrawerElevation() -> getDrawerElevation
    652:659:int getDrawerLockMode(int) -> getDrawerLockMode
    709:710:int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    747:751:java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    945:946:int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    937:937:float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    1350:1350:android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    794:804:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> getTransformedMotionEvent
    1011:1011:java.lang.String gravityToString(int) -> gravityToString
    1325:1327:boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    1875:1878:boolean hasPeekingDrawer() -> hasPeekingDrawer
    1945:1945:boolean hasVisibleDrawer() -> hasVisibleDrawer
    2085:2087:boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    1464:1464:boolean isContentView(android.view.View) -> isContentView
    1819:1820:boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    1468:1469:boolean isDrawerView(android.view.View) -> isDrawerView
    1852:1853:boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    761:765:boolean isInBoundsOfChild(float,float,android.view.View) -> isInBoundsOfChild
    1208:1212:boolean mirror(android.graphics.drawable.Drawable,int) -> mirror
    967:975:void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    1022:1023:void onAttachedToWindow() -> onAttachedToWindow
    1016:1017:void onDetachedFromWindow() -> onDetachedFromWindow
    1383:1394:void onDraw(android.graphics.Canvas) -> onDraw
    1485:1527:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1976:1980:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1986:1992:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1218:1297:void onLayout(boolean,int,int,int,int) -> onLayout
    1029:1053:void onMeasure(int,int) -> onMeasure
    1997:2022:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1378:1378:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2028:2050:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1569:1582:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1678:1678:void openDrawer(android.view.View) -> openDrawer
    1688:1689:void openDrawer(android.view.View,boolean) -> openDrawer
    531:535:void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> removeDrawerListener
    1625:1629:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1302:1303:void requestLayout() -> requestLayout
    1166:1181:android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    1185:1199:android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    1158:1162:void resolveShadowDrawables() -> resolveShadowDrawables
    405:408:void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    376:380:void setDrawerElevation(float) -> setDrawerElevation
    493:501:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    552:553:void setDrawerLockMode(int) -> setDrawerLockMode
    577:609:void setDrawerLockMode(int,int) -> setDrawerLockMode
    635:636:void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    431:447:void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    465:465:void setDrawerShadow(int,int) -> setDrawerShadow
    728:732:void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    927:933:void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    474:475:void setScrimColor(int) -> setScrimColor
    1339:1340:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    1360:1361:void setStatusBarBackground(int) -> setStatusBarBackground
    1372:1373:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    900:909:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    814:843:void updateDrawerState(int,int,android.view.View) -> updateDrawerState
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$1:
    343:343:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    346:348:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate:
    2349:2350:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2426:2430:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    2442:2463:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    2399:2413:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2387:2389:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2354:2382:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2419:2420:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate:
    2467:2467:void <init>() -> <init>
    2471:2477:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$LayoutParams:
    2319:2323:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2327:2313:void <init>(int,int) -> <init>
    2336:2337:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2341:2313:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2345:2313:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    2124:2124:void <clinit>() -> <clinit>
    2102:2107:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2111:2095:void <init>(android.os.Parcelable) -> <init>
    2116:2121:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
    2124:2124:void <init>() -> <init>
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2127:2127:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2132:2132:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object[] newArray(int) -> newArray
    2137:2137:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback:
    2152:2153:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2294:2298:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    2304:2304:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    2203:2206:void closeOtherDrawer() -> closeOtherDrawer
    2289:2289:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    2277:2283:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    2231:2231:void onEdgeTouched(int,int) -> onEdgeTouched
    2196:2199:void onViewCaptured(android.view.View,int) -> onViewCaptured
    2174:2174:void onViewDragStateChanged(int) -> onViewDragStateChanged
    2180:2191:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    2214:2226:void onViewReleased(android.view.View,float,float) -> onViewReleased
    2237:2257:void peekDrawer() -> peekDrawer
    2161:2161:void removeCallbacks() -> removeCallbacks
    2157:2157:void setDragger(androidx.customview.widget.ViewDragHelper) -> setDragger
    2168:2169:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1:
    2146:2146:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2148:2148:void run() -> run
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    332:333:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    379:379:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    385:385:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment) -> add
    391:391:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    370:374:void addOp(androidx.fragment.app.BackStackRecord$Op) -> addOp
    544:545:androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    478:478:androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment) -> attach
    597:607:void bumpBackStackNesting(int) -> bumpBackStackNesting
    637:637:int commit() -> commit
    642:642:int commitAllowingStateLoss() -> commitAllowingStateLoss
    669:669:int commitInternal(boolean) -> commitInternal
<<<<<<< HEAD
=======
    647:648:void commitNow() -> commitNow
>>>>>>> rename package name,fix action event info list same time crash
    653:654:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    471:471:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    560:561:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    396:400:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    251:251:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    256:325:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    755:802:void executeOps() -> executeOps
    814:860:void executePopOps(boolean) -> executePopOps
    888:893:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    698:705:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    1017:1017:java.lang.String getName() -> getName
    711:714:boolean interactsWith(int) -> interactsWith
    726:738:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    1009:1011:boolean isFragmentPostponed(androidx.fragment.app.BackStackRecord$Op) -> isFragmentPostponed
    990:992:boolean isPostponed() -> isPostponed
    450:450:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    434:434:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    444:441:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    627:631:void runOnCommitRunnables() -> runOnCommitRunnables
    1000:1003:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    507:507:androidx.fragment.app.FragmentTransaction setTransition(int) -> setTransition
    235:247:java.lang.String toString() -> toString
    967:972:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackRecord$Op -> androidx.fragment.app.BackStackRecord$Op:
    200:200:void <init>() -> <init>
    203:205:void <init>(int,androidx.fragment.app.Fragment) -> <init>
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    158:158:void <clinit>() -> <clinit>
    48:53:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    79:91:void <init>(android.os.Parcel) -> <init>
    95:133:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl) -> instantiate
    144:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    159:159:void <init>() -> <init>
    159:159:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    162:162:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    159:159:java.lang.Object[] newArray(int) -> newArray
    167:167:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
    101:94:void <init>() -> <init>
    191:191:void dismiss() -> dismiss
<<<<<<< HEAD
    205:224:void dismissInternal(boolean) -> dismissInternal
    230:230:android.app.Dialog getDialog() -> getDialog
=======
    201:201:void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    205:224:void dismissInternal(boolean) -> dismissInternal
    230:230:android.app.Dialog getDialog() -> getDialog
    284:284:boolean getShowsDialog() -> getShowsDialog
    235:235:int getTheme() -> getTheme
    256:256:boolean isCancelable() -> isCancelable
>>>>>>> rename package name,fix action event info list same time crash
    401:425:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    289:293:void onAttach(android.content.Context) -> onAttach
    310:319:void onCreate(android.os.Bundle) -> onCreate
    479:486:void onDestroyView() -> onDestroyView
    299:304:void onDetach() -> onDetach
    390:395:void onDismiss(android.content.DialogInterface) -> onDismiss
    326:338:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    442:462:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    432:436:void onStart() -> onStart
    468:470:void onStop() -> onStop
    248:249:void setCancelable(boolean) -> setCancelable
<<<<<<< HEAD
    347:353:void setupDialog(android.app.Dialog,int) -> setupDialog
    140:144:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
=======
    277:277:void setShowsDialog(boolean) -> setShowsDialog
    119:124:void setStyle(int,int) -> setStyle
    347:353:void setupDialog(android.app.Dialog,int) -> setupDialog
    140:144:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
    157:162:int show(androidx.fragment.app.FragmentTransaction,java.lang.String) -> show
    177:181:void showNow(androidx.fragment.app.FragmentManager,java.lang.String) -> showNow
>>>>>>> rename package name,fix action event info list same time crash
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    87:90:void <clinit>() -> <clinit>
    410:254:void <init>() -> <init>
    2272:2280:void callStartTransitionListener() -> callStartTransitionListener
    2294:2367:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2747:2750:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    525:525:boolean equals(java.lang.Object) -> equals
    2372:2376:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    710:710:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2178:2179:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2203:2204:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    2805:2808:android.view.View getAnimatingAway() -> getAnimatingAway
    2820:2823:android.animation.Animator getAnimator() -> getAnimator
    592:592:android.os.Bundle getArguments() -> getArguments
    844:856:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    683:683:android.content.Context getContext() -> getContext
    1961:1964:java.lang.Object getEnterTransition() -> getEnterTransition
    2791:2794:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2040:2043:java.lang.Object getExitTransition() -> getExitTransition
    2798:2801:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    812:812:androidx.fragment.app.FragmentManager getFragmentManager() -> getFragmentManager
<<<<<<< HEAD
=======
    737:737:java.lang.Object getHost() -> getHost
    561:561:int getId() -> getId
    1292:1293:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
>>>>>>> rename package name,fix action event info list same time crash
    1326:1327:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    258:258:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    1065:1065:androidx.loader.app.LoaderManager getLoaderManager() -> getLoaderManager
    2754:2757:int getNextAnim() -> getNextAnim
    2768:2771:int getNextTransition() -> getNextTransition
    2784:2787:int getNextTransitionStyle() -> getNextTransitionStyle
<<<<<<< HEAD
    2078:2081:java.lang.Object getReenterTransition() -> getReenterTransition
    760:760:android.content.res.Resources getResources() -> getResources
=======
    874:874:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    2078:2081:java.lang.Object getReenterTransition() -> getReenterTransition
    760:760:android.content.res.Resources getResources() -> getResources
    982:982:boolean getRetainInstance() -> getRetainInstance
>>>>>>> rename package name,fix action event info list same time crash
    2000:2003:java.lang.Object getReturnTransition() -> getReturnTransition
    2111:2114:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2149:2153:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    2827:2830:int getStateAfterAnimating() -> getStateAfterAnimating
    782:782:java.lang.String getString(int) -> getString
    795:795:java.lang.String getString(int,java.lang.Object[]) -> getString
<<<<<<< HEAD
    1577:1577:android.view.View getView() -> getView
    327:328:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    532:532:int hashCode() -> hashCode
    1743:1759:void initState() -> initState
=======
    569:569:java.lang.String getTag() -> getTag
    666:666:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    673:673:int getTargetRequestCode() -> getTargetRequestCode
    771:771:java.lang.CharSequence getText(int) -> getText
    1054:1054:boolean getUserVisibleHint() -> getUserVisibleHint
    1577:1577:android.view.View getView() -> getView
    296:297:androidx.lifecycle.LifecycleOwner getViewLifecycleOwner() -> getViewLifecycleOwner
    314:314:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    327:328:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    945:945:boolean hasOptionsMenu() -> hasOptionsMenu
    532:532:int hashCode() -> hashCode
    1743:1759:void initState() -> initState
    418:418:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
>>>>>>> rename package name,fix action event info list same time crash
    437:450:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    2382:2383:void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    881:881:boolean isAdded() -> isAdded
    890:890:boolean isDetached() -> isDetached
    939:939:boolean isHidden() -> isHidden
    2845:2848:boolean isHideReplaced() -> isHideReplaced
    518:518:boolean isInBackStack() -> isInBackStack
<<<<<<< HEAD
=======
    910:910:boolean isInLayout() -> isInLayout
    951:951:boolean isMenuVisible() -> isMenuVisible
>>>>>>> rename package name,fix action event info list same time crash
    2838:2841:boolean isPostponed() -> isPostponed
    899:899:boolean isRemoving() -> isRemoving
    918:918:boolean isResumed() -> isResumed
    604:607:boolean isStateSaved() -> isStateSaved
    480:486:boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
<<<<<<< HEAD
=======
    927:928:boolean isVisible() -> isVisible
>>>>>>> rename package name,fix action event info list same time crash
    2514:2515:void noteStateNotSaved() -> noteStateNotSaved
    1595:1595:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1418:1422:void onAttach(android.content.Context) -> onAttach
    1435:1435:void onAttach(android.app.Activity) -> onAttach
    1679:1679:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1496:1500:void onCreate(android.os.Bundle) -> onCreate
    1865:1865:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1728:1732:void onDestroy() -> onDestroy
    1719:1719:void onDestroyView() -> onDestroyView
    1768:1768:void onDetach() -> onDetach
    1277:1277:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1380:1384:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1397:1397:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1705:1705:void onLowMemory() -> onLowMemory
    1689:1689:void onPause() -> onPause
    1632:1632:void onResume() -> onResume
    1621:1621:void onStart() -> onStart
    1699:1699:void onStop() -> onStop
    1611:1611:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    865:865:androidx.fragment.app.FragmentManager peekChildFragmentManager() -> peekChildFragmentManager
    2455:2462:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2534:2536:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    2601:2606:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2409:2417:void performCreate(android.os.Bundle) -> performCreate
    2558:2564:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2425:2447:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    2692:2701:void performDestroy() -> performDestroy
    2670:2680:void performDestroyView() -> performDestroyView
    2708:2712:void performDetach() -> performDetach
    1308:1310:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    2541:2543:void performLowMemory() -> performLowMemory
    2520:2522:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    2585:2592:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    2615:2620:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    2636:2647:void performPause() -> performPause
    2527:2529:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    2572:2578:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    2492:2500:void performResume() -> performResume
    2626:2630:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    2471:2479:void performStart() -> performStart
    2653:2664:void performStop() -> performStop
<<<<<<< HEAD
    694:696:android.content.Context requireContext() -> requireContext
    1518:1526:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    493:500:void restoreViewState(android.os.Bundle) -> restoreViewState
    2812:2812:void setAnimatingAway(android.view.View) -> setAnimatingAway
    2816:2816:void setAnimator(android.animation.Animator) -> setAnimator
    580:583:void setArguments(android.os.Bundle) -> setArguments
=======
    2238:2238:void postponeEnterTransition() -> postponeEnterTransition
    1879:1879:void registerForContextMenu(android.view.View) -> registerForContextMenu
    1211:1212:void requestPermissions(java.lang.String[],int) -> requestPermissions
    722:724:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    694:696:android.content.Context requireContext() -> requireContext
    830:832:androidx.fragment.app.FragmentManager requireFragmentManager() -> requireFragmentManager
    748:750:java.lang.Object requireHost() -> requireHost
    1518:1526:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    493:500:void restoreViewState(android.os.Bundle) -> restoreViewState
    2166:2166:void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    2191:2191:void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    2812:2812:void setAnimatingAway(android.view.View) -> setAnimatingAway
    2816:2816:void setAnimator(android.animation.Animator) -> setAnimator
    580:583:void setArguments(android.os.Bundle) -> setArguments
    1922:1922:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    1947:1947:void setEnterTransition(java.lang.Object) -> setEnterTransition
    1933:1933:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    2023:2023:void setExitTransition(java.lang.Object) -> setExitTransition
    993:996:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
>>>>>>> rename package name,fix action event info list same time crash
    2852:2852:void setHideReplaced(boolean) -> setHideReplaced
    509:513:void setIndex(int,androidx.fragment.app.Fragment) -> setIndex
    619:620:void setInitialSavedState(androidx.fragment.app.Fragment$SavedState) -> setInitialSavedState
    1011:1014:void setMenuVisibility(boolean) -> setMenuVisibility
    2761:2764:void setNextAnim(int) -> setNextAnim
    2775:2780:void setNextTransition(int,int) -> setNextTransition
    2730:2742:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
<<<<<<< HEAD
    2834:2834:void setStateAfterAnimating(int) -> setStateAfterAnimating
    1036:1045:void setUserVisibleHint(boolean) -> setUserVisibleHint
    2252:2253:void startPostponedEnterTransition() -> startPostponedEnterTransition
    537:552:java.lang.String toString() -> toString
=======
    2062:2062:void setReenterTransition(java.lang.Object) -> setReenterTransition
    978:978:void setRetainInstance(boolean) -> setRetainInstance
    1983:1983:void setReturnTransition(java.lang.Object) -> setReturnTransition
    2097:2097:void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    2132:2132:void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    2834:2834:void setStateAfterAnimating(int) -> setStateAfterAnimating
    643:658:void setTargetFragment(androidx.fragment.app.Fragment,int) -> setTargetFragment
    1036:1045:void setUserVisibleHint(boolean) -> setUserVisibleHint
    1260:1261:boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    1073:1073:void startActivity(android.content.Intent) -> startActivity
    1081:1082:void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    1092:1092:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    1100:1101:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    1113:1114:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    2252:2253:void startPostponedEnterTransition() -> startPostponedEnterTransition
    537:552:java.lang.String toString() -> toString
    1890:1890:void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
>>>>>>> rename package name,fix action event info list same time crash
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    2255:2255:void <init>(androidx.fragment.app.Fragment) -> <init>
    2258:2258:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    2386:2386:void <init>(androidx.fragment.app.Fragment) -> <init>
    2403:2403:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    2390:2391:android.view.View onFindViewById(int) -> onFindViewById
    2398:2398:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2429:2429:void <init>(androidx.fragment.app.Fragment) -> <init>
    2432:2435:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    2869:2902:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    391:391:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    365:365:void <clinit>() -> <clinit>
    344:345:void <init>(android.os.Bundle) -> <init>
    348:351:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    362:362:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
    366:366:void <init>() -> <init>
    366:366:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    366:366:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    369:369:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    374:374:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    366:366:java.lang.Object[] newArray(int) -> newArray
    379:379:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    68:102:void <init>() -> <init>
    919:920:int allocateRequestIndex(androidx.fragment.app.Fragment) -> allocateRequestIndex
    806:806:void checkForValidRequestCode(int) -> checkForValidRequestCode
    405:405:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    693:706:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    663:664:java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    324:324:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    729:729:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    738:738:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    299:300:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    1051:1051:void markFragmentsCreated() -> markFragmentsCreated
    1057:1069:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    145:172:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    181:191:void onBackPressed() -> onBackPressed
    284:286:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    333:369:void onCreate(android.os.Bundle) -> onCreate
    378:382:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    387:389:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    396:398:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    413:419:void onDestroy() -> onDestroy
    427:428:void onLowMemory() -> onLowMemory
    436:442:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    261:261:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    491:492:void onNewIntent(android.content.Intent) -> onNewIntent
    459:462:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    470:476:void onPause() -> onPause
    276:276:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    525:528:void onPostResume() -> onPostResume
    559:559:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    547:551:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    845:860:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    514:517:void onResume() -> onResume
    538:538:void onResumeFragments() -> onResumeFragments
    569:580:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    589:605:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    614:628:void onStart() -> onStart
    500:500:void onStateNotSaved() -> onStateNotSaved
    636:641:void onStop() -> onStop
    943:953:void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> requestPermissionsFromFragment
    217:217:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    230:230:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    749:754:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    762:767:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    870:870:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    878:889:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> startActivityFromFragment
    776:781:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    791:796:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    899:912:void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderFromFragment
    205:205:void supportFinishAfterTransition() -> supportFinishAfterTransition
    678:678:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    238:238:void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    246:246:void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    819:821:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.FragmentActivity$1:
    82:82:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    85:88:void handleMessage(android.os.Message) -> handleMessage
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    958:959:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    1032:1032:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    964:964:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    1038:1038:android.view.View onFindViewById(int) -> onFindViewById
<<<<<<< HEAD
=======
    957:957:java.lang.Object onGetHost() -> onGetHost
    979:979:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
>>>>>>> rename package name,fix action event info list same time crash
    974:974:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    1026:1027:int onGetWindowAnimations() -> onGetWindowAnimations
    1043:1044:boolean onHasView() -> onHasView
    1021:1021:boolean onHasWindowAnimations() -> onHasWindowAnimations
<<<<<<< HEAD
    969:969:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
=======
    1009:1009:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    969:969:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    1015:1015:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    995:995:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    1002:1002:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
>>>>>>> rename package name,fix action event info list same time crash
    984:984:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentActivity$NonConfigurationInstances -> androidx.fragment.app.FragmentActivity$NonConfigurationInstances:
    130:130:void <init>() -> <init>
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    30:30:void <init>() -> <init>
    50:50:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    52:53:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    104:104:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    49:49:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    201:201:void dispatchActivityCreated() -> dispatchActivityCreated
    307:307:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    369:369:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    190:190:void dispatchCreate() -> dispatchCreate
    331:331:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    274:274:void dispatchDestroy() -> dispatchDestroy
    319:319:void dispatchLowMemory() -> dispatchLowMemory
    285:285:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    356:356:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    380:380:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    234:234:void dispatchPause() -> dispatchPause
    296:296:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    343:343:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    223:223:void dispatchResume() -> dispatchResume
    212:212:void dispatchStart() -> dispatchStart
    245:245:void dispatchStop() -> dispatchStop
    391:391:boolean execPendingActions() -> execPendingActions
    82:82:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    60:60:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    127:127:void noteStateNotSaved() -> noteStateNotSaved
    120:120:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    158:158:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> restoreAllState
    179:179:androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig() -> retainNestedNonConfig
    134:134:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    57:57:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    61:65:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    190:190:android.app.Activity getActivity() -> getActivity
    195:195:android.content.Context getContext() -> getContext
    204:204:androidx.fragment.app.FragmentManagerImpl getFragmentManagerImpl() -> getFragmentManagerImpl
    200:200:android.os.Handler getHandler() -> getHandler
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    88:88:void <init>() -> <init>
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    1129:1132:void <clinit>() -> <clinit>
    663:730:void <init>() -> <init>
    2637:2649:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2739:2742:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    1912:1916:void addFragment(androidx.fragment.app.Fragment,boolean) -> addFragment
    907:910:void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    2144:2160:int allocBackStackIndex(androidx.fragment.app.BackStackRecord) -> allocBackStackIndex
    1630:1679:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int) -> animateRemoveFragment
    3201:3201:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    2001:2006:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    809:809:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    3190:3193:void burpActive() -> burpActive
    2079:2080:void checkStateLoss() -> checkStateLoss
    2258:2260:void cleanupExec() -> cleanupExec
    2532:2562:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1714:1763:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1983:1991:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    3227:3229:void dispatchActivityCreated() -> dispatchActivityCreated
    3295:3298:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3377:3383:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3221:3223:void dispatchCreate() -> dispatchCreate
    3313:3340:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3258:3263:void dispatchDestroy() -> dispatchDestroy
    3254:3254:void dispatchDestroyView() -> dispatchDestroyView
    3304:3307:void dispatchLowMemory() -> dispatchLowMemory
    3277:3280:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3503:3512:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    3455:3464:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentAttached
    3487:3496:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    3625:3634:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    3640:3649:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    3564:3573:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    3439:3448:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentPreAttached
    3471:3480:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    3549:3558:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    3595:3604:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    3534:3543:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    3579:3588:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    3519:3528:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    3610:3619:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
    3362:3368:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3392:3398:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3245:3245:void dispatchPause() -> dispatchPause
    3286:3289:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3346:3353:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3239:3241:void dispatchResume() -> dispatchResume
    3233:3235:void dispatchStart() -> dispatchStart
    3268:3271:void dispatchStateChange(int) -> dispatchStateChange
    3249:3250:void dispatchStop() -> dispatchStop
    2724:2726:void doPendingDeferredStart() -> doPendingDeferredStart
    1020:1095:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2671:2689:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    2106:2121:void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> enqueueAction
    2206:2207:void ensureExecReady(boolean) -> ensureExecReady
    1688:1698:void ensureInflatedFragmentView(androidx.fragment.app.Fragment) -> ensureInflatedFragmentView
    2267:2281:boolean execPendingActions() -> execPendingActions
    2235:2250:void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> execSingleAction
    2615:2625:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2386:2439:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    814:815:boolean executePendingTransactions() -> executePendingTransactions
    2292:2314:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    2024:2034:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    2047:2058:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    2067:2070:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2586:2596:androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment) -> findFragmentUnder
    2659:2661:void forcePostponedTransactions() -> forcePostponedTransactions
    2189:2196:void freeBackStackIndex(int) -> freeBackStackIndex
    2708:2719:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    1300:1306:android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation) -> getAnimationListener
    902:902:androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    897:897:int getBackStackEntryCount() -> getBackStackEntryCount
    932:938:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    946:951:java.util.List getFragments() -> getFragments
    3416:3416:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    1957:1962:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    1314:1314:boolean isStateAtLeast(int) -> isStateAtLeast
    2094:2094:boolean isStateSaved() -> isStateSaved
    1160:1222:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int) -> loadAnimation
    1886:1895:void makeActive(androidx.fragment.app.Fragment) -> makeActive
    1152:1155:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    1899:1908:void makeInactive(androidx.fragment.app.Fragment) -> makeInactive
    1138:1148:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    2451:2457:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    738:749:boolean modifiesAlpha(androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator) -> modifiesAlpha
    757:768:boolean modifiesAlpha(android.animation.Animator) -> modifiesAlpha
    1776:1822:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    1321:1616:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean) -> moveToState
    1684:1684:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1836:1869:void moveToState(int,boolean) -> moveToState
    3208:3215:void noteStateNotSaved() -> noteStateNotSaved
    3696:3752:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    3792:3792:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1257:1264:void performPendingDeferredStart(androidx.fragment.app.Fragment) -> performPendingDeferredStart
    821:821:void popBackStack() -> popBackStack
    846:844:void popBackStack(int,int) -> popBackStack
    826:827:boolean popBackStackImmediate() -> popBackStackImmediate
    867:891:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2748:2796:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2479:2507:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    922:923:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> putFragment
    1936:1941:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    2336:2341:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    2731:2733:void reportBackStackChanged() -> reportBackStackChanged
    3055:3181:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> restoreAllState
    2803:2804:androidx.fragment.app.FragmentManagerNonConfig retainNonConfig() -> retainNonConfig
    2941:3047:android.os.Parcelable saveAllState() -> saveAllState
    2907:2932:android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment) -> saveFragmentBasicState
    987:988:androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment) -> saveFragmentInstanceState
    2889:2900:void saveFragmentViewState(androidx.fragment.app.Fragment) -> saveFragmentViewState
    2835:2883:void saveNonConfig() -> saveNonConfig
    2132:2140:void scheduleCommit() -> scheduleCommit
    2164:2185:void setBackStackIndex(int,androidx.fragment.app.BackStackRecord) -> setBackStackIndex
    1279:1288:void setHWLayerAnimListenerIfAlpha(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator) -> setHWLayerAnimListenerIfAlpha
    3405:3410:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    2817:2826:void setRetaining(androidx.fragment.app.FragmentManagerNonConfig) -> setRetaining
    780:783:boolean shouldRunOnHWLayer(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator) -> shouldRunOnHWLayer
    1973:1978:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1875:1880:void startPendingDeferredFragments() -> startPendingDeferredFragments
    787:804:void throwException(java.lang.RuntimeException) -> throwException
    1005:1015:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerImpl$1 -> androidx.fragment.app.FragmentManagerImpl$1:
    730:730:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    733:733:void run() -> run
androidx.fragment.app.FragmentManagerImpl$2 -> androidx.fragment.app.FragmentManagerImpl$2:
    1639:1639:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment) -> <init>
    1642:1647:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$2$1 -> androidx.fragment.app.FragmentManagerImpl$2$1:
    1647:1647:void <init>(androidx.fragment.app.FragmentManagerImpl$2) -> <init>
    1650:1652:void run() -> run
androidx.fragment.app.FragmentManagerImpl$3 -> androidx.fragment.app.FragmentManagerImpl$3:
    1664:1664:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1667:1673:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$4 -> androidx.fragment.app.FragmentManagerImpl$4:
    1728:1728:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1731:1734:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener -> androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener:
    4004:4005:void <init>(android.view.View,android.view.animation.Animation$AnimationListener) -> <init>
    4021:4031:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 -> androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1:
    4022:4022:void <init>(androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> <init>
    4025:4025:void run() -> run
androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper -> androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper:
    3968:3969:void <init>(android.view.animation.Animation$AnimationListener) -> <init>
    3983:3984:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    3991:3992:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    3975:3976:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator -> androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator:
    3945:3949:void <init>(android.view.animation.Animation) -> <init>
    3953:3957:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener -> androidx.fragment.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener:
    4041:4042:void <init>(android.view.View) -> <init>
    4052:4053:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    4047:4047:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator -> androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator:
    4072:4078:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    4083:4090:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    4098:4105:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    4112:4118:void run() -> run
androidx.fragment.app.FragmentManagerImpl$FragmentTag -> androidx.fragment.app.FragmentManagerImpl$FragmentTag:
    3800:3800:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentManagerImpl$PopBackStackState -> androidx.fragment.app.FragmentManagerImpl$PopBackStackState:
    3839:3842:void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int) -> <init>
    3848:3858:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener -> androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener:
    3873:3875:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3934:3934:void cancelTransaction() -> cancelTransaction
    3916:3926:void completeTransaction() -> completeTransaction
    3906:3906:boolean isReady() -> isReady
    3885:3889:void onStartEnterTransition() -> onStartEnterTransition
    3899:3899:void startListening() -> startListening
androidx.fragment.app.FragmentManagerNonConfig -> androidx.fragment.app.FragmentManagerNonConfig:
    42:45:void <init>(java.util.List,java.util.List,java.util.List) -> <init>
    59:59:java.util.List getChildNonConfigs() -> getChildNonConfigs
    52:52:java.util.List getFragments() -> getFragments
    66:66:java.util.List getViewModelStores() -> getViewModelStores
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    646:646:void <clinit>() -> <clinit>
    621:618:void <init>() -> <init>
    624:629:void <init>(android.os.Parcel) -> <init>
    639:643:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    647:647:void <init>() -> <init>
    647:647:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    650:650:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    647:647:java.lang.Object[] newArray(int) -> newArray
    655:655:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentPagerAdapter -> androidx.fragment.app.FragmentPagerAdapter:
    71:72:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    120:125:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    145:147:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    92:112:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    153:153:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    179:179:java.lang.String makeFragmentName(int,long) -> makeFragmentName
    131:139:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    82:83:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    129:129:void <clinit>() -> <clinit>
    43:53:void <init>(androidx.fragment.app.Fragment) -> <init>
    56:67:void <init>(android.os.Parcel) -> <init>
    73:105:androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerNonConfig,androidx.lifecycle.ViewModelStore) -> instantiate
    116:126:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    130:130:void <init>() -> <init>
    130:130:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    133:133:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    130:130:java.lang.Object[] newArray(int) -> newArray
    138:138:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStatePagerAdapter -> androidx.fragment.app.FragmentStatePagerAdapter:
    77:78:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    133:147:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    167:169:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    101:126:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    175:175:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    203:225:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    181:194:android.os.Parcelable saveState() -> saveState
    153:161:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    88:89:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentTabHost -> androidx.fragment.app.FragmentTabHost:
    136:137:void <init>(android.content.Context) -> <init>
    141:142:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    335:357:androidx.fragment.app.FragmentTransaction doTabChanged(java.lang.String,androidx.fragment.app.FragmentTransaction) -> doTabChanged
    218:221:void ensureContent() -> ensureContent
    157:177:void ensureHierarchy(android.content.Context) -> ensureHierarchy
    365:367:androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String) -> getTabInfoForTag
    146:151:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    257:290:void onAttachedToWindow() -> onAttachedToWindow
    296:297:void onDetachedFromWindow() -> onDetachedFromWindow
    310:316:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    302:304:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    321:328:void onTabChanged(java.lang.String) -> onTabChanged
    229:229:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    189:189:void setup() -> setup
    194:198:void setup(android.content.Context,androidx.fragment.app.FragmentManager) -> setup
    202:213:void setup(android.content.Context,androidx.fragment.app.FragmentManager,int) -> setup
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$SavedState:
    119:119:void <clinit>() -> <clinit>
    98:98:void <init>(android.os.Parcelable) -> <init>
    102:103:void <init>(android.os.Parcel) -> <init>
    114:115:java.lang.String toString() -> toString
    108:109:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$SavedState$1:
    120:120:void <init>() -> <init>
    120:120:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    123:123:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    120:120:java.lang.Object[] newArray(int) -> newArray
    128:128:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    44:44:void <init>() -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    44:61:void <clinit>() -> <clinit>
    646:649:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1123:1208:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1075:1078:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    161:186:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1092:1098:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    979:992:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    469:470:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    838:841:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    782:783:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    423:463:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1003:1013:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    689:734:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    560:622:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    311:365:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> configureTransitionsOrdered
    213:264:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> configureTransitionsReordered
    1221:1222:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    889:892:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> findKeyForValue
    509:508:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    522:521:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    911:918:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    495:497:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1042:1058:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    277:283:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    66:68:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    956:959:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    392:392:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    935:944:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1027:1029:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    105:136:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> startTransitions
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    283:283:void <init>(java.util.ArrayList) -> <init>
    286:286:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    392:392:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    395:411:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    622:622:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    625:628:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    734:734:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    737:755:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1231:1231:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    32:32:void <init>() -> <init>
    288:289:void addTarget(java.lang.Object,android.view.View) -> addTarget
    92:109:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    206:206:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    36:36:boolean canHandle(java.lang.Object) -> canHandle
    43:43:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    119:121:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    179:197:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    127:135:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    296:297:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    261:279:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    143:144:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    214:215:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    77:81:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    304:305:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    61:71:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    250:254:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    53:54:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    81:81:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    84:84:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    144:144:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    151:155:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    215:215:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    218:225:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    305:305:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    308:311:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    38:38:void <init>() -> <init>
    311:324:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    189:202:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    337:337:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    356:358:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    212:222:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    75:77:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    348:348:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    130:135:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    292:292:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    233:233:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    149:169:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    169:169:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    172:174:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    233:233:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    236:242:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    292:292:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    295:300:void run() -> run
androidx.fragment.app.ListFragment -> androidx.fragment.app.ListFragment:
    76:59:void <init>() -> <init>
    328:333:void ensureList() -> ensureList
<<<<<<< HEAD
    227:228:android.widget.ListView getListView() -> getListView
=======
    324:324:android.widget.ListAdapter getListAdapter() -> getListAdapter
    227:228:android.widget.ListView getListView() -> getListView
    219:220:long getSelectedItemId() -> getSelectedItemId
    211:212:int getSelectedItemPosition() -> getSelectedItemPosition
>>>>>>> rename package name,fix action event info list same time crash
    96:138:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    158:163:void onDestroyView() -> onDestroyView
    149:150:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    237:239:void setEmptyText(java.lang.CharSequence) -> setEmptyText
    184:191:void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    263:263:void setListShown(boolean) -> setListShown
    285:287:void setListShown(boolean,boolean) -> setListShown
    271:271:void setListShownNoAnimation(boolean) -> setListShownNoAnimation
<<<<<<< HEAD
=======
    203:204:void setSelection(int) -> setSelection
>>>>>>> rename package name,fix action event info list same time crash
androidx.fragment.app.ListFragment$1 -> androidx.fragment.app.ListFragment$1:
    52:52:void <init>(androidx.fragment.app.ListFragment) -> <init>
    55:55:void run() -> run
androidx.fragment.app.ListFragment$2 -> androidx.fragment.app.ListFragment$2:
    60:60:void <init>(androidx.fragment.app.ListFragment) -> <init>
    63:63:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.fragment.app.OneShotPreDrawListener -> androidx.fragment.app.OneShotPreDrawListener:
    41:44:void <init>(android.view.View,java.lang.Runnable) -> <init>
    55:57:androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    63:64:boolean onPreDraw() -> onPreDraw
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    88:88:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    73:78:void removeListener() -> removeListener
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:23:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    30:32:void <init>(float[]) -> <init>
    46:54:float getInterpolation(float) -> getInterpolation
androidx.legacy.content.WakefulBroadcastReceiver -> androidx.legacy.content.WakefulBroadcastReceiver:
    76:77:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
androidx.legacy.widget.Space -> androidx.legacy.widget.Space:
    42:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    61:61:void <init>(android.content.Context) -> <init>
    84:92:int getDefaultSize2(int,int) -> getDefaultSize2
    108:107:void onMeasure(int,int) -> onMeasure
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    104:159:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    69:71:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    80:84:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:63:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    90:99:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    168:178:void <init>(java.util.Map) -> <init>
    184:185:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    192:193:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    204:207:void <init>(int,java.lang.reflect.Method) -> <init>
    236:241:boolean equals(java.lang.Object) -> equals
    246:246:int hashCode() -> hashCode
    213:225:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    30:31:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    36:41:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    23:24:void <init>(androidx.lifecycle.FullLifecycleObserver) -> <init>
    29:31:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    29:29:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    75:75:void <init>() -> <init>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    119:114:void <clinit>() -> <clinit>
    115:115:void <init>(java.lang.String,int) -> <init>
    114:114:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    114:114:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    157:150:void <clinit>() -> <clinit>
    151:151:void <init>(java.lang.String,int) -> <init>
    199:199:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    150:150:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    150:150:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    98:100:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    162:191:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    300:310:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    152:157:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    254:256:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State) -> downEvent
    285:294:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    232:232:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    236:239:androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> getStateAfter
    123:124:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    143:148:boolean isSynced() -> isSynced
    111:111:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    340:340:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    128:133:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    195:195:void popParentState() -> popParentState
    199:199:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    216:216:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    318:336:void sync() -> sync
    270:273:androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State) -> upEvent
androidx.lifecycle.LifecycleRegistry$1 -> androidx.lifecycle.LifecycleRegistry$1:
    254:236:void <clinit>() -> <clinit>
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    347:349:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    353:356:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    79:81:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    92:111:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    179:179:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    48:72:androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object) -> getCallback
    116:120:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    172:172:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    126:164:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    59:82:void <init>() -> <init>
    442:443:void assertMainThread(java.lang.String) -> assertMainThread
    96:113:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    118:138:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    301:302:java.lang.Object getValue() -> getValue
    353:353:boolean hasActiveObservers() -> hasActiveObservers
    171:185:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    266:269:void postValue(java.lang.Object) -> postValue
    224:230:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    286:289:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    82:82:void <init>(androidx.lifecycle.LiveData) -> <init>
    86:89:void run() -> run
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    360:362:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    386:386:void detachObserver() -> detachObserver
    381:381:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    372:376:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    367:367:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    395:396:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    409:424:void activeStateChanged(boolean) -> activeStateChanged
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    25:25:void <init>() -> <init>
    28:28:void postValue(java.lang.Object) -> postValue
    33:33:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    29:31:void <init>(java.lang.Object) -> <init>
    36:36:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    31:31:void <init>() -> <init>
    113:122:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    55:55:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    67:67:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    61:61:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    38:42:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    73:75:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    106:109:void onDestroy() -> onDestroy
    94:95:void onPause() -> onPause
    87:89:void onResume() -> onResume
    80:82:void onStart() -> onStart
    100:101:void onStop() -> onStop
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    29:30:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    35:36:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    96:96:void <init>() -> <init>
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    78:80:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    99:101:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    123:136:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    36:38:void <init>() -> <init>
    55:58:void clear() -> clear
    48:48:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    41:43:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:40:void <init>() -> <init>
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    371:373:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    382:398:androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader) -> createAndInstallLoader
    498:498:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    408:409:androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> initLoader
    481:481:void markForRedelivery() -> markForRedelivery
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    61:66:void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader) -> <init>
    149:167:androidx.loader.content.Loader destroy(boolean) -> destroy
    212:222:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    71:71:androidx.loader.content.Loader getLoader() -> getLoader
    111:119:void markForRedelivery() -> markForRedelivery
    76:77:void onActive() -> onActive
    82:83:void onInactive() -> onInactive
    172:183:void onLoadComplete(androidx.loader.content.Loader,java.lang.Object) -> onLoadComplete
    134:137:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    98:107:androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks) -> setCallback
    189:193:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderObserver -> androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    239:241:void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks) -> <init>
    272:272:void dump(java.lang.String,java.io.PrintWriter) -> dump
    255:255:boolean hasDeliveredData() -> hasDeliveredData
    246:251:void onChanged(java.lang.Object) -> onChanged
    260:262:void reset() -> reset
    268:268:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:361:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    307:307:void finishCreatingLoader() -> finishCreatingLoader
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    316:316:androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int) -> getLoader
    303:303:boolean isCreatingLoader() -> isCreatingLoader
    335:338:void markForRedelivery() -> markForRedelivery
    344:350:void onCleared() -> onCleared
    311:311:void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo) -> putLoader
    299:299:void startCreatingLoader() -> startCreatingLoader
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.loader.content.AsyncTaskLoader -> androidx.loader.content.AsyncTaskLoader:
    128:128:void <init>(android.content.Context) -> <init>
    132:133:void <init>(android.content.Context,java.util.concurrent.Executor) -> <init>
    233:241:void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    246:258:void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    356:371:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    210:228:void executePendingTask() -> executePendingTask
<<<<<<< HEAD
    162:192:boolean onCancelLoad() -> onCancelLoad
    152:156:void onForceLoad() -> onForceLoad
    307:307:java.lang.Object onLoadInBackground() -> onLoadInBackground
=======
    332:332:boolean isLoadInBackgroundCanceled() -> isLoadInBackgroundCanceled
    162:192:boolean onCancelLoad() -> onCancelLoad
    152:156:void onForceLoad() -> onForceLoad
    307:307:java.lang.Object onLoadInBackground() -> onLoadInBackground
    144:146:void setUpdateThrottle(long) -> setUpdateThrottle
    347:349:void waitForLoader() -> waitForLoader
>>>>>>> rename package name,fix action event info list same time crash
androidx.loader.content.AsyncTaskLoader$LoadTask -> androidx.loader.content.AsyncTaskLoader$LoadTask:
    48:49:void <init>(androidx.loader.content.AsyncTaskLoader) -> <init>
    48:48:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    60:71:java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    94:96:void onCancelled(java.lang.Object) -> onCancelled
    83:85:void onPostExecute(java.lang.Object) -> onPostExecute
    104:105:void run() -> run
<<<<<<< HEAD
=======
    111:111:void waitForLoader() -> waitForLoader
>>>>>>> rename package name,fix action event info list same time crash
androidx.loader.content.Loader -> androidx.loader.content.Loader:
    118:119:void <init>(android.content.Context) -> <init>
    409:410:void abandon() -> abandon
    318:318:boolean cancelLoad() -> cancelLoad
    485:485:void commitContentChanged() -> commitContentChanged
    527:530:java.lang.String dataToString(java.lang.Object) -> dataToString
    144:145:void deliverCancellation() -> deliverCancellation
    131:132:void deliverResult(java.lang.Object) -> deliverResult
    555:564:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    347:347:void forceLoad() -> forceLoad
<<<<<<< HEAD
=======
    154:154:android.content.Context getContext() -> getContext
    161:161:int getId() -> getId
>>>>>>> rename package name,fix action event info list same time crash
    247:247:boolean isAbandoned() -> isAbandoned
    256:256:boolean isReset() -> isReset
    238:238:boolean isStarted() -> isStarted
    511:517:void onContentChanged() -> onContentChanged
    173:174:void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener) -> registerListener
<<<<<<< HEAD
=======
    207:208:void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> registerOnLoadCanceledListener
>>>>>>> rename package name,fix action event info list same time crash
    447:452:void reset() -> reset
    496:497:void rollbackContentChanged() -> rollbackContentChanged
    282:285:void startLoading() -> startLoading
    380:381:void stopLoading() -> stopLoading
    471:473:boolean takeContentChanged() -> takeContentChanged
    535:540:java.lang.String toString() -> toString
    187:188:void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener) -> unregisterListener
<<<<<<< HEAD
=======
    223:224:void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> unregisterOnLoadCanceledListener
>>>>>>> rename package name,fix action event info list same time crash
androidx.loader.content.ModernAsyncTask -> androidx.loader.content.ModernAsyncTask:
    60:84:void <clinit>() -> <clinit>
    132:153:void <init>() -> <init>
    332:333:boolean cancel(boolean) -> cancel
    433:452:androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    487:492:void finish(java.lang.Object) -> finish
    115:120:android.os.Handler getHandler() -> getHandler
    299:299:boolean isCancelled() -> isCancelled
    270:270:void onCancelled(java.lang.Object) -> onCancelled
    183:185:java.lang.Object postResult(java.lang.Object) -> postResult
    176:178:void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
androidx.loader.content.ModernAsyncTask$1 -> androidx.loader.content.ModernAsyncTask$1:
    60:61:void <init>() -> <init>
    65:65:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.loader.content.ModernAsyncTask$2 -> androidx.loader.content.ModernAsyncTask$2:
    133:133:void <init>(androidx.loader.content.ModernAsyncTask) -> <init>
    136:147:java.lang.Object call() -> call
androidx.loader.content.ModernAsyncTask$3 -> androidx.loader.content.ModernAsyncTask$3:
    153:153:void <init>(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    157:161:void done() -> done
androidx.loader.content.ModernAsyncTask$4 -> androidx.loader.content.ModernAsyncTask$4:
    434:434:void <clinit>() -> <clinit>
androidx.loader.content.ModernAsyncTask$AsyncTaskResult -> androidx.loader.content.ModernAsyncTask$AsyncTaskResult:
    528:530:void <init>(androidx.loader.content.ModernAsyncTask,java.lang.Object[]) -> <init>
androidx.loader.content.ModernAsyncTask$InternalHandler -> androidx.loader.content.ModernAsyncTask$InternalHandler:
    497:497:void <init>() -> <init>
    503:507:void handleMessage(android.os.Message) -> handleMessage
androidx.loader.content.ModernAsyncTask$Status -> androidx.loader.content.ModernAsyncTask$Status:
    103:99:void <clinit>() -> <clinit>
    99:99:void <init>(java.lang.String,int) -> <init>
    99:99:androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    99:99:androidx.loader.content.ModernAsyncTask$Status[] values() -> values
androidx.loader.content.ModernAsyncTask$WorkerRunnable -> androidx.loader.content.ModernAsyncTask$WorkerRunnable:
    519:519:void <init>() -> <init>
androidx.localbroadcastmanager.content.LocalBroadcastManager -> androidx.localbroadcastmanager.content.LocalBroadcastManager:
    100:100:void <clinit>() -> <clinit>
    113:115:void <init>(android.content.Context) -> <init>
    298:306:void executePendingBroadcasts() -> executePendingBroadcasts
    105:110:androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    140:157:void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    213:279:boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    170:195:void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
androidx.localbroadcastmanager.content.LocalBroadcastManager$1 -> androidx.localbroadcastmanager.content.LocalBroadcastManager$1:
    115:115:void <init>(androidx.localbroadcastmanager.content.LocalBroadcastManager,android.os.Looper) -> <init>
    119:121:void handleMessage(android.os.Message) -> handleMessage
androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord -> androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord:
    79:81:void <init>(android.content.Intent,java.util.ArrayList) -> <init>
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord -> androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord:
    55:57:void <init>(android.content.IntentFilter,android.content.BroadcastReceiver) -> <init>
    62:71:java.lang.String toString() -> toString
androidx.media.AudioAttributesCompat -> androidx.media.AudioAttributesCompat:
    175:186:void <clinit>() -> <clinit>
    252:252:void <init>() -> <init>
    766:773:boolean equals(java.lang.Object) -> equals
    606:606:int hashCode() -> hashCode
    611:611:java.lang.String toString() -> toString
    756:756:int toVolumeStreamType(boolean,int,int) -> toVolumeStreamType
    649:649:java.lang.String usageToString(int) -> usageToString
androidx.media.AudioAttributesCompatParcelizer -> androidx.media.AudioAttributesCompatParcelizer:
    9:9:void <init>() -> <init>
    11:12:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi21 -> androidx.media.AudioAttributesImplApi21:
    49:43:void <init>() -> <init>
    150:154:boolean equals(java.lang.Object) -> equals
    145:145:int hashCode() -> hashCode
    159:159:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplApi21Parcelizer -> androidx.media.AudioAttributesImplApi21Parcelizer:
    9:9:void <init>() -> <init>
    11:13:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    18:20:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplBase -> androidx.media.AudioAttributesImplBase:
    50:44:void <init>() -> <init>
    128:134:boolean equals(java.lang.Object) -> equals
    86:86:int getContentType() -> getContentType
    96:97:int getFlags() -> getFlags
    73:76:int getLegacyStreamType() -> getLegacyStreamType
    91:91:int getUsage() -> getUsage
    123:123:int hashCode() -> hashCode
    140:151:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplBaseParcelizer -> androidx.media.AudioAttributesImplBaseParcelizer:
    9:9:void <init>() -> <init>
    11:15:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    20:24:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.MediaBrowserCompatUtils -> androidx.media.MediaBrowserCompatUtils:
    35:44:boolean areSameOptions(android.os.Bundle,android.os.Bundle) -> areSameOptions
androidx.media.MediaBrowserServiceCompat -> androidx.media.MediaBrowserServiceCompat:
    124:124:void <clinit>() -> <clinit>
    122:182:void <init>() -> <init>
    1515:1532:void addSubscription(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.IBinder,android.os.Bundle) -> addSubscription
    1617:1625:java.util.List applyOptions(java.util.List,android.os.Bundle) -> applyOptions
    1498:1502:boolean isValidPackage(java.lang.String,int) -> isValidPackage
    1187:1187:android.os.IBinder onBind(android.content.Intent) -> onBind
    1170:1182:void onCreate() -> onCreate
    1366:1366:void onCustomAction(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result) -> onCustomAction
    1270:1271:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result,android.os.Bundle) -> onLoadChildren
    1314:1315:void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result) -> onLoadItem
    1341:1342:void onSearch(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result) -> onSearch
    1689:1711:void performCustomAction(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performCustomAction
    1572:1607:void performLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.Bundle,android.os.Bundle) -> performLoadChildren
    1635:1654:void performLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performLoadItem
    1661:1682:void performSearch(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performSearch
    1541:1561:boolean removeSubscription(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.IBinder) -> removeSubscription
androidx.media.MediaBrowserServiceCompat$1 -> androidx.media.MediaBrowserServiceCompat$1:
    1573:1573:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,java.lang.String,android.os.Bundle,android.os.Bundle) -> <init>
    1573:1573:void onResultSent(java.lang.Object) -> onResultSent
    1576:1592:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$2 -> androidx.media.MediaBrowserServiceCompat$2:
    1636:1636:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1636:1636:void onResultSent(java.lang.Object) -> onResultSent
    1639:1645:void onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onResultSent
androidx.media.MediaBrowserServiceCompat$3 -> androidx.media.MediaBrowserServiceCompat$3:
    1662:1662:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1662:1662:void onResultSent(java.lang.Object) -> onResultSent
    1665:1667:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$4 -> androidx.media.MediaBrowserServiceCompat$4:
    1689:1689:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1702:1702:void onErrorSent(android.os.Bundle) -> onErrorSent
    1689:1689:void onResultSent(java.lang.Object) -> onResultSent
    1692:1692:void onResultSent(android.os.Bundle) -> onResultSent
androidx.media.MediaBrowserServiceCompat$ConnectionRecord -> androidx.media.MediaBrowserServiceCompat$ConnectionRecord:
    712:718:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.String,int,int,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    723:723:void binderDied() -> binderDied
androidx.media.MediaBrowserServiceCompat$ConnectionRecord$1 -> androidx.media.MediaBrowserServiceCompat$ConnectionRecord$1:
    723:723:void <init>(androidx.media.MediaBrowserServiceCompat$ConnectionRecord) -> <init>
    726:726:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21:
    296:298:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    311:311:android.os.IBinder onBind(android.content.Intent) -> onBind
    304:306:void onCreate() -> onCreate
    351:377:androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    387:408:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> onLoadChildren
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2:
    388:388:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,java.lang.Object,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> <init>
    388:388:void onResultSent(java.lang.Object) -> onResultSent
    393:400:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23:
    479:479:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    483:485:void onCreate() -> onCreate
    491:509:void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> onLoadItem
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1:
    492:492:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23,java.lang.Object,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> <init>
    492:492:void onResultSent(java.lang.Object) -> onResultSent
    496:500:void onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onResultSent
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26:
    514:514:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    518:520:void onCreate() -> onCreate
    526:547:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper,android.os.Bundle) -> onLoadChildren
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$1 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$1:
    527:527:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26,java.lang.Object,androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper) -> <init>
    527:527:void onResultSent(java.lang.Object) -> onResultSent
    532:539:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28:
    572:572:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase:
    195:195:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    205:206:android.os.IBinder onBind(android.content.Intent) -> onBind
    200:200:void onCreate() -> onCreate
androidx.media.MediaBrowserServiceCompat$Result -> androidx.media.MediaBrowserServiceCompat$Result:
    760:761:void <init>(java.lang.Object) -> <init>
    836:836:int getFlags() -> getFlags
    828:828:boolean isDone() -> isDone
    859:859:void onErrorSent(android.os.Bundle) -> onErrorSent
    799:800:void sendError(android.os.Bundle) -> sendError
    768:769:void sendResult(java.lang.Object) -> sendResult
    832:832:void setFlags(int) -> setFlags
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl:
    878:878:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    949:949:void addSubscription(java.lang.String,android.os.IBinder,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> addSubscription
    884:885:void connect(java.lang.String,int,int,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> connect
    932:932:void disconnect(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> disconnect
    991:995:void getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> getMediaItem
    1013:1013:void registerCallbacks(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,int,int,android.os.Bundle) -> registerCallbacks
    969:969:void removeSubscription(java.lang.String,android.os.IBinder,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> removeSubscription
    1048:1052:void search(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> search
    1069:1073:void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> sendCustomAction
    1034:1034:void unregisterCallbacks(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> unregisterCallbacks
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$1 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$1:
    889:889:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,int,int,android.os.Bundle) -> <init>
    892:924:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$2 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$2:
    932:932:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    935:941:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$3 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$3:
    949:949:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.IBinder,android.os.Bundle) -> <init>
    952:962:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$4 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$4:
    969:969:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.IBinder) -> <init>
    972:982:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$5 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$5:
    995:995:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.support.v4.os.ResultReceiver) -> <init>
    998:1005:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$6 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$6:
    1013:1013:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,int,int,android.os.Bundle) -> <init>
    1016:1026:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$7 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$7:
    1034:1034:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    1037:1040:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$8 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$8:
    1052:1052:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver) -> <init>
    1055:1062:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$9 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$9:
    1073:1073:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver) -> <init>
    1076:1084:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceCallbacksCompat -> androidx.media.MediaBrowserServiceCompat$ServiceCallbacksCompat:
    1102:1103:void <init>(android.os.Messenger) -> <init>
    1108:1108:android.os.IBinder asBinder() -> asBinder
    1127:1127:void onConnectFailed() -> onConnectFailed
    1133:1141:void onLoadChildren(java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> onLoadChildren
    1145:1149:void sendRequest(int,android.os.Bundle) -> sendRequest
androidx.media.MediaBrowserServiceCompat$ServiceHandler -> androidx.media.MediaBrowserServiceCompat$ServiceHandler:
    588:586:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    593:599:void handleMessage(android.os.Message) -> handleMessage
    690:693:void postOrRun(java.lang.Runnable) -> postOrRun
    682:686:boolean sendMessageAtTime(android.os.Message,long) -> sendMessageAtTime
androidx.media.MediaBrowserServiceCompatApi21 -> androidx.media.MediaBrowserServiceCompatApi21:
    38:38:java.lang.Object createService(android.content.Context,androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy) -> createService
    46:46:android.os.IBinder onBind(java.lang.Object,android.content.Intent) -> onBind
    42:42:void onCreate(java.lang.Object) -> onCreate
androidx.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor -> androidx.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor:
    114:116:void <init>(android.content.Context,androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy) -> <init>
    122:125:android.service.media.MediaBrowserService$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    131:131:void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result) -> onLoadChildren
androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper -> androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper:
    65:66:void <init>(android.service.media.MediaBrowserService$Result) -> <init>
    91:95:java.util.List parcelListToItemList(java.util.List) -> parcelListToItemList
    70:79:void sendResult(java.lang.Object) -> sendResult
androidx.media.MediaBrowserServiceCompatApi23 -> androidx.media.MediaBrowserServiceCompatApi23:
    29:29:java.lang.Object createService(android.content.Context,androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy) -> createService
androidx.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor -> androidx.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor:
    39:39:void <init>(android.content.Context,androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy) -> <init>
    44:44:void onLoadItem(java.lang.String,android.service.media.MediaBrowserService$Result) -> onLoadItem
androidx.media.MediaBrowserServiceCompatApi26 -> androidx.media.MediaBrowserServiceCompatApi26:
    41:44:void <clinit>() -> <clinit>
    49:49:java.lang.Object createService(android.content.Context,androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy) -> createService
androidx.media.MediaBrowserServiceCompatApi26$MediaBrowserServiceAdaptor -> androidx.media.MediaBrowserServiceCompatApi26$MediaBrowserServiceAdaptor:
    101:101:void <init>(android.content.Context,androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy) -> <init>
    107:108:void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result,android.os.Bundle) -> onLoadChildren
androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper -> androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper:
    67:68:void <init>(android.service.media.MediaBrowserService$Result) -> <init>
    88:92:java.util.List parcelListToItemList(java.util.List) -> parcelListToItemList
    73:77:void sendResult(java.util.List,int) -> sendResult
androidx.media.MediaSessionManager$RemoteUserInfo -> androidx.media.MediaSessionManager$RemoteUserInfo:
    140:146:void <init>(java.lang.String,int,int) -> <init>
    211:214:boolean equals(java.lang.Object) -> equals
    219:219:int hashCode() -> hashCode
androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28 -> androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28:
    45:46:void <init>(java.lang.String,int,int) -> <init>
    80:84:boolean equals(java.lang.Object) -> equals
    72:72:int hashCode() -> hashCode
androidx.media.MediaSessionManagerImplBase$RemoteUserInfoImplBase -> androidx.media.MediaSessionManagerImplBase$RemoteUserInfoImplBase:
    125:128:void <init>(java.lang.String,int,int) -> <init>
    151:155:boolean equals(java.lang.Object) -> equals
    162:162:int hashCode() -> hashCode
androidx.media.session.MediaButtonReceiver -> androidx.media.session.MediaButtonReceiver:
    100:100:void <init>() -> <init>
    306:318:android.content.ComponentName getServiceComponentByAction(android.content.Context,java.lang.String) -> getServiceComponentByAction
    106:108:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    298:301:void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.media.session.MediaButtonReceiver$MediaButtonConnectionCallback -> androidx.media.session.MediaButtonReceiver$MediaButtonConnectionCallback:
    143:146:void <init>(android.content.Context,android.content.Intent,android.content.BroadcastReceiver$PendingResult) -> <init>
    177:178:void finish() -> finish
    156:163:void onConnected() -> onConnected
    173:173:void onConnectionFailed() -> onConnectionFailed
    168:168:void onConnectionSuspended() -> onConnectionSuspended
    150:150:void setMediaBrowser(android.support.v4.media.MediaBrowserCompat) -> setMediaBrowser
<<<<<<< HEAD
=======
androidx.multidex.MultiDex -> androidx.multidex.MultiDex:
    75:78:void <clinit>() -> <clinit>
    55:55:java.lang.reflect.Field access$000(java.lang.Object,java.lang.String) -> access$000
    55:55:void access$100(java.lang.Object,java.lang.String,java.lang.Object[]) -> access$100
    55:55:java.lang.reflect.Method access$200(java.lang.Object,java.lang.String,java.lang.Class[]) -> access$200
    433:453:void clearOldDexDir(android.content.Context) -> clearOldDexDir
    206:286:void doInstallation(android.content.Context,java.io.File,java.io.File,java.lang.String,java.lang.String,boolean) -> doInstallation
    423:429:void expandFieldArray(java.lang.Object,java.lang.String,java.lang.Object[]) -> expandFieldArray
    365:380:java.lang.reflect.Field findField(java.lang.Object,java.lang.String) -> findField
    394:410:java.lang.reflect.Method findMethod(java.lang.Object,java.lang.String,java.lang.Class[]) -> findMethod
    299:305:android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context) -> getApplicationInfo
    460:472:java.io.File getDexDir(android.content.Context,java.io.File,java.lang.String) -> getDexDir
    93:100:void install(android.content.Context) -> install
    345:351:void installSecondaryDexes(java.lang.ClassLoader,java.io.File,java.util.List) -> installSecondaryDexes
    320:333:boolean isVMMultidexCapable(java.lang.String) -> isVMMultidexCapable
    477:490:void mkdirChecked(java.io.File) -> mkdirChecked
androidx.multidex.MultiDex$V14 -> androidx.multidex.MultiDex$V14:
    671:683:void <init>() -> <init>
    658:667:void install(java.lang.ClassLoader,java.util.List) -> install
    695:698:java.lang.Object[] makeDexElements(java.util.List) -> makeDexElements
    713:719:java.lang.String optimizedPathFor(java.io.File) -> optimizedPathFor
androidx.multidex.MultiDex$V14$ICSElementConstructor -> androidx.multidex.MultiDex$V14$ICSElementConstructor:
    583:586:void <init>(java.lang.Class) -> <init>
    593:593:java.lang.Object newInstance(java.io.File,dalvik.system.DexFile) -> newInstance
androidx.multidex.MultiDex$V14$JBMR11ElementConstructor -> androidx.multidex.MultiDex$V14$JBMR11ElementConstructor:
    606:609:void <init>(java.lang.Class) -> <init>
    616:616:java.lang.Object newInstance(java.io.File,dalvik.system.DexFile) -> newInstance
androidx.multidex.MultiDex$V14$JBMR2ElementConstructor -> androidx.multidex.MultiDex$V14$JBMR2ElementConstructor:
    629:632:void <init>(java.lang.Class) -> <init>
    639:639:java.lang.Object newInstance(java.io.File,dalvik.system.DexFile) -> newInstance
androidx.multidex.MultiDex$V19 -> androidx.multidex.MultiDex$V19:
    510:543:void install(java.lang.ClassLoader,java.util.List,java.io.File) -> install
    556:560:java.lang.Object[] makeDexElements(java.lang.Object,java.util.ArrayList,java.io.File,java.util.ArrayList) -> makeDexElements
androidx.multidex.MultiDex$V4 -> androidx.multidex.MultiDex$V4:
    736:761:void install(java.lang.ClassLoader,java.util.List) -> install
androidx.multidex.MultiDexApplication -> androidx.multidex.MultiDexApplication:
    35:35:void <init>() -> <init>
    38:39:void attachBaseContext(android.content.Context) -> attachBaseContext
androidx.multidex.MultiDexExtractor -> androidx.multidex.MultiDexExtractor:
    94:113:void <init>(java.io.File,java.io.File) -> <init>
    354:370:void clearDexDir() -> clearDexDir
    163:165:void close() -> close
    422:424:void closeQuietly(java.io.Closeable) -> closeQuietly
    378:413:void extract(java.util.zip.ZipFile,java.util.zip.ZipEntry,java.io.File,java.lang.String) -> extract
    344:344:android.content.SharedPreferences getMultiDexPreferences(android.content.Context) -> getMultiDexPreferences
    224:224:long getTimeStamp(java.io.File) -> getTimeStamp
    234:234:long getZipCrc(java.io.File) -> getZipCrc
    218:220:boolean isModified(android.content.Context,java.io.File,long,java.lang.String) -> isModified
    128:132:java.util.List load(android.content.Context,java.lang.String,boolean) -> load
    176:204:java.util.List loadExistingExtractions(android.content.Context,java.lang.String) -> loadExistingExtractions
    244:309:java.util.List performExtractions() -> performExtractions
    321:336:void putStoredApkInfo(android.content.Context,java.lang.String,long,long,java.util.List) -> putStoredApkInfo
androidx.multidex.MultiDexExtractor$1 -> androidx.multidex.MultiDexExtractor$1:
    354:354:void <init>(androidx.multidex.MultiDexExtractor) -> <init>
    357:357:boolean accept(java.io.File) -> accept
androidx.multidex.MultiDexExtractor$ExtractedDex -> androidx.multidex.MultiDexExtractor$ExtractedDex:
    55:52:void <init>(java.io.File,java.lang.String) -> <init>
androidx.multidex.ZipUtil -> androidx.multidex.ZipUtil:
    108:123:long computeCrcOfCentralDir(java.io.RandomAccessFile,androidx.multidex.ZipUtil$CentralDirectory) -> computeCrcOfCentralDir
    68:70:androidx.multidex.ZipUtil$CentralDirectory findCentralDirectory(java.io.RandomAccessFile) -> findCentralDirectory
    55:61:long getZipCrc(java.io.File) -> getZipCrc
androidx.multidex.ZipUtil$CentralDirectory -> androidx.multidex.ZipUtil$CentralDirectory:
    33:33:void <init>() -> <init>
>>>>>>> rename package name,fix action event info list same time crash
androidx.recyclerview.R$styleable -> androidx.recyclerview.R$styleable:
    177:226:void <clinit>() -> <clinit>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:72:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    75:78:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    432:432:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:130:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:594:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:183:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:223:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:422:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:124:void consumePostponedUpdates() -> consumePostponedUpdates
    557:584:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:232:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:318:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:493:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:734:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    439:442:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:115:void preProcess() -> preProcess
    741:743:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:752:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:89:void reset() -> reset
    330:404:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:655:void <init>(int,int,int,java.lang.Object) -> <init>
    659:659:java.lang.String cmdToString() -> cmdToString
    684:709:boolean equals(java.lang.Object) -> equals
    718:720:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:51:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:85:void addView(android.view.View,boolean) -> addView
    99:107:void addView(android.view.View,int,boolean) -> addView
    231:239:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:284:void detachViewFromParent(int) -> detachViewFromParent
    206:212:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    117:123:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:330:void hide(android.view.View) -> hide
    60:61:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:193:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:147:void removeView(android.view.View) -> removeView
    160:168:void removeViewAt(int) -> removeViewAt
    373:386:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:352:void unhide(android.view.View) -> unhide
    70:71:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    422:426:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:416:void ensureNext() -> ensureNext
    433:436:boolean get(int) -> get
    449:464:void insert(int,boolean) -> insert
    471:486:boolean remove(int) -> remove
    441:443:void reset() -> reset
    407:410:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    38:55:void <init>() -> <init>
    222:224:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    229:251:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    324:343:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:395:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:273:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:315:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:194:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    199:217:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:642:void cancelAll(java.util.List) -> cancelAll
    550:551:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:518:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:637:void endAnimations() -> endAnimations
    400:404:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:415:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    420:431:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    522:526:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:184:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:129:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:152:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:175:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:215:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:206:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:241:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:249:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:236:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:304:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:313:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:295:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:372:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:361:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:393:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:383:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    73:75:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:84:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    61:66:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    141:160:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:172:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    267:267:void cancelHide() -> cancelHide
    183:186:void destroyCallbacks() -> destroyCallbacks
    325:337:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    300:320:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    551:552:int[] getHorizontalRange() -> getHorizontalRange
    542:543:int[] getVerticalRange() -> getVerticalRange
    253:261:void hide(int) -> hide
    470:483:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    513:513:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    505:505:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    277:285:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    390:403:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    418:446:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:191:void requestRedraw() -> requestRedraw
    271:272:void resetHideDelay(int) -> resetHideDelay
    488:488:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:212:void setState(int) -> setState
    177:179:void setupCallbacks() -> setupCallbacks
    233:242:void show() -> show
    348:382:void updateScrollPosition(int,int) -> updateScrollPosition
    455:466:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:126:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:133:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    560:558:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    581:581:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    566:575:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    586:586:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    591:594:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    31:188:void <clinit>() -> <clinit>
    29:58:void <init>() -> <init>
    161:161:void add(androidx.recyclerview.widget.RecyclerView) -> add
    215:259:void buildTaskList() -> buildTaskList
    342:349:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    354:360:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    263:268:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    175:185:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    365:366:void prefetch(long) -> prefetch
    314:336:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    277:303:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    165:165:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    372:402:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    188:188:void <init>() -> <init>
    188:188:int compare(java.lang.Object,java.lang.Object) -> compare
    192:206:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    63:63:void <init>() -> <init>
    119:111:void addPosition(int,int) -> addPosition
    150:153:void clearPrefetchPositions() -> clearPrefetchPositions
    77:103:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    137:140:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    72:73:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    37:37:void <init>() -> <init>
    45:49:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    72:74:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    782:786:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,boolean) -> assignSpans
    190:195:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    310:310:void calculateItemBorders(int) -> calculateItemBorders
    321:338:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    252:252:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    185:186:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    511:518:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    389:410:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    364:365:void ensureViewSet() -> ensureViewSet
    417:437:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    227:231:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    243:246:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    132:140:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    118:126:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    344:348:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    451:463:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    467:484:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    488:505:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    746:748:void guessMeasurement(float,int) -> guessMeasurement
    526:699:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    712:732:void measureChild(android.view.View,int,boolean) -> measureChild
    753:761:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    355:360:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    995:1108:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    146:159:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    201:201:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:206:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    222:222:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    211:211:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    217:217:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    168:175:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    180:181:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    372:374:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    380:382:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    286:303:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    810:815:void setSpanCount(int) -> setSpanCount
    112:108:void setStackFromEnd(boolean) -> setStackFromEnd
    1117:1117:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    276:281:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1123:1123:void <init>() -> <init>
    1132:1132:int getSpanIndex(int,int) -> getSpanIndex
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1155:1152:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1159:1152:void <init>(int,int) -> <init>
    1163:1152:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1167:1152:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1189:1189:int getSpanIndex() -> getSpanIndex
    1199:1199:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    830:834:void <init>() -> <init>
    873:881:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    972:974:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    860:860:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:74:void <init>() -> <init>
    90:90:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    100:101:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    107:107:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    163:165:void <init>(android.content.Context,int,boolean) -> <init>
    177:181:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1349:1350:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    289:289:boolean canScrollHorizontally() -> canScrollHorizontally
    297:297:boolean canScrollVertically() -> canScrollVertically
    1308:1318:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1228:1248:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1217:1219:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1090:1090:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1080:1080:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1100:1100:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1120:1124:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1109:1113:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1131:1135:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    1095:1095:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1085:1085:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1105:1105:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1667:1650:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    998:998:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    987:988:void ensureLayoutState() -> ensureLayoutState
    1502:1552:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1830:1830:android.view.View findFirstPartiallyOrCompletelyInvisibleChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstPartiallyOrCompletelyInvisibleChild
    1775:1775:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstReferenceChild
    1731:1735:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1713:1717:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1857:1858:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1835:1835:android.view.View findLastPartiallyOrCompletelyInvisibleChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastPartiallyOrCompletelyInvisibleChild
    1779:1779:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastReferenceChild
    1897:1898:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    1946:1968:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    1924:1941:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1816:1817:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1824:1825:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1785:1800:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    1753:1754:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    1770:1771:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    401:414:android.view.View findViewByPosition(int) -> findViewByPosition
    908:921:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    933:946:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    194:194:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1701:1701:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1691:1691:android.view.View getChildClosestToStart() -> getChildClosestToStart
    438:439:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    324:324:int getOrientation() -> getOrientation
    983:983:boolean isLayoutRTL() -> isLayoutRTL
    1557:1625:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    702:748:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    228:231:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    1975:2010:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    237:240:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    483:664:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    672:676:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    273:275:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    246:266:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1478:1484:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1369:1373:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1434:1459:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleViewsFromEnd
    1398:1415:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleViewsFromStart
    1211:1212:boolean resolveIsInfinite() -> resolveIsInfinite
    356:357:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1322:1343:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1060:1063:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1072:1075:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    335:345:void setOrientation(int) -> setOrientation
    388:393:void setReverseLayout(boolean) -> setReverseLayout
    304:309:void setStackFromEnd(boolean) -> setStackFromEnd
    1630:1632:boolean shouldMeasureTwice() -> shouldMeasureTwice
    2085:2085:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    781:809:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    822:828:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    753:770:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1176:1207:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    954:954:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    958:964:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    968:968:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    972:978:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2379:2380:void <init>() -> <init>
    2395:2397:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2464:2471:void assignFromView(android.view.View,int) -> assignFromView
    2417:2457:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2411:2413:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2384:2387:void reset() -> reset
    2402:2402:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2475:2475:void <init>() -> <init>
    2482:2485:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2127:2206:void <init>() -> <init>
    2259:2259:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2263:2268:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2217:2217:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2227:2231:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2243:2251:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2273:2285:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2355:2355:void <clinit>() -> <clinit>
    2319:2319:void <init>() -> <init>
    2323:2326:void <init>(android.os.Parcel) -> <init>
    2329:2332:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2336:2336:boolean hasValidAnchor() -> hasValidAnchor
    2340:2340:void invalidateAnchor() -> invalidateAnchor
    2350:2352:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2356:2356:void <init>() -> <init>
    2356:2356:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2359:2359:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2356:2356:java.lang.Object[] newArray(int) -> newArray
    2364:2364:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:26:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    214:216:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:34:void reorderOps(java.util.List) -> reorderOps
    157:171:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:46:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    61:149:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    179:208:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    46:47:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    245:243:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:64:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    298:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    282:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    290:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    305:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    271:271:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    396:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    380:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    388:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    403:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    369:369:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    215:595:void <clinit>() -> <clinit>
    643:643:void <init>(android.content.Context) -> <init>
    647:647:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    651:726:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2441:2457:void absorbGlows(int,int) -> absorbGlows
    207:207:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    207:207:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    207:207:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    207:207:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1426:1435:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    2772:2773:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1563:1576:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1592:1592:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    2908:2908:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1701:1704:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4153:4155:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4171:4187:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4161:4164:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    2877:2885:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4464:4464:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3239:3240:void cancelTouch() -> cancelTouch
    4290:4290:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    5592:5606:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4344:4351:void clearOldPositions() -> clearOldPositions
    2007:2010:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1982:1985:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2030:2033:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2079:2082:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2055:2058:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2102:2105:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2418:2435:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1856:1859:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    779:810:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3403:3409:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4117:4118:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7267:7275:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7253:7261:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3471:3477:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3627:3652:void dispatchLayout() -> dispatchLayout
    3823:3907:void dispatchLayoutStep1() -> dispatchLayoutStep1
    3915:3933:void dispatchLayoutStep2() -> dispatchLayoutStep2
    3941:4024:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11332:11332:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11337:11337:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11320:11320:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11326:11326:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11307:11307:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11314:11314:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    2941:2963:boolean dispatchOnItemTouch(android.view.MotionEvent) -> dispatchOnItemTouch
    2924:2933:boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> dispatchOnItemTouchIntercept
    4984:4998:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    4944:4964:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11219:11232:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    1414:1414:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1406:1406:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    4219:4274:void draw(android.graphics.Canvas) -> draw
    4820:4820:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2502:2510:void ensureBottomGlow() -> ensureBottomGlow
    2462:2470:void ensureLeftGlow() -> ensureLeftGlow
    2475:2483:void ensureRightGlow() -> ensureRightGlow
    2488:2496:void ensureTopGlow() -> ensureTopGlow
    734:737:java.lang.String exceptionLabel() -> exceptionLabel
    3805:3811:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    4582:4585:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4600:4601:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    4091:4113:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    5570:5580:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    3692:3712:android.view.View findNextViewToFocus() -> findNextViewToFocus
    4714:4724:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    4776:4784:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    4736:4748:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2275:2318:boolean fling(int,int) -> fling
    2577:2651:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4295:4296:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4303:4304:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4311:4312:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1221:1221:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11236:11241:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    1248:1251:int getBaseline() -> getBaseline
    4148:4148:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    13220:13223:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    4559:4564:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4609:4609:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1094:1094:boolean getClipToPadding() -> getClipToPadding
    760:760:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    4886:4888:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    3793:3798:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2542:2542:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    830:836:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3546:3546:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    4895:4915:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1618:1618:int getItemDecorationCount() -> getItemDecorationCount
    1469:1469:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2360:2360:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2350:2350:int getMinFlingVelocity() -> getMinFlingVelocity
    5617:5618:long getNanoTime() -> getNanoTime
    1370:1370:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4531:4531:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1482:1482:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1530:1530:int getScrollState() -> getScrollState
    13250:13253:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4045:4069:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    11296:11296:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11301:11301:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5017:5018:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    1897:1903:boolean hasUpdatedView() -> hasUpdatedView
    963:963:void initAdapterManager() -> initAdapterManager
    748:749:void initAutofill() -> initAutofill
    840:840:void initChildrenHelper() -> initChildrenHelper
    11254:11251:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2515:2515:void invalidateGlows() -> invalidateGlows
    3467:3467:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    2848:2848:boolean isAttachedToWindow() -> isAttachedToWindow
    3501:3501:boolean isComputingLayout() -> isComputingLayout
    11271:11271:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2667:2717:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    4209:4214:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4492:4500:void markKnownViewsInvalid() -> markKnownViewsInvalid
    4868:4870:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    4830:4832:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4389:4402:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4355:4385:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4408:4432:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    2789:2817:void onAttachedToWindow() -> onAttachedToWindow
    2823:2839:void onDetachedFromWindow() -> onDetachedFromWindow
    4280:4284:void onDraw(android.graphics.Canvas) -> onDraw
    3444:3444:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3448:3448:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3452:3461:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3256:3297:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    2973:3072:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4193:4196:void onLayout(boolean,int,int,int,int) -> onLayout
    3306:3391:void onMeasure(int,int) -> onMeasure
    3244:3250:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    2779:2784:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1389:1397:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1375:1381:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    3414:3416:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3087:3225:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3554:3556:void postAnimationRunner() -> postAnimationRunner
    3561:3561:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3571:3598:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4482:4484:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2369:2389:void pullGlows(float,float,float,float) -> pullGlows
    4081:4087:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    3719:3788:void recoverFocusFromState() -> recoverFocusFromState
    2395:2412:void releaseGlows() -> releaseGlows
    1166:1178:void removeAndRecycleViews() -> removeAndRecycleViews
    1446:1457:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4124:4140:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1645:1654:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    2917:2919:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1713:1714:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5258:5267:void repositionShadowingViews() -> repositionShadowingViews
    2722:2725:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2739:2761:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    2767:2767:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3077:3082:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4201:4204:void requestLayout() -> requestLayout
    3677:3679:void resetFocusInfo() -> resetFocusInfo
    3231:3235:void resetTouch() -> resetTouch
    3657:3672:void saveFocusInfo() -> saveFocusInfo
    4330:4338:void saveOldPositions() -> saveOldPositions
    1792:1803:void scrollBy(int,int) -> scrollBy
    1925:1957:boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    1820:1843:void scrollStep(int,int,int[]) -> scrollStep
    1786:1786:void scrollTo(int,int) -> scrollTo
    3529:3532:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    769:770:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1155:1158:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1192:1210:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1671:1675:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11209:11214:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1070:1076:void setClipToPadding(boolean) -> setClipToPadding
    2528:2530:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1057:1057:void setHasFixedSize(boolean) -> setHasFixedSize
    3433:3439:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1520:1520:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2193:2208:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1310:1348:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    11266:11266:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1360:1360:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1688:1688:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4549:4549:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1494:1494:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1235:1235:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1534:1545:void setScrollState(int) -> setScrollState
    1107:1114:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1505:1505:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3513:3521:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2230:2230:void smoothScrollBy(int,int) -> smoothScrollBy
    2242:2257:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2120:2122:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11276:11276:boolean startNestedScroll(int) -> startNestedScroll
    11281:11281:boolean startNestedScroll(int,int) -> startNestedScroll
    2137:2167:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11286:11286:void stopNestedScroll() -> stopNestedScroll
    11291:11291:void stopNestedScroll(int) -> stopNestedScroll
    2330:2331:void stopScroll() -> stopScroll
    2338:2340:void stopScrollersInternal() -> stopScrollersInternal
    4442:4460:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    391:391:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    394:407:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    585:585:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    588:591:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    595:595:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    607:607:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    617:617:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    611:612:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    623:633:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    638:638:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    840:840:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    851:855:void addView(android.view.View,int) -> addView
    911:922:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    927:941:void detachViewFromParent(int) -> detachViewFromParent
    885:885:android.view.View getChildAt(int) -> getChildAt
    843:843:int getChildCount() -> getChildCount
    905:905:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    860:860:int indexOfChild(android.view.View) -> indexOfChild
    946:948:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    954:956:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    890:900:void removeAllViews() -> removeAllViews
    865:877:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    963:963:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1008:1010:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    966:972:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    998:999:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1032:1033:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1038:1040:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    983:985:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    991:992:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1004:1004:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1027:1027:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    6700:6702:void <init>() -> <init>
    6815:6829:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    6793:6803:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    6891:6891:boolean hasStableIds() -> hasStableIds
    7070:7070:void notifyDataSetChanged() -> notifyDataSetChanged
    6781:6781:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7003:7003:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7017:7017:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    11986:11986:void <init>() -> <init>
    11996:11997:void notifyChanged() -> notifyChanged
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    11452:11452:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5337:5337:void <init>() -> <init>
    5368:5368:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    12483:12546:void <init>() -> <init>
    12868:12874:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13087:13087:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    12952:12954:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13095:13099:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    12572:12572:long getAddDuration() -> getAddDuration
    12608:12608:long getChangeDuration() -> getChangeDuration
    12554:12554:long getMoveDuration() -> getMoveDuration
    12590:12590:long getRemoveDuration() -> getRemoveDuration
    13113:13113:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    12697:12697:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    12668:12668:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    12629:12629:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13180:13180:void <init>() -> <init>
    13192:13192:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13208:13212:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    12441:12441:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12446:12455:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    10444:10444:void <init>() -> <init>
    10496:10496:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    10521:10521:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    10455:10455:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    10477:10477:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    7296:7422:void <init>() -> <init>
    8253:8253:void addDisappearingView(android.view.View) -> addDisappearingView
    8271:8271:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8282:8282:void addView(android.view.View) -> addView
    8294:8294:void addView(android.view.View,int) -> addView
    8298:8347:void addViewInt(android.view.View,int,boolean) -> addViewInt
    7631:7632:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8539:8545:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    8560:8560:void attachView(android.view.View,int) -> attachView
    9442:9447:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    7610:7616:int chooseSize(int,int,int) -> chooseSize
    8927:8930:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    8519:8519:void detachViewAt(int) -> detachViewAt
    8526:8526:void detachViewInternal(int,android.view.View) -> detachViewInternal
    7847:7848:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    7852:7853:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8438:8445:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    8466:8474:android.view.View findViewByPosition(int) -> findViewByPosition
    8081:8086:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8105:8105:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    9477:9477:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    8668:8668:android.view.View getChildAt(int) -> getChildAt
    8658:8658:int getChildCount() -> getChildCount
    9181:9222:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    9573:9603:int[] getChildRectangleOnScreenScrollAmount(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> getChildRectangleOnScreenScrollAmount
    7964:7964:boolean getClipToPadding() -> getClipToPadding
    10267:10270:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9421:9421:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9373:9373:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9385:9385:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9249:9250:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9235:9236:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9409:9409:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9397:9397:int getDecoratedTop(android.view.View) -> getDecoratedTop
    8824:8828:android.view.View getFocusedChild() -> getFocusedChild
    8734:8734:int getHeight() -> getHeight
    8702:8702:int getHeightMode() -> getHeightMode
    8224:8224:int getLayoutDirection() -> getLayoutDirection
    9492:9492:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10022:10022:int getMinimumHeight() -> getMinimumHeight
    10014:10014:int getMinimumWidth() -> getMinimumWidth
    8774:8774:int getPaddingBottom() -> getPaddingBottom
    8744:8744:int getPaddingLeft() -> getPaddingLeft
    8764:8764:int getPaddingRight() -> getPaddingRight
    8754:8754:int getPaddingTop() -> getPaddingTop
    8408:8408:int getPosition(android.view.View) -> getPosition
    10374:10382:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    9507:9507:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10247:10250:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    9462:9462:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9341:9362:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    8718:8718:int getWidth() -> getWidth
    8685:8685:int getWidthMode() -> getWidthMode
    10408:10412:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    7864:7864:boolean isAttachedToWindow() -> isAttachedToWindow
    7725:7725:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9705:9716:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    7792:7792:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    9075:9076:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8211:8211:boolean isSmoothScrolling() -> isSmoothScrolling
    9685:9687:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9320:9322:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9104:9119:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    8591:8594:void moveView(int,int) -> moveView
    8858:8859:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    8870:8871:void offsetChildrenVertical(int) -> offsetChildrenVertical
    7955:7955:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    10136:10136:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10152:10161:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10087:10087:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10117:10131:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10167:10170:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10192:10197:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    9859:9859:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8019:8019:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    9995:9995:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    9730:9730:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    9752:9752:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10289:10289:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10305:10330:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10337:10337:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10077:10080:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    8963:8988:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    8635:8636:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    8646:8648:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    7898:7899:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    8360:8360:void removeView(android.view.View) -> removeView
    8372:8374:void removeViewAt(int) -> removeViewAt
    9625:9625:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    9645:9654:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    7581:7582:void requestLayout() -> requestLayout
    10211:10211:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    8935:8949:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    10388:10387:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    7491:7500:void setMeasureSpecs(int,int) -> setMeasureSpecs
    7570:7574:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10006:10006:void setMeasuredDimension(int,int) -> setMeasuredDimension
    7518:7546:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    7476:7487:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9042:9045:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    9028:9030:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    10045:10046:void stopSmoothScroller() -> stopSmoothScroller
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    7305:7305:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7318:7318:android.view.View getChildAt(int) -> getChildAt
    7341:7342:int getChildEnd(android.view.View) -> getChildEnd
    7334:7335:int getChildStart(android.view.View) -> getChildStart
    7328:7328:int getParentEnd() -> getParentEnd
    7323:7323:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    7351:7351:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7364:7364:android.view.View getChildAt(int) -> getChildAt
    7388:7389:int getChildEnd(android.view.View) -> getChildEnd
    7381:7382:int getChildStart(android.view.View) -> getChildStart
    7374:7375:int getParentEnd() -> getParentEnd
    7369:7369:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    10422:10422:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    11356:11353:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11360:11353:void <init>(int,int) -> <init>
    11364:11353:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11368:11353:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11372:11353:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11432:11432:int getViewLayoutPosition() -> getViewLayoutPosition
    11414:11414:boolean isItemChanged() -> isItemChanged
    11403:11403:boolean isItemRemoved() -> isItemRemoved
    11392:11392:boolean isViewInvalid() -> isViewInvalid
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    10609:10609:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    5380:5405:void <init>() -> <init>
    5523:5523:void attach() -> attach
    5411:5413:void clear() -> clear
    5527:5527:void detach() -> detach
    5507:5508:void factorInBindTime(int,long) -> factorInBindTime
    5501:5502:void factorInCreateTime(int,long) -> factorInCreateTime
    5449:5452:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5556:5559:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    5545:5551:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    5481:5490:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    5497:5497:long runningAverage(long,long) -> runningAverage
    5518:5518:boolean willBindInTime(int,long,long) -> willBindInTime
    5513:5513:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    5397:5401:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    5637:5647:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6250:6259:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6039:6048:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    5660:5661:void clear() -> clear
    6627:6639:void clearOldPositions() -> clearOldPositions
    6330:6332:void clearScrap() -> clearScrap
    5828:5830:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6481:6488:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6339:6358:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    6585:6588:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6322:6322:int getScrapCount() -> getScrapCount
    5692:5692:java.util.List getScrapList() -> getScrapList
    6429:6472:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6375:6415:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6326:6326:android.view.View getScrapViewAt(int) -> getScrapViewAt
    5854:5854:android.view.View getViewForPosition(int) -> getViewForPosition
    5858:5858:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6055:6056:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6061:6077:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    6645:6650:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    6611:6622:void markKnownViewsInvalid() -> markKnownViewsInvalid
    6529:6537:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    6510:6519:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    6550:6564:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6495:6496:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6268:6272:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6116:6122:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6141:6146:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6094:6103:void recycleView(android.view.View) -> recycleView
    6155:6159:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6285:6294:void scrapView(android.view.View) -> scrapView
    6575:6580:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    6571:6571:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    5670:5671:void setViewCacheSize(int) -> setViewCacheSize
    5744:5757:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    5882:5885:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6311:6318:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    5675:5681:void updateViewCacheSize() -> updateViewCacheSize
    5706:5715:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    6593:6603:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    5276:5276:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5281:5286:void onChanged() -> onChanged
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    12078:12078:void <clinit>() -> <clinit>
    12056:12057:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12065:12065:void <init>(android.os.Parcelable) -> <init>
    12075:12075:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12070:12071:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    12078:12078:void <init>() -> <init>
    12078:12078:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12078:12078:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12081:12081:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12086:12086:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12078:12078:java.lang.Object[] newArray(int) -> newArray
    12091:12091:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    12106:12177:void <init>() -> <init>
    12112:12115:void assertLayoutStep(int) -> assertLayoutStep
    12366:12366:int getItemCount() -> getItemCount
    12321:12321:int getTargetScrollPosition() -> getTargetScrollPosition
    12330:12330:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12245:12245:boolean isPreLayout() -> isPreLayout
    12214:12218:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    12395:12395:java.lang.String toString() -> toString
    12256:12256:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5033:5034:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5202:5220:int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    5159:5160:void disableRunOnAnimationRequests() -> disableRunOnAnimationRequests
    5198:5198:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    5164:5166:void enableRunOnAnimationRequests() -> enableRunOnAnimationRequests
    5180:5184:void fling(int,int) -> fling
    5171:5175:void postOnAnimation() -> postOnAnimation
    5039:5155:void run() -> run
    5228:5228:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5233:5246:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5250:5251:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    10804:10804:void <clinit>() -> <clinit>
    10831:10833:void <init>(android.view.View) -> <init>
    11042:11045:void addChangePayload(java.lang.Object) -> addChangePayload
    11037:11037:void addFlags(int) -> addFlags
    10861:10862:void clearOldPosition() -> clearOldPosition
    11057:11060:void clearPayload() -> clearPayload
    10988:10988:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    10992:10992:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11050:11052:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11195:11195:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    10839:10841:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    10937:10940:int getAdapterPosition() -> getAdapterPosition
    10965:10965:long getItemId() -> getItemId
    10972:10972:int getItemViewType() -> getItemViewType
    10911:10911:int getLayoutPosition() -> getLayoutPosition
    10955:10955:int getOldPosition() -> getOldPosition
    11064:11073:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11021:11021:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11029:11029:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11013:11013:boolean isBound() -> isBound
    11005:11005:boolean isInvalid() -> isInvalid
    11178:11179:boolean isRecyclable() -> isRecyclable
    11017:11017:boolean isRemoved() -> isRemoved
    10976:10976:boolean isScrap() -> isScrap
    11025:11025:boolean isTmpDetached() -> isTmpDetached
    11199:11199:boolean isUpdated() -> isUpdated
    11009:11009:boolean needsUpdate() -> needsUpdate
    10845:10856:void offsetPosition(int,boolean) -> offsetPosition
    11097:11103:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11111:11113:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11078:11089:void resetInternal() -> resetInternal
    10866:10867:void saveOldPosition() -> saveOldPosition
    11033:11033:void setFlags(int,int) -> setFlags
    11153:11165:void setIsRecyclable(boolean) -> setIsRecyclable
    11000:11001:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11187:11187:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    10872:10872:boolean shouldIgnore() -> shouldIgnore
    11118:11136:java.lang.String toString() -> toString
    10980:10980:void unScrap() -> unScrap
    10984:10984:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    37:39:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    86:86:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    69:74:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    60:63:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    48:52:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    43:43:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    105:106:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    111:115:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    121:127:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:52:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:138:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:302:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:344:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:317:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:357:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:292:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:335:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:277:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:326:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    229:235:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1808:1809:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    786:817:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1867:1869:boolean areAllEndsEqual() -> areAllEndsEqual
    1877:1879:boolean areAllStartsEqual() -> areAllStartsEqual
    528:529:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1752:1762:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2045:2049:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2029:2029:boolean canScrollHorizontally() -> canScrollHorizontally
    2024:2024:boolean canScrollVertically() -> canScrollVertically
    270:310:boolean checkForGaps() -> checkForGaps
    2275:2275:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    403:414:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2125:2155:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1088:1088:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1068:1068:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1108:1108:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1092:1095:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1072:1075:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1112:1115:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    1103:1103:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1083:1083:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1123:1123:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2415:2398:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1734:1737:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1743:1746:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    258:260:void createOrientationHelpers() -> createOrientationHelpers
    1577:1730:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    2220:2223:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1389:1395:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1359:1366:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1329:1331:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2237:2239:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1413:1426:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1432:1445:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2250:2254:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2261:2261:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2266:2269:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1346:1349:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    2210:2211:int getFirstChildPosition() -> getFirstChildPosition
    2205:2206:int getLastChildPosition() -> getLastChildPosition
    1887:1889:int getMaxEnd(int) -> getMaxEnd
    1845:1847:int getMaxStart(int) -> getMaxStart
    1898:1900:int getMinEnd(int) -> getMinEnd
    1856:1858:int getMinStart(int) -> getMinStart
    1982:2012:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    1337:1340:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    1533:1571:void handleUpdate(int,int,int) -> handleUpdate
    340:392:android.view.View hasGapsToFix() -> hasGapsToFix
    549:550:void invalidateSpanAssignments() -> invalidateSpanAssignments
    254:254:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    568:568:boolean isLayoutRTL() -> isLayoutRTL
    1128:1172:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1193:1203:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1488:1490:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1496:1498:void offsetChildrenVertical(int) -> offsetChildrenVertical
    323:330:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2286:2372:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1304:1318:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1283:1295:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    1509:1509:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1514:1515:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1520:1520:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1504:1504:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1526:1526:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    605:605:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    611:720:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    726:730:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1222:1224:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1232:1272:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    317:317:void onScrollStateChanged(int) -> onScrollStateChanged
    1972:1975:boolean preferLastSpan(int) -> preferLastSpan
    2164:2173:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1815:1816:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1768:1800:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1938:1961:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1909:1930:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    734:776:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    560:561:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2177:2200:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2035:2035:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2041:2041:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1481:1482:void setLayoutStateDirection(int) -> setLayoutStateDirection
    587:600:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    450:460:void setOrientation(int) -> setOrientation
    477:482:void setReverseLayout(boolean) -> setReverseLayout
    429:438:void setSpanCount(int) -> setSpanCount
    935:935:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1821:1825:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    840:843:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    849:855:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    822:832:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1450:1477:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    927:929:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1830:1839:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1212:1214:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    216:216:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    219:219:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3266:3267:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3293:3294:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3298:3301:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3271:3277:void reset() -> reset
    3282:3288:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2452:2452:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2456:2456:void <init>(int,int) -> <init>
    2460:2460:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2464:2464:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2500:2503:int getSpanIndex() -> getSpanIndex
    2490:2490:boolean isFullSpan() -> isFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2840:2840:void <init>() -> <init>
    3009:3028:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2917:2920:void clear() -> clear
    2905:2912:void ensureSize(int) -> ensureSize
    2851:2859:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3053:3062:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3032:3037:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2884:2887:int getSpan(int) -> getSpan
    2866:2878:int invalidateAfter(int) -> invalidateAfter
    2983:3003:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2954:2962:void offsetForAddition(int,int) -> offsetForAddition
    2924:2932:void offsetForRemoval(int,int) -> offsetForRemoval
    2966:2974:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2936:2948:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2892:2893:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2897:2897:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3130:3130:void <clinit>() -> <clinit>
    3084:3091:void <init>(android.os.Parcel) -> <init>
    3095:3095:void <init>() -> <init>
    3099:3099:int getGapForSpan(int) -> getGapForSpan
    3122:3126:java.lang.String toString() -> toString
    3109:3116:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3131:3131:void <init>() -> <init>
    3131:3131:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3134:3134:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3131:3131:java.lang.Object[] newArray(int) -> newArray
    3139:3139:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3238:3238:void <clinit>() -> <clinit>
    3162:3162:void <init>() -> <init>
    3165:3183:void <init>(android.os.Parcel) -> <init>
    3187:3197:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3201:3205:void invalidateSpanInfo() -> invalidateSpanInfo
    3222:3235:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3239:3239:void <init>() -> <init>
    3239:3239:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3242:3242:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3239:3239:java.lang.Object[] newArray(int) -> newArray
    3247:3247:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2517:2518:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2602:2610:void appendToSpan(android.view.View) -> appendToSpan
    2618:2633:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2567:2574:void calculateCachedEnd() -> calculateCachedEnd
    2533:2540:void calculateCachedStart() -> calculateCachedStart
    2637:2639:void clear() -> clear
    2702:2704:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2720:2722:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2758:2781:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2795:2795:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2679:2679:int getDeletedSize() -> getDeletedSize
    2555:2563:int getEndLine(int) -> getEndLine
    2581:2585:int getEndLine() -> getEndLine
    2805:2825:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2683:2683:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2522:2529:int getStartLine(int) -> getStartLine
    2547:2551:int getStartLine() -> getStartLine
    2643:2644:void invalidateCache() -> invalidateCache
    2687:2691:void onOffset(int) -> onOffset
    2652:2662:void popEnd() -> popEnd
    2666:2675:void popStart() -> popStart
    2589:2597:void prependToSpan(android.view.View) -> prependToSpan
    2648:2648:void setLine(int) -> setLine
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:133:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    217:237:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    252:257:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    152:152:void addFlags(int) -> addFlags
    170:189:boolean boundsMatch() -> boundsMatch
    156:156:void resetFlags() -> resetFlags
    141:144:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    35:45:void <init>() -> <init>
    143:149:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    196:201:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    130:130:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    180:186:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    62:68:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    52:53:void clear() -> clear
    171:171:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    72:73:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    159:160:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    271:271:void onDetach() -> onDetach
    275:275:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    99:112:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    95:95:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    84:84:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    217:249:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    209:213:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    258:266:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    305:305:void <clinit>() -> <clinit>
    307:307:void <init>() -> <init>
    324:324:void drainCache() -> drainCache
    311:312:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    316:319:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.slidingpanelayout.widget.SlidingPaneLayout -> androidx.slidingpanelayout.widget.SlidingPaneLayout:
    241:241:void <init>(android.content.Context) -> <init>
    245:245:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    249:260:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1288:1288:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    853:854:boolean closePane(android.view.View,int) -> closePane
    901:901:boolean closePane() -> closePane
    1097:1103:void computeScroll() -> computeScroll
    962:982:void dimChildView(android.view.View,float,int) -> dimChildView
    338:341:void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    331:334:void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    325:326:void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    1175:1205:void draw(android.graphics.Canvas) -> draw
    988:1005:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1276:1276:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1281:1281:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1293:1293:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    317:317:int getCoveredFadeColor() -> getCoveredFadeColor
    282:282:int getParallaxDistance() -> getParallaxDistance
    299:299:int getSliderFadeColor() -> getSliderFadeColor
    1015:1058:void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    1270:1271:boolean isDimmed(android.view.View) -> isDimmed
    1617:1617:boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    911:911:boolean isOpen() -> isOpen
    930:930:boolean isSlideable() -> isSlideable
    420:421:void onAttachedToWindow() -> onAttachedToWindow
    426:433:void onDetachedFromWindow() -> onDetachedFromWindow
    754:768:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    650:732:void onLayout(boolean,int,int,int,int) -> onLayout
    438:644:void onMeasure(int,int) -> onMeasure
    934:958:void onPanelDragged(int) -> onPanelDragged
    1308:1321:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1298:1301:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    737:740:void onSizeChanged(int,int,int,int) -> onSizeChanged
    814:827:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    861:862:boolean openPane(android.view.View,int) -> openPane
    883:883:boolean openPane() -> openPane
    1209:1226:void parallaxOtherViews(float) -> parallaxOtherViews
    746:748:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    391:394:void setAllChildrenVisible() -> setAllChildrenVisible
    309:309:void setCoveredFadeColor(int) -> setCoveredFadeColor
    321:321:void setPanelSlideListener(androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    271:272:void setParallaxDistance(int) -> setParallaxDistance
    1116:1116:void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    1126:1126:void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    1136:1136:void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    1150:1150:void setShadowResource(int) -> setShadowResource
    1160:1160:void setShadowResourceLeft(int) -> setShadowResourceLeft
    1170:1170:void setShadowResourceRight(int) -> setShadowResourceRight
    291:291:void setSliderFadeColor(int) -> setSliderFadeColor
    1069:1089:boolean smoothSlideTo(float,int) -> smoothSlideTo
    345:386:void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    400:413:boolean viewIsOpaque(android.view.View) -> viewIsOpaque
androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate -> androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate:
    1513:1514:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1572:1595:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    1562:1562:boolean filter(android.view.View) -> filter
    1547:1549:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1518:1540:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1555:1556:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable -> androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable:
    1602:1603:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout,android.view.View) -> <init>
    1608:1612:void run() -> run
androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback -> androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback:
    1326:1326:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1393:1404:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1413:1413:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1388:1388:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    1418:1418:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    1355:1355:void onViewCaptured(android.view.View,int) -> onViewCaptured
    1340:1347:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1360:1361:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1366:1383:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1331:1335:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams -> androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams:
    1423:1423:void <clinit>() -> <clinit>
    1447:1431:void <init>() -> <init>
    1455:1431:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1459:1431:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1468:1472:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState:
    1495:1495:void <clinit>() -> <clinit>
    1481:1481:void <init>(android.os.Parcelable) -> <init>
    1485:1486:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1491:1492:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1 -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1:
    1495:1495:void <init>() -> <init>
    1495:1495:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1495:1495:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1498:1498:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1503:1503:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1495:1495:java.lang.Object[] newArray(int) -> newArray
    1508:1508:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
androidx.swiperefreshlayout.widget.CircleImageView -> androidx.swiperefreshlayout.widget.CircleImageView:
    53:75:void <init>(android.content.Context,int) -> <init>
    79:79:boolean elevationSupported() -> elevationSupported
    105:107:void onAnimationEnd() -> onAnimationEnd
    97:99:void onAnimationStart() -> onAnimationStart
    84:86:void onMeasure(int,int) -> onMeasure
    92:92:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    122:123:void setBackgroundColor(int) -> setBackgroundColor
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow -> androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow:
    131:135:void <init>(androidx.swiperefreshlayout.widget.CircleImageView,int) -> <init>
    146:149:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    140:141:void onResize(float,float) -> onResize
    153:156:void updateRadialGradient(int) -> updateRadialGradient
androidx.swiperefreshlayout.widget.CircularProgressDrawable -> androidx.swiperefreshlayout.widget.CircularProgressDrawable:
    67:97:void <clinit>() -> <clinit>
    138:145:void <init>(android.content.Context) -> <init>
    516:526:void applyFinishTranslation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> applyFinishTranslation
    534:561:void applyTransformation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring,boolean) -> applyTransformation
    399:403:void draw(android.graphics.Canvas) -> draw
    414:414:int getAlpha() -> getAlpha
    438:438:boolean isRunning() -> isRunning
    408:409:void setAlpha(int) -> setAlpha
    280:281:void setArrowEnabled(boolean) -> setArrowEnabled
    299:300:void setArrowScale(float) -> setArrowScale
    419:420:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    392:394:void setColorSchemeColors(int[]) -> setColorSchemeColors
    350:351:void setProgressRotation(float) -> setProgressRotation
    424:424:void setRotation(float) -> setRotation
    151:158:void setSizeParameters(float,float,float,float) -> setSizeParameters
    330:332:void setStartEndTrim(float,float) -> setStartEndTrim
    192:193:void setStrokeWidth(float) -> setStrokeWidth
    169:174:void setStyle(int) -> setStyle
    566:615:void setupAnimators() -> setupAnimators
    446:457:void start() -> start
    466:471:void stop() -> stop
    501:504:void updateRingColor(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> updateRingColor
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$1:
    568:568:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    571:574:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$2:
    580:580:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    599:611:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    584:584:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring:
    650:658:void <init>() -> <init>
    692:720:void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    724:751:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> drawTriangle
    835:835:int getAlpha() -> getAlpha
    875:875:float getEndTrim() -> getEndTrim
    805:805:int getNextColor() -> getNextColor
    809:809:int getNextColorIndex() -> getNextColorIndex
    855:855:float getStartTrim() -> getStartTrim
    867:867:int getStartingColor() -> getStartingColor
    863:863:float getStartingEndTrim() -> getStartingEndTrim
    927:927:float getStartingRotation() -> getStartingRotation
    859:859:float getStartingStartTrim() -> getStartingStartTrim
    817:817:void goToNextColor() -> goToNextColor
    944:949:void resetOriginals() -> resetOriginals
    828:828:void setAlpha(int) -> setAlpha
    668:669:void setArrowDimensions(float,float) -> setArrowDimensions
    914:915:void setArrowScale(float) -> setArrowScale
    890:890:void setCenterRadius(float) -> setCenterRadius
    778:778:void setColor(int) -> setColor
    821:821:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    797:798:void setColorIndex(int) -> setColorIndex
    761:763:void setColors(int[]) -> setColors
    871:871:void setEndTrim(float) -> setEndTrim
    879:879:void setRotation(float) -> setRotation
    901:902:void setShowArrow(boolean) -> setShowArrow
    851:851:void setStartTrim(float) -> setStartTrim
    842:843:void setStrokeWidth(float) -> setStrokeWidth
    935:937:void storeOriginals() -> storeOriginals
androidx.swiperefreshlayout.widget.SwipeRefreshLayout -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout:
    140:140:void <clinit>() -> <clinit>
    340:340:void <init>(android.content.Context) -> <init>
    350:378:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1089:1097:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    1101:1113:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    672:678:boolean canChildScrollUp() -> canChildScrollUp
    398:403:void createProgressView() -> createProgressView
    903:903:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    908:908:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    885:885:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    879:879:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    587:591:void ensureTarget() -> ensureTarget
    968:996:void finishSpinner(float) -> finishSpinner
    383:383:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    813:813:int getNestedScrollAxes() -> getNestedScrollAxes
    664:664:int getProgressCircleDiameter() -> getProgressCircleDiameter
    279:279:int getProgressViewEndOffset() -> getProgressViewEndOffset
    271:271:int getProgressViewStartOffset() -> getProgressViewStartOffset
    873:873:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    912:912:boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    858:858:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    916:964:void moveSpinner(float) -> moveSpinner
    1136:1138:void moveToStart(float) -> moveToStart
    229:230:void onDetachedFromWindow() -> onDetachedFromWindow
    692:745:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    609:628:void onLayout(boolean,int,int,int,int) -> onLayout
    634:651:void onMeasure(int,int) -> onMeasure
    898:898:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    892:892:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    783:807:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    834:845:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    772:776:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1175:1181:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    765:765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    818:827:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1002:1018:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    753:757:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    206:216:void reset() -> reset
    460:461:void setAnimationProgress(float) -> setAnimationProgress
    545:545:void setColorScheme(int[]) -> setColorScheme
    572:573:void setColorSchemeColors(int[]) -> setColorSchemeColors
    556:561:void setColorSchemeResources(int[]) -> setColorSchemeResources
    234:235:void setColorViewAlpha(int) -> setColorViewAlpha
    604:604:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    221:223:void setEnabled(boolean) -> setEnabled
    853:853:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    687:687:void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    411:411:void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    519:519:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    537:537:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    528:528:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    296:298:void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    258:263:void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    421:434:void setRefreshing(boolean) -> setRefreshing
    465:472:void setRefreshing(boolean,boolean) -> setRefreshing
    320:331:void setSize(int) -> setSize
    310:310:void setSlingshotDistance(int) -> setSlingshotDistance
    1169:1171:void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    499:510:android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    1080:1084:void startDragging(float) -> startDragging
    863:863:boolean startNestedScroll(int) -> startNestedScroll
    495:495:void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    491:491:void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    478:487:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    1150:1165:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    439:452:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    868:868:void stopNestedScroll() -> stopNestedScroll
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1:
    178:178:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    189:200:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2:
    441:441:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    444:444:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3:
    478:478:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    481:481:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4:
    499:499:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,int,int) -> <init>
    502:502:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5:
    976:976:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    984:985:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6:
    1117:1117:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1122:1130:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7:
    1141:1141:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1144:1144:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8:
    1152:1152:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1155:1157:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.transition.AnimatorUtils -> androidx.transition.AnimatorUtils:
    31:32:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    37:45:void pause(android.animation.Animator) -> pause
    53:61:void resume(android.animation.Animator) -> resume
androidx.transition.AutoTransition -> androidx.transition.AutoTransition:
    37:38:void <init>() -> <init>
    47:50:void init() -> init
androidx.transition.ChangeBounds -> androidx.transition.ChangeBounds:
    60:167:void <clinit>() -> <clinit>
    169:165:void <init>() -> <init>
    241:241:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    236:236:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    217:229:void captureValues(androidx.transition.TransitionValues) -> captureValues
    264:445:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    185:185:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    246:251:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
androidx.transition.ChangeBounds$1 -> androidx.transition.ChangeBounds$1:
    69:70:void <init>(java.lang.Class,java.lang.String) -> <init>
    69:69:java.lang.Object get(java.lang.Object) -> get
    81:82:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    69:69:void set(java.lang.Object,java.lang.Object) -> set
    74:76:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$10 -> androidx.transition.ChangeBounds$10:
    445:445:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    448:449:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> androidx.transition.ChangeBounds$2:
    87:87:void <init>(java.lang.Class,java.lang.String) -> <init>
    87:87:java.lang.Object get(java.lang.Object) -> get
    87:87:void set(java.lang.Object,java.lang.Object) -> set
    90:90:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$3 -> androidx.transition.ChangeBounds$3:
    100:100:void <init>(java.lang.Class,java.lang.String) -> <init>
    100:100:java.lang.Object get(java.lang.Object) -> get
    100:100:void set(java.lang.Object,java.lang.Object) -> set
    103:103:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$4 -> androidx.transition.ChangeBounds$4:
    113:113:void <init>(java.lang.Class,java.lang.String) -> <init>
    113:113:java.lang.Object get(java.lang.Object) -> get
    113:113:void set(java.lang.Object,java.lang.Object) -> set
    116:120:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$5 -> androidx.transition.ChangeBounds$5:
    130:130:void <init>(java.lang.Class,java.lang.String) -> <init>
    130:130:java.lang.Object get(java.lang.Object) -> get
    130:130:void set(java.lang.Object,java.lang.Object) -> set
    133:137:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$6 -> androidx.transition.ChangeBounds$6:
    147:147:void <init>(java.lang.Class,java.lang.String) -> <init>
    147:147:java.lang.Object get(java.lang.Object) -> get
    147:147:void set(java.lang.Object,java.lang.Object) -> set
    150:154:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$7 -> androidx.transition.ChangeBounds$7:
    323:326:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> androidx.transition.ChangeBounds$8:
    367:367:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    372:372:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    377:379:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> androidx.transition.ChangeBounds$9:
    391:392:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    402:405:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    410:410:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    415:415:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeBounds$ViewBounds -> androidx.transition.ChangeBounds$ViewBounds:
    468:469:void <init>(android.view.View) -> <init>
    482:486:void setBottomRight(android.graphics.PointF) -> setBottomRight
    491:493:void setLeftTopRightBottom() -> setLeftTopRightBottom
    473:477:void setTopLeft(android.graphics.PointF) -> setTopLeft
androidx.transition.Fade -> androidx.transition.Fade:
    90:91:void <init>(int) -> <init>
    112:113:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    124:132:android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    170:172:float getStartAlpha(androidx.transition.TransitionValues,float) -> getStartAlpha
    152:156:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    162:164:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade$1 -> androidx.transition.Fade$1:
    132:132:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    135:137:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.Fade$FadeAnimatorListener -> androidx.transition.Fade$FadeAnimatorListener:
    183:184:void <init>(android.view.View) -> <init>
    198:200:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    189:192:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FragmentTransitionSupport -> androidx.transition.FragmentTransitionSupport:
    39:39:void <init>() -> <init>
    292:293:void addTarget(java.lang.Object,android.view.View) -> addTarget
    99:116:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    210:210:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    43:43:boolean canHandle(java.lang.Object) -> canHandle
    50:50:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    123:125:boolean hasSimpleTarget(androidx.transition.Transition) -> hasSimpleTarget
    183:201:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    131:139:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    300:301:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    265:283:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    147:148:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    218:219:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    84:88:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    308:309:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    68:78:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    254:258:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    60:61:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.transition.FragmentTransitionSupport$1 -> androidx.transition.FragmentTransitionSupport$1:
    88:88:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.FragmentTransitionSupport$2 -> androidx.transition.FragmentTransitionSupport$2:
    148:148:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    155:159:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.FragmentTransitionSupport$3 -> androidx.transition.FragmentTransitionSupport$3:
    219:219:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    222:229:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$4 -> androidx.transition.FragmentTransitionSupport$4:
    309:309:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.ObjectAnimatorUtils -> androidx.transition.ObjectAnimatorUtils:
    28:31:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.PathMotion -> androidx.transition.PathMotion:
    43:43:void <init>() -> <init>
androidx.transition.PathProperty -> androidx.transition.PathProperty:
    45:48:void <init>(android.util.Property,android.graphics.Path) -> <init>
    35:35:java.lang.Object get(java.lang.Object) -> get
    53:53:java.lang.Float get(java.lang.Object) -> get
    35:35:void set(java.lang.Object,java.lang.Object) -> set
    58:62:void set(java.lang.Object,java.lang.Float) -> set
androidx.transition.PropertyValuesHolderUtils -> androidx.transition.PropertyValuesHolderUtils:
    38:41:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.RectEvaluator -> androidx.transition.RectEvaluator:
    39:39:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
androidx.transition.Scene -> androidx.transition.Scene:
    149:151:void exit() -> exit
    207:207:androidx.transition.Scene getCurrentScene(android.view.View) -> getCurrentScene
    196:196:void setCurrentScene(android.view.View,androidx.transition.Scene) -> setCurrentScene
androidx.transition.Transition -> androidx.transition.Transition:
    163:204:void <clinit>() -> <clinit>
    262:254:void <init>() -> <init>
    2033:2036:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    998:998:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    644:657:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1531:1564:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> addViewValues
    1896:1914:void animate(android.animation.Animator) -> animate
    1601:1650:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    2180:2193:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    1468:1523:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1577:1583:void clearValues(boolean) -> clearValues
    119:119:java.lang.Object clone() -> clone
    2215:2220:androidx.transition.Transition clone() -> clone
    707:798:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1954:1976:void end() -> end
    354:354:long getDuration() -> getDuration
    2124:2124:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    409:409:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1682:1704:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2241:2241:java.lang.String getName() -> getName
    2094:2094:androidx.transition.PathMotion getPathMotion() -> getPathMotion
    2172:2172:androidx.transition.TransitionPropagation getPropagation() -> getPropagation
    857:860:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    381:381:long getStartDelay() -> getStartDelay
    1412:1412:java.util.List getTargetIds() -> getTargetIds
    1441:1441:java.util.List getTargetNames() -> getTargetNames
    1456:1456:java.util.List getTargetTypes() -> getTargetTypes
    1426:1426:java.util.List getTargets() -> getTargets
    1663:1667:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1840:1850:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    814:848:boolean isValidTarget(android.view.View) -> isValidTarget
    1862:1873:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> isValueChanged
    591:603:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    543:550:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    564:576:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    618:630:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    664:686:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> matchStartAndEnd
    1718:1737:void pause(android.view.View) -> pause
    1781:1818:void playTransition(android.view.ViewGroup) -> playTransition
    2049:2054:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    1096:1096:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    1750:1771:void resume(android.view.View) -> resume
    896:908:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    876:889:void runAnimators() -> runAnimators
    341:341:androidx.transition.Transition setDuration(long) -> setDuration
    2109:2109:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    395:395:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    2077:2079:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    2155:2155:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    368:368:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    1927:1938:void start() -> start
    2209:2209:java.lang.String toString() -> toString
    2245:2274:java.lang.String toString(java.lang.String) -> toString
androidx.transition.Transition$1 -> androidx.transition.Transition$1:
    170:170:void <init>() -> <init>
    173:175:android.graphics.Path getPath(float,float,float,float) -> getPath
androidx.transition.Transition$2 -> androidx.transition.Transition$2:
    896:896:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    904:905:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    899:899:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> androidx.transition.Transition$3:
    1907:1907:void <init>(androidx.transition.Transition) -> <init>
    1910:1911:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> androidx.transition.Transition$AnimationInfo:
    2359:2364:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$EpicenterCallback -> androidx.transition.Transition$EpicenterCallback:
    2422:2422:void <init>() -> <init>
androidx.transition.TransitionListenerAdapter -> androidx.transition.TransitionListenerAdapter:
    27:27:void <init>() -> <init>
androidx.transition.TransitionManager -> androidx.transition.TransitionManager:
    83:90:void <clinit>() -> <clinit>
    402:414:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> beginDelayedTransition
    195:205:androidx.collection.ArrayMap getRunningTransitions() -> getRunningTransitions
    212:214:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeRunTransition
    303:318:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeSetup
androidx.transition.TransitionManager$MultiListener -> androidx.transition.TransitionManager$MultiListener:
    233:235:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    263:295:boolean onPreDraw() -> onPreDraw
    249:258:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    239:240:void removeListeners() -> removeListeners
androidx.transition.TransitionManager$MultiListener$1 -> androidx.transition.TransitionManager$MultiListener$1:
    282:282:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    285:286:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet -> androidx.transition.TransitionSet:
    109:87:void <init>() -> <init>
    61:61:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    299:299:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> addListener
    61:61:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    263:266:androidx.transition.TransitionSet addTarget(android.view.View) -> addTarget
    176:191:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> addTransition
    526:530:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    538:541:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    514:518:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    61:61:java.lang.Object clone() -> clone
    639:643:androidx.transition.Transition clone() -> clone
    456:470:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    215:218:androidx.transition.Transition getTransitionAt(int) -> getTransitionAt
    204:204:int getTransitionCount() -> getTransitionCount
    549:552:void pause(android.view.View) -> pause
    61:61:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    377:377:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    61:61:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    314:317:androidx.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    560:563:void resume(android.view.View) -> resume
    481:507:void runAnimators() -> runAnimators
    61:61:androidx.transition.Transition setDuration(long) -> setDuration
    231:235:androidx.transition.TransitionSet setDuration(long) -> setDuration
    620:624:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    61:61:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    250:257:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    134:137:androidx.transition.TransitionSet setOrdering(int) -> setOrdering
    382:385:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    610:614:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    61:61:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    244:244:androidx.transition.TransitionSet setStartDelay(long) -> setStartDelay
    408:412:void setupStartEndListeners() -> setupStartEndListeners
    630:632:java.lang.String toString(java.lang.String) -> toString
androidx.transition.TransitionSet$1 -> androidx.transition.TransitionSet$1:
    493:493:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    496:497:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet$TransitionSetListener -> androidx.transition.TransitionSet$TransitionSetListener:
    423:424:void <init>(androidx.transition.TransitionSet) -> <init>
    437:443:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    429:431:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionUtils -> androidx.transition.TransitionUtils:
    35:39:void <clinit>() -> <clinit>
    51:71:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    93:138:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> createViewBitmap
    149:150:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
androidx.transition.TransitionValues -> androidx.transition.TransitionValues:
    43:58:void <init>() -> <init>
    62:64:boolean equals(java.lang.Object) -> equals
    74:74:int hashCode() -> hashCode
    79:83:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> androidx.transition.TransitionValuesMaps:
    25:33:void <init>() -> <init>
androidx.transition.ViewGroupOverlayApi14 -> androidx.transition.ViewGroupOverlayApi14:
    28:28:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    37:37:void add(android.view.View) -> add
    32:32:androidx.transition.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup) -> createFrom
    42:42:void remove(android.view.View) -> remove
androidx.transition.ViewGroupOverlayApi18 -> androidx.transition.ViewGroupOverlayApi18:
    32:33:void <init>(android.view.ViewGroup) -> <init>
    38:38:void add(android.graphics.drawable.Drawable) -> add
    53:53:void add(android.view.View) -> add
    48:48:void remove(android.graphics.drawable.Drawable) -> remove
    58:58:void remove(android.view.View) -> remove
androidx.transition.ViewGroupUtils -> androidx.transition.ViewGroupUtils:
    33:36:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    43:46:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtilsApi14 -> androidx.transition.ViewGroupUtilsApi14:
    109:122:void cancelLayoutTransition(android.animation.LayoutTransition) -> cancelLayoutTransition
    45:103:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtilsApi14$1 -> androidx.transition.ViewGroupUtilsApi14$1:
    46:46:void <init>() -> <init>
androidx.transition.ViewGroupUtilsApi18 -> androidx.transition.ViewGroupUtilsApi18:
    50:58:void fetchSuppressLayoutMethod() -> fetchSuppressLayoutMethod
    37:42:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewOverlayApi14 -> androidx.transition.ViewOverlayApi14:
    47:48:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    89:89:void add(android.graphics.drawable.Drawable) -> add
    65:74:androidx.transition.ViewOverlayApi14 createFrom(android.view.View) -> createFrom
    54:58:android.view.ViewGroup getContentView(android.view.View) -> getContentView
    99:99:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewOverlayApi14$OverlayViewGroup -> androidx.transition.ViewOverlayApi14$OverlayViewGroup:
    134:134:void <clinit>() -> <clinit>
    158:164:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,androidx.transition.ViewOverlayApi14) -> <init>
    174:182:void add(android.graphics.drawable.Drawable) -> add
    200:223:void add(android.view.View) -> add
    252:263:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    282:287:void getOffset(int[]) -> getOffset
    330:341:android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect) -> invalidateChildInParent
    247:247:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    241:242:boolean isEmpty() -> isEmpty
    187:190:void remove(android.graphics.drawable.Drawable) -> remove
    227:229:void remove(android.view.View) -> remove
    196:196:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.transition.ViewOverlayApi18 -> androidx.transition.ViewOverlayApi18:
    31:32:void <init>(android.view.View) -> <init>
    37:37:void add(android.graphics.drawable.Drawable) -> add
    47:47:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewUtils -> androidx.transition.ViewUtils:
    45:74:void <clinit>() -> <clinit>
    131:131:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    214:221:void fetchViewFlagsField() -> fetchViewFlagsField
    93:96:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    114:114:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    103:106:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    122:122:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    210:210:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    110:110:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    148:152:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    172:172:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    188:188:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtils$1 -> androidx.transition.ViewUtils$1:
    60:60:void <init>(java.lang.Class,java.lang.String) -> <init>
    60:60:java.lang.Object get(java.lang.Object) -> get
    64:64:java.lang.Float get(android.view.View) -> get
    60:60:void set(java.lang.Object,java.lang.Object) -> set
    69:69:void set(android.view.View,java.lang.Float) -> set
androidx.transition.ViewUtils$2 -> androidx.transition.ViewUtils$2:
    75:75:void <init>(java.lang.Class,java.lang.String) -> <init>
    75:75:java.lang.Object get(java.lang.Object) -> get
    79:79:android.graphics.Rect get(android.view.View) -> get
    75:75:void set(java.lang.Object,java.lang.Object) -> set
    84:84:void set(android.view.View,android.graphics.Rect) -> set
androidx.transition.ViewUtilsApi19 -> androidx.transition.ViewUtilsApi19:
    29:29:void <init>() -> <init>
    93:100:void fetchGetTransitionAlphaMethod() -> fetchGetTransitionAlphaMethod
    80:88:void fetchSetTransitionAlphaMethod() -> fetchSetTransitionAlphaMethod
    56:66:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    40:50:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
androidx.transition.ViewUtilsApi21 -> androidx.transition.ViewUtilsApi21:
    30:30:void <init>() -> <init>
    84:92:void fetchTransformMatrixToGlobalMethod() -> fetchTransformMatrixToGlobalMethod
    97:105:void fetchTransformMatrixToLocalMethod() -> fetchTransformMatrixToLocalMethod
    43:50:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    57:64:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsApi22 -> androidx.transition.ViewUtilsApi22:
    29:29:void <init>() -> <init>
    52:60:void fetchSetLeftTopRightBottomMethod() -> fetchSetLeftTopRightBottomMethod
    38:45:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
androidx.transition.ViewUtilsBase -> androidx.transition.ViewUtilsBase:
    25:25:void <init>() -> <init>
    56:57:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    39:43:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    48:49:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    126:129:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    30:34:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    62:71:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    76:87:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.Visibility -> androidx.transition.Visibility:
    79:79:void <clinit>() -> <clinit>
    98:96:void <init>() -> <init>
    161:161:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    156:156:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    146:151:void captureValues(androidx.transition.TransitionValues) -> captureValues
    246:253:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    142:142:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    191:237:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getVisibilityChangeInfo
    465:473:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    279:293:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onAppear
    336:432:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onDisappear
    125:123:void setMode(int) -> setMode
androidx.transition.Visibility$1 -> androidx.transition.Visibility$1:
    411:411:void <init>(androidx.transition.Visibility,androidx.transition.ViewGroupOverlayImpl,android.view.View) -> <init>
    414:414:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Visibility$DisappearListener -> androidx.transition.Visibility$DisappearListener:
    488:494:void <init>(android.view.View,int,boolean) -> <init>
    559:567:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    517:517:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    530:530:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    501:502:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    510:511:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    540:541:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    550:550:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    555:555:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    571:573:void suppressLayout(boolean) -> suppressLayout
androidx.transition.Visibility$VisibilityInfo -> androidx.transition.Visibility$VisibilityInfo:
    85:85:void <init>() -> <init>
androidx.transition.WindowIdApi14 -> androidx.transition.WindowIdApi14:
    25:26:void <init>(android.os.IBinder) -> <init>
    31:31:boolean equals(java.lang.Object) -> equals
    36:36:int hashCode() -> hashCode
androidx.transition.WindowIdApi18 -> androidx.transition.WindowIdApi18:
    29:30:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
    22:133:void <clinit>() -> <clinit>
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    168:168:void <init>() -> <init>
    172:172:void <init>(android.content.Context) -> <init>
    177:182:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    512:513:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    522:523:boolean canApplyTheme() -> canApplyTheme
    143:143:void clearColorFilter() -> clearColorFilter
    253:254:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    284:290:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    143:143:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:266:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    410:413:int getIntrinsicHeight() -> getIntrinsicHeight
    402:405:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    394:397:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    436:501:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    507:507:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    418:421:boolean isAutoMirrored() -> isAutoMirrored
    690:694:boolean isRunning() -> isRunning
    386:389:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:194:android.graphics.drawable.Drawable mutate() -> mutate
    296:300:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    329:333:void setAlpha(int) -> setAlpha
    426:430:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:342:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    347:352:void setTint(int) -> setTint
    357:362:void setTintList(android.content.res.ColorStateList) -> setTintList
    367:372:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    377:381:boolean setVisible(boolean,boolean) -> setVisible
    672:682:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    651:666:void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    699:710:void start() -> start
    715:720:void stop() -> stop
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
    723:723:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    726:726:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    731:731:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    736:736:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    589:617:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    634:634:int getChangingConfigurations() -> getChangingConfigurations
    624:624:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    629:629:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    638:641:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    538:539:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    571:571:boolean canApplyTheme() -> canApplyTheme
    576:576:int getChangingConfigurations() -> getChangingConfigurations
    544:547:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    553:556:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    562:565:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    109:143:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
    67:95:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    514:568:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    779:783:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    809:809:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    207:327:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    655:664:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    636:649:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    100:103:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    131:147:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    890:911:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    818:864:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    872:874:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    696:771:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    579:624:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    345:376:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    390:425:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    436:493:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    166:166:void <init>() -> <init>
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    185:186:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    68:68:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:76:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    202:222:float getInterpolation(float) -> getInterpolation
    130:133:void initCubic(float,float,float,float) -> initCubic
    137:143:void initPath(android.graphics.Path) -> initPath
    123:126:void initQuad(float,float) -> initQuad
    82:93:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    30:30:void <init>() -> <init>
    104:105:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    112:116:void clearColorFilter() -> clearColorFilter
    46:47:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    121:124:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:140:int getMinimumHeight() -> getMinimumHeight
    129:132:int getMinimumWidth() -> getMinimumWidth
    145:148:boolean getPadding(android.graphics.Rect) -> getPadding
    153:156:int[] getState() -> getState
    162:165:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    95:96:void jumpToCurrentState() -> jumpToCurrentState
    54:57:boolean onLevelChange(int) -> onLevelChange
    170:174:void setChangingConfigurations(int) -> setChangingConfigurations
    37:41:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    87:88:void setFilterBitmap(boolean) -> setFilterBitmap
    71:72:void setHotspot(float,float) -> setHotspot
    79:80:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    179:182:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    280:280:void <clinit>() -> <clinit>
    321:322:void <init>() -> <init>
    325:327:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    679:679:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    579:580:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    637:658:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    673:674:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:427:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    916:919:int getChangingConfigurations() -> getChangingConfigurations
    277:277:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    569:573:int getIntrinsicHeight() -> getIntrinsicHeight
    560:564:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    551:552:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    688:693:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    699:717:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    807:868:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    924:928:void invalidateSelf() -> invalidateSelf
    588:591:boolean isAutoMirrored() -> isAutoMirrored
    520:526:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:339:android.graphics.drawable.Drawable mutate() -> mutate
    898:900:boolean needMirroring() -> needMirroring
    909:910:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    531:543:boolean onStateChange(int[]) -> onStateChange
    738:728:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    933:937:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    893:893:void setAllowCaching(boolean) -> setAllowCaching
    441:448:void setAlpha(int) -> setAlpha
    596:600:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:460:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    480:485:void setTint(int) -> setTint
    490:499:void setTintList(android.content.res.ColorStateList) -> setTintList
    505:514:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    942:945:boolean setVisible(boolean,boolean) -> setVisible
    950:954:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    746:774:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
    474:475:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    1754:1754:void <init>() -> <init>
    1759:1759:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1764:1771:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1779:1787:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    1821:1819:void <init>() -> <init>
    1826:1841:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    2014:2014:float getFillAlpha() -> getFillAlpha
    2004:2004:int getFillColor() -> getFillColor
    1993:1993:float getStrokeAlpha() -> getStrokeAlpha
    1973:1973:int getStrokeColor() -> getStrokeColor
    1851:1847:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1864:1860:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1983:1983:float getStrokeWidth() -> getStrokeWidth
    2034:2034:float getTrimPathEnd() -> getTrimPathEnd
    2044:2044:float getTrimPathOffset() -> getTrimPathOffset
    2024:2024:float getTrimPathStart() -> getTrimPathStart
    1876:1879:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1946:1946:boolean isStateful() -> isStateful
    1951:1952:boolean onStateChanged(int[]) -> onStateChanged
    2019:2019:void setFillAlpha(float) -> setFillAlpha
    2009:2009:void setFillColor(int) -> setFillColor
    1998:1998:void setStrokeAlpha(float) -> setStrokeAlpha
    1978:1978:void setStrokeColor(int) -> setStrokeColor
    1988:1988:void setStrokeWidth(float) -> setStrokeWidth
    2039:2039:void setTrimPathEnd(float) -> setTrimPathEnd
    2049:2049:void setTrimPathOffset(float) -> setTrimPathOffset
    2029:2029:void setTrimPathStart(float) -> setTrimPathStart
    1887:1939:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    1455:1485:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1495:1453:void <init>() -> <init>
    1499:1499:java.lang.String getGroupName() -> getGroupName
    1503:1503:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1575:1575:float getPivotX() -> getPivotX
    1588:1588:float getPivotY() -> getPivotY
    1562:1562:float getRotation() -> getRotation
    1601:1601:float getScaleX() -> getScaleX
    1614:1614:float getScaleY() -> getScaleY
    1627:1627:float getTranslateX() -> getTranslateX
    1640:1640:float getTranslateY() -> getTranslateY
    1507:1510:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1653:1654:boolean isStateful() -> isStateful
    1664:1665:boolean onStateChanged(int[]) -> onStateChanged
    1580:1582:void setPivotX(float) -> setPivotX
    1593:1595:void setPivotY(float) -> setPivotY
    1567:1569:void setRotation(float) -> setRotation
    1606:1608:void setScaleX(float) -> setScaleX
    1619:1621:void setScaleY(float) -> setScaleY
    1632:1634:void setTranslateX(float) -> setTranslateX
    1645:1647:void setTranslateY(float) -> setTranslateY
    1552:1556:void updateLocalMatrix() -> updateLocalMatrix
    1518:1546:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
    1412:1412:void <init>() -> <init>
    1412:1412:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    1679:1675:void <init>() -> <init>
    1705:1708:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1736:1736:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1719:1719:java.lang.String getPathName() -> getPathName
    1741:1745:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1712:1714:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1161:1161:void <clinit>() -> <clinit>
    1182:1185:void <init>() -> <init>
    1207:1221:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1255:1255:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1230:1250:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1260:1362:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1204:1204:float getAlpha() -> getAlpha
    1382:1392:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1193:1193:int getRootAlpha() -> getRootAlpha
    1401:1404:boolean isStateful() -> isStateful
    1408:1408:boolean onStateChanged(int[]) -> onStateChanged
    1199:1199:void setAlpha(float) -> setAlpha
    1189:1189:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1024:1036:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1112:1113:void <init>() -> <init>
    1084:1085:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1092:1096:boolean canReuseCache() -> canReuseCache
    1075:1078:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1043:1044:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1130:1130:int getChangingConfigurations() -> getChangingConfigurations
    1055:1065:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1048:1048:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1134:1134:boolean isStateful() -> isStateful
    1119:1119:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1125:1125:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1138:1139:boolean onStateChanged(int[]) -> onStateChanged
    1105:1109:void updateCacheStates() -> updateCacheStates
    1069:1071:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    966:967:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    994:994:boolean canApplyTheme() -> canApplyTheme
    999:999:int getChangingConfigurations() -> getChangingConfigurations
    972:973:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    979:980:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    986:988:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    58:58:void <clinit>() -> <clinit>
    36:37:void <init>(android.os.Parcel) -> <init>
    54:55:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    58:58:void <init>() -> <init>
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    61:61:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    66:66:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    55:55:void <init>() -> <init>
    1479:1480:java.lang.Class findParcelClass(androidx.versionedparcelable.VersionedParcelable) -> findParcelClass
    1485:1487:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    436:439:byte[] readByteArray(byte[],int) -> readByteArray
    1438:1442:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    373:376:int readInt(int,int) -> readInt
    445:448:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    415:418:java.lang.String readString(java.lang.String,int) -> readString
    1366:1369:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1382:1386:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    277:278:void writeByteArray(byte[],int) -> writeByteArray
    298:299:void writeInt(int,int) -> writeInt
    355:356:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    334:335:void writeString(java.lang.String,int) -> writeString
    1460:1464:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    927:928:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    935:942:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    948:950:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    46:46:void <init>(android.os.Parcel) -> <init>
    49:54:void <init>(android.os.Parcel,int,int,java.lang.String) -> <init>
    93:103:void closeField() -> closeField
    113:113:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    219:224:byte[] readByteArray() -> readByteArray
    72:77:boolean readField(int) -> readField
    189:189:int readInt() -> readInt
    231:231:android.os.Parcelable readParcelable() -> readParcelable
    209:209:java.lang.String readString() -> readString
    58:65:int readUntilField(int) -> readUntilField
    83:88:void setOutputField(int) -> setOutputField
    120:123:void writeByteArray(byte[]) -> writeByteArray
    139:139:void writeInt(int) -> writeInt
    169:169:void writeParcelable(android.os.Parcelable) -> writeParcelable
    159:159:void writeString(java.lang.String) -> writeString
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
    81:82:void <init>() -> <init>
    129:129:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    202:202:void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    154:154:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    115:115:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    184:184:java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    289:293:void notifyDataSetChanged() -> notifyDataSetChanged
    303:303:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    143:143:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    316:318:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    99:99:void startUpdate(android.view.ViewGroup) -> startUpdate
    312:312:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.viewpager.widget.PagerTabStrip -> androidx.viewpager.widget.PagerTabStrip:
    83:83:void <init>(android.content.Context) -> <init>
    87:126:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    218:218:boolean getDrawFullUnderline() -> getDrawFullUnderline
    223:223:int getMinHeight() -> getMinHeight
    155:155:int getTabIndicatorColor() -> getTabIndicatorColor
    265:278:void onDraw(android.graphics.Canvas) -> onDraw
    228:241:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    184:186:void setBackgroundColor(int) -> setBackgroundColor
    176:178:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    192:194:void setBackgroundResource(int) -> setBackgroundResource
    205:207:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    160:163:void setPadding(int,int,int,int) -> setPadding
    136:138:void setTabIndicatorColor(int) -> setTabIndicatorColor
    147:147:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    168:171:void setTextSpacing(int) -> setTextSpacing
    285:300:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTabStrip$1 -> androidx.viewpager.widget.PagerTabStrip$1:
    110:110:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    113:113:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTabStrip$2 -> androidx.viewpager.widget.PagerTabStrip$2:
    118:118:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    121:121:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTitleStrip -> androidx.viewpager.widget.PagerTitleStrip:
    73:80:void <clinit>() -> <clinit>
    109:109:void <init>(android.content.Context) -> <init>
    113:164:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    464:466:int getMinHeight() -> getMinHeight
    181:181:int getTextSpacing() -> getTextSpacing
    239:243:void onAttachedToWindow() -> onAttachedToWindow
    258:263:void onDetachedFromWindow() -> onDetachedFromWindow
    456:458:void onLayout(boolean,int,int,int,int) -> onLayout
    420:422:void onMeasure(int,int) -> onMeasure
    308:309:void requestLayout() -> requestLayout
    233:234:void setGravity(int) -> setGravity
    190:193:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    105:105:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    203:207:void setTextColor(int) -> setTextColor
    221:223:void setTextSize(int,float) -> setTextSize
    173:174:void setTextSpacing(int) -> setTextSpacing
    315:326:void updateAdapter(androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> updateAdapter
    268:303:void updateText(int,androidx.viewpager.widget.PagerAdapter) -> updateText
    331:415:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTitleStrip$PageListener -> androidx.viewpager.widget.PagerTitleStrip$PageListener:
    475:475:void <init>(androidx.viewpager.widget.PagerTitleStrip) -> <init>
    506:506:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    511:514:void onChanged() -> onChanged
    500:500:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    484:484:void onPageScrolled(int,float,int) -> onPageScrolled
    489:494:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform -> androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform:
    93:94:void <init>(android.content.Context) -> <init>
    99:100:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
    122:251:void <clinit>() -> <clinit>
    391:392:void <init>(android.content.Context) -> <init>
    396:397:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2905:2937:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1008:1013:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    581:584:void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    723:726:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2955:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1485:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2853:boolean arrowScroll(int) -> arrowScroll
    2528:2543:boolean beginFakeDrag() -> beginFakeDrag
    1298:1380:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> calculatePageOffsets
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2701:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
<<<<<<< HEAD
=======
    745:746:void clearOnPageChangeListeners() -> clearOnPageChangeListeners
>>>>>>> rename package name,fix action event info list same time crash
    1974:2005:void completeScroll(boolean) -> completeScroll
    1793:1814:void computeScroll() -> computeScroll
    1023:1087:void dataSetChanged() -> dataSetChanged
    2406:2418:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1923:1935:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1940:1952:void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    1957:1969:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    2997:3008:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    929:929:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2426:2462:void draw(android.graphics.Canvas) -> draw
    915:918:void drawableStateChanged() -> drawableStateChanged
    2015:2019:void enableLayers(boolean) -> enableLayers
    2659:2664:void endDrag() -> endDrag
    2554:2555:void endFakeDrag() -> endFakeDrag
    2757:2763:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    2586:2587:void fakeDragBy(float) -> fakeDragBy
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:804:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2860:2879:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1512:1514:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2363:2397:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1533:1535:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    401:427:void initViewPager() -> initViewPager
    1498:1499:boolean isDecorView(android.view.View) -> isDecorView
    2640:2640:boolean isFakeDragging() -> isFakeDragging
    2011:2011:boolean isGutterDrag(float,float) -> isGutterDrag
    1544:1545:void onAttachedToWindow() -> onAttachedToWindow
    479:484:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2500:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2037:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1788:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1638:void onMeasure(int,int) -> onMeasure
    1865:1919:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2985:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1466:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1445:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2644:2653:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1646:1650:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2287:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2885:2886:boolean pageLeft() -> pageLeft
    2893:2894:boolean pageRight() -> pageRight
    1818:1844:boolean pageScrolled(int) -> pageScrolled
    2312:2353:boolean performDrag(float) -> performDrag
    1092:1092:void populate() -> populate
    1097:1143:void populate(int) -> populate
    1655:1675:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    555:559:void removeNonDecorViews() -> removeNonDecorViews
    594:595:void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    736:737:void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    1504:1507:void removeView(android.view.View) -> removeView
    2303:2305:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2294:2298:boolean resetTouch() -> resetTouch
    676:694:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    506:549:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:612:void setCurrentItem(int) -> setCurrentItem
    622:623:void setCurrentItem(int,boolean) -> setCurrentItem
    631:631:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    635:636:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    815:816:androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    850:856:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:709:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:875:void setPageMargin(int) -> setPageMargin
    893:896:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:905:void setPageMarginDrawable(int) -> setPageMarginDrawable
    769:769:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer) -> setPageTransformer
    788:797:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int) -> setPageTransformer
    488:497:void setScrollState(int) -> setScrollState
    2669:2670:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
<<<<<<< HEAD
=======
    939:939:void smoothScrollTo(int,int) -> smoothScrollTo
>>>>>>> rename package name,fix action event info list same time crash
    950:1004:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1282:1293:void sortChildDrawingOrder() -> sortChildDrawingOrder
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$1:
    140:140:void <init>() -> <init>
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$2:
    147:147:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$3:
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:273:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$4:
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    436:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$ItemInfo:
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$LayoutParams:
    3145:3126:void <init>() -> <init>
    3149:3153:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate:
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> canScroll
    3041:3047:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3060:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3072:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$PagerObserver:
    3092:3092:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3097:void onChanged() -> onChanged
    3101:3101:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1412:1412:void <clinit>() -> <clinit>
    1395:1395:void <init>(android.os.Parcelable) -> <init>
    1429:1435:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1402:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$ViewPositionComparator:
    3157:3157:void <init>() -> <init>
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
    3160:3165:int compare(android.view.View,android.view.View) -> compare
br.tiagohm.markdownview.MarkdownView -> br.tiagohm.markdownview.MarkdownView:
    79:88:void <clinit>() -> <clinit>
    118:118:void <init>(android.content.Context) -> <init>
    122:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    126:147:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    204:204:br.tiagohm.markdownview.MarkdownView addJavascript(br.tiagohm.markdownview.js.JavaScript) -> addJavascript
    174:175:br.tiagohm.markdownview.MarkdownView addStyleSheet(br.tiagohm.markdownview.css.StyleSheet) -> addStyleSheet
    151:151:java.lang.Object getBean() -> getBean
    234:268:void loadMarkdown(java.lang.String) -> loadMarkdown
    280:280:void loadMarkdownFromFile(java.io.File) -> loadMarkdownFromFile
    214:230:java.lang.String parseBuildAndRender(java.lang.String) -> parseBuildAndRender
    155:155:void setBean(java.lang.Object) -> setBean
br.tiagohm.markdownview.MarkdownView$1 -> br.tiagohm.markdownview.MarkdownView$1:
    220:220:void <init>(br.tiagohm.markdownview.MarkdownView) -> <init>
    220:220:java.lang.Object create(java.lang.Object) -> create
    223:223:com.vladsch.flexmark.html.AttributeProvider create(com.vladsch.flexmark.html.renderer.NodeRendererContext) -> create
br.tiagohm.markdownview.MarkdownView$CustomAttributeProvider -> br.tiagohm.markdownview.MarkdownView$CustomAttributeProvider:
    339:339:void <init>(br.tiagohm.markdownview.MarkdownView) -> <init>
    342:372:void setAttributes(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.AttributablePart,com.vladsch.flexmark.util.html.Attributes) -> setAttributes
br.tiagohm.markdownview.MarkdownView$NodeRendererFactoryImpl -> br.tiagohm.markdownview.MarkdownView$NodeRendererFactoryImpl:
    287:287:void <init>() -> <init>
    290:290:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
br.tiagohm.markdownview.MarkdownView$NodeRendererFactoryImpl$1 -> br.tiagohm.markdownview.MarkdownView$NodeRendererFactoryImpl$1:
    290:290:void <init>(br.tiagohm.markdownview.MarkdownView$NodeRendererFactoryImpl) -> <init>
    293:294:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
br.tiagohm.markdownview.MarkdownView$NodeRendererFactoryImpl$1$1 -> br.tiagohm.markdownview.MarkdownView$NodeRendererFactoryImpl$1$1:
    294:294:void <init>(br.tiagohm.markdownview.MarkdownView$NodeRendererFactoryImpl$1) -> <init>
    294:294:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    297:329:void render(com.vladsch.flexmark.ast.Image,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.R$styleable -> br.tiagohm.markdownview.R$styleable:
    1125:1530:void <clinit>() -> <clinit>
br.tiagohm.markdownview.Utils -> br.tiagohm.markdownview.Utils:
    50:61:java.lang.String getStringFromFile(java.io.File) -> getStringFromFile
    17:23:java.lang.String getStringFromInputStream(java.io.InputStream) -> getStringFromInputStream
br.tiagohm.markdownview.css.ExternalStyleSheet -> br.tiagohm.markdownview.css.ExternalStyleSheet:
    10:11:void <init>(java.lang.String) -> <init>
    36:36:java.lang.String getMediaQuery() -> getMediaQuery
    32:32:java.lang.String getUrl() -> getUrl
    46:46:java.lang.String toHTML() -> toHTML
    41:41:java.lang.String toString() -> toString
br.tiagohm.markdownview.css.InternalStyleSheet -> br.tiagohm.markdownview.css.InternalStyleSheet:
    16:58:void <init>() -> <init>
    141:159:void addRule(java.lang.String,java.lang.String[]) -> addRule
    104:104:java.util.Map getCurrentMediaQuery() -> getCurrentMediaQuery
    100:100:java.lang.String toHTML() -> toHTML
    63:95:java.lang.String toString() -> toString
br.tiagohm.markdownview.css.styles.Bootstrap -> br.tiagohm.markdownview.css.styles.Bootstrap:
    7:104:void <init>() -> <init>
br.tiagohm.markdownview.css.styles.Github -> br.tiagohm.markdownview.css.styles.Github:
    4:61:void <init>() -> <init>
br.tiagohm.markdownview.ext.bean.Bean -> br.tiagohm.markdownview.ext.bean.Bean:
    13:10:void <init>() -> <init>
    21:24:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    34:34:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    51:51:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    55:55:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
br.tiagohm.markdownview.ext.bean.BeanExtension -> br.tiagohm.markdownview.ext.bean.BeanExtension:
    14:14:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    20:20:com.vladsch.flexmark.Extension create() -> create
    35:35:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    40:42:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
br.tiagohm.markdownview.ext.bean.internal.BeanDelimiterProcessor -> br.tiagohm.markdownview.ext.bean.internal.BeanDelimiterProcessor:
    12:12:void <init>() -> <init>
    51:51:int getDelimiterUse(com.vladsch.flexmark.parser.delimiter.DelimiterRun,com.vladsch.flexmark.parser.delimiter.DelimiterRun) -> getDelimiterUse
    60:61:void process(com.vladsch.flexmark.internal.Delimiter,com.vladsch.flexmark.internal.Delimiter,int) -> process
br.tiagohm.markdownview.ext.bean.internal.BeanNodeRenderer -> br.tiagohm.markdownview.ext.bean.internal.BeanNodeRenderer:
    23:24:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    20:20:void access$000(br.tiagohm.markdownview.ext.bean.internal.BeanNodeRenderer,br.tiagohm.markdownview.ext.bean.Bean,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    29:54:java.lang.Object getBeanAttributeValue(java.lang.String,java.lang.Object) -> getBeanAttributeValue
    84:85:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    96:106:void render(br.tiagohm.markdownview.ext.bean.Bean,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.bean.internal.BeanNodeRenderer$1 -> br.tiagohm.markdownview.ext.bean.internal.BeanNodeRenderer$1:
    85:85:void <init>(br.tiagohm.markdownview.ext.bean.internal.BeanNodeRenderer) -> <init>
    85:85:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    88:88:void render(br.tiagohm.markdownview.ext.bean.Bean,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.bean.internal.BeanNodeRenderer$Factory -> br.tiagohm.markdownview.ext.bean.internal.BeanNodeRenderer$Factory:
    110:110:void <init>() -> <init>
    113:113:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
br.tiagohm.markdownview.ext.emoji.Emoji -> br.tiagohm.markdownview.ext.emoji.Emoji:
    15:13:void <init>() -> <init>
    23:26:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    31:31:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    48:48:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    52:52:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
br.tiagohm.markdownview.ext.emoji.EmojiExtension -> br.tiagohm.markdownview.ext.emoji.EmojiExtension:
    16:19:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    25:25:com.vladsch.flexmark.Extension create() -> create
    40:40:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    45:46:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
br.tiagohm.markdownview.ext.emoji.internal.EmojiCheatSheet -> br.tiagohm.markdownview.ext.emoji.internal.EmojiCheatSheet:
    6:1828:void <clinit>() -> <clinit>
    1832:1832:br.tiagohm.markdownview.ext.emoji.internal.EmojiCheatSheet$EmojiShortcut getImageShortcut(java.lang.String) -> getImageShortcut
br.tiagohm.markdownview.ext.emoji.internal.EmojiCheatSheet$EmojiShortcut -> br.tiagohm.markdownview.ext.emoji.internal.EmojiCheatSheet$EmojiShortcut:
    1840:1843:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
br.tiagohm.markdownview.ext.emoji.internal.EmojiDelimiterProcessor -> br.tiagohm.markdownview.ext.emoji.internal.EmojiDelimiterProcessor:
    12:12:void <init>() -> <init>
    50:50:boolean canBeCloser(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean) -> canBeCloser
    45:45:boolean canBeOpener(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean) -> canBeOpener
    31:31:int getDelimiterUse(com.vladsch.flexmark.parser.delimiter.DelimiterRun,com.vladsch.flexmark.parser.delimiter.DelimiterRun) -> getDelimiterUse
    62:66:void process(com.vladsch.flexmark.internal.Delimiter,com.vladsch.flexmark.internal.Delimiter,int) -> process
br.tiagohm.markdownview.ext.emoji.internal.EmojiNodeRenderer -> br.tiagohm.markdownview.ext.emoji.internal.EmojiNodeRenderer:
    25:29:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    19:19:void access$000(br.tiagohm.markdownview.ext.emoji.internal.EmojiNodeRenderer,br.tiagohm.markdownview.ext.emoji.Emoji,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    34:35:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    46:62:void render(br.tiagohm.markdownview.ext.emoji.Emoji,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.emoji.internal.EmojiNodeRenderer$1 -> br.tiagohm.markdownview.ext.emoji.internal.EmojiNodeRenderer$1:
    35:35:void <init>(br.tiagohm.markdownview.ext.emoji.internal.EmojiNodeRenderer) -> <init>
    35:35:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    38:38:void render(br.tiagohm.markdownview.ext.emoji.Emoji,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.emoji.internal.EmojiNodeRenderer$Factory -> br.tiagohm.markdownview.ext.emoji.internal.EmojiNodeRenderer$Factory:
    66:66:void <init>() -> <init>
    69:69:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
br.tiagohm.markdownview.ext.kbd.Keystroke -> br.tiagohm.markdownview.ext.kbd.Keystroke:
    13:10:void <init>() -> <init>
    21:24:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    34:34:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    51:51:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    55:55:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
br.tiagohm.markdownview.ext.kbd.KeystrokeExtension -> br.tiagohm.markdownview.ext.kbd.KeystrokeExtension:
    12:12:void <init>() -> <init>
    16:16:com.vladsch.flexmark.Extension create() -> create
    31:31:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    36:38:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
br.tiagohm.markdownview.ext.kbd.internal.KeystrokeDelimiterProcessor -> br.tiagohm.markdownview.ext.kbd.internal.KeystrokeDelimiterProcessor:
    12:12:void <init>() -> <init>
    51:51:int getDelimiterUse(com.vladsch.flexmark.parser.delimiter.DelimiterRun,com.vladsch.flexmark.parser.delimiter.DelimiterRun) -> getDelimiterUse
    62:63:void process(com.vladsch.flexmark.internal.Delimiter,com.vladsch.flexmark.internal.Delimiter,int) -> process
br.tiagohm.markdownview.ext.kbd.internal.KeystrokeNodeRenderer -> br.tiagohm.markdownview.ext.kbd.internal.KeystrokeNodeRenderer:
    18:18:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    16:16:void access$000(br.tiagohm.markdownview.ext.kbd.internal.KeystrokeNodeRenderer,br.tiagohm.markdownview.ext.kbd.Keystroke,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    23:24:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    35:37:void render(br.tiagohm.markdownview.ext.kbd.Keystroke,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.kbd.internal.KeystrokeNodeRenderer$1 -> br.tiagohm.markdownview.ext.kbd.internal.KeystrokeNodeRenderer$1:
    24:24:void <init>(br.tiagohm.markdownview.ext.kbd.internal.KeystrokeNodeRenderer) -> <init>
    24:24:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    27:27:void render(br.tiagohm.markdownview.ext.kbd.Keystroke,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.kbd.internal.KeystrokeNodeRenderer$Factory -> br.tiagohm.markdownview.ext.kbd.internal.KeystrokeNodeRenderer$Factory:
    40:40:void <init>() -> <init>
    43:43:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
br.tiagohm.markdownview.ext.label.Label -> br.tiagohm.markdownview.ext.label.Label:
    14:12:void <init>() -> <init>
    22:26:void <init>(int,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    40:40:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    35:35:int getType() -> getType
    61:61:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
br.tiagohm.markdownview.ext.label.LabelExtension -> br.tiagohm.markdownview.ext.label.LabelExtension:
    12:12:void <init>() -> <init>
    16:16:com.vladsch.flexmark.Extension create() -> create
    31:31:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    36:38:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
br.tiagohm.markdownview.ext.label.internal.LabelDelimiterProcessor -> br.tiagohm.markdownview.ext.label.internal.LabelDelimiterProcessor:
    12:12:void <init>() -> <init>
    51:53:int getDelimiterUse(com.vladsch.flexmark.parser.delimiter.DelimiterRun,com.vladsch.flexmark.parser.delimiter.DelimiterRun) -> getDelimiterUse
    61:62:void process(com.vladsch.flexmark.internal.Delimiter,com.vladsch.flexmark.internal.Delimiter,int) -> process
br.tiagohm.markdownview.ext.label.internal.LabelNodeRenderer -> br.tiagohm.markdownview.ext.label.internal.LabelNodeRenderer:
    19:19:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    17:17:void access$000(br.tiagohm.markdownview.ext.label.internal.LabelNodeRenderer,br.tiagohm.markdownview.ext.label.Label,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    24:25:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    36:41:void render(br.tiagohm.markdownview.ext.label.Label,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.label.internal.LabelNodeRenderer$1 -> br.tiagohm.markdownview.ext.label.internal.LabelNodeRenderer$1:
    25:25:void <init>(br.tiagohm.markdownview.ext.label.internal.LabelNodeRenderer) -> <init>
    25:25:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    28:28:void render(br.tiagohm.markdownview.ext.label.Label,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.label.internal.LabelNodeRenderer$Factory -> br.tiagohm.markdownview.ext.label.internal.LabelNodeRenderer$Factory:
    44:44:void <init>() -> <init>
    47:47:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
br.tiagohm.markdownview.ext.mark.Mark -> br.tiagohm.markdownview.ext.mark.Mark:
    13:10:void <init>() -> <init>
    21:24:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    34:34:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    51:51:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    55:55:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
br.tiagohm.markdownview.ext.mark.MarkExtension -> br.tiagohm.markdownview.ext.mark.MarkExtension:
    15:15:void <init>() -> <init>
    19:19:com.vladsch.flexmark.Extension create() -> create
    34:34:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    39:41:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
br.tiagohm.markdownview.ext.mark.MarkExtension$1 -> br.tiagohm.markdownview.ext.mark.MarkExtension$1:
    41:41:void <init>(br.tiagohm.markdownview.ext.mark.MarkExtension) -> <init>
    44:44:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
br.tiagohm.markdownview.ext.mark.internal.MarkDelimiterProcessor -> br.tiagohm.markdownview.ext.mark.internal.MarkDelimiterProcessor:
    12:12:void <init>() -> <init>
    51:51:int getDelimiterUse(com.vladsch.flexmark.parser.delimiter.DelimiterRun,com.vladsch.flexmark.parser.delimiter.DelimiterRun) -> getDelimiterUse
    62:63:void process(com.vladsch.flexmark.internal.Delimiter,com.vladsch.flexmark.internal.Delimiter,int) -> process
br.tiagohm.markdownview.ext.mark.internal.MarkNodeRenderer -> br.tiagohm.markdownview.ext.mark.internal.MarkNodeRenderer:
    18:18:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    16:16:void access$000(br.tiagohm.markdownview.ext.mark.internal.MarkNodeRenderer,br.tiagohm.markdownview.ext.mark.Mark,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    23:24:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    35:37:void render(br.tiagohm.markdownview.ext.mark.Mark,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.mark.internal.MarkNodeRenderer$1 -> br.tiagohm.markdownview.ext.mark.internal.MarkNodeRenderer$1:
    24:24:void <init>(br.tiagohm.markdownview.ext.mark.internal.MarkNodeRenderer) -> <init>
    24:24:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    27:27:void render(br.tiagohm.markdownview.ext.mark.Mark,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.mathjax.MathJax -> br.tiagohm.markdownview.ext.mathjax.MathJax:
    14:15:void <init>() -> <init>
    28:32:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,boolean) -> <init>
    43:43:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    76:76:boolean isInline() -> isInline
    64:64:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
br.tiagohm.markdownview.ext.mathjax.MathJaxExtension -> br.tiagohm.markdownview.ext.mathjax.MathJaxExtension:
    15:15:void <init>() -> <init>
    19:19:com.vladsch.flexmark.Extension create() -> create
    34:34:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    39:41:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
br.tiagohm.markdownview.ext.mathjax.MathJaxExtension$1 -> br.tiagohm.markdownview.ext.mathjax.MathJaxExtension$1:
    41:41:void <init>(br.tiagohm.markdownview.ext.mathjax.MathJaxExtension) -> <init>
    44:44:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
br.tiagohm.markdownview.ext.mathjax.internal.MathJaxDelimiterProcessor -> br.tiagohm.markdownview.ext.mathjax.internal.MathJaxDelimiterProcessor:
    12:12:void <init>() -> <init>
    51:53:int getDelimiterUse(com.vladsch.flexmark.parser.delimiter.DelimiterRun,com.vladsch.flexmark.parser.delimiter.DelimiterRun) -> getDelimiterUse
    63:64:void process(com.vladsch.flexmark.internal.Delimiter,com.vladsch.flexmark.internal.Delimiter,int) -> process
br.tiagohm.markdownview.ext.mathjax.internal.MathJaxNodeRenderer -> br.tiagohm.markdownview.ext.mathjax.internal.MathJaxNodeRenderer:
    18:18:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    16:16:void access$000(br.tiagohm.markdownview.ext.mathjax.internal.MathJaxNodeRenderer,br.tiagohm.markdownview.ext.mathjax.MathJax,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    23:24:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    35:47:void render(br.tiagohm.markdownview.ext.mathjax.MathJax,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.mathjax.internal.MathJaxNodeRenderer$1 -> br.tiagohm.markdownview.ext.mathjax.internal.MathJaxNodeRenderer$1:
    24:24:void <init>(br.tiagohm.markdownview.ext.mathjax.internal.MathJaxNodeRenderer) -> <init>
    24:24:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    27:27:void render(br.tiagohm.markdownview.ext.mathjax.MathJax,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.twitter.Twitter -> br.tiagohm.markdownview.ext.twitter.Twitter:
    9:9:void <init>(com.vladsch.flexmark.ast.Link) -> <init>
    24:27:void setTextChars(com.vladsch.flexmark.util.sequence.BasedSequence) -> setTextChars
br.tiagohm.markdownview.ext.twitter.TwitterExtension -> br.tiagohm.markdownview.ext.twitter.TwitterExtension:
    12:12:void <init>() -> <init>
    16:16:com.vladsch.flexmark.Extension create() -> create
    21:21:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    36:37:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
br.tiagohm.markdownview.ext.twitter.internal.TwitterNodePostProcessor -> br.tiagohm.markdownview.ext.twitter.internal.TwitterNodePostProcessor:
    16:16:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    21:36:void process(com.vladsch.flexmark.util.NodeTracker,com.vladsch.flexmark.ast.Node) -> process
br.tiagohm.markdownview.ext.twitter.internal.TwitterNodePostProcessor$Factory -> br.tiagohm.markdownview.ext.twitter.internal.TwitterNodePostProcessor$Factory:
    44:46:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    42:42:com.vladsch.flexmark.parser.PostProcessor create(com.vladsch.flexmark.ast.Document) -> create
    42:42:java.lang.Object create(java.lang.Object) -> create
    51:51:com.vladsch.flexmark.parser.block.NodePostProcessor create(com.vladsch.flexmark.ast.Document) -> create
br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer -> br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer:
    33:31:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    29:29:void access$000(br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer,br.tiagohm.markdownview.ext.twitter.Twitter,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    29:29:java.lang.String access$102(br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer,java.lang.String) -> access$102
    29:29:android.os.ConditionVariable access$200(br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer) -> access$200
    38:39:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    49:59:void render(br.tiagohm.markdownview.ext.twitter.Twitter,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer$1 -> br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer$1:
    39:39:void <init>(br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer) -> <init>
    39:39:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    42:42:void render(br.tiagohm.markdownview.ext.twitter.Twitter,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer$Factory -> br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer$Factory:
    91:91:void <init>() -> <init>
    94:94:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer$LoadTweetRunnable -> br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer$LoadTweetRunnable:
    101:102:void <init>(br.tiagohm.markdownview.ext.twitter.internal.TwitterNodeRenderer,java.lang.String) -> <init>
    110:134:void run() -> run
br.tiagohm.markdownview.ext.video.VideoLink -> br.tiagohm.markdownview.ext.video.VideoLink:
    9:9:void <init>(com.vladsch.flexmark.ast.Link) -> <init>
    24:27:void setTextChars(com.vladsch.flexmark.util.sequence.BasedSequence) -> setTextChars
br.tiagohm.markdownview.ext.video.VideoLinkExtension -> br.tiagohm.markdownview.ext.video.VideoLinkExtension:
    12:12:void <init>() -> <init>
    16:16:com.vladsch.flexmark.Extension create() -> create
    21:21:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    36:37:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
br.tiagohm.markdownview.ext.video.internal.VideoLinkNodePostProcessor -> br.tiagohm.markdownview.ext.video.internal.VideoLinkNodePostProcessor:
    32:32:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    37:52:void process(com.vladsch.flexmark.util.NodeTracker,com.vladsch.flexmark.ast.Node) -> process
br.tiagohm.markdownview.ext.video.internal.VideoLinkNodePostProcessor$Factory -> br.tiagohm.markdownview.ext.video.internal.VideoLinkNodePostProcessor$Factory:
    60:62:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    58:58:com.vladsch.flexmark.parser.PostProcessor create(com.vladsch.flexmark.ast.Document) -> create
    58:58:java.lang.Object create(java.lang.Object) -> create
    67:67:com.vladsch.flexmark.parser.block.NodePostProcessor create(com.vladsch.flexmark.ast.Document) -> create
br.tiagohm.markdownview.ext.video.internal.VideoLinkNodeRenderer -> br.tiagohm.markdownview.ext.video.internal.VideoLinkNodeRenderer:
    38:38:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    36:36:void access$000(br.tiagohm.markdownview.ext.video.internal.VideoLinkNodeRenderer,br.tiagohm.markdownview.ext.video.VideoLink,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    43:44:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    54:71:void render(br.tiagohm.markdownview.ext.video.VideoLink,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.video.internal.VideoLinkNodeRenderer$1 -> br.tiagohm.markdownview.ext.video.internal.VideoLinkNodeRenderer$1:
    44:44:void <init>(br.tiagohm.markdownview.ext.video.internal.VideoLinkNodeRenderer) -> <init>
    44:44:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    47:47:void render(br.tiagohm.markdownview.ext.video.VideoLink,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
br.tiagohm.markdownview.ext.video.internal.VideoLinkNodeRenderer$Factory -> br.tiagohm.markdownview.ext.video.internal.VideoLinkNodeRenderer$Factory:
    78:78:void <init>() -> <init>
    81:81:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
br.tiagohm.markdownview.js.ExternalScript -> br.tiagohm.markdownview.js.ExternalScript:
    9:13:void <init>(java.lang.String,boolean,boolean,java.lang.String) -> <init>
    17:17:void <init>(java.lang.String,boolean,boolean) -> <init>
    21:21:java.lang.String getSrc() -> getSrc
    25:25:java.lang.String getType() -> getType
    29:29:boolean isAync() -> isAync
    33:33:boolean isDefer() -> isDefer
    38:38:java.lang.String toHTML() -> toHTML
com.danikula.videocache.Config -> com.danikula.videocache.Config:
    21:25:void <init>(java.io.File,com.danikula.videocache.file.FileNameGenerator,com.danikula.videocache.file.DiskUsage,com.danikula.videocache.sourcestorage.SourceInfoStorage) -> <init>
    29:30:java.io.File generateCacheFile(java.lang.String) -> generateCacheFile
com.danikula.videocache.GetRequest -> com.danikula.videocache.GetRequest:
    21:22:void <clinit>() -> <clinit>
    28:33:void <init>(java.lang.String) -> <init>
    47:50:long findRangeOffset(java.lang.String) -> findRangeOffset
    56:60:java.lang.String findUri(java.lang.String) -> findUri
    37:43:com.danikula.videocache.GetRequest read(java.io.InputStream) -> read
    65:65:java.lang.String toString() -> toString
com.danikula.videocache.HttpProxyCache -> com.danikula.videocache.HttpProxyCache:
    29:31:void <init>(com.danikula.videocache.HttpUrlSource,com.danikula.videocache.file.FileCache) -> <init>
    103:103:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    52:56:boolean isUseCache(com.danikula.videocache.GetRequest) -> isUseCache
    60:73:java.lang.String newResponseHeaders(com.danikula.videocache.GetRequest) -> newResponseHeaders
    108:109:void onCachePercentsAvailableChanged(int) -> onCachePercentsAvailableChanged
    39:47:void processRequest(com.danikula.videocache.GetRequest,java.net.Socket) -> processRequest
    35:35:void registerCacheListener(com.danikula.videocache.CacheListener) -> registerCacheListener
    77:83:void responseWithCache(java.io.OutputStream,long) -> responseWithCache
    87:98:void responseWithoutCache(java.io.OutputStream,long) -> responseWithoutCache
com.danikula.videocache.HttpProxyCacheServer -> com.danikula.videocache.HttpProxyCacheServer:
    54:54:void <clinit>() -> <clinit>
    52:52:void <init>(com.danikula.videocache.Config,com.danikula.videocache.HttpProxyCacheServer$1) -> <init>
    67:67:void <init>(android.content.Context) -> <init>
    70:85:void <init>(com.danikula.videocache.Config) -> <init>
    52:52:void access$100(com.danikula.videocache.HttpProxyCacheServer) -> access$100
    52:52:void access$200(com.danikula.videocache.HttpProxyCacheServer,java.net.Socket) -> access$200
    187:187:java.lang.String appendToProxyUrl(java.lang.String) -> appendToProxyUrl
    301:305:void closeSocket(java.net.Socket) -> closeSocket
    277:283:void closeSocketInput(java.net.Socket) -> closeSocketInput
    291:295:void closeSocketOutput(java.net.Socket) -> closeSocketOutput
    191:193:java.io.File getCacheFile(java.lang.String) -> getCacheFile
    249:256:com.danikula.videocache.HttpProxyCacheServerClients getClients(java.lang.String) -> getClients
    260:266:int getClientsCount() -> getClientsCount
    101:101:java.lang.String getProxyUrl(java.lang.String) -> getProxyUrl
    115:120:java.lang.String getProxyUrl(java.lang.String,boolean) -> getProxyUrl
    183:183:boolean isAlive() -> isAlive
    161:162:boolean isCached(java.lang.String) -> isCached
    310:310:void onError(java.lang.Throwable) -> onError
    227:244:void processSocket(java.net.Socket) -> processSocket
    124:131:void registerCacheListener(com.danikula.videocache.CacheListener,java.lang.String) -> registerCacheListener
    270:272:void releaseSocket(java.net.Socket) -> releaseSocket
    166:178:void shutdown() -> shutdown
    205:210:void shutdownClients() -> shutdownClients
    198:200:void touchFileSafely(java.io.File) -> touchFileSafely
    146:151:void unregisterCacheListener(com.danikula.videocache.CacheListener) -> unregisterCacheListener
    215:221:void waitForRequest() -> waitForRequest
com.danikula.videocache.HttpProxyCacheServer$Builder -> com.danikula.videocache.HttpProxyCacheServer$Builder:
    354:358:void <init>(android.content.Context) -> <init>
    345:345:com.danikula.videocache.Config access$000(com.danikula.videocache.HttpProxyCacheServer$Builder) -> access$000
    434:435:com.danikula.videocache.HttpProxyCacheServer build() -> build
    439:439:com.danikula.videocache.Config buildConfig() -> buildConfig
    374:374:com.danikula.videocache.HttpProxyCacheServer$Builder cacheDirectory(java.io.File) -> cacheDirectory
com.danikula.videocache.HttpProxyCacheServer$SocketProcessorRunnable -> com.danikula.videocache.HttpProxyCacheServer$SocketProcessorRunnable:
    332:333:void <init>(com.danikula.videocache.HttpProxyCacheServer,java.net.Socket) -> <init>
    338:338:void run() -> run
com.danikula.videocache.HttpProxyCacheServer$WaitRequestsRunnable -> com.danikula.videocache.HttpProxyCacheServer$WaitRequestsRunnable:
    317:318:void <init>(com.danikula.videocache.HttpProxyCacheServer,java.util.concurrent.CountDownLatch) -> <init>
    323:324:void run() -> run
com.danikula.videocache.HttpProxyCacheServerClients -> com.danikula.videocache.HttpProxyCacheServerClients:
    32:35:void <init>(java.lang.String,com.danikula.videocache.Config) -> <init>
    53:57:void finishProcessRequest() -> finishProcessRequest
    78:78:int getClientsCount() -> getClientsCount
    82:85:com.danikula.videocache.HttpProxyCache newHttpProxyCache() -> newHttpProxyCache
    39:44:void processRequest(com.danikula.videocache.GetRequest,java.net.Socket) -> processRequest
    60:60:void registerCacheListener(com.danikula.videocache.CacheListener) -> registerCacheListener
    68:74:void shutdown() -> shutdown
    49:50:void startProcessRequest() -> startProcessRequest
    64:64:void unregisterCacheListener(com.danikula.videocache.CacheListener) -> unregisterCacheListener
com.danikula.videocache.HttpProxyCacheServerClients$UiListenerHandler -> com.danikula.videocache.HttpProxyCacheServerClients$UiListenerHandler:
    95:97:void <init>(java.lang.String,java.util.List) -> <init>
    110:111:void handleMessage(android.os.Message) -> handleMessage
    102:105:void onCacheAvailable(java.io.File,java.lang.String,int) -> onCacheAvailable
com.danikula.videocache.HttpUrlSource -> com.danikula.videocache.HttpUrlSource:
    33:33:void <clinit>() -> <clinit>
    42:42:void <init>(java.lang.String) -> <init>
    45:49:void <init>(java.lang.String,com.danikula.videocache.sourcestorage.SourceInfoStorage) -> <init>
    52:54:void <init>(com.danikula.videocache.HttpUrlSource) -> <init>
    92:100:void close() -> close
    124:140:void fetchContentInfo() -> fetchContentInfo
    86:87:long getContentLength(java.net.HttpURLConnection) -> getContentLength
    175:178:java.lang.String getMime() -> getMime
    182:182:java.lang.String getUrl() -> getUrl
    59:62:long length() -> length
    68:75:void open(long) -> open
    149:168:java.net.HttpURLConnection openConnection(long,int) -> openConnection
    111:112:int read(byte[]) -> read
    80:81:long readSourceAvailableBytes(java.net.HttpURLConnection,long,int) -> readSourceAvailableBytes
    187:187:java.lang.String toString() -> toString
com.danikula.videocache.IgnoreHostProxySelector -> com.danikula.videocache.IgnoreHostProxySelector:
    22:22:void <clinit>() -> <clinit>
    28:31:void <init>(java.net.ProxySelector,java.lang.String,int) -> <init>
    48:48:void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException) -> connectFailed
    35:37:void install(java.lang.String,int) -> install
    42:43:java.util.List select(java.net.URI) -> select
com.danikula.videocache.InterruptedProxyCacheException -> com.danikula.videocache.InterruptedProxyCacheException:
    15:15:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.danikula.videocache.Pinger -> com.danikula.videocache.Pinger:
    35:35:void <clinit>() -> <clinit>
    43:45:void <init>(java.lang.String,int) -> <init>
    33:33:boolean access$100(com.danikula.videocache.Pinger) -> access$100
    79:82:java.util.List getDefaultProxies() -> getDefaultProxies
    116:116:java.lang.String getPingUrl() -> getPingUrl
    87:87:boolean isPingRequest(java.lang.String) -> isPingRequest
    49:73:boolean ping(int,int) -> ping
    97:111:boolean pingServer() -> pingServer
    91:93:void responseToPing(java.net.Socket) -> responseToPing
com.danikula.videocache.Pinger$PingCallable -> com.danikula.videocache.Pinger$PingCallable:
    119:119:void <init>(com.danikula.videocache.Pinger) -> <init>
    119:119:void <init>(com.danikula.videocache.Pinger,com.danikula.videocache.Pinger$1) -> <init>
    119:119:java.lang.Object call() -> call
    123:123:java.lang.Boolean call() -> call
com.danikula.videocache.Preconditions -> com.danikula.videocache.Preconditions:
    13:15:void checkAllNotNull(java.lang.Object[]) -> checkAllNotNull
    29:29:void checkArgument(boolean) -> checkArgument
    35:35:void checkArgument(boolean,java.lang.String) -> checkArgument
    7:7:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    22:22:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
com.danikula.videocache.ProxyCache -> com.danikula.videocache.ProxyCache:
    21:21:void <clinit>() -> <clinit>
    33:36:void <init>(com.danikula.videocache.Source,com.danikula.videocache.Cache) -> <init>
    19:19:void access$100(com.danikula.videocache.ProxyCache) -> access$100
    56:59:void checkReadSourceErrorsCount() -> checkReadSourceErrorsCount
    168:170:void closeSource() -> closeSource
    163:163:boolean isStopped() -> isStopped
    97:101:void notifyNewCacheDataAvailable(long,long) -> notifyNewCacheDataAvailable
    107:112:void onCacheAvailable(long,long) -> onCacheAvailable
    175:179:void onError(java.lang.Throwable) -> onError
    150:151:void onSourceRead() -> onSourceRead
    40:50:int read(byte[],long,int) -> read
    122:144:void readSource() -> readSource
    79:84:void readSourceAsync() -> readSourceAsync
    64:75:void shutdown() -> shutdown
    155:159:void tryComplete() -> tryComplete
    87:93:void waitForSourceData() -> waitForSourceData
com.danikula.videocache.ProxyCache$SourceReaderRunnable -> com.danikula.videocache.ProxyCache$SourceReaderRunnable:
    183:183:void <init>(com.danikula.videocache.ProxyCache) -> <init>
    183:183:void <init>(com.danikula.videocache.ProxyCache,com.danikula.videocache.ProxyCache$1) -> <init>
    187:187:void run() -> run
com.danikula.videocache.ProxyCacheException -> com.danikula.videocache.ProxyCacheException:
    13:13:void <init>(java.lang.String) -> <init>
    17:17:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.danikula.videocache.ProxyCacheUtils -> com.danikula.videocache.ProxyCacheUtils:
    28:28:void <clinit>() -> <clinit>
    39:41:void assertBuffer(byte[],long,int) -> assertBuffer
    91:95:java.lang.String bytesToHexString(byte[]) -> bytesToHexString
    73:75:void close(java.io.Closeable) -> close
    82:86:java.lang.String computeMD5(java.lang.String) -> computeMD5
    64:66:java.lang.String decode(java.lang.String) -> decode
    56:58:java.lang.String encode(java.lang.String) -> encode
    33:35:java.lang.String getSupposablyMime(java.lang.String) -> getSupposablyMime
com.danikula.videocache.SourceInfo -> com.danikula.videocache.SourceInfo:
    14:17:void <init>(java.lang.String,long,java.lang.String) -> <init>
    22:22:java.lang.String toString() -> toString
com.danikula.videocache.StorageUtils -> com.danikula.videocache.StorageUtils:
    23:23:void <clinit>() -> <clinit>
    54:67:java.io.File getCacheDirectory(android.content.Context,boolean) -> getCacheDirectory
    73:77:java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    35:36:java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
com.danikula.videocache.file.FileCache -> com.danikula.videocache.file.FileCache:
    27:39:void <init>(java.io.File,com.danikula.videocache.file.DiskUsage) -> <init>
    66:73:void append(byte[],int) -> append
    46:48:long available() -> available
    80:83:void close() -> close
    89:98:void complete() -> complete
    111:111:boolean isCompleted() -> isCompleted
    124:124:boolean isTempFile(java.io.File) -> isTempFile
    55:59:int read(byte[],long,int) -> read
com.danikula.videocache.file.Files -> com.danikula.videocache.file.Files:
    23:23:void <clinit>() -> <clinit>
    39:43:java.util.List getLruListFiles(java.io.File) -> getLruListFiles
    26:33:void makeDir(java.io.File) -> makeDir
    63:74:void modify(java.io.File) -> modify
    78:79:void recreateZeroSizeFile(java.io.File) -> recreateZeroSizeFile
    49:56:void setLastModifiedNow(java.io.File) -> setLastModifiedNow
com.danikula.videocache.file.Files$LastModifiedComparator -> com.danikula.videocache.file.Files$LastModifiedComparator:
    83:83:void <init>() -> <init>
    83:83:void <init>(com.danikula.videocache.file.Files$1) -> <init>
    83:83:int compare(java.lang.Object,java.lang.Object) -> compare
    87:87:int compare(java.io.File,java.io.File) -> compare
com.danikula.videocache.file.LruDiskUsage -> com.danikula.videocache.file.LruDiskUsage:
    20:20:void <clinit>() -> <clinit>
    18:21:void <init>() -> <init>
    18:18:void access$000(com.danikula.videocache.file.LruDiskUsage,java.io.File) -> access$000
    57:58:long countTotalSize(java.util.List) -> countTotalSize
    25:25:void touch(java.io.File) -> touch
    29:31:void touchInBackground(java.io.File) -> touchInBackground
    37:49:void trim(java.util.List) -> trim
com.danikula.videocache.file.LruDiskUsage$TouchCallable -> com.danikula.videocache.file.LruDiskUsage$TouchCallable:
    67:68:void <init>(com.danikula.videocache.file.LruDiskUsage,java.io.File) -> <init>
    63:63:java.lang.Object call() -> call
    73:73:java.lang.Void call() -> call
com.danikula.videocache.file.Md5FileNameGenerator -> com.danikula.videocache.file.Md5FileNameGenerator:
    12:12:void <init>() -> <init>
    18:20:java.lang.String generate(java.lang.String) -> generate
    24:27:java.lang.String getExtension(java.lang.String) -> getExtension
com.danikula.videocache.file.TotalSizeLruDiskUsage -> com.danikula.videocache.file.TotalSizeLruDiskUsage:
    14:16:void <init>(long) -> <init>
    23:23:boolean accept(java.io.File,long,int) -> accept
com.danikula.videocache.sourcestorage.DatabaseSourceInfoStorage -> com.danikula.videocache.sourcestorage.DatabaseSourceInfoStorage:
    26:26:void <clinit>() -> <clinit>
    36:37:void <init>(android.content.Context) -> <init>
    84:87:com.danikula.videocache.SourceInfo convert(android.database.Cursor) -> convert
    92:95:android.content.ContentValues convert(com.danikula.videocache.SourceInfo) -> convert
    53:60:com.danikula.videocache.SourceInfo get(java.lang.String) -> get
    42:43:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    48:48:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    67:74:void put(java.lang.String,com.danikula.videocache.SourceInfo) -> put
    80:80:void release() -> release
com.danikula.videocache.sourcestorage.NoSourceInfoStorage -> com.danikula.videocache.sourcestorage.NoSourceInfoStorage:
    10:10:void <init>() -> <init>
com.danikula.videocache.sourcestorage.SourceInfoStorageFactory -> com.danikula.videocache.sourcestorage.SourceInfoStorageFactory:
    17:17:com.danikula.videocache.sourcestorage.SourceInfoStorage newEmptySourceInfoStorage() -> newEmptySourceInfoStorage
    13:13:com.danikula.videocache.sourcestorage.SourceInfoStorage newSourceInfoStorage(android.content.Context) -> newSourceInfoStorage
com.github.kevinsawicki.http.HttpRequest -> com.github.kevinsawicki.http.HttpRequest:
    257:398:void <clinit>() -> <clinit>
    1471:1475:void <init>(java.lang.CharSequence,java.lang.String) -> <init>
    98:98:java.lang.String access$000(java.lang.String) -> access$000
    98:98:int access$100(com.github.kevinsawicki.http.HttpRequest) -> access$100
    98:98:long access$200(com.github.kevinsawicki.http.HttpRequest) -> access$200
    98:98:long access$202(com.github.kevinsawicki.http.HttpRequest,long) -> access$202
    98:98:long access$300(com.github.kevinsawicki.http.HttpRequest) -> access$300
    98:98:com.github.kevinsawicki.http.HttpRequest$UploadProgress access$400(com.github.kevinsawicki.http.HttpRequest) -> access$400
    339:357:java.lang.StringBuilder addParam(java.lang.Object,java.lang.Object,java.lang.StringBuilder) -> addParam
    328:333:java.lang.StringBuilder addParamPrefix(java.lang.String,java.lang.StringBuilder) -> addParamPrefix
    320:321:java.lang.StringBuilder addPathSeparator(java.lang.String,java.lang.StringBuilder) -> addPathSeparator
    913:933:java.lang.String append(java.lang.CharSequence,java.util.Map) -> append
    836:856:java.util.List arrayToList(java.lang.Object) -> arrayToList
    1844:1844:java.io.BufferedInputStream buffer() -> buffer
    1700:1699:com.github.kevinsawicki.http.HttpRequest bufferSize(int) -> bufferSize
    1744:1748:java.io.ByteArrayOutputStream byteStream() -> byteStream
    1827:1831:byte[] bytes() -> bytes
    2684:2697:com.github.kevinsawicki.http.HttpRequest closeOutput() -> closeOutput
    2710:2712:com.github.kevinsawicki.http.HttpRequest closeOutputQuietly() -> closeOutputQuietly
    1559:1562:int code() -> code
    2054:2054:com.github.kevinsawicki.http.HttpRequest connectTimeout(int) -> connectTimeout
    2389:2389:java.lang.String contentEncoding() -> contentEncoding
    2560:2560:int contentLength() -> contentLength
    2538:2542:com.github.kevinsawicki.http.HttpRequest contentType(java.lang.String,java.lang.String) -> contentType
    2613:2626:com.github.kevinsawicki.http.HttpRequest copy(java.io.InputStream,java.io.OutputStream) -> copy
    1500:1507:java.net.HttpURLConnection createConnection() -> createConnection
    1494:1494:java.net.Proxy createProxy() -> createProxy
    1172:1172:com.github.kevinsawicki.http.HttpRequest delete(java.lang.CharSequence) -> delete
    1202:1203:com.github.kevinsawicki.http.HttpRequest delete(java.lang.CharSequence,java.util.Map,boolean) -> delete
    877:879:java.lang.String encode(java.lang.CharSequence) -> encode
    3256:3256:com.github.kevinsawicki.http.HttpRequest followRedirects(boolean) -> followRedirects
    3127:3127:com.github.kevinsawicki.http.HttpRequest form(java.lang.Object,java.lang.Object) -> form
    3144:3159:com.github.kevinsawicki.http.HttpRequest form(java.lang.Object,java.lang.Object,java.lang.String) -> form
    980:980:com.github.kevinsawicki.http.HttpRequest get(java.lang.CharSequence) -> get
    1010:1011:com.github.kevinsawicki.http.HttpRequest get(java.lang.CharSequence,java.util.Map,boolean) -> get
    1522:1524:java.net.HttpURLConnection getConnection() -> getConnection
    2278:2305:java.lang.String getParam(java.lang.String,java.lang.String) -> getParam
    303:311:javax.net.ssl.HostnameVerifier getTrustedVerifier() -> getTrustedVerifier
    264:264:java.lang.String getValidCharset(java.lang.String) -> getValidCharset
    2066:2066:com.github.kevinsawicki.http.HttpRequest header(java.lang.String,java.lang.String) -> header
    2078:2078:com.github.kevinsawicki.http.HttpRequest header(java.lang.String,java.lang.Number) -> header
    2113:2114:java.lang.String header(java.lang.String) -> header
    2164:2164:int intHeader(java.lang.String) -> intHeader
    2179:2180:int intHeader(java.lang.String,int) -> intHeader
    1658:1661:java.lang.String message() -> message
    3228:3228:java.lang.String method() -> method
    2723:2728:com.github.kevinsawicki.http.HttpRequest openOutput() -> openOutput
    1044:1044:com.github.kevinsawicki.http.HttpRequest post(java.lang.CharSequence) -> post
    1074:1075:com.github.kevinsawicki.http.HttpRequest post(java.lang.CharSequence,java.util.Map,boolean) -> post
    2663:2665:com.github.kevinsawicki.http.HttpRequest progress(com.github.kevinsawicki.http.HttpRequest$UploadProgress) -> progress
<<<<<<< HEAD
=======
    1108:1108:com.github.kevinsawicki.http.HttpRequest put(java.lang.CharSequence) -> put
    1138:1139:com.github.kevinsawicki.http.HttpRequest put(java.lang.CharSequence,java.util.Map,boolean) -> put
>>>>>>> rename package name,fix action event info list same time crash
    2043:2043:com.github.kevinsawicki.http.HttpRequest readTimeout(int) -> readTimeout
    1951:1953:com.github.kevinsawicki.http.HttpRequest receive(java.io.File) -> receive
    1974:1976:com.github.kevinsawicki.http.HttpRequest receive(java.io.OutputStream) -> receive
    1855:1880:java.io.InputStream stream() -> stream
    1513:1513:java.lang.String toString() -> toString
    3206:3209:com.github.kevinsawicki.http.HttpRequest trustAllHosts() -> trustAllHosts
    3219:3219:java.net.URL url() -> url
com.github.kevinsawicki.http.HttpRequest$2 -> com.github.kevinsawicki.http.HttpRequest$2:
    304:304:void <init>() -> <init>
com.github.kevinsawicki.http.HttpRequest$5 -> com.github.kevinsawicki.http.HttpRequest$5:
    1955:1955:void <init>(com.github.kevinsawicki.http.HttpRequest,java.io.Closeable,boolean,java.io.OutputStream) -> <init>
    1955:1955:java.lang.Object run() -> run
    1959:1959:com.github.kevinsawicki.http.HttpRequest run() -> run
com.github.kevinsawicki.http.HttpRequest$8 -> com.github.kevinsawicki.http.HttpRequest$8:
    2613:2613:void <init>(com.github.kevinsawicki.http.HttpRequest,java.io.Closeable,boolean,java.io.InputStream,java.io.OutputStream) -> <init>
    2613:2613:java.lang.Object run() -> run
    2617:2624:com.github.kevinsawicki.http.HttpRequest run() -> run
com.github.kevinsawicki.http.HttpRequest$CloseOperation -> com.github.kevinsawicki.http.HttpRequest$CloseOperation:
    748:750:void <init>(java.io.Closeable,boolean) -> <init>
    755:764:void done() -> done
com.github.kevinsawicki.http.HttpRequest$ConnectionFactory -> com.github.kevinsawicki.http.HttpRequest$ConnectionFactory:
    387:387:void <clinit>() -> <clinit>
com.github.kevinsawicki.http.HttpRequest$ConnectionFactory$1 -> com.github.kevinsawicki.http.HttpRequest$ConnectionFactory$1:
    387:387:void <init>() -> <init>
    389:389:java.net.HttpURLConnection create(java.net.URL) -> create
    393:393:java.net.HttpURLConnection create(java.net.URL,java.net.Proxy) -> create
com.github.kevinsawicki.http.HttpRequest$HttpRequestException -> com.github.kevinsawicki.http.HttpRequest$HttpRequestException:
    670:670:void <init>(java.io.IOException) -> <init>
    660:660:java.lang.Throwable getCause() -> getCause
    680:680:java.io.IOException getCause() -> getCause
com.github.kevinsawicki.http.HttpRequest$Operation -> com.github.kevinsawicki.http.HttpRequest$Operation:
    690:690:void <init>() -> <init>
    711:724:java.lang.Object call() -> call
com.github.kevinsawicki.http.HttpRequest$RequestOutputStream -> com.github.kevinsawicki.http.HttpRequest$RequestOutputStream:
    809:811:void <init>(java.io.OutputStream,java.lang.String,int) -> <init>
    822:824:com.github.kevinsawicki.http.HttpRequest$RequestOutputStream write(java.lang.String) -> write
com.github.kevinsawicki.http.HttpRequest$UploadProgress -> com.github.kevinsawicki.http.HttpRequest$UploadProgress:
    423:423:void <clinit>() -> <clinit>
com.github.kevinsawicki.http.HttpRequest$UploadProgress$1 -> com.github.kevinsawicki.http.HttpRequest$UploadProgress$1:
    423:423:void <init>() -> <init>
com.google.android.exoplayer.AspectRatioFrameLayout -> com.google.android.exoplayer.AspectRatioFrameLayout:
    41:41:void <init>(android.content.Context) -> <init>
    45:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    62:82:void onMeasure(int,int) -> onMeasure
    54:56:void setAspectRatio(float) -> setAspectRatio
com.google.android.exoplayer.BehindLiveWindowException -> com.google.android.exoplayer.BehindLiveWindowException:
    26:26:void <init>() -> <init>
com.google.android.exoplayer.C -> com.google.android.exoplayer.C:
    113:113:void <clinit>() -> <clinit>
com.google.android.exoplayer.CodecCounters -> com.google.android.exoplayer.CodecCounters:
    25:25:void <init>() -> <init>
    45:45:void ensureUpdated() -> ensureUpdated
com.google.android.exoplayer.CryptoInfo -> com.google.android.exoplayer.CryptoInfo:
    54:55:void <init>() -> <init>
    101:101:android.media.MediaCodec$CryptoInfo getFrameworkCryptoInfoV16() -> getFrameworkCryptoInfoV16
    106:106:android.media.MediaCodec$CryptoInfo newFrameworkCryptoInfoV16() -> newFrameworkCryptoInfoV16
    63:70:void set(int,int[],int[],byte[],byte[],int) -> set
    111:111:void updateFrameworkCryptoInfoV16() -> updateFrameworkCryptoInfoV16
com.google.android.exoplayer.DecoderInfo -> com.google.android.exoplayer.DecoderInfo:
    53:56:void <init>(java.lang.String,android.media.MediaCodecInfo$CodecCapabilities) -> <init>
    60:60:boolean isAdaptive(android.media.MediaCodecInfo$CodecCapabilities) -> isAdaptive
    65:65:boolean isAdaptiveV19(android.media.MediaCodecInfo$CodecCapabilities) -> isAdaptiveV19
com.google.android.exoplayer.DefaultLoadControl -> com.google.android.exoplayer.DefaultLoadControl:
    88:88:void <init>(com.google.android.exoplayer.upstream.Allocator) -> <init>
    101:101:void <init>(com.google.android.exoplayer.upstream.Allocator,android.os.Handler,com.google.android.exoplayer.DefaultLoadControl$EventListener) -> <init>
    124:133:void <init>(com.google.android.exoplayer.upstream.Allocator,android.os.Handler,com.google.android.exoplayer.DefaultLoadControl$EventListener,int,int,float,float) -> <init>
    40:40:com.google.android.exoplayer.DefaultLoadControl$EventListener access$000(com.google.android.exoplayer.DefaultLoadControl) -> access$000
    158:158:com.google.android.exoplayer.upstream.Allocator getAllocator() -> getAllocator
    204:205:int getBufferState(int) -> getBufferState
    197:197:int getLoaderBufferState(long,long) -> getLoaderBufferState
    249:250:void notifyLoadingChanged(boolean) -> notifyLoadingChanged
    138:140:void register(java.lang.Object,int) -> register
    153:153:void trimAllocator() -> trimAllocator
    145:148:void unregister(java.lang.Object) -> unregister
    165:188:boolean update(java.lang.Object,long,long,boolean) -> update
    213:242:void updateControlState() -> updateControlState
com.google.android.exoplayer.DefaultLoadControl$1 -> com.google.android.exoplayer.DefaultLoadControl$1:
    250:250:void <init>(com.google.android.exoplayer.DefaultLoadControl,boolean) -> <init>
    253:253:void run() -> run
com.google.android.exoplayer.DefaultLoadControl$LoaderState -> com.google.android.exoplayer.DefaultLoadControl$LoaderState:
    267:271:void <init>(int) -> <init>
com.google.android.exoplayer.DummyTrackRenderer -> com.google.android.exoplayer.DummyTrackRenderer:
    25:25:void <init>() -> <init>
    59:59:void doSomeWork(long,long) -> doSomeWork
    74:74:long getBufferedPositionUs() -> getBufferedPositionUs
    69:69:long getDurationUs() -> getDurationUs
    39:39:com.google.android.exoplayer.MediaFormat getFormat(int) -> getFormat
    44:44:boolean isEnded() -> isEnded
    49:49:boolean isReady() -> isReady
    64:64:void maybeThrowError() -> maybeThrowError
    54:54:void seekTo(long) -> seekTo
com.google.android.exoplayer.ExoPlaybackException -> com.google.android.exoplayer.ExoPlaybackException:
    32:33:void <init>(java.lang.String) -> <init>
    37:38:void <init>(java.lang.Throwable) -> <init>
    47:48:void <init>(java.lang.Throwable,boolean) -> <init>
com.google.android.exoplayer.ExoPlayer$Factory -> com.google.android.exoplayer.ExoPlayer$Factory:
    129:129:com.google.android.exoplayer.ExoPlayer newInstance(int,int,int) -> newInstance
com.google.android.exoplayer.ExoPlayerImpl -> com.google.android.exoplayer.ExoPlayerImpl:
    55:68:void <init>(int,int,int) -> <init>
    79:79:void addListener(com.google.android.exoplayer.ExoPlayer$Listener) -> addListener
    166:166:void blockingSendMessage(com.google.android.exoplayer.ExoPlayer$ExoPlayerComponent,int,java.lang.Object) -> blockingSendMessage
    186:188:int getBufferedPercentage() -> getBufferedPercentage
    181:181:long getBufferedPosition() -> getBufferedPosition
    176:176:long getCurrentPosition() -> getCurrentPosition
    171:171:long getDuration() -> getDuration
    135:135:boolean getPlayWhenReady() -> getPlayWhenReady
    74:74:android.os.Looper getPlaybackLooper() -> getPlaybackLooper
    89:89:int getPlaybackState() -> getPlaybackState
    118:118:int getSelectedTrack(int) -> getSelectedTrack
    100:100:int getTrackCount(int) -> getTrackCount
    105:105:com.google.android.exoplayer.MediaFormat getTrackFormat(int,int) -> getTrackFormat
    194:199:void handleEvent(android.os.Message) -> handleEvent
    94:95:void prepare(com.google.android.exoplayer.TrackRenderer[]) -> prepare
    155:156:void release() -> release
    145:145:void seekTo(long) -> seekTo
    161:161:void sendMessage(com.google.android.exoplayer.ExoPlayer$ExoPlayerComponent,int,java.lang.Object) -> sendMessage
    123:128:void setPlayWhenReady(boolean) -> setPlayWhenReady
    110:112:void setSelectedTrack(int,int) -> setSelectedTrack
    150:150:void stop() -> stop
com.google.android.exoplayer.ExoPlayerImpl$1 -> com.google.android.exoplayer.ExoPlayerImpl$1:
    62:62:void <init>(com.google.android.exoplayer.ExoPlayerImpl) -> <init>
    65:65:void handleMessage(android.os.Message) -> handleMessage
com.google.android.exoplayer.ExoPlayerImplInternal -> com.google.android.exoplayer.ExoPlayerImplInternal:
    93:112:void <init>(android.os.Handler,boolean,int[],int,int) -> <init>
    164:177:void blockingSendMessage(com.google.android.exoplayer.ExoPlayer$ExoPlayerComponent,int,java.lang.Object) -> blockingSendMessage
    420:485:void doSomeWork() -> doSomeWork
    341:347:void enableRenderer(com.google.android.exoplayer.TrackRenderer,int,boolean) -> enableRenderer
    657:662:void ensureDisabled(com.google.android.exoplayer.TrackRenderer) -> ensureDisabled
    651:652:void ensureStopped(com.google.android.exoplayer.TrackRenderer) -> ensureStopped
    124:124:long getBufferedPosition() -> getBufferedPosition
    120:120:long getCurrentPosition() -> getCurrentPosition
    129:129:long getDuration() -> getDuration
    116:116:android.os.Looper getPlaybackLooper() -> getPlaybackLooper
    197:240:boolean handleMessage(android.os.Message) -> handleMessage
    266:336:void incrementalPrepareInternal() -> incrementalPrepareInternal
    134:134:void prepare(com.google.android.exoplayer.TrackRenderer[]) -> prepare
    258:262:void prepareInternal(com.google.android.exoplayer.TrackRenderer[]) -> prepareInternal
    180:192:void release() -> release
    572:575:void release(com.google.android.exoplayer.TrackRenderer) -> release
    531:536:void releaseInternal() -> releaseInternal
    352:364:boolean rendererReadyOrEnded(com.google.android.exoplayer.TrackRenderer) -> rendererReadyOrEnded
    540:555:void resetInternal() -> resetInternal
    491:495:void scheduleNextOperation(int,long,long) -> scheduleNextOperation
    142:145:void seekTo(long) -> seekTo
    501:521:void seekToInternal(long) -> seekToInternal
    158:159:void sendMessage(com.google.android.exoplayer.ExoPlayer$ExoPlayerComponent,int,java.lang.Object) -> sendMessage
    586:596:void sendMessageInternal(int,java.lang.Object) -> sendMessageInternal
    138:138:void setPlayWhenReady(boolean) -> setPlayWhenReady
    375:389:void setPlayWhenReadyInternal(boolean) -> setPlayWhenReadyInternal
    153:154:void setRendererSelectedTrack(int,int) -> setRendererSelectedTrack
    602:646:void setRendererSelectedTrackInternal(int,int) -> setRendererSelectedTrackInternal
    251:253:void setState(int) -> setState
    394:397:void startRenderers() -> startRenderers
    149:149:void stop() -> stop
    560:563:void stopAndDisable(com.google.android.exoplayer.TrackRenderer) -> stopAndDisable
    526:527:void stopInternal() -> stopInternal
    402:404:void stopRenderers() -> stopRenderers
    409:416:void updatePositionUs() -> updatePositionUs
com.google.android.exoplayer.MediaCodecAudioTrackRenderer -> com.google.android.exoplayer.MediaCodecAudioTrackRenderer:
    178:178:void <init>(com.google.android.exoplayer.SampleSource,com.google.android.exoplayer.MediaCodecSelector,com.google.android.exoplayer.drm.DrmSessionManager,boolean,android.os.Handler,com.google.android.exoplayer.MediaCodecAudioTrackRenderer$EventListener,com.google.android.exoplayer.audio.AudioCapabilities,int) -> <init>
    203:207:void <init>(com.google.android.exoplayer.SampleSource[],com.google.android.exoplayer.MediaCodecSelector,com.google.android.exoplayer.drm.DrmSessionManager,boolean,android.os.Handler,com.google.android.exoplayer.MediaCodecAudioTrackRenderer$EventListener,com.google.android.exoplayer.audio.AudioCapabilities,int) -> <init>
    36:36:com.google.android.exoplayer.MediaCodecAudioTrackRenderer$EventListener access$000(com.google.android.exoplayer.MediaCodecAudioTrackRenderer) -> access$000
    242:242:boolean allowPassthrough(java.lang.String) -> allowPassthrough
    248:257:void configureCodec(android.media.MediaCodec,boolean,android.media.MediaFormat,android.media.MediaCrypto) -> configureCodec
    222:230:com.google.android.exoplayer.DecoderInfo getDecoderInfo(com.google.android.exoplayer.MediaCodecSelector,java.lang.String,boolean) -> getDecoderInfo
    327:333:long getPositionUs() -> getPositionUs
    445:439:void handleMessage(int,java.lang.Object) -> handleMessage
    213:216:boolean handlesTrack(com.google.android.exoplayer.MediaCodecSelector,com.google.android.exoplayer.MediaFormat) -> handlesTrack
    317:317:boolean isEnded() -> isEnded
    322:322:boolean isReady() -> isReady
    451:452:void notifyAudioTrackInitializationError(com.google.android.exoplayer.audio.AudioTrack$InitializationException) -> notifyAudioTrackInitializationError
    474:475:void notifyAudioTrackUnderrun(int,long,long) -> notifyAudioTrackUnderrun
    462:463:void notifyAudioTrackWriteError(com.google.android.exoplayer.audio.AudioTrack$WriteException) -> notifyAudioTrackWriteError
    338:342:void onDisabled() -> onDisabled
    348:351:void onDiscontinuity(long) -> onDiscontinuity
    268:271:void onInputFormatChanged(com.google.android.exoplayer.MediaFormatHolder) -> onInputFormatChanged
    277:284:void onOutputFormatChanged(android.media.MediaCodec,android.media.MediaFormat) -> onOutputFormatChanged
    428:428:void onOutputStreamEnded() -> onOutputStreamEnded
    305:306:void onStarted() -> onStarted
    311:312:void onStopped() -> onStopped
    358:407:boolean processOutputBuffer(long,long,android.media.MediaCodec,java.nio.ByteBuffer,android.media.MediaCodec$BufferInfo,int,boolean) -> processOutputBuffer
com.google.android.exoplayer.MediaCodecAudioTrackRenderer$1 -> com.google.android.exoplayer.MediaCodecAudioTrackRenderer$1:
    452:452:void <init>(com.google.android.exoplayer.MediaCodecAudioTrackRenderer,com.google.android.exoplayer.audio.AudioTrack$InitializationException) -> <init>
    455:455:void run() -> run
com.google.android.exoplayer.MediaCodecAudioTrackRenderer$2 -> com.google.android.exoplayer.MediaCodecAudioTrackRenderer$2:
    463:463:void <init>(com.google.android.exoplayer.MediaCodecAudioTrackRenderer,com.google.android.exoplayer.audio.AudioTrack$WriteException) -> <init>
    466:466:void run() -> run
com.google.android.exoplayer.MediaCodecAudioTrackRenderer$3 -> com.google.android.exoplayer.MediaCodecAudioTrackRenderer$3:
    475:475:void <init>(com.google.android.exoplayer.MediaCodecAudioTrackRenderer,int,long,long) -> <init>
    478:478:void run() -> run
com.google.android.exoplayer.MediaCodecSelector -> com.google.android.exoplayer.MediaCodecSelector:
    29:29:void <clinit>() -> <clinit>
com.google.android.exoplayer.MediaCodecSelector$1 -> com.google.android.exoplayer.MediaCodecSelector$1:
    29:29:void <init>() -> <init>
    34:34:com.google.android.exoplayer.DecoderInfo getDecoderInfo(java.lang.String,boolean) -> getDecoderInfo
    39:39:com.google.android.exoplayer.DecoderInfo getPassthroughDecoderInfo() -> getPassthroughDecoderInfo
com.google.android.exoplayer.MediaCodecTrackRenderer -> com.google.android.exoplayer.MediaCodecTrackRenderer:
    201:201:void <clinit>() -> <clinit>
    265:265:void <init>(com.google.android.exoplayer.SampleSource,com.google.android.exoplayer.MediaCodecSelector,com.google.android.exoplayer.drm.DrmSessionManager,boolean,android.os.Handler,com.google.android.exoplayer.MediaCodecTrackRenderer$EventListener) -> <init>
    286:300:void <init>(com.google.android.exoplayer.SampleSource[],com.google.android.exoplayer.MediaCodecSelector,com.google.android.exoplayer.drm.DrmSessionManager,boolean,android.os.Handler,com.google.android.exoplayer.MediaCodecTrackRenderer$EventListener) -> <init>
    41:41:com.google.android.exoplayer.MediaCodecTrackRenderer$EventListener access$000(com.google.android.exoplayer.MediaCodecTrackRenderer) -> access$000
    435:435:boolean codecInitialized() -> codecInitialized
    1092:1095:boolean codecNeedsAdaptationWorkaround(java.lang.String) -> codecNeedsAdaptationWorkaround
    1109:1110:boolean codecNeedsDiscardToSpsWorkaround(java.lang.String,com.google.android.exoplayer.MediaFormat) -> codecNeedsDiscardToSpsWorkaround
    1142:1142:boolean codecNeedsEosFlushWorkaround(java.lang.String) -> codecNeedsEosFlushWorkaround
    1126:1127:boolean codecNeedsEosPropagationWorkaround(java.lang.String) -> codecNeedsEosPropagationWorkaround
    1072:1076:boolean codecNeedsFlushWorkaround(java.lang.String) -> codecNeedsFlushWorkaround
    1159:1160:boolean codecNeedsMonoChannelCountWorkaround(java.lang.String,com.google.android.exoplayer.MediaFormat) -> codecNeedsMonoChannelCountWorkaround
    1178:1178:boolean deviceNeedsAutoFrcWorkaround() -> deviceNeedsAutoFrcWorkaround
    519:534:void doSomeWork(long,long,boolean) -> doSomeWork
    917:960:boolean drainOutputBuffer(long,long) -> drainOutputBuffer
    583:731:boolean feedInputBuffer(long,boolean) -> feedInputBuffer
    545:570:void flushCodec() -> flushCodec
    1053:1055:int getDecodeOnlyIndex(long) -> getDecodeOnlyIndex
    331:331:com.google.android.exoplayer.DecoderInfo getDecoderInfo(com.google.android.exoplayer.MediaCodecSelector,java.lang.String,boolean) -> getDecoderInfo
    738:748:android.media.MediaCodec$CryptoInfo getFrameworkCryptoInfo(com.google.android.exoplayer.SampleHolder,int) -> getFrameworkCryptoInfo
    753:755:android.media.MediaFormat getFrameworkMediaFormat(com.google.android.exoplayer.MediaFormat) -> getFrameworkMediaFormat
    894:894:int getSourceState() -> getSourceState
    305:305:boolean handlesTrack(com.google.android.exoplayer.MediaFormat) -> handlesTrack
    878:878:boolean isEnded() -> isEnded
    883:884:boolean isReady() -> isReady
    898:898:boolean isWithinHotswapPeriod() -> isWithinHotswapPeriod
    347:379:void maybeInitCodec() -> maybeInitCodec
    426:427:void notifyAndThrowDecoderInitError(com.google.android.exoplayer.MediaCodecTrackRenderer$DecoderInitializationException) -> notifyAndThrowDecoderInitError
    1029:1030:void notifyCryptoError(android.media.MediaCodec$CryptoException) -> notifyCryptoError
    1018:1019:void notifyDecoderInitializationError(com.google.android.exoplayer.MediaCodecTrackRenderer$DecoderInitializationException) -> notifyDecoderInitializationError
    1041:1042:void notifyDecoderInitialized(java.lang.String,long,long) -> notifyDecoderInitialized
    444:455:void onDisabled() -> onDisabled
    498:502:void onDiscontinuity(long) -> onDiscontinuity
    782:800:void onInputFormatChanged(com.google.android.exoplayer.MediaFormatHolder) -> onInputFormatChanged
    1007:1013:void processEndOfStream() -> processEndOfStream
    973:987:void processOutputFormat() -> processOutputFormat
    538:540:void readFormat(long) -> readFormat
    461:490:void releaseCodec() -> releaseCodec
    431:431:boolean shouldInitCodec() -> shouldInitCodec
    761:766:boolean shouldWaitForKeys(boolean) -> shouldWaitForKeys
com.google.android.exoplayer.MediaCodecTrackRenderer$1 -> com.google.android.exoplayer.MediaCodecTrackRenderer$1:
    1019:1019:void <init>(com.google.android.exoplayer.MediaCodecTrackRenderer,com.google.android.exoplayer.MediaCodecTrackRenderer$DecoderInitializationException) -> <init>
    1022:1022:void run() -> run
com.google.android.exoplayer.MediaCodecTrackRenderer$2 -> com.google.android.exoplayer.MediaCodecTrackRenderer$2:
    1030:1030:void <init>(com.google.android.exoplayer.MediaCodecTrackRenderer,android.media.MediaCodec$CryptoException) -> <init>
    1033:1033:void run() -> run
com.google.android.exoplayer.MediaCodecTrackRenderer$3 -> com.google.android.exoplayer.MediaCodecTrackRenderer$3:
    1042:1042:void <init>(com.google.android.exoplayer.MediaCodecTrackRenderer,java.lang.String,long,long) -> <init>
    1045:1045:void run() -> run
com.google.android.exoplayer.MediaCodecTrackRenderer$DecoderInitializationException -> com.google.android.exoplayer.MediaCodecTrackRenderer$DecoderInitializationException:
    106:110:void <init>(com.google.android.exoplayer.MediaFormat,java.lang.Throwable,boolean,int) -> <init>
    115:119:void <init>(com.google.android.exoplayer.MediaFormat,java.lang.Throwable,boolean,java.lang.String) -> <init>
    132:132:java.lang.String buildCustomDiagnosticInfo(int) -> buildCustomDiagnosticInfo
    124:125:java.lang.String getDiagnosticInfoV21(java.lang.Throwable) -> getDiagnosticInfoV21
com.google.android.exoplayer.MediaCodecUtil -> com.google.android.exoplayer.MediaCodecUtil:
    56:62:void <clinit>() -> <clinit>
    104:105:com.google.android.exoplayer.DecoderInfo getDecoderInfo(java.lang.String,boolean) -> getDecoderInfo
    120:140:java.util.List getDecoderInfos(java.lang.String,boolean) -> getDecoderInfos
    146:187:java.util.List getDecoderInfosInternal(com.google.android.exoplayer.MediaCodecUtil$CodecKey,com.google.android.exoplayer.MediaCodecUtil$MediaCodecListCompat) -> getDecoderInfosInternal
    91:91:com.google.android.exoplayer.DecoderInfo getPassthroughDecoderInfo() -> getPassthroughDecoderInfo
    352:353:android.media.MediaCodecInfo$VideoCapabilities getVideoCapabilitiesV21(java.lang.String,boolean) -> getVideoCapabilitiesV21
    196:258:boolean isCodecUsableDecoder(android.media.MediaCodecInfo,java.lang.String,boolean) -> isCodecUsableDecoder
    303:306:boolean isSizeAndRateSupportedV21(java.lang.String,boolean,int,int,double) -> isSizeAndRateSupportedV21
    281:283:boolean isSizeSupportedV21(java.lang.String,boolean,int,int) -> isSizeSupportedV21
    334:346:int maxH264DecodableFrameSize() -> maxH264DecodableFrameSize
com.google.android.exoplayer.MediaCodecUtil$CodecKey -> com.google.android.exoplayer.MediaCodecUtil$CodecKey:
    484:486:void <init>(java.lang.String,boolean) -> <init>
    503:507:boolean equals(java.lang.Object) -> equals
    493:494:int hashCode() -> hashCode
com.google.android.exoplayer.MediaCodecUtil$DecoderQueryException -> com.google.android.exoplayer.MediaCodecUtil$DecoderQueryException:
    47:47:void <init>(java.lang.Throwable,com.google.android.exoplayer.MediaCodecUtil$1) -> <init>
    50:50:void <init>(java.lang.Throwable) -> <init>
com.google.android.exoplayer.MediaCodecUtil$MediaCodecListCompatV16 -> com.google.android.exoplayer.MediaCodecUtil$MediaCodecListCompatV16:
    453:453:void <init>() -> <init>
    453:453:void <init>(com.google.android.exoplayer.MediaCodecUtil$1) -> <init>
    457:457:int getCodecCount() -> getCodecCount
    462:462:android.media.MediaCodecInfo getCodecInfoAt(int) -> getCodecInfoAt
    474:474:boolean isSecurePlaybackSupported(java.lang.String,android.media.MediaCodecInfo$CodecCapabilities) -> isSecurePlaybackSupported
com.google.android.exoplayer.MediaCodecUtil$MediaCodecListCompatV21 -> com.google.android.exoplayer.MediaCodecUtil$MediaCodecListCompatV21:
    418:419:void <init>(boolean) -> <init>
    445:446:void ensureMediaCodecInfosInitialized() -> ensureMediaCodecInfosInitialized
    424:425:int getCodecCount() -> getCodecCount
    430:431:android.media.MediaCodecInfo getCodecInfoAt(int) -> getCodecInfoAt
    441:441:boolean isSecurePlaybackSupported(java.lang.String,android.media.MediaCodecInfo$CodecCapabilities) -> isSecurePlaybackSupported
com.google.android.exoplayer.MediaCodecVideoTrackRenderer -> com.google.android.exoplayer.MediaCodecVideoTrackRenderer:
    172:172:void <init>(android.content.Context,com.google.android.exoplayer.SampleSource,com.google.android.exoplayer.MediaCodecSelector,int,long,android.os.Handler,com.google.android.exoplayer.MediaCodecVideoTrackRenderer$EventListener,int) -> <init>
    202:216:void <init>(android.content.Context,com.google.android.exoplayer.SampleSource,com.google.android.exoplayer.MediaCodecSelector,int,long,com.google.android.exoplayer.drm.DrmSessionManager,boolean,android.os.Handler,com.google.android.exoplayer.MediaCodecVideoTrackRenderer$EventListener,int) -> <init>
    39:39:com.google.android.exoplayer.MediaCodecVideoTrackRenderer$EventListener access$000(com.google.android.exoplayer.MediaCodecVideoTrackRenderer) -> access$000
    380:380:boolean canReconfigureCodec(android.media.MediaCodec,boolean,com.google.android.exoplayer.MediaFormat,com.google.android.exoplayer.MediaFormat) -> canReconfigureCodec
    327:328:void configureCodec(android.media.MediaCodec,boolean,android.media.MediaFormat,android.media.MediaCrypto) -> configureCodec
    465:474:void dropOutputBuffer(android.media.MediaCodec,int) -> dropOutputBuffer
    295:297:void handleMessage(int,java.lang.Object) -> handleMessage
    222:224:boolean handlesTrack(com.google.android.exoplayer.MediaCodecSelector,com.google.android.exoplayer.MediaFormat) -> handlesTrack
    247:260:boolean isReady() -> isReady
    577:589:void maybeNotifyDrawnToSurface() -> maybeNotifyDrawnToSurface
    593:608:void maybeNotifyDroppedFrameCount() -> maybeNotifyDroppedFrameCount
    551:573:void maybeNotifyVideoSizeChanged() -> maybeNotifyVideoSizeChanged
    501:547:void maybeSetMaxInputSize(android.media.MediaFormat,boolean) -> maybeSetMaxInputSize
    281:289:void onDisabled() -> onDisabled
    239:242:void onDiscontinuity(long) -> onDiscontinuity
    230:234:void onEnabled(int,long,boolean) -> onEnabled
    333:336:void onInputFormatChanged(com.google.android.exoplayer.MediaFormatHolder) -> onInputFormatChanged
    349:374:void onOutputFormatChanged(android.media.MediaCodec,android.media.MediaFormat) -> onOutputFormatChanged
    267:269:void onStarted() -> onStarted
    274:276:void onStopped() -> onStopped
    389:448:boolean processOutputBuffer(long,long,android.media.MediaCodec,java.nio.ByteBuffer,android.media.MediaCodec$BufferInfo,int,boolean) -> processOutputBuffer
    479:485:void renderOutputBuffer(android.media.MediaCodec,int) -> renderOutputBuffer
    490:496:void renderOutputBufferV21(android.media.MediaCodec,int,long) -> renderOutputBufferV21
    306:314:void setSurface(android.view.Surface) -> setSurface
    320:320:boolean shouldInitCodec() -> shouldInitCodec
    458:461:void skipOutputBuffer(android.media.MediaCodec,int) -> skipOutputBuffer
com.google.android.exoplayer.MediaCodecVideoTrackRenderer$1 -> com.google.android.exoplayer.MediaCodecVideoTrackRenderer$1:
    562:562:void <init>(com.google.android.exoplayer.MediaCodecVideoTrackRenderer,int,int,int,float) -> <init>
    565:565:void run() -> run
com.google.android.exoplayer.MediaCodecVideoTrackRenderer$2 -> com.google.android.exoplayer.MediaCodecVideoTrackRenderer$2:
    582:582:void <init>(com.google.android.exoplayer.MediaCodecVideoTrackRenderer,android.view.Surface) -> <init>
    585:585:void run() -> run
com.google.android.exoplayer.MediaCodecVideoTrackRenderer$3 -> com.google.android.exoplayer.MediaCodecVideoTrackRenderer$3:
    600:600:void <init>(com.google.android.exoplayer.MediaCodecVideoTrackRenderer,int,long) -> <init>
    603:603:void run() -> run
com.google.android.exoplayer.MediaFormat -> com.google.android.exoplayer.MediaFormat:
    526:526:void <clinit>() -> <clinit>
    243:267:void <init>(android.os.Parcel) -> <init>
    275:298:void <init>(java.lang.String,java.lang.String,int,int,long,int,int,int,float,int,int,java.lang.String,long,java.util.List,boolean,int,int,int,int,int,byte[],int) -> <init>
    345:345:com.google.android.exoplayer.MediaFormat copyAsAdaptive(java.lang.String) -> copyAsAdaptive
    323:323:com.google.android.exoplayer.MediaFormat copyWithDurationUs(long) -> copyWithDurationUs
    338:338:com.google.android.exoplayer.MediaFormat copyWithFixedTrackInfo(java.lang.String,int,int,int,java.lang.String) -> copyWithFixedTrackInfo
    351:351:com.google.android.exoplayer.MediaFormat copyWithGaplessInfo(int,int) -> copyWithGaplessInfo
    330:330:com.google.android.exoplayer.MediaFormat copyWithLanguage(java.lang.String) -> copyWithLanguage
    302:302:com.google.android.exoplayer.MediaFormat copyWithMaxInputSize(int) -> copyWithMaxInputSize
    309:309:com.google.android.exoplayer.MediaFormat copyWithMaxVideoDimensions(int,int) -> copyWithMaxVideoDimensions
    316:316:com.google.android.exoplayer.MediaFormat copyWithSubsampleOffsetUs(long) -> copyWithSubsampleOffsetUs
    197:197:com.google.android.exoplayer.MediaFormat createAudioFormat(java.lang.String,java.lang.String,int,int,long,int,int,java.util.List,java.lang.String) -> createAudioFormat
    204:204:com.google.android.exoplayer.MediaFormat createAudioFormat(java.lang.String,java.lang.String,int,int,long,int,int,java.util.List,java.lang.String,int) -> createAudioFormat
    233:233:com.google.android.exoplayer.MediaFormat createFormatForMimeType(java.lang.String,java.lang.String,int,long) -> createFormatForMimeType
    239:239:com.google.android.exoplayer.MediaFormat createId3Format() -> createId3Format
    225:225:com.google.android.exoplayer.MediaFormat createImageFormat(java.lang.String,java.lang.String,int,long,java.util.List,java.lang.String) -> createImageFormat
    212:212:com.google.android.exoplayer.MediaFormat createTextFormat(java.lang.String,java.lang.String,int,long,java.lang.String) -> createTextFormat
    218:218:com.google.android.exoplayer.MediaFormat createTextFormat(java.lang.String,java.lang.String,int,long,java.lang.String,long) -> createTextFormat
    171:171:com.google.android.exoplayer.MediaFormat createVideoFormat(java.lang.String,java.lang.String,int,int,long,int,int,java.util.List) -> createVideoFormat
    178:178:com.google.android.exoplayer.MediaFormat createVideoFormat(java.lang.String,java.lang.String,int,int,long,int,int,java.util.List,int,float) -> createVideoFormat
    188:188:com.google.android.exoplayer.MediaFormat createVideoFormat(java.lang.String,java.lang.String,int,int,long,int,int,java.util.List,int,float,byte[],int) -> createVideoFormat
    447:467:boolean equals(java.lang.Object) -> equals
    363:385:android.media.MediaFormat getFrameworkMediaFormatV16() -> getFrameworkMediaFormatV16
    411:439:int hashCode() -> hashCode
    486:486:void maybeSetIntegerV16(android.media.MediaFormat,java.lang.String,int) -> maybeSetIntegerV16
    478:478:void maybeSetStringV16(android.media.MediaFormat,java.lang.String,java.lang.String) -> maybeSetStringV16
    402:402:java.lang.String toString() -> toString
    499:523:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.exoplayer.MediaFormat$1 -> com.google.android.exoplayer.MediaFormat$1:
    526:526:void <init>() -> <init>
    526:526:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    530:530:com.google.android.exoplayer.MediaFormat createFromParcel(android.os.Parcel) -> createFromParcel
    526:526:java.lang.Object[] newArray(int) -> newArray
    535:535:com.google.android.exoplayer.MediaFormat[] newArray(int) -> newArray
com.google.android.exoplayer.MediaFormatHolder -> com.google.android.exoplayer.MediaFormatHolder:
    23:23:void <init>() -> <init>
com.google.android.exoplayer.ParserException -> com.google.android.exoplayer.ParserException:
    26:26:void <init>() -> <init>
    30:30:void <init>(java.lang.String) -> <init>
    34:34:void <init>(java.lang.Throwable) -> <init>
    38:38:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.google.android.exoplayer.SampleHolder -> com.google.android.exoplayer.SampleHolder:
    70:72:void <init>(int) -> <init>
    136:137:void clearData() -> clearData
    142:148:java.nio.ByteBuffer createReplacementBuffer(int) -> createReplacementBuffer
    88:108:void ensureSpaceForWrite(int) -> ensureSpaceForWrite
    122:122:boolean isDecodeOnly() -> isDecodeOnly
    115:115:boolean isEncrypted() -> isEncrypted
    129:129:boolean isSyncFrame() -> isSyncFrame
com.google.android.exoplayer.SampleSourceTrackRenderer -> com.google.android.exoplayer.SampleSourceTrackRenderer:
    42:45:void <init>(com.google.android.exoplayer.SampleSource[]) -> <init>
    250:252:long checkForDiscontinuity(long) -> checkForDiscontinuity
    52:101:boolean doPrepare(long) -> doPrepare
    125:128:void doSomeWork(long,long) -> doSomeWork
    133:133:long getBufferedPositionUs() -> getBufferedPositionUs
    138:138:long getDurationUs() -> getDurationUs
    174:175:com.google.android.exoplayer.MediaFormat getFormat(int) -> getFormat
    169:169:int getTrackCount() -> getTrackCount
    143:148:void maybeThrowError() -> maybeThrowError
    260:262:void maybeThrowError(com.google.android.exoplayer.SampleSource$SampleSourceReader) -> maybeThrowError
    155:156:void onDisabled() -> onDisabled
    108:112:void onEnabled(int,long,boolean) -> onEnabled
    161:163:void onReleased() -> onReleased
    208:208:int readSource(long,com.google.android.exoplayer.MediaFormatHolder,com.google.android.exoplayer.SampleHolder) -> readSource
    117:119:void seekTo(long) -> seekTo
com.google.android.exoplayer.StandaloneMediaClock -> com.google.android.exoplayer.StandaloneMediaClock:
    24:24:void <init>() -> <init>
    73:73:long elapsedRealtimeMinus(long) -> elapsedRealtimeMinus
    69:69:long getPositionUs() -> getPositionUs
    63:64:void setPositionUs(long) -> setPositionUs
    43:45:void start() -> start
    53:55:void stop() -> stop
com.google.android.exoplayer.TimeRange$DynamicTimeRange -> com.google.android.exoplayer.TimeRange$DynamicTimeRange:
    135:140:void <init>(long,long,long,long,com.google.android.exoplayer.util.Clock) -> <init>
    190:194:boolean equals(java.lang.Object) -> equals
    158:171:long[] getCurrentBoundsUs(long[]) -> getCurrentBoundsUs
    178:181:int hashCode() -> hashCode
com.google.android.exoplayer.TimeRange$StaticTimeRange -> com.google.android.exoplayer.TimeRange$StaticTimeRange:
    64:66:void <init>(long,long) -> <init>
    105:109:boolean equals(java.lang.Object) -> equals
    84:88:long[] getCurrentBoundsUs(long[]) -> getCurrentBoundsUs
    95:96:int hashCode() -> hashCode
com.google.android.exoplayer.TrackRenderer -> com.google.android.exoplayer.TrackRenderer:
    32:32:void <init>() -> <init>
    229:231:void disable() -> disable
    158:160:void enable(int,long,boolean) -> enable
    97:97:int getState() -> getState
    109:111:int prepare(long) -> prepare
    251:255:void release() -> release
    185:187:void start() -> start
    207:209:void stop() -> stop
com.google.android.exoplayer.VideoFrameReleaseTimeHelper -> com.google.android.exoplayer.VideoFrameReleaseTimeHelper:
    68:68:void <init>(android.content.Context) -> <init>
    72:81:void <init>(float,boolean) -> <init>
    120:172:long adjustReleaseTime(long,long) -> adjustReleaseTime
    186:186:long closestVsync(long,long,long) -> closestVsync
    99:100:void disable() -> disable
    89:91:void enable() -> enable
    203:204:float getDefaultDisplayRefreshRate(android.content.Context) -> getDefaultDisplayRefreshRate
    180:182:boolean isDriftTooLarge(long,long) -> isDriftTooLarge
com.google.android.exoplayer.VideoFrameReleaseTimeHelper$VSyncSampler -> com.google.android.exoplayer.VideoFrameReleaseTimeHelper$VSyncSampler:
    220:220:void <clinit>() -> <clinit>
    231:235:void <init>() -> <init>
    244:244:void addObserver() -> addObserver
    288:290:void addObserverInternal() -> addObserverInternal
    284:284:void createChoreographerInstanceInternal() -> createChoreographerInstanceInternal
    257:258:void doFrame(long) -> doFrame
    228:228:com.google.android.exoplayer.VideoFrameReleaseTimeHelper$VSyncSampler getInstance() -> getInstance
    263:265:boolean handleMessage(android.os.Message) -> handleMessage
    252:252:void removeObserver() -> removeObserver
    295:298:void removeObserverInternal() -> removeObserverInternal
com.google.android.exoplayer.audio.AudioCapabilities -> com.google.android.exoplayer.audio.AudioCapabilities:
    36:36:void <clinit>() -> <clinit>
    72:79:void <init>(int[],int) -> <init>
    102:106:boolean equals(java.lang.Object) -> equals
    48:48:com.google.android.exoplayer.audio.AudioCapabilities getCapabilities(android.content.Context) -> getCapabilities
    54:55:com.google.android.exoplayer.audio.AudioCapabilities getCapabilities(android.content.Intent) -> getCapabilities
    112:112:int hashCode() -> hashCode
    89:89:boolean supportsEncoding(int) -> supportsEncoding
    117:118:java.lang.String toString() -> toString
com.google.android.exoplayer.audio.AudioTrack -> com.google.android.exoplayer.audio.AudioTrack:
    244:265:void <init>(com.google.android.exoplayer.audio.AudioCapabilities,int) -> <init>
    57:57:android.os.ConditionVariable access$100(com.google.android.exoplayer.audio.AudioTrack) -> access$100
    898:912:void checkAudioTrackInitialized() -> checkAudioTrackInitialized
    346:346:void configure(java.lang.String,int,int,int) -> configure
    390:444:void configure(java.lang.String,int,int,int,int) -> configure
    924:924:long durationUsToFrames(long) -> durationUsToFrames
    920:920:long framesToDurationUs(long) -> framesToDurationUs
    516:516:int getBufferSize() -> getBufferSize
    530:530:long getBufferSizeUs() -> getBufferSizeUs
    297:328:long getCurrentPositionUs(boolean) -> getCurrentPositionUs
    1031:1031:int getEncodingForMimeType(java.lang.String) -> getEncodingForMimeType
    1049:1047:int getFramesPerEncodedSample(int,java.nio.ByteBuffer) -> getFramesPerEncodedSample
    928:928:long getSubmittedFrames() -> getSubmittedFrames
    570:660:int handleBuffer(java.nio.ByteBuffer,int,int,long) -> handleBuffer
    548:549:void handleDiscontinuity() -> handleDiscontinuity
    681:682:void handleEndOfStream() -> handleEndOfStream
    803:803:boolean hasCurrentPositionUs() -> hasCurrentPositionUs
    690:692:boolean hasPendingData() -> hasPendingData
    453:453:int initialize() -> initialize
    469:502:int initialize(int) -> initialize
    282:282:boolean isInitialized() -> isInitialized
    273:274:boolean isPassthroughSupported(java.lang.String) -> isPassthroughSupported
    810:886:void maybeSampleSyncParams() -> maybeSampleSyncParams
    945:945:boolean needsPassthroughWorkarounds() -> needsPassthroughWorkarounds
    956:958:boolean overrideHasPendingData() -> overrideHasPendingData
    729:731:void pause() -> pause
    916:916:long pcmBytesToFrames(long) -> pcmBytesToFrames
    537:539:void play() -> play
    776:777:void release() -> release
    784:796:void releaseKeepSessionIdAudioTrack() -> releaseKeepSessionIdAudioTrack
    983:1026:java.nio.ByteBuffer resampleTo16BitPcm(java.nio.ByteBuffer,int,int,int,java.nio.ByteBuffer) -> resampleTo16BitPcm
    741:768:void reset() -> reset
    932:937:void resetSyncParams() -> resetSyncParams
    716:721:void setAudioTrackVolume() -> setAudioTrackVolume
    1065:1065:void setAudioTrackVolumeV21(android.media.AudioTrack,float) -> setAudioTrackVolumeV21
    1070:1070:void setAudioTrackVolumeV3(android.media.AudioTrack,float) -> setAudioTrackVolumeV3
    702:702:void setPlaybackParams(android.media.PlaybackParams) -> setPlaybackParams
    709:711:void setVolume(float) -> setVolume
    1060:1060:int writeNonBlockingV21(android.media.AudioTrack,java.nio.ByteBuffer,int) -> writeNonBlockingV21
com.google.android.exoplayer.audio.AudioTrack$1 -> com.google.android.exoplayer.audio.AudioTrack$1:
    758:758:void <init>(com.google.android.exoplayer.audio.AudioTrack,android.media.AudioTrack) -> <init>
    762:765:void run() -> run
com.google.android.exoplayer.audio.AudioTrack$2 -> com.google.android.exoplayer.audio.AudioTrack$2:
    791:791:void <init>(com.google.android.exoplayer.audio.AudioTrack,android.media.AudioTrack) -> <init>
    794:794:void run() -> run
com.google.android.exoplayer.audio.AudioTrack$AudioTrackUtil -> com.google.android.exoplayer.audio.AudioTrack$AudioTrackUtil:
    1076:1076:void <init>() -> <init>
    1076:1076:void <init>(com.google.android.exoplayer.audio.AudioTrack$1) -> <init>
    1145:1173:long getPlaybackHeadPosition() -> getPlaybackHeadPosition
    1180:1180:long getPlaybackHeadPositionUs() -> getPlaybackHeadPositionUs
    1220:1220:long getTimestampFramePosition() -> getTimestampFramePosition
    1204:1204:long getTimestampNanoTime() -> getTimestampNanoTime
    1117:1120:void handleEndOfStream(long) -> handleEndOfStream
    1128:1132:void pause() -> pause
    1098:1105:void reconfigure(android.media.AudioTrack,boolean) -> reconfigure
    1231:1231:void setPlaybackParameters(android.media.PlaybackParams) -> setPlaybackParameters
com.google.android.exoplayer.audio.AudioTrack$AudioTrackUtilV19 -> com.google.android.exoplayer.audio.AudioTrack$AudioTrackUtilV19:
    1255:1256:void <init>() -> <init>
    1290:1290:long getTimestampFramePosition() -> getTimestampFramePosition
    1285:1285:long getTimestampNanoTime() -> getTimestampNanoTime
    1262:1265:void reconfigure(android.media.AudioTrack,boolean) -> reconfigure
    1270:1278:boolean updateTimestamp() -> updateTimestamp
com.google.android.exoplayer.audio.AudioTrack$AudioTrackUtilV23 -> com.google.android.exoplayer.audio.AudioTrack$AudioTrackUtilV23:
    1301:1302:void <init>() -> <init>
    1323:1323:float getPlaybackSpeed() -> getPlaybackSpeed
    1327:1328:void maybeApplyPlaybackParams() -> maybeApplyPlaybackParams
    1308:1309:void reconfigure(android.media.AudioTrack,boolean) -> reconfigure
    1314:1318:void setPlaybackParameters(android.media.PlaybackParams) -> setPlaybackParameters
com.google.android.exoplayer.audio.AudioTrack$InitializationException -> com.google.android.exoplayer.audio.AudioTrack$InitializationException:
    71:73:void <init>(int,int,int,int) -> <init>
com.google.android.exoplayer.audio.AudioTrack$InvalidAudioTrackTimestampException -> com.google.android.exoplayer.audio.AudioTrack$InvalidAudioTrackTimestampException:
    102:102:void <init>(java.lang.String) -> <init>
com.google.android.exoplayer.audio.AudioTrack$WriteException -> com.google.android.exoplayer.audio.AudioTrack$WriteException:
    89:90:void <init>(int) -> <init>
com.google.android.exoplayer.chunk.BaseMediaChunk -> com.google.android.exoplayer.chunk.BaseMediaChunk:
    57:58:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec,int,com.google.android.exoplayer.chunk.Format,long,long,int,boolean,int) -> <init>
    77:77:int getFirstSampleIndex() -> getFirstSampleIndex
    104:104:com.google.android.exoplayer.extractor.DefaultTrackOutput getOutput() -> getOutput
    68:69:void init(com.google.android.exoplayer.extractor.DefaultTrackOutput) -> init
com.google.android.exoplayer.chunk.Chunk -> com.google.android.exoplayer.chunk.Chunk:
    119:125:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec,int,int,com.google.android.exoplayer.chunk.Format,int) -> <init>
com.google.android.exoplayer.chunk.ChunkExtractorWrapper -> com.google.android.exoplayer.chunk.ChunkExtractorWrapper:
    63:64:void <init>(com.google.android.exoplayer.extractor.Extractor) -> <init>
    118:118:void drmInitData(com.google.android.exoplayer.drm.DrmInitData) -> drmInitData
    108:108:void endTracks() -> endTracks
    125:125:void format(com.google.android.exoplayer.MediaFormat) -> format
    74:79:void init(com.google.android.exoplayer.chunk.ChunkExtractorWrapper$SingleTrackOutput) -> init
    92:93:int read(com.google.android.exoplayer.extractor.ExtractorInput) -> read
    131:131:int sampleData(com.google.android.exoplayer.extractor.ExtractorInput,int,boolean) -> sampleData
    136:136:void sampleData(com.google.android.exoplayer.util.ParsableByteArray,int) -> sampleData
    141:141:void sampleMetadata(long,int,int,int,byte[]) -> sampleMetadata
    113:113:void seekMap(com.google.android.exoplayer.extractor.SeekMap) -> seekMap
    101:102:com.google.android.exoplayer.extractor.TrackOutput track(int) -> track
com.google.android.exoplayer.chunk.ChunkOperationHolder -> com.google.android.exoplayer.chunk.ChunkOperationHolder:
    27:27:void <init>() -> <init>
    48:50:void clear() -> clear
com.google.android.exoplayer.chunk.ChunkSampleSource -> com.google.android.exoplayer.chunk.ChunkSampleSource:
    116:116:void <init>(com.google.android.exoplayer.chunk.ChunkSource,com.google.android.exoplayer.LoadControl,int,android.os.Handler,com.google.android.exoplayer.chunk.ChunkSampleSource$EventListener,int) -> <init>
    133:146:void <init>(com.google.android.exoplayer.chunk.ChunkSource,com.google.android.exoplayer.LoadControl,int,android.os.Handler,com.google.android.exoplayer.chunk.ChunkSampleSource$EventListener,int,int) -> <init>
    43:43:int access$000(com.google.android.exoplayer.chunk.ChunkSampleSource) -> access$000
    43:43:com.google.android.exoplayer.chunk.ChunkSampleSource$EventListener access$100(com.google.android.exoplayer.chunk.ChunkSampleSource) -> access$100
    426:427:void clearCurrentLoadable() -> clearCurrentLoadable
    431:432:void clearCurrentLoadableException() -> clearCurrentLoadableException
    221:225:boolean continueBuffering(int,long) -> continueBuffering
    201:214:void disable(int) -> disable
    586:600:boolean discardUpstreamMediaChunks(int) -> discardUpstreamMediaChunks
    571:576:void doChunkOperation() -> doChunkOperation
    185:196:void enable(int,long) -> enable
    336:343:long getBufferedPositionUs() -> getBufferedPositionUs
    179:180:com.google.android.exoplayer.MediaFormat getFormat(int) -> getFormat
    481:484:long getNextLoadPositionUs() -> getNextLoadPositionUs
    613:613:long getRetryDelayMillis(long) -> getRetryDelayMillis
    173:174:int getTrackCount() -> getTrackCount
    605:605:boolean isMediaChunk(com.google.android.exoplayer.chunk.Chunk) -> isMediaChunk
    609:609:boolean isPendingReset() -> isPendingReset
    543:562:void maybeStartLoading() -> maybeStartLoading
    327:330:void maybeThrowError() -> maybeThrowError
    683:684:void notifyDownstreamFormatChanged(com.google.android.exoplayer.chunk.Format,int,long) -> notifyDownstreamFormatChanged
    648:649:void notifyLoadCanceled(long) -> notifyLoadCanceled
    636:637:void notifyLoadCompleted(long,int,int,com.google.android.exoplayer.chunk.Format,long,long,long,long) -> notifyLoadCompleted
    659:660:void notifyLoadError(java.io.IOException) -> notifyLoadError
    622:623:void notifyLoadStarted(long,int,int,com.google.android.exoplayer.chunk.Format,long,long) -> notifyLoadStarted
    670:671:void notifyUpstreamDiscarded(long,long) -> notifyUpstreamDiscarded
    378:387:void onLoadCanceled(com.google.android.exoplayer.upstream.Loader$Loadable) -> onLoadCanceled
    360:373:void onLoadCompleted(com.google.android.exoplayer.upstream.Loader$Loadable) -> onLoadCompleted
    393:398:void onLoadError(com.google.android.exoplayer.upstream.Loader$Loadable,java.io.IOException) -> onLoadError
    158:167:boolean prepare(long) -> prepare
    240:269:int readData(int,long,com.google.android.exoplayer.MediaFormatHolder,com.google.android.exoplayer.SampleHolder) -> readData
    230:232:long readDiscontinuity(int) -> readDiscontinuity
    151:152:com.google.android.exoplayer.SampleSource$SampleSourceReader register() -> register
    350:355:void release() -> release
    413:421:void restartFrom(long) -> restartFrom
    496:538:void resumeFromBackOff() -> resumeFromBackOff
    299:322:void seekToUs(long) -> seekToUs
    436:472:void updateLoadControl() -> updateLoadControl
    617:617:long usToMs(long) -> usToMs
com.google.android.exoplayer.chunk.ChunkSampleSource$1 -> com.google.android.exoplayer.chunk.ChunkSampleSource$1:
    623:623:void <init>(com.google.android.exoplayer.chunk.ChunkSampleSource,long,int,int,com.google.android.exoplayer.chunk.Format,long,long) -> <init>
    626:626:void run() -> run
com.google.android.exoplayer.chunk.ChunkSampleSource$2 -> com.google.android.exoplayer.chunk.ChunkSampleSource$2:
    637:637:void <init>(com.google.android.exoplayer.chunk.ChunkSampleSource,long,int,int,com.google.android.exoplayer.chunk.Format,long,long,long,long) -> <init>
    640:640:void run() -> run
com.google.android.exoplayer.chunk.ChunkSampleSource$3 -> com.google.android.exoplayer.chunk.ChunkSampleSource$3:
    649:649:void <init>(com.google.android.exoplayer.chunk.ChunkSampleSource,long) -> <init>
    652:652:void run() -> run
com.google.android.exoplayer.chunk.ChunkSampleSource$4 -> com.google.android.exoplayer.chunk.ChunkSampleSource$4:
    660:660:void <init>(com.google.android.exoplayer.chunk.ChunkSampleSource,java.io.IOException) -> <init>
    663:663:void run() -> run
com.google.android.exoplayer.chunk.ChunkSampleSource$5 -> com.google.android.exoplayer.chunk.ChunkSampleSource$5:
    671:671:void <init>(com.google.android.exoplayer.chunk.ChunkSampleSource,long,long) -> <init>
    674:674:void run() -> run
com.google.android.exoplayer.chunk.ChunkSampleSource$6 -> com.google.android.exoplayer.chunk.ChunkSampleSource$6:
    684:684:void <init>(com.google.android.exoplayer.chunk.ChunkSampleSource,com.google.android.exoplayer.chunk.Format,int,long) -> <init>
    687:687:void run() -> run
com.google.android.exoplayer.chunk.ContainerMediaChunk -> com.google.android.exoplayer.chunk.ContainerMediaChunk:
    75:83:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec,int,com.google.android.exoplayer.chunk.Format,long,long,int,long,com.google.android.exoplayer.chunk.ChunkExtractorWrapper,com.google.android.exoplayer.MediaFormat,int,int,com.google.android.exoplayer.drm.DrmInitData,boolean,int) -> <init>
    88:88:long bytesLoaded() -> bytesLoaded
    140:140:void cancelLoad() -> cancelLoad
    110:110:void drmInitData(com.google.android.exoplayer.drm.DrmInitData) -> drmInitData
    115:115:void format(com.google.android.exoplayer.MediaFormat) -> format
    181:185:com.google.android.exoplayer.MediaFormat getAdjustedMediaFormat(com.google.android.exoplayer.MediaFormat,long,int,int) -> getAdjustedMediaFormat
    98:98:com.google.android.exoplayer.drm.DrmInitData getDrmInitData() -> getDrmInitData
    93:93:com.google.android.exoplayer.MediaFormat getMediaFormat() -> getMediaFormat
    145:145:boolean isLoadCanceled() -> isLoadCanceled
    151:170:void load() -> load
    122:122:int sampleData(com.google.android.exoplayer.extractor.ExtractorInput,int,boolean) -> sampleData
    127:127:void sampleData(com.google.android.exoplayer.util.ParsableByteArray,int) -> sampleData
    133:133:void sampleMetadata(long,int,int,int,byte[]) -> sampleMetadata
com.google.android.exoplayer.chunk.DataChunk -> com.google.android.exoplayer.chunk.DataChunk:
    50:51:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec,int,int,com.google.android.exoplayer.chunk.Format,int,byte[]) -> <init>
    67:67:long bytesLoaded() -> bytesLoaded
    74:74:void cancelLoad() -> cancelLoad
    62:62:byte[] getDataHolder() -> getDataHolder
    79:79:boolean isLoadCanceled() -> isLoadCanceled
    85:99:void load() -> load
    114:119:void maybeExpandData() -> maybeExpandData
com.google.android.exoplayer.chunk.Format -> com.google.android.exoplayer.chunk.Format:
    121:121:void <init>(java.lang.String,java.lang.String,int,int,float,int,int,int,java.lang.String) -> <init>
    139:149:void <init>(java.lang.String,java.lang.String,int,int,float,int,int,int,java.lang.String,java.lang.String) -> <init>
    165:169:boolean equals(java.lang.Object) -> equals
    154:154:int hashCode() -> hashCode
com.google.android.exoplayer.chunk.Format$DecreasingBandwidthComparator -> com.google.android.exoplayer.chunk.Format$DecreasingBandwidthComparator:
    29:29:void <init>() -> <init>
    29:29:int compare(java.lang.Object,java.lang.Object) -> compare
    33:33:int compare(com.google.android.exoplayer.chunk.Format,com.google.android.exoplayer.chunk.Format) -> compare
com.google.android.exoplayer.chunk.FormatEvaluator$AdaptiveEvaluator -> com.google.android.exoplayer.chunk.FormatEvaluator$AdaptiveEvaluator:
    175:175:void <init>(com.google.android.exoplayer.upstream.BandwidthMeter) -> <init>
    202:208:void <init>(com.google.android.exoplayer.upstream.BandwidthMeter,int,int,int,int,float) -> <init>
    269:278:com.google.android.exoplayer.chunk.Format determineIdealFormat(com.google.android.exoplayer.chunk.Format[],long) -> determineIdealFormat
    224:262:void evaluate(java.util.List,long,com.google.android.exoplayer.chunk.Format[],com.google.android.exoplayer.chunk.FormatEvaluator$Evaluation) -> evaluate
com.google.android.exoplayer.chunk.FormatEvaluator$Evaluation -> com.google.android.exoplayer.chunk.FormatEvaluator$Evaluation:
    77:78:void <init>() -> <init>
com.google.android.exoplayer.chunk.InitializationChunk -> com.google.android.exoplayer.chunk.InitializationChunk:
    65:66:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec,int,com.google.android.exoplayer.chunk.Format,com.google.android.exoplayer.chunk.ChunkExtractorWrapper,int) -> <init>
    71:71:long bytesLoaded() -> bytesLoaded
    165:165:void cancelLoad() -> cancelLoad
    137:137:void drmInitData(com.google.android.exoplayer.drm.DrmInitData) -> drmInitData
    142:142:void format(com.google.android.exoplayer.MediaFormat) -> format
    107:107:com.google.android.exoplayer.drm.DrmInitData getDrmInitData() -> getDrmInitData
    89:89:com.google.android.exoplayer.MediaFormat getFormat() -> getFormat
    125:125:com.google.android.exoplayer.extractor.SeekMap getSeekMap() -> getSeekMap
    98:98:boolean hasDrmInitData() -> hasDrmInitData
    80:80:boolean hasFormat() -> hasFormat
    116:116:boolean hasSeekMap() -> hasSeekMap
    170:170:boolean isLoadCanceled() -> isLoadCanceled
    176:195:void load() -> load
    148:148:int sampleData(com.google.android.exoplayer.extractor.ExtractorInput,int,boolean) -> sampleData
    153:153:void sampleData(com.google.android.exoplayer.util.ParsableByteArray,int) -> sampleData
    158:158:void sampleMetadata(long,int,int,int,byte[]) -> sampleMetadata
    132:132:void seekMap(com.google.android.exoplayer.extractor.SeekMap) -> seekMap
com.google.android.exoplayer.chunk.MediaChunk -> com.google.android.exoplayer.chunk.MediaChunk:
    42:42:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec,int,com.google.android.exoplayer.chunk.Format,long,long,int) -> <init>
    58:62:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec,int,com.google.android.exoplayer.chunk.Format,long,long,int,int) -> <init>
    70:70:long getDurationUs() -> getDurationUs
    66:66:int getNextChunkIndex() -> getNextChunkIndex
com.google.android.exoplayer.chunk.SingleSampleMediaChunk -> com.google.android.exoplayer.chunk.SingleSampleMediaChunk:
    53:56:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec,int,com.google.android.exoplayer.chunk.Format,long,long,int,com.google.android.exoplayer.MediaFormat,com.google.android.exoplayer.drm.DrmInitData,int) -> <init>
    61:61:long bytesLoaded() -> bytesLoaded
    78:78:void cancelLoad() -> cancelLoad
    71:71:com.google.android.exoplayer.drm.DrmInitData getDrmInitData() -> getDrmInitData
    66:66:com.google.android.exoplayer.MediaFormat getMediaFormat() -> getMediaFormat
    83:83:boolean isLoadCanceled() -> isLoadCanceled
    89:102:void load() -> load
com.google.android.exoplayer.chunk.VideoFormatSelectorUtil -> com.google.android.exoplayer.chunk.VideoFormatSelectorUtil:
    187:190:android.graphics.Point getMaxVideoSizeInViewport(boolean,int,int,int,int) -> getMaxVideoSizeInViewport
    139:164:boolean isFormatPlayable(com.google.android.exoplayer.chunk.Format,java.lang.String[],boolean,boolean) -> isFormatPlayable
    92:130:int[] selectVideoFormats(java.util.List,java.lang.String[],boolean,boolean,boolean,int,int) -> selectVideoFormats
    54:55:int[] selectVideoFormatsForDefaultDisplay(android.content.Context,java.util.List,java.lang.String[],boolean) -> selectVideoFormatsForDefaultDisplay
com.google.android.exoplayer.dash.DashChunkSource -> com.google.android.exoplayer.dash.DashChunkSource:
    213:213:void <init>(com.google.android.exoplayer.util.ManifestFetcher,com.google.android.exoplayer.dash.DashTrackSelector,com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.chunk.FormatEvaluator,long,long,android.os.Handler,com.google.android.exoplayer.dash.DashChunkSource$EventListener,int) -> <init>
    257:274:void <init>(com.google.android.exoplayer.util.ManifestFetcher,com.google.android.exoplayer.dash.mpd.MediaPresentationDescription,com.google.android.exoplayer.dash.DashTrackSelector,com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.chunk.FormatEvaluator,com.google.android.exoplayer.util.Clock,long,long,boolean,android.os.Handler,com.google.android.exoplayer.dash.DashChunkSource$EventListener,int) -> <init>
    76:76:int access$300(com.google.android.exoplayer.dash.DashChunkSource) -> access$300
    76:76:com.google.android.exoplayer.dash.DashChunkSource$EventListener access$400(com.google.android.exoplayer.dash.DashChunkSource) -> access$400
    560:592:void adaptiveTrack(com.google.android.exoplayer.dash.mpd.MediaPresentationDescription,int,int,int[]) -> adaptiveTrack
    327:350:void continueBuffering(long) -> continueBuffering
    542:552:void disable(java.util.List) -> disable
    313:321:void enable(int) -> enable
    732:744:com.google.android.exoplayer.dash.DashChunkSource$PeriodHolder findPeriodHolder(long) -> findPeriodHolder
    599:613:void fixedTrack(com.google.android.exoplayer.dash.mpd.MediaPresentationDescription,int,int,int) -> fixedTrack
    798:803:com.google.android.exoplayer.TimeRange getAvailableRange(long) -> getAvailableRange
    357:491:void getChunkOperation(java.util.List,long,com.google.android.exoplayer.chunk.ChunkOperationHolder) -> getChunkOperation
    308:308:com.google.android.exoplayer.MediaFormat getFormat(int) -> getFormat
    650:661:java.lang.String getMediaMimeType(com.google.android.exoplayer.chunk.Format) -> getMediaMimeType
    723:726:long getNowUnixTimeUs() -> getNowUnixTimeUs
    303:303:int getTrackCount() -> getTrackCount
    642:635:com.google.android.exoplayer.MediaFormat getTrackFormat(int,com.google.android.exoplayer.chunk.Format,java.lang.String,long) -> getTrackFormat
    281:282:void maybeThrowError() -> maybeThrowError
    674:674:boolean mimeTypeIsRawText(java.lang.String) -> mimeTypeIsRawText
    669:670:boolean mimeTypeIsWebm(java.lang.String) -> mimeTypeIsWebm
    684:693:com.google.android.exoplayer.chunk.Chunk newInitializationChunk(com.google.android.exoplayer.dash.mpd.RangedUri,com.google.android.exoplayer.dash.mpd.RangedUri,com.google.android.exoplayer.dash.mpd.Representation,com.google.android.exoplayer.chunk.ChunkExtractorWrapper,com.google.android.exoplayer.upstream.DataSource,int,int) -> newInitializationChunk
    701:717:com.google.android.exoplayer.chunk.Chunk newMediaChunk(com.google.android.exoplayer.dash.DashChunkSource$PeriodHolder,com.google.android.exoplayer.dash.DashChunkSource$RepresentationHolder,com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.MediaFormat,com.google.android.exoplayer.dash.DashChunkSource$ExposedTrack,int,int,boolean) -> newMediaChunk
    818:819:void notifyAvailableRangeChanged(com.google.android.exoplayer.TimeRange) -> notifyAvailableRangeChanged
    506:530:void onChunkLoadCompleted(com.google.android.exoplayer.chunk.Chunk) -> onChunkLoadCompleted
    290:298:boolean prepare() -> prepare
    749:776:void processManifest(com.google.android.exoplayer.dash.mpd.MediaPresentationDescription) -> processManifest
com.google.android.exoplayer.dash.DashChunkSource$1 -> com.google.android.exoplayer.dash.DashChunkSource$1:
    819:819:void <init>(com.google.android.exoplayer.dash.DashChunkSource,com.google.android.exoplayer.TimeRange) -> <init>
    822:822:void run() -> run
com.google.android.exoplayer.dash.DashChunkSource$ExposedTrack -> com.google.android.exoplayer.dash.DashChunkSource$ExposedTrack:
    844:850:void <init>(com.google.android.exoplayer.MediaFormat,int,com.google.android.exoplayer.chunk.Format) -> <init>
    854:860:void <init>(com.google.android.exoplayer.MediaFormat,int,com.google.android.exoplayer.chunk.Format[],int,int) -> <init>
    830:830:com.google.android.exoplayer.chunk.Format[] access$000(com.google.android.exoplayer.dash.DashChunkSource$ExposedTrack) -> access$000
    830:830:com.google.android.exoplayer.chunk.Format access$100(com.google.android.exoplayer.dash.DashChunkSource$ExposedTrack) -> access$100
    830:830:int access$500(com.google.android.exoplayer.dash.DashChunkSource$ExposedTrack) -> access$500
    864:864:boolean isAdaptive() -> isAdaptive
com.google.android.exoplayer.dash.DashChunkSource$PeriodHolder -> com.google.android.exoplayer.dash.DashChunkSource$PeriodHolder:
    983:1012:void <init>(int,com.google.android.exoplayer.dash.mpd.MediaPresentationDescription,int,com.google.android.exoplayer.dash.DashChunkSource$ExposedTrack) -> <init>
    967:967:com.google.android.exoplayer.drm.DrmInitData access$200(com.google.android.exoplayer.dash.DashChunkSource$PeriodHolder) -> access$200
    967:967:com.google.android.exoplayer.drm.DrmInitData access$202(com.google.android.exoplayer.dash.DashChunkSource$PeriodHolder,com.google.android.exoplayer.drm.DrmInitData) -> access$202
    1037:1038:long getAvailableEndTimeUs() -> getAvailableEndTimeUs
    1033:1033:long getAvailableStartTimeUs() -> getAvailableStartTimeUs
    1090:1100:com.google.android.exoplayer.drm.DrmInitData getDrmInitData(com.google.android.exoplayer.dash.mpd.AdaptationSet) -> getDrmInitData
    1108:1108:long getPeriodDurationUs(com.google.android.exoplayer.dash.mpd.MediaPresentationDescription,int) -> getPeriodDurationUs
    1080:1086:int getRepresentationIndex(java.util.List,java.lang.String) -> getRepresentationIndex
    1048:1048:boolean isIndexExplicit() -> isIndexExplicit
    1044:1044:boolean isIndexUnbounded() -> isIndexUnbounded
    1018:1028:void updatePeriod(com.google.android.exoplayer.dash.mpd.MediaPresentationDescription,int,com.google.android.exoplayer.dash.DashChunkSource$ExposedTrack) -> updatePeriod
    1059:1074:void updateRepresentationIndependentProperties(long,com.google.android.exoplayer.dash.mpd.Representation) -> updateRepresentationIndependentProperties
com.google.android.exoplayer.dash.DashChunkSource$RepresentationHolder -> com.google.android.exoplayer.dash.DashChunkSource$RepresentationHolder:
    884:892:void <init>(long,long,com.google.android.exoplayer.dash.mpd.Representation) -> <init>
    958:958:int getFirstAvailableSegmentNum() -> getFirstAvailableSegmentNum
    948:948:int getLastSegmentNum() -> getLastSegmentNum
    943:944:long getSegmentEndTimeUs(int) -> getSegmentEndTimeUs
    934:934:int getSegmentNum(long) -> getSegmentNum
    939:939:long getSegmentStartTimeUs(int) -> getSegmentStartTimeUs
    962:962:com.google.android.exoplayer.dash.mpd.RangedUri getSegmentUrl(int) -> getSegmentUrl
    952:953:boolean isBeyondLastSegment(int) -> isBeyondLastSegment
    897:925:void updateRepresentation(long,com.google.android.exoplayer.dash.mpd.Representation) -> updateRepresentation
com.google.android.exoplayer.dash.DashWrappingSegmentIndex -> com.google.android.exoplayer.dash.DashWrappingSegmentIndex:
    34:36:void <init>(com.google.android.exoplayer.extractor.ChunkIndex,java.lang.String) -> <init>
    56:56:long getDurationUs(int,long) -> getDurationUs
    46:46:int getLastSegmentNum(long) -> getLastSegmentNum
    66:66:int getSegmentNum(long,long) -> getSegmentNum
    61:61:com.google.android.exoplayer.dash.mpd.RangedUri getSegmentUrl(int) -> getSegmentUrl
    51:51:long getTimeUs(int) -> getTimeUs
com.google.android.exoplayer.dash.DefaultDashTrackSelector -> com.google.android.exoplayer.dash.DefaultDashTrackSelector:
    62:66:void <init>(int,android.content.Context,boolean,boolean) -> <init>
    54:54:com.google.android.exoplayer.dash.DefaultDashTrackSelector newAudioInstance() -> newAudioInstance
    58:58:com.google.android.exoplayer.dash.DefaultDashTrackSelector newTextInstance() -> newTextInstance
    49:49:com.google.android.exoplayer.dash.DefaultDashTrackSelector newVideoInstance(android.content.Context,boolean,boolean) -> newVideoInstance
    72:94:void selectTracks(com.google.android.exoplayer.dash.mpd.MediaPresentationDescription,int,com.google.android.exoplayer.dash.DashTrackSelector$Output) -> selectTracks
com.google.android.exoplayer.dash.mpd.AdaptationSet -> com.google.android.exoplayer.dash.mpd.AdaptationSet:
    39:46:void <init>(int,int,java.util.List,java.util.List) -> <init>
    55:55:boolean hasContentProtection() -> hasContentProtection
com.google.android.exoplayer.dash.mpd.ContentProtection -> com.google.android.exoplayer.dash.mpd.ContentProtection:
    48:51:void <init>(java.lang.String,java.util.UUID,com.google.android.exoplayer.drm.DrmInitData$SchemeInitData) -> <init>
    56:66:boolean equals(java.lang.Object) -> equals
    71:73:int hashCode() -> hashCode
com.google.android.exoplayer.dash.mpd.DashSingleSegmentIndex -> com.google.android.exoplayer.dash.mpd.DashSingleSegmentIndex:
    30:31:void <init>(com.google.android.exoplayer.dash.mpd.RangedUri) -> <init>
    51:51:com.google.android.exoplayer.dash.mpd.RangedUri getSegmentUrl(int) -> getSegmentUrl
com.google.android.exoplayer.dash.mpd.MediaPresentationDescription -> com.google.android.exoplayer.dash.mpd.MediaPresentationDescription:
    47:56:void <init>(long,long,long,boolean,long,long,com.google.android.exoplayer.dash.mpd.UtcTimingElement,java.lang.String,java.util.List) -> <init>
    61:61:java.lang.String getNextManifestUri() -> getNextManifestUri
    69:69:com.google.android.exoplayer.dash.mpd.Period getPeriod(int) -> getPeriod
    65:65:int getPeriodCount() -> getPeriodCount
    73:75:long getPeriodDuration(int) -> getPeriodDuration
com.google.android.exoplayer.dash.mpd.MediaPresentationDescriptionParser -> com.google.android.exoplayer.dash.mpd.MediaPresentationDescriptionParser:
    59:59:void <clinit>() -> <clinit>
    68:68:void <init>() -> <init>
    76:81:void <init>(java.lang.String) -> <init>
    279:279:com.google.android.exoplayer.dash.mpd.AdaptationSet buildAdaptationSet(int,int,java.util.List,java.util.List) -> buildAdaptationSet
    344:344:com.google.android.exoplayer.dash.mpd.ContentProtection buildContentProtection(java.lang.String,java.util.UUID,com.google.android.exoplayer.drm.DrmInitData$SchemeInitData) -> buildContentProtection
    411:411:com.google.android.exoplayer.chunk.Format buildFormat(java.lang.String,java.lang.String,int,int,float,int,int,int,java.lang.String,java.lang.String) -> buildFormat
    173:173:com.google.android.exoplayer.dash.mpd.MediaPresentationDescription buildMediaPresentationDescription(long,long,long,boolean,long,long,com.google.android.exoplayer.dash.mpd.UtcTimingElement,java.lang.String,java.util.List) -> buildMediaPresentationDescription
    217:217:com.google.android.exoplayer.dash.mpd.Period buildPeriod(java.lang.String,long,java.util.List) -> buildPeriod
    600:600:com.google.android.exoplayer.dash.mpd.RangedUri buildRangedUri(java.lang.String,java.lang.String,long,long) -> buildRangedUri
    417:417:com.google.android.exoplayer.dash.mpd.Representation buildRepresentation(java.lang.String,int,com.google.android.exoplayer.chunk.Format,com.google.android.exoplayer.dash.mpd.SegmentBase) -> buildRepresentation
    496:496:com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentList buildSegmentList(com.google.android.exoplayer.dash.mpd.RangedUri,long,long,int,long,java.util.List,java.util.List) -> buildSegmentList
    538:538:com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentTemplate buildSegmentTemplate(com.google.android.exoplayer.dash.mpd.RangedUri,long,long,int,long,java.util.List,com.google.android.exoplayer.dash.mpd.UrlTemplate,com.google.android.exoplayer.dash.mpd.UrlTemplate,java.lang.String) -> buildSegmentTemplate
    562:562:com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentTimelineElement buildSegmentTimelineElement(long,long) -> buildSegmentTimelineElement
    452:452:com.google.android.exoplayer.dash.mpd.SegmentBase$SingleSegmentBase buildSingleSegmentBase(com.google.android.exoplayer.dash.mpd.RangedUri,long,long,java.lang.String,long,long) -> buildSingleSegmentBase
    184:184:com.google.android.exoplayer.dash.mpd.UtcTimingElement buildUtcTimingElement(java.lang.String,java.lang.String) -> buildUtcTimingElement
    660:660:int checkContentTypeConsistency(int,int) -> checkContentTypeConsistency
    638:638:java.lang.String checkLanguageConsistency(java.lang.String,java.lang.String) -> checkLanguageConsistency
    292:305:int getContentType(com.google.android.exoplayer.dash.mpd.Representation) -> getContentType
    54:54:java.lang.Object parse(java.lang.String,java.io.InputStream) -> parse
    91:100:com.google.android.exoplayer.dash.mpd.MediaPresentationDescription parse(java.lang.String,java.io.InputStream) -> parse
    224:274:com.google.android.exoplayer.dash.mpd.AdaptationSet parseAdaptationSet(org.xmlpull.v1.XmlPullParser,java.lang.String,com.google.android.exoplayer.dash.mpd.SegmentBase) -> parseAdaptationSet
    608:616:int parseAudioChannelConfiguration(org.xmlpull.v1.XmlPullParser) -> parseAudioChannelConfiguration
    704:705:java.lang.String parseBaseUrl(org.xmlpull.v1.XmlPullParser,java.lang.String) -> parseBaseUrl
    321:339:com.google.android.exoplayer.dash.mpd.ContentProtection parseContentProtection(org.xmlpull.v1.XmlPullParser) -> parseContentProtection
    283:287:int parseContentType(org.xmlpull.v1.XmlPullParser) -> parseContentType
    694:698:long parseDateTime(org.xmlpull.v1.XmlPullParser,java.lang.String,long) -> parseDateTime
    684:688:long parseDuration(org.xmlpull.v1.XmlPullParser,java.lang.String,long) -> parseDuration
    667:674:float parseFrameRate(org.xmlpull.v1.XmlPullParser,float) -> parseFrameRate
    575:575:com.google.android.exoplayer.dash.mpd.RangedUri parseInitialization(org.xmlpull.v1.XmlPullParser,java.lang.String) -> parseInitialization
    709:709:int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String) -> parseInt
    713:714:int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> parseInt
    718:718:long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String) -> parseLong
    722:723:long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long) -> parseLong
    108:162:com.google.android.exoplayer.dash.mpd.MediaPresentationDescription parseMediaPresentationDescription(org.xmlpull.v1.XmlPullParser,java.lang.String) -> parseMediaPresentationDescription
    189:213:android.util.Pair parsePeriod(org.xmlpull.v1.XmlPullParser,java.lang.String,long) -> parsePeriod
    584:595:com.google.android.exoplayer.dash.mpd.RangedUri parseRangedUrl(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,java.lang.String) -> parseRangedUrl
    367:405:com.google.android.exoplayer.dash.mpd.Representation parseRepresentation(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,java.lang.String,int,int,float,int,int,java.lang.String,com.google.android.exoplayer.dash.mpd.SegmentBase,com.google.android.exoplayer.dash.mpd.MediaPresentationDescriptionParser$ContentProtectionsBuilder) -> parseRepresentation
    425:446:com.google.android.exoplayer.dash.mpd.SegmentBase$SingleSegmentBase parseSegmentBase(org.xmlpull.v1.XmlPullParser,java.lang.String,com.google.android.exoplayer.dash.mpd.SegmentBase$SingleSegmentBase) -> parseSegmentBase
    459:489:com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentList parseSegmentList(org.xmlpull.v1.XmlPullParser,java.lang.String,com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentList) -> parseSegmentList
    503:530:com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentTemplate parseSegmentTemplate(org.xmlpull.v1.XmlPullParser,java.lang.String,com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentTemplate) -> parseSegmentTemplate
    544:557:java.util.List parseSegmentTimeline(org.xmlpull.v1.XmlPullParser) -> parseSegmentTimeline
    579:579:com.google.android.exoplayer.dash.mpd.RangedUri parseSegmentUrl(org.xmlpull.v1.XmlPullParser,java.lang.String) -> parseSegmentUrl
    727:727:java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String) -> parseString
    567:569:com.google.android.exoplayer.dash.mpd.UrlTemplate parseUrlTemplate(org.xmlpull.v1.XmlPullParser,java.lang.String,com.google.android.exoplayer.dash.mpd.UrlTemplate) -> parseUrlTemplate
    178:180:com.google.android.exoplayer.dash.mpd.UtcTimingElement parseUtcTiming(org.xmlpull.v1.XmlPullParser) -> parseUtcTiming
com.google.android.exoplayer.dash.mpd.MediaPresentationDescriptionParser$ContentProtectionsBuilder -> com.google.android.exoplayer.dash.mpd.MediaPresentationDescriptionParser$ContentProtectionsBuilder:
    739:739:void <init>() -> <init>
    753:756:void addAdaptationSetProtection(com.google.android.exoplayer.dash.mpd.ContentProtection) -> addAdaptationSetProtection
    798:807:java.util.ArrayList build() -> build
    739:739:int compare(java.lang.Object,java.lang.Object) -> compare
    842:842:int compare(com.google.android.exoplayer.dash.mpd.ContentProtection,com.google.android.exoplayer.dash.mpd.ContentProtection) -> compare
    776:791:void endRepresentation() -> endRepresentation
    827:834:void maybeAddContentProtection(java.util.List,com.google.android.exoplayer.dash.mpd.ContentProtection) -> maybeAddContentProtection
com.google.android.exoplayer.dash.mpd.Period -> com.google.android.exoplayer.dash.mpd.Period:
    46:49:void <init>(java.lang.String,long,java.util.List) -> <init>
com.google.android.exoplayer.dash.mpd.RangedUri -> com.google.android.exoplayer.dash.mpd.RangedUri:
    55:60:void <init>(java.lang.String,java.lang.String,long,long) -> <init>
    93:99:com.google.android.exoplayer.dash.mpd.RangedUri attemptMerge(com.google.android.exoplayer.dash.mpd.RangedUri) -> attemptMerge
    123:129:boolean equals(java.lang.Object) -> equals
    69:69:android.net.Uri getUri() -> getUri
    78:78:java.lang.String getUriString() -> getUriString
    108:115:int hashCode() -> hashCode
com.google.android.exoplayer.dash.mpd.Representation -> com.google.android.exoplayer.dash.mpd.Representation:
    28:28:void <init>(java.lang.String,long,com.google.android.exoplayer.chunk.Format,com.google.android.exoplayer.dash.mpd.SegmentBase,java.lang.String,com.google.android.exoplayer.dash.mpd.Representation$1) -> <init>
    97:104:void <init>(java.lang.String,long,com.google.android.exoplayer.chunk.Format,com.google.android.exoplayer.dash.mpd.SegmentBase,java.lang.String) -> <init>
    145:145:java.lang.String getCacheKey() -> getCacheKey
    109:109:com.google.android.exoplayer.chunk.Format getFormat() -> getFormat
    119:119:com.google.android.exoplayer.dash.mpd.RangedUri getInitializationUri() -> getInitializationUri
    69:69:com.google.android.exoplayer.dash.mpd.Representation newInstance(java.lang.String,long,com.google.android.exoplayer.chunk.Format,com.google.android.exoplayer.dash.mpd.SegmentBase) -> newInstance
    84:91:com.google.android.exoplayer.dash.mpd.Representation newInstance(java.lang.String,long,com.google.android.exoplayer.chunk.Format,com.google.android.exoplayer.dash.mpd.SegmentBase,java.lang.String) -> newInstance
com.google.android.exoplayer.dash.mpd.Representation$MultiSegmentRepresentation -> com.google.android.exoplayer.dash.mpd.Representation$MultiSegmentRepresentation:
    238:239:void <init>(java.lang.String,long,com.google.android.exoplayer.chunk.Format,com.google.android.exoplayer.dash.mpd.SegmentBase$MultiSegmentBase,java.lang.String) -> <init>
    271:271:long getDurationUs(int,long) -> getDurationUs
    276:276:int getFirstSegmentNum() -> getFirstSegmentNum
    281:281:int getLastSegmentNum(long) -> getLastSegmentNum
    261:261:int getSegmentNum(long,long) -> getSegmentNum
    256:256:com.google.android.exoplayer.dash.mpd.RangedUri getSegmentUrl(int) -> getSegmentUrl
    266:266:long getTimeUs(int) -> getTimeUs
    286:286:boolean isExplicit() -> isExplicit
com.google.android.exoplayer.dash.mpd.Representation$SingleSegmentRepresentation -> com.google.android.exoplayer.dash.mpd.Representation$SingleSegmentRepresentation:
    199:205:void <init>(java.lang.String,long,com.google.android.exoplayer.chunk.Format,com.google.android.exoplayer.dash.mpd.SegmentBase$SingleSegmentBase,java.lang.String,long) -> <init>
    216:216:com.google.android.exoplayer.dash.DashSegmentIndex getIndex() -> getIndex
    211:211:com.google.android.exoplayer.dash.mpd.RangedUri getIndexUri() -> getIndexUri
com.google.android.exoplayer.dash.mpd.SegmentBase -> com.google.android.exoplayer.dash.mpd.SegmentBase:
    39:42:void <init>(com.google.android.exoplayer.dash.mpd.RangedUri,long,long) -> <init>
    53:53:com.google.android.exoplayer.dash.mpd.RangedUri getInitialization(com.google.android.exoplayer.dash.mpd.Representation) -> getInitialization
    62:62:long getPresentationTimeOffsetUs() -> getPresentationTimeOffsetUs
com.google.android.exoplayer.dash.mpd.SegmentBase$MultiSegmentBase -> com.google.android.exoplayer.dash.mpd.SegmentBase$MultiSegmentBase:
    134:137:void <init>(com.google.android.exoplayer.dash.mpd.RangedUri,long,long,int,long,java.util.List) -> <init>
    212:212:int getFirstSegmentNum() -> getFirstSegmentNum
    176:181:long getSegmentDurationUs(int,long) -> getSegmentDurationUs
    144:159:int getSegmentNum(long,long) -> getSegmentNum
    191:197:long getSegmentTimeUs(int) -> getSegmentTimeUs
    224:224:boolean isExplicit() -> isExplicit
com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentList -> com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentList:
    254:256:void <init>(com.google.android.exoplayer.dash.mpd.RangedUri,long,long,int,long,java.util.List,java.util.List) -> <init>
    266:266:int getLastSegmentNum(long) -> getLastSegmentNum
    261:261:com.google.android.exoplayer.dash.mpd.RangedUri getSegmentUrl(com.google.android.exoplayer.dash.mpd.Representation,int) -> getSegmentUrl
com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentTemplate -> com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentTemplate:
    309:313:void <init>(com.google.android.exoplayer.dash.mpd.RangedUri,long,long,int,long,java.util.List,com.google.android.exoplayer.dash.mpd.UrlTemplate,com.google.android.exoplayer.dash.mpd.UrlTemplate,java.lang.String) -> <init>
    318:323:com.google.android.exoplayer.dash.mpd.RangedUri getInitialization(com.google.android.exoplayer.dash.mpd.Representation) -> getInitialization
    342:348:int getLastSegmentNum(long) -> getLastSegmentNum
    330:337:com.google.android.exoplayer.dash.mpd.RangedUri getSegmentUrl(com.google.android.exoplayer.dash.mpd.Representation,int) -> getSegmentUrl
com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentTimelineElement -> com.google.android.exoplayer.dash.mpd.SegmentBase$SegmentTimelineElement:
    368:370:void <init>(long,long) -> <init>
com.google.android.exoplayer.dash.mpd.SegmentBase$SingleSegmentBase -> com.google.android.exoplayer.dash.mpd.SegmentBase$SingleSegmentBase:
    90:93:void <init>(com.google.android.exoplayer.dash.mpd.RangedUri,long,long,java.lang.String,long,long) -> <init>
    100:100:void <init>(java.lang.String) -> <init>
    104:104:com.google.android.exoplayer.dash.mpd.RangedUri getIndex() -> getIndex
com.google.android.exoplayer.dash.mpd.UrlTemplate -> com.google.android.exoplayer.dash.mpd.UrlTemplate:
    65:69:void <init>(java.lang.String[],int[],java.lang.String[],int) -> <init>
    84:98:java.lang.String buildUri(java.lang.String,int,int,long) -> buildUri
    54:58:com.google.android.exoplayer.dash.mpd.UrlTemplate compile(java.lang.String) -> compile
    118:154:int parseTemplate(java.lang.String,java.lang.String[],int[],java.lang.String[]) -> parseTemplate
com.google.android.exoplayer.dash.mpd.UtcTimingElement -> com.google.android.exoplayer.dash.mpd.UtcTimingElement:
    26:28:void <init>(java.lang.String,java.lang.String) -> <init>
    33:33:java.lang.String toString() -> toString
com.google.android.exoplayer.dash.mpd.UtcTimingElementResolver -> com.google.android.exoplayer.dash.mpd.UtcTimingElementResolver:
    91:95:void <init>(com.google.android.exoplayer.upstream.UriDataSource,com.google.android.exoplayer.dash.mpd.UtcTimingElement,long,com.google.android.exoplayer.dash.mpd.UtcTimingElementResolver$UtcTimingCallback) -> <init>
    131:131:void onLoadCanceled(com.google.android.exoplayer.upstream.Loader$Loadable) -> onLoadCanceled
    136:138:void onLoadCompleted(com.google.android.exoplayer.upstream.Loader$Loadable) -> onLoadCompleted
    143:144:void onLoadError(com.google.android.exoplayer.upstream.Loader$Loadable,java.io.IOException) -> onLoadError
    148:148:void releaseLoader() -> releaseLoader
    99:106:void resolve() -> resolve
    115:119:void resolveDirect() -> resolveDirect
    124:126:void resolveHttp(com.google.android.exoplayer.upstream.UriLoadable$Parser) -> resolveHttp
    85:87:void resolveTimingElement(com.google.android.exoplayer.upstream.UriDataSource,com.google.android.exoplayer.dash.mpd.UtcTimingElement,long,com.google.android.exoplayer.dash.mpd.UtcTimingElementResolver$UtcTimingCallback) -> resolveTimingElement
com.google.android.exoplayer.dash.mpd.UtcTimingElementResolver$Iso8601Parser -> com.google.android.exoplayer.dash.mpd.UtcTimingElementResolver$Iso8601Parser:
    166:166:void <init>() -> <init>
    166:166:void <init>(com.google.android.exoplayer.dash.mpd.UtcTimingElementResolver$1) -> <init>
    166:166:java.lang.Object parse(java.lang.String,java.io.InputStream) -> parse
    171:178:java.lang.Long parse(java.lang.String,java.io.InputStream) -> parse
com.google.android.exoplayer.dash.mpd.UtcTimingElementResolver$XsDateTimeParser -> com.google.android.exoplayer.dash.mpd.UtcTimingElementResolver$XsDateTimeParser:
    151:151:void <init>() -> <init>
    151:151:void <init>(com.google.android.exoplayer.dash.mpd.UtcTimingElementResolver$1) -> <init>
    151:151:java.lang.Object parse(java.lang.String,java.io.InputStream) -> parse
    156:160:java.lang.Long parse(java.lang.String,java.io.InputStream) -> parse
com.google.android.exoplayer.drm.DrmInitData$Mapped -> com.google.android.exoplayer.drm.DrmInitData$Mapped:
    46:47:void <init>() -> <init>
    67:75:boolean equals(java.lang.Object) -> equals
    52:52:com.google.android.exoplayer.drm.DrmInitData$SchemeInitData get(java.util.UUID) -> get
    84:84:int hashCode() -> hashCode
    62:62:void put(java.util.UUID,com.google.android.exoplayer.drm.DrmInitData$SchemeInitData) -> put
com.google.android.exoplayer.drm.DrmInitData$SchemeInitData -> com.google.android.exoplayer.drm.DrmInitData$SchemeInitData:
    138:140:void <init>(java.lang.String,byte[]) -> <init>
    145:153:boolean equals(java.lang.Object) -> equals
    158:158:int hashCode() -> hashCode
com.google.android.exoplayer.drm.DrmInitData$Universal -> com.google.android.exoplayer.drm.DrmInitData$Universal:
    96:97:void <init>(com.google.android.exoplayer.drm.DrmInitData$SchemeInitData) -> <init>
    107:110:boolean equals(java.lang.Object) -> equals
    102:102:com.google.android.exoplayer.drm.DrmInitData$SchemeInitData get(java.util.UUID) -> get
    116:116:int hashCode() -> hashCode
com.google.android.exoplayer.drm.FrameworkMediaCrypto -> com.google.android.exoplayer.drm.FrameworkMediaCrypto:
    30:31:void <init>(android.media.MediaCrypto) -> <init>
    35:35:android.media.MediaCrypto getWrappedMediaCrypto() -> getWrappedMediaCrypto
    40:40:boolean requiresSecureDecoderComponent(java.lang.String) -> requiresSecureDecoderComponent
com.google.android.exoplayer.drm.FrameworkMediaDrm -> com.google.android.exoplayer.drm.FrameworkMediaDrm:
    39:40:void <init>(java.util.UUID) -> <init>
    61:61:void closeSession(byte[]) -> closeSession
    34:34:com.google.android.exoplayer.drm.ExoMediaCrypto createMediaCrypto(java.util.UUID,byte[]) -> createMediaCrypto
    147:147:com.google.android.exoplayer.drm.FrameworkMediaCrypto createMediaCrypto(java.util.UUID,byte[]) -> createMediaCrypto
    67:69:com.google.android.exoplayer.drm.ExoMediaDrm$KeyRequest getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap) -> getKeyRequest
    126:126:java.lang.String getPropertyString(java.lang.String) -> getPropertyString
    90:91:com.google.android.exoplayer.drm.ExoMediaDrm$ProvisionRequest getProvisionRequest() -> getProvisionRequest
    56:56:byte[] openSession() -> openSession
    85:85:byte[] provideKeyResponse(byte[],byte[]) -> provideKeyResponse
    106:106:void provideProvisionResponse(byte[]) -> provideProvisionResponse
    46:46:void setOnEventListener(com.google.android.exoplayer.drm.ExoMediaDrm$OnEventListener) -> setOnEventListener
com.google.android.exoplayer.drm.FrameworkMediaDrm$1 -> com.google.android.exoplayer.drm.FrameworkMediaDrm$1:
    46:46:void <init>(com.google.android.exoplayer.drm.FrameworkMediaDrm,com.google.android.exoplayer.drm.ExoMediaDrm$OnEventListener) -> <init>
    49:49:void onEvent(android.media.MediaDrm,byte[],int,int,byte[]) -> onEvent
com.google.android.exoplayer.drm.FrameworkMediaDrm$2 -> com.google.android.exoplayer.drm.FrameworkMediaDrm$2:
    69:69:void <init>(com.google.android.exoplayer.drm.FrameworkMediaDrm,android.media.MediaDrm$KeyRequest) -> <init>
    72:72:byte[] getData() -> getData
    77:77:java.lang.String getDefaultUrl() -> getDefaultUrl
com.google.android.exoplayer.drm.FrameworkMediaDrm$3 -> com.google.android.exoplayer.drm.FrameworkMediaDrm$3:
    91:91:void <init>(com.google.android.exoplayer.drm.FrameworkMediaDrm,android.media.MediaDrm$ProvisionRequest) -> <init>
    94:94:byte[] getData() -> getData
    99:99:java.lang.String getDefaultUrl() -> getDefaultUrl
com.google.android.exoplayer.drm.KeysExpiredException -> com.google.android.exoplayer.drm.KeysExpiredException:
    21:21:void <init>() -> <init>
com.google.android.exoplayer.drm.StreamingDrmSessionManager -> com.google.android.exoplayer.drm.StreamingDrmSessionManager:
    68:76:void <clinit>() -> <clinit>
    223:233:void <init>(java.util.UUID,android.os.Looper,com.google.android.exoplayer.drm.MediaDrmCallback,java.util.HashMap,android.os.Handler,com.google.android.exoplayer.drm.StreamingDrmSessionManager$EventListener,com.google.android.exoplayer.drm.ExoMediaDrm) -> <init>
    43:43:com.google.android.exoplayer.drm.StreamingDrmSessionManager$EventListener access$100(com.google.android.exoplayer.drm.StreamingDrmSessionManager) -> access$100
    43:43:int access$200(com.google.android.exoplayer.drm.StreamingDrmSessionManager) -> access$200
    43:43:int access$300(com.google.android.exoplayer.drm.StreamingDrmSessionManager) -> access$300
    43:43:int access$302(com.google.android.exoplayer.drm.StreamingDrmSessionManager,int) -> access$302
    43:43:void access$400(com.google.android.exoplayer.drm.StreamingDrmSessionManager) -> access$400
    43:43:void access$500(com.google.android.exoplayer.drm.StreamingDrmSessionManager,java.lang.Exception) -> access$500
    43:43:void access$600(com.google.android.exoplayer.drm.StreamingDrmSessionManager) -> access$600
    43:43:void access$700(com.google.android.exoplayer.drm.StreamingDrmSessionManager,java.lang.Object) -> access$700
    43:43:void access$800(com.google.android.exoplayer.drm.StreamingDrmSessionManager,java.lang.Object) -> access$800
    342:358:void close() -> close
    109:111:com.google.android.exoplayer.drm.FrameworkMediaDrm createFrameworkDrm(java.util.UUID) -> createFrameworkDrm
    259:259:java.lang.Exception getError() -> getError
    243:246:com.google.android.exoplayer.drm.ExoMediaCrypto getMediaCrypto() -> getMediaCrypto
    271:271:java.lang.String getPropertyString(java.lang.String) -> getPropertyString
    238:238:int getState() -> getState
    184:183:com.google.android.exoplayer.drm.StreamingDrmSessionManager newFrameworkInstance(java.util.UUID,android.os.Looper,com.google.android.exoplayer.drm.MediaDrmCallback,java.util.HashMap,android.os.Handler,com.google.android.exoplayer.drm.StreamingDrmSessionManager$EventListener) -> newFrameworkInstance
    204:204:com.google.android.exoplayer.drm.StreamingDrmSessionManager newInstance(java.util.UUID,android.os.Looper,com.google.android.exoplayer.drm.MediaDrmCallback,java.util.HashMap,android.os.Handler,com.google.android.exoplayer.drm.StreamingDrmSessionManager$EventListener,com.google.android.exoplayer.drm.ExoMediaDrm) -> newInstance
    134:134:com.google.android.exoplayer.drm.StreamingDrmSessionManager newWidevineInstance(android.os.Looper,com.google.android.exoplayer.drm.MediaDrmCallback,java.util.HashMap,android.os.Handler,com.google.android.exoplayer.drm.StreamingDrmSessionManager$EventListener) -> newWidevineInstance
    459:469:void onError(java.lang.Exception) -> onError
    424:446:void onKeyResponse(java.lang.Object) -> onKeyResponse
    451:454:void onKeysError(java.lang.Exception) -> onKeysError
    389:408:void onProvisionResponse(java.lang.Object) -> onProvisionResponse
    312:337:void open(com.google.android.exoplayer.drm.DrmInitData) -> open
    364:372:void openInternal(boolean) -> openInternal
    415:419:void postKeyRequest() -> postKeyRequest
    380:385:void postProvisionRequest() -> postProvisionRequest
    251:254:boolean requiresSecureDecoderComponent(java.lang.String) -> requiresSecureDecoderComponent
com.google.android.exoplayer.drm.StreamingDrmSessionManager$1 -> com.google.android.exoplayer.drm.StreamingDrmSessionManager$1:
    438:438:void <init>(com.google.android.exoplayer.drm.StreamingDrmSessionManager) -> <init>
    441:441:void run() -> run
com.google.android.exoplayer.drm.StreamingDrmSessionManager$2 -> com.google.android.exoplayer.drm.StreamingDrmSessionManager$2:
    461:461:void <init>(com.google.android.exoplayer.drm.StreamingDrmSessionManager,java.lang.Exception) -> <init>
    464:464:void run() -> run
com.google.android.exoplayer.drm.StreamingDrmSessionManager$MediaDrmEventListener -> com.google.android.exoplayer.drm.StreamingDrmSessionManager$MediaDrmEventListener:
    503:503:void <init>(com.google.android.exoplayer.drm.StreamingDrmSessionManager) -> <init>
    503:503:void <init>(com.google.android.exoplayer.drm.StreamingDrmSessionManager,com.google.android.exoplayer.drm.StreamingDrmSessionManager$1) -> <init>
    508:508:void onEvent(com.google.android.exoplayer.drm.ExoMediaDrm,byte[],int,int,byte[]) -> onEvent
com.google.android.exoplayer.drm.StreamingDrmSessionManager$MediaDrmHandler -> com.google.android.exoplayer.drm.StreamingDrmSessionManager$MediaDrmHandler:
    476:477:void <init>(com.google.android.exoplayer.drm.StreamingDrmSessionManager,android.os.Looper) -> <init>
    483:496:void handleMessage(android.os.Message) -> handleMessage
com.google.android.exoplayer.drm.StreamingDrmSessionManager$PostRequestHandler -> com.google.android.exoplayer.drm.StreamingDrmSessionManager$PostRequestHandler:
    536:537:void <init>(com.google.android.exoplayer.drm.StreamingDrmSessionManager,android.os.Looper) -> <init>
    544:557:void handleMessage(android.os.Message) -> handleMessage
com.google.android.exoplayer.drm.StreamingDrmSessionManager$PostResponseHandler -> com.google.android.exoplayer.drm.StreamingDrmSessionManager$PostResponseHandler:
    515:516:void <init>(com.google.android.exoplayer.drm.StreamingDrmSessionManager,android.os.Looper) -> <init>
    521:523:void handleMessage(android.os.Message) -> handleMessage
com.google.android.exoplayer.drm.UnsupportedDrmException -> com.google.android.exoplayer.drm.UnsupportedDrmException:
    35:36:void <init>(int) -> <init>
    40:41:void <init>(int,java.lang.Exception) -> <init>
com.google.android.exoplayer.extractor.ChunkIndex -> com.google.android.exoplayer.extractor.ChunkIndex:
    56:61:void <init>(int[],long[],long[],long[]) -> <init>
    71:71:int getChunkIndex(long) -> getChunkIndex
    83:83:long getPosition(long) -> getPosition
com.google.android.exoplayer.extractor.DefaultExtractorInput -> com.google.android.exoplayer.extractor.DefaultExtractorInput:
    29:29:void <clinit>() -> <clinit>
    44:48:void <init>(com.google.android.exoplayer.upstream.DataSource,long,long) -> <init>
    125:135:boolean advancePeekPosition(int,boolean) -> advancePeekPosition
    141:141:void advancePeekPosition(int) -> advancePeekPosition
    256:256:void commitBytesRead(int) -> commitBytesRead
    169:171:void ensureSpaceForPeek(int) -> ensureSpaceForPeek
    161:161:long getLength() -> getLength
    151:151:long getPeekPosition() -> getPeekPosition
    156:156:long getPosition() -> getPosition
    109:112:boolean peekFully(byte[],int,int,boolean) -> peekFully
    119:119:void peekFully(byte[],int,int) -> peekFully
    53:57:int read(byte[],int,int) -> read
    236:237:int readFromDataSource(byte[],int,int,int,boolean) -> readFromDataSource
    196:201:int readFromPeekBuffer(byte[],int,int) -> readFromPeekBuffer
    64:68:boolean readFully(byte[],int,int,boolean) -> readFully
    75:75:void readFully(byte[],int,int) -> readFully
    146:146:void resetPeekPosition() -> resetPeekPosition
    80:85:int skip(int) -> skip
    182:183:int skipFromPeekBuffer(int) -> skipFromPeekBuffer
    92:97:boolean skipFully(int,boolean) -> skipFully
    103:103:void skipFully(int) -> skipFully
    211:213:void updatePeekBuffer(int) -> updatePeekBuffer
com.google.android.exoplayer.extractor.DefaultTrackOutput -> com.google.android.exoplayer.extractor.DefaultTrackOutput:
    48:54:void <init>(com.google.android.exoplayer.upstream.Allocator) -> <init>
    211:221:boolean advanceToEligibleSample() -> advanceToEligibleSample
    63:67:void clear() -> clear
    178:198:boolean configureSpliceTo(com.google.android.exoplayer.extractor.DefaultTrackOutput) -> configureSpliceTo
    153:158:void discardUntil(long) -> discardUntil
    83:84:void discardUpstreamSamples(int) -> discardUpstreamSamples
    249:249:void format(com.google.android.exoplayer.MediaFormat) -> format
    108:108:com.google.android.exoplayer.MediaFormat getFormat() -> getFormat
    116:116:long getLargestParsedTimestampUs() -> getLargestParsedTimestampUs
    94:94:int getReadIndex() -> getReadIndex
    136:143:boolean getSample(com.google.android.exoplayer.SampleHolder) -> getSample
    74:74:int getWriteIndex() -> getWriteIndex
    101:101:boolean hasFormat() -> hasFormat
    123:123:boolean isEmpty() -> isEmpty
    242:242:int sampleData(com.google.android.exoplayer.upstream.DataSource,int,boolean) -> sampleData
    255:255:int sampleData(com.google.android.exoplayer.extractor.ExtractorInput,int,boolean) -> sampleData
    260:260:void sampleData(com.google.android.exoplayer.util.ParsableByteArray,int) -> sampleData
    265:266:void sampleMetadata(long,int,int,int,byte[]) -> sampleMetadata
    168:168:boolean skipToKeyframeBefore(long) -> skipToKeyframeBefore
com.google.android.exoplayer.extractor.DummyTrackOutput -> com.google.android.exoplayer.extractor.DummyTrackOutput:
    25:25:void <init>() -> <init>
    34:34:int sampleData(com.google.android.exoplayer.extractor.ExtractorInput,int,boolean) -> sampleData
    39:39:void sampleData(com.google.android.exoplayer.util.ParsableByteArray,int) -> sampleData
com.google.android.exoplayer.extractor.ExtractorSampleSource -> com.google.android.exoplayer.extractor.ExtractorSampleSource:
    118:193:void <clinit>() -> <clinit>
    275:275:void <init>(android.net.Uri,com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.Allocator,int,android.os.Handler,com.google.android.exoplayer.extractor.ExtractorSampleSource$EventListener,int,com.google.android.exoplayer.extractor.Extractor[]) -> <init>
    313:336:void <init>(android.net.Uri,com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.Allocator,int,int,android.os.Handler,com.google.android.exoplayer.extractor.ExtractorSampleSource$EventListener,int,com.google.android.exoplayer.extractor.Extractor[]) -> <init>
    69:69:com.google.android.exoplayer.extractor.ExtractorSampleSource$ExtractorHolder access$000(com.google.android.exoplayer.extractor.ExtractorSampleSource) -> access$000
    69:69:int access$100(com.google.android.exoplayer.extractor.ExtractorSampleSource) -> access$100
    69:69:com.google.android.exoplayer.extractor.ExtractorSampleSource$EventListener access$200(com.google.android.exoplayer.extractor.ExtractorSampleSource) -> access$200
    69:69:int access$308(com.google.android.exoplayer.extractor.ExtractorSampleSource) -> access$308
    729:734:void clearState() -> clearState
    424:435:boolean continueBuffering(int,long) -> continueBuffering
    707:708:com.google.android.exoplayer.extractor.ExtractorSampleSource$ExtractingLoadable createLoadableFromPositionUs(long) -> createLoadableFromPositionUs
    702:702:com.google.android.exoplayer.extractor.ExtractorSampleSource$ExtractingLoadable createLoadableFromStart() -> createLoadableFromStart
    407:417:void disable(int) -> disable
    721:723:void discardSamplesForDisabledTracks(long) -> discardSamplesForDisabledTracks
    619:619:void drmInitData(com.google.android.exoplayer.drm.DrmInitData) -> drmInitData
    390:401:void enable(int,long) -> enable
    609:609:void endTracks() -> endTracks
    537:547:long getBufferedPositionUs() -> getBufferedPositionUs
    384:385:com.google.android.exoplayer.MediaFormat getFormat(int) -> getFormat
    746:746:long getRetryDelayMillis(long) -> getRetryDelayMillis
    379:379:int getTrackCount() -> getTrackCount
    712:713:boolean haveFormatsForAllTracks() -> haveFormatsForAllTracks
    742:742:boolean isCurrentLoadableExceptionFatal() -> isCurrentLoadableExceptionFatal
    738:738:boolean isPendingReset() -> isPendingReset
    636:698:void maybeStartLoading() -> maybeStartLoading
    485:489:void maybeThrowError() -> maybeThrowError
    750:751:void notifyLoadError(java.io.IOException) -> notifyLoadError
    577:581:void onLoadCanceled(com.google.android.exoplayer.upstream.Loader$Loadable) -> onLoadCanceled
    572:572:void onLoadCompleted(com.google.android.exoplayer.upstream.Loader$Loadable) -> onLoadCompleted
    587:592:void onLoadError(com.google.android.exoplayer.upstream.Loader$Loadable,java.io.IOException) -> onLoadError
    347:370:boolean prepare(long) -> prepare
    450:476:int readData(int,long,com.google.android.exoplayer.MediaFormatHolder,com.google.android.exoplayer.SampleHolder) -> readData
    440:442:long readDiscontinuity(int) -> readDiscontinuity
    341:341:com.google.android.exoplayer.SampleSource$SampleSourceReader register() -> register
    554:563:void release() -> release
    625:631:void restartFrom(long) -> restartFrom
    614:614:void seekMap(com.google.android.exoplayer.extractor.SeekMap) -> seekMap
    506:531:void seekToUs(long) -> seekToUs
    599:602:com.google.android.exoplayer.extractor.TrackOutput track(int) -> track
com.google.android.exoplayer.extractor.ExtractorSampleSource$1 -> com.google.android.exoplayer.extractor.ExtractorSampleSource$1:
    557:557:void <init>(com.google.android.exoplayer.extractor.ExtractorSampleSource) -> <init>
    560:560:void run() -> run
com.google.android.exoplayer.extractor.ExtractorSampleSource$2 -> com.google.android.exoplayer.extractor.ExtractorSampleSource$2:
    751:751:void <init>(com.google.android.exoplayer.extractor.ExtractorSampleSource,java.io.IOException) -> <init>
    754:754:void run() -> run
com.google.android.exoplayer.extractor.ExtractorSampleSource$ExtractingLoadable -> com.google.android.exoplayer.extractor.ExtractorSampleSource$ExtractingLoadable:
    795:803:void <init>(android.net.Uri,com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.extractor.ExtractorSampleSource$ExtractorHolder,com.google.android.exoplayer.upstream.Allocator,int,long) -> <init>
    808:808:void cancelLoad() -> cancelLoad
    813:813:boolean isLoadCanceled() -> isLoadCanceled
    819:844:void load() -> load
com.google.android.exoplayer.extractor.ExtractorSampleSource$ExtractorHolder -> com.google.android.exoplayer.extractor.ExtractorSampleSource$ExtractorHolder:
    866:868:void <init>(com.google.android.exoplayer.extractor.Extractor[],com.google.android.exoplayer.extractor.ExtractorOutput) -> <init>
    905:907:void release() -> release
    882:898:com.google.android.exoplayer.extractor.Extractor selectExtractor(com.google.android.exoplayer.extractor.ExtractorInput) -> selectExtractor
com.google.android.exoplayer.extractor.ExtractorSampleSource$InternalTrackOutput -> com.google.android.exoplayer.extractor.ExtractorSampleSource$InternalTrackOutput:
    766:767:void <init>(com.google.android.exoplayer.extractor.ExtractorSampleSource,com.google.android.exoplayer.upstream.Allocator) -> <init>
    772:773:void sampleMetadata(long,int,int,int,byte[]) -> sampleMetadata
com.google.android.exoplayer.extractor.ExtractorSampleSource$UnrecognizedInputFormatException -> com.google.android.exoplayer.extractor.ExtractorSampleSource$UnrecognizedInputFormatException:
    93:93:void <init>(com.google.android.exoplayer.extractor.Extractor[]) -> <init>
com.google.android.exoplayer.extractor.GaplessInfo -> com.google.android.exoplayer.extractor.GaplessInfo:
    28:28:void <clinit>() -> <clinit>
    83:85:void <init>(int,int) -> <init>
    38:46:com.google.android.exoplayer.extractor.GaplessInfo createFromComment(java.lang.String,java.lang.String) -> createFromComment
    64:64:com.google.android.exoplayer.extractor.GaplessInfo createFromXingHeaderValue(int) -> createFromXingHeaderValue
com.google.android.exoplayer.extractor.PositionHolder -> com.google.android.exoplayer.extractor.PositionHolder:
    21:21:void <init>() -> <init>
com.google.android.exoplayer.extractor.RollingSampleBuffer -> com.google.android.exoplayer.extractor.RollingSampleBuffer:
    56:63:void <init>(com.google.android.exoplayer.upstream.Allocator) -> <init>
    359:369:int appendData(com.google.android.exoplayer.upstream.DataSource,int,boolean) -> appendData
    387:397:int appendData(com.google.android.exoplayer.extractor.ExtractorInput,int,boolean) -> appendData
    409:413:void appendData(com.google.android.exoplayer.util.ParsableByteArray,int) -> appendData
    72:80:void clear() -> clear
    429:429:void commitSample(long,int,long,int,byte[]) -> commitSample
    96:97:void discardUpstreamSamples(int) -> discardUpstreamSamples
    318:322:void dropDownstreamTo(long) -> dropDownstreamTo
    107:123:void dropUpstreamFrom(long) -> dropUpstreamFrom
    330:331:void ensureCapacity(com.google.android.exoplayer.util.ParsableByteArray,int) -> ensureCapacity
    132:132:int getReadIndex() -> getReadIndex
    87:87:int getWriteIndex() -> getWriteIndex
    343:343:long getWritePosition() -> getWritePosition
    145:145:boolean peekSample(com.google.android.exoplayer.SampleHolder) -> peekSample
    437:442:int prepareForAppend(int) -> prepareForAppend
    279:283:void readData(long,java.nio.ByteBuffer,int) -> readData
    300:304:void readData(long,byte[],int) -> readData
    208:266:void readEncryptionData(com.google.android.exoplayer.SampleHolder,com.google.android.exoplayer.extractor.RollingSampleBuffer$SampleExtrasHolder) -> readEncryptionData
    179:193:boolean readSample(com.google.android.exoplayer.SampleHolder) -> readSample
    152:153:void skipSample() -> skipSample
    163:167:boolean skipToKeyframeBefore(long) -> skipToKeyframeBefore
com.google.android.exoplayer.extractor.RollingSampleBuffer$InfoQueue -> com.google.android.exoplayer.extractor.RollingSampleBuffer$InfoQueue:
    465:471:void <init>() -> <init>
    480:483:void clear() -> clear
    616:659:void commitSample(long,int,long,int,byte[]) -> commitSample
    500:514:long discardUpstreamSamples(int) -> discardUpstreamSamples
    523:523:int getReadIndex() -> getReadIndex
    490:490:int getWriteIndex() -> getWriteIndex
    557:564:long moveToNextSample() -> moveToNextSample
    539:547:boolean peekSample(com.google.android.exoplayer.SampleHolder,com.google.android.exoplayer.extractor.RollingSampleBuffer$SampleExtrasHolder) -> peekSample
    575:576:long skipToKeyframeBefore(long) -> skipToKeyframeBefore
com.google.android.exoplayer.extractor.RollingSampleBuffer$SampleExtrasHolder -> com.google.android.exoplayer.extractor.RollingSampleBuffer$SampleExtrasHolder:
    666:666:void <init>() -> <init>
    666:666:void <init>(com.google.android.exoplayer.extractor.RollingSampleBuffer$1) -> <init>
com.google.android.exoplayer.extractor.SeekMap -> com.google.android.exoplayer.extractor.SeekMap:
    26:26:void <clinit>() -> <clinit>
com.google.android.exoplayer.extractor.SeekMap$1 -> com.google.android.exoplayer.extractor.SeekMap$1:
    26:26:void <init>() -> <init>
com.google.android.exoplayer.extractor.flv.AudioTagPayloadReader -> com.google.android.exoplayer.extractor.flv.AudioTagPayloadReader:
    40:40:void <clinit>() -> <clinit>
    49:49:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    59:73:boolean parseHeader(com.google.android.exoplayer.util.ParsableByteArray) -> parseHeader
    80:96:void parsePayload(com.google.android.exoplayer.util.ParsableByteArray,long) -> parsePayload
com.google.android.exoplayer.extractor.flv.FlvExtractor -> com.google.android.exoplayer.extractor.flv.FlvExtractor:
    49:49:void <clinit>() -> <clinit>
    72:77:void <init>() -> <init>
    113:113:void init(com.google.android.exoplayer.extractor.ExtractorOutput) -> init
    263:270:com.google.android.exoplayer.util.ParsableByteArray prepareTagData(com.google.android.exoplayer.extractor.ExtractorInput) -> prepareTagData
    131:133:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    163:187:boolean readFlvHeader(com.google.android.exoplayer.extractor.ExtractorInput) -> readFlvHeader
    238:257:boolean readTagData(com.google.android.exoplayer.extractor.ExtractorInput) -> readTagData
    213:224:boolean readTagHeader(com.google.android.exoplayer.extractor.ExtractorInput) -> readTagHeader
    118:119:void seek() -> seek
    199:201:void skipToTagHeader(com.google.android.exoplayer.extractor.ExtractorInput) -> skipToTagHeader
    83:108:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
com.google.android.exoplayer.extractor.flv.ScriptTagPayloadReader -> com.google.android.exoplayer.extractor.flv.ScriptTagPayloadReader:
    49:49:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    64:67:void parsePayload(com.google.android.exoplayer.util.ParsableByteArray,long) -> parsePayload
    100:100:java.lang.Boolean readAmfBoolean(com.google.android.exoplayer.util.ParsableByteArray) -> readAmfBoolean
    205:193:java.lang.Object readAmfData(com.google.android.exoplayer.util.ParsableByteArray,int) -> readAmfData
    185:186:java.util.Date readAmfDate(com.google.android.exoplayer.util.ParsableByteArray) -> readAmfDate
    110:110:java.lang.Double readAmfDouble(com.google.android.exoplayer.util.ParsableByteArray) -> readAmfDouble
    168:173:java.util.HashMap readAmfEcmaArray(com.google.android.exoplayer.util.ParsableByteArray) -> readAmfEcmaArray
    149:156:java.util.HashMap readAmfObject(com.google.android.exoplayer.util.ParsableByteArray) -> readAmfObject
    133:137:java.util.ArrayList readAmfStrictArray(com.google.android.exoplayer.util.ParsableByteArray) -> readAmfStrictArray
    120:123:java.lang.String readAmfString(com.google.android.exoplayer.util.ParsableByteArray) -> readAmfString
    90:90:int readAmfType(com.google.android.exoplayer.util.ParsableByteArray) -> readAmfType
com.google.android.exoplayer.extractor.flv.TagPayloadReader -> com.google.android.exoplayer.extractor.flv.TagPayloadReader:
    46:48:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    86:87:void consume(com.google.android.exoplayer.util.ParsableByteArray,long) -> consume
    66:66:long getDurationUs() -> getDurationUs
    57:57:void setDurationUs(long) -> setDurationUs
com.google.android.exoplayer.extractor.flv.TagPayloadReader$UnsupportedFormatException -> com.google.android.exoplayer.extractor.flv.TagPayloadReader$UnsupportedFormatException:
    34:34:void <init>(java.lang.String) -> <init>
com.google.android.exoplayer.extractor.flv.VideoTagPayloadReader -> com.google.android.exoplayer.extractor.flv.VideoTagPayloadReader:
    59:61:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    145:172:com.google.android.exoplayer.extractor.flv.VideoTagPayloadReader$AvcSequenceHeaderData parseAvcCodecPrivate(com.google.android.exoplayer.util.ParsableByteArray) -> parseAvcCodecPrivate
    71:76:boolean parseHeader(com.google.android.exoplayer.util.ParsableByteArray) -> parseHeader
    84:131:void parsePayload(com.google.android.exoplayer.util.ParsableByteArray,long) -> parsePayload
com.google.android.exoplayer.extractor.flv.VideoTagPayloadReader$AvcSequenceHeaderData -> com.google.android.exoplayer.extractor.flv.VideoTagPayloadReader$AvcSequenceHeaderData:
    188:193:void <init>(java.util.List,int,int,int,float) -> <init>
com.google.android.exoplayer.extractor.mp3.ConstantBitrateSeeker -> com.google.android.exoplayer.extractor.mp3.ConstantBitrateSeeker:
    31:34:void <init>(long,int,long) -> <init>
    56:56:long getDurationUs() -> getDurationUs
    44:44:long getPosition(long) -> getPosition
    50:50:long getTimeUs(long) -> getTimeUs
    39:39:boolean isSeekable() -> isSeekable
com.google.android.exoplayer.extractor.mp3.Id3Util -> com.google.android.exoplayer.extractor.mp3.Id3Util:
    36:38:void <clinit>() -> <clinit>
    216:239:boolean canUnescapeVersion4(com.google.android.exoplayer.util.ParsableByteArray,boolean) -> canUnescapeVersion4
    141:174:android.util.Pair findNextComment(int,com.google.android.exoplayer.util.ParsableByteArray) -> findNextComment
    89:128:com.google.android.exoplayer.extractor.GaplessInfo parseGaplessInfo(com.google.android.exoplayer.util.ParsableByteArray,int,int) -> parseGaplessInfo
    50:69:com.google.android.exoplayer.extractor.GaplessInfo parseId3(com.google.android.exoplayer.extractor.ExtractorInput) -> parseId3
    191:206:boolean unescape(com.google.android.exoplayer.util.ParsableByteArray,int,int) -> unescape
    245:284:void unescapeVersion4(com.google.android.exoplayer.util.ParsableByteArray,boolean) -> unescapeVersion4
    289:292:void writeSyncSafeInteger(byte[],int,int) -> writeSyncSafeInteger
com.google.android.exoplayer.extractor.mp3.Mp3Extractor -> com.google.android.exoplayer.extractor.mp3.Mp3Extractor:
    52:54:void <clinit>() -> <clinit>
    76:76:void <init>() -> <init>
    85:89:void <init>(long) -> <init>
    99:101:void init(com.google.android.exoplayer.extractor.ExtractorOutput) -> init
    172:189:boolean maybeResynchronize(com.google.android.exoplayer.extractor.ExtractorInput) -> maybeResynchronize
    120:135:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    139:163:int readSample(com.google.android.exoplayer.extractor.ExtractorInput) -> readSample
    106:109:void seek() -> seek
    279:319:void setupSeeker(com.google.android.exoplayer.extractor.ExtractorInput) -> setupSeeker
    94:94:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
    210:253:boolean synchronize(com.google.android.exoplayer.extractor.ExtractorInput,boolean) -> synchronize
    198:198:boolean synchronizeCatchingEndOfInput(com.google.android.exoplayer.extractor.ExtractorInput) -> synchronizeCatchingEndOfInput
com.google.android.exoplayer.extractor.mp3.VbriSeeker -> com.google.android.exoplayer.extractor.mp3.VbriSeeker:
    94:97:void <init>(long[],long[],long) -> <init>
    43:87:com.google.android.exoplayer.extractor.mp3.VbriSeeker create(com.google.android.exoplayer.util.MpegAudioHeader,com.google.android.exoplayer.util.ParsableByteArray,long,long) -> create
    117:117:long getDurationUs() -> getDurationUs
    107:107:long getPosition(long) -> getPosition
    112:112:long getTimeUs(long) -> getTimeUs
com.google.android.exoplayer.extractor.mp3.XingSeeker -> com.google.android.exoplayer.extractor.mp3.XingSeeker:
    85:85:void <init>(long,long,long) -> <init>
    89:95:void <init>(long,long,long,long[],long,int) -> <init>
    43:70:com.google.android.exoplayer.extractor.mp3.XingSeeker create(com.google.android.exoplayer.util.MpegAudioHeader,com.google.android.exoplayer.util.ParsableByteArray,long,long) -> create
    157:157:long getDurationUs() -> getDurationUs
    105:133:long getPosition(long) -> getPosition
<<<<<<< HEAD
    138:149:long getTimeUs(long) -> getTimeUs
=======
    138:150:long getTimeUs(long) -> getTimeUs
>>>>>>> rename package name,fix action event info list same time crash
    165:165:long getTimeUsForTocPosition(int) -> getTimeUsForTocPosition
    100:100:boolean isSeekable() -> isSeekable
com.google.android.exoplayer.extractor.mp4.Atom -> com.google.android.exoplayer.extractor.mp4.Atom:
    46:135:void <clinit>() -> <clinit>
    139:140:void <init>(int) -> <init>
    302:302:java.lang.String getAtomTypeString(int) -> getAtomTypeString
    145:145:java.lang.String toString() -> toString
com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom -> com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom:
    183:186:void <init>(int,long) -> <init>
    195:195:void add(com.google.android.exoplayer.extractor.mp4.Atom$LeafAtom) -> add
    204:204:void add(com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom) -> add
    255:265:int getChildAtomOfTypeCount(int) -> getChildAtomOfTypeCount
    237:240:com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom getContainerAtomOfType(int) -> getContainerAtomOfType
    217:220:com.google.android.exoplayer.extractor.mp4.Atom$LeafAtom getLeafAtomOfType(int) -> getLeafAtomOfType
    274:276:java.lang.String toString() -> toString
com.google.android.exoplayer.extractor.mp4.Atom$LeafAtom -> com.google.android.exoplayer.extractor.mp4.Atom$LeafAtom:
    163:164:void <init>(int,com.google.android.exoplayer.util.ParsableByteArray) -> <init>
com.google.android.exoplayer.extractor.mp4.AtomParsers -> com.google.android.exoplayer.extractor.mp4.AtomParsers:
    925:931:int findEsdsPosition(com.google.android.exoplayer.util.ParsableByteArray,int,int) -> findEsdsPosition
    809:914:void parseAudioSampleEntry(com.google.android.exoplayer.util.ParsableByteArray,int,int,int,int,long,java.lang.String,boolean,com.google.android.exoplayer.extractor.mp4.AtomParsers$StsdData,int) -> parseAudioSampleEntry
    696:700:com.google.android.exoplayer.extractor.mp4.AtomParsers$AvcCData parseAvcCFromParent(com.google.android.exoplayer.util.ParsableByteArray,int) -> parseAvcCFromParent
    775:776:android.util.Pair parseEdts(com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom) -> parseEdts
    943:1012:android.util.Pair parseEsdsFromParent(com.google.android.exoplayer.util.ParsableByteArray,int) -> parseEsdsFromParent
    1107:1110:int parseExpandableClassSize(com.google.android.exoplayer.util.ParsableByteArray) -> parseExpandableClassSize
    519:520:int parseHdlr(com.google.android.exoplayer.util.ParsableByteArray) -> parseHdlr
    727:763:android.util.Pair parseHvcCFromParent(com.google.android.exoplayer.util.ParsableByteArray,int) -> parseHvcCFromParent
    402:430:com.google.android.exoplayer.extractor.GaplessInfo parseIlst(com.google.android.exoplayer.util.ParsableByteArray) -> parseIlst
    531:541:android.util.Pair parseMdhd(com.google.android.exoplayer.util.ParsableByteArray) -> parseMdhd
    383:396:com.google.android.exoplayer.extractor.GaplessInfo parseMetaAtom(com.google.android.exoplayer.util.ParsableByteArray) -> parseMetaAtom
    443:450:long parseMvhd(com.google.android.exoplayer.util.ParsableByteArray) -> parseMvhd
    800:802:float parsePaspFromParent(com.google.android.exoplayer.util.ParsableByteArray,int) -> parsePaspFromParent
    1091:1095:byte[] parseProjFromParent(com.google.android.exoplayer.util.ParsableByteArray,int,int) -> parseProjFromParent
    1021:1033:int parseSampleEntryEncryptionData(com.google.android.exoplayer.util.ParsableByteArray,int,int,com.google.android.exoplayer.extractor.mp4.AtomParsers$StsdData,int) -> parseSampleEntryEncryptionData
    1070:1079:com.google.android.exoplayer.extractor.mp4.TrackEncryptionBox parseSchiFromParent(com.google.android.exoplayer.util.ParsableByteArray,int,int) -> parseSchiFromParent
    1048:1063:android.util.Pair parseSinfFromParent(com.google.android.exoplayer.util.ParsableByteArray,int,int) -> parseSinfFromParent
    95:101:com.google.android.exoplayer.extractor.mp4.TrackSampleTable parseStbl(com.google.android.exoplayer.extractor.mp4.Track,com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom) -> parseStbl
    557:594:com.google.android.exoplayer.extractor.mp4.AtomParsers$StsdData parseStsd(com.google.android.exoplayer.util.ParsableByteArray,int,long,int,java.lang.String,boolean) -> parseStsd
    459:509:com.google.android.exoplayer.extractor.mp4.AtomParsers$TkhdData parseTkhd(com.google.android.exoplayer.util.ParsableByteArray) -> parseTkhd
    53:79:com.google.android.exoplayer.extractor.mp4.Track parseTrak(com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom,com.google.android.exoplayer.extractor.mp4.Atom$LeafAtom,long,boolean) -> parseTrak
    366:376:com.google.android.exoplayer.extractor.GaplessInfo parseUdta(com.google.android.exoplayer.extractor.mp4.Atom$LeafAtom,boolean) -> parseUdta
    601:690:void parseVideoSampleEntry(com.google.android.exoplayer.util.ParsableByteArray,int,int,int,int,long,int,com.google.android.exoplayer.extractor.mp4.AtomParsers$StsdData,int) -> parseVideoSampleEntry
com.google.android.exoplayer.extractor.mp4.AtomParsers$AvcCData -> com.google.android.exoplayer.extractor.mp4.AtomParsers$AvcCData:
    1209:1212:void <init>(java.util.List,int,float) -> <init>
com.google.android.exoplayer.extractor.mp4.AtomParsers$ChunkIterator -> com.google.android.exoplayer.extractor.mp4.AtomParsers$ChunkIterator:
    1136:1145:void <init>(com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.util.ParsableByteArray,boolean) -> <init>
    1149:1158:boolean moveNext() -> moveNext
com.google.android.exoplayer.extractor.mp4.AtomParsers$StsdData -> com.google.android.exoplayer.extractor.mp4.AtomParsers$StsdData:
    1192:1194:void <init>(int) -> <init>
com.google.android.exoplayer.extractor.mp4.AtomParsers$StszSampleSizeBox -> com.google.android.exoplayer.extractor.mp4.AtomParsers$StszSampleSizeBox:
    1248:1252:void <init>(com.google.android.exoplayer.extractor.mp4.Atom$LeafAtom) -> <init>
    1257:1257:int getSampleCount() -> getSampleCount
    1267:1267:boolean isFixedSampleSize() -> isFixedSampleSize
    1262:1262:int readNextSampleSize() -> readNextSampleSize
com.google.android.exoplayer.extractor.mp4.AtomParsers$Stz2SampleSizeBox -> com.google.android.exoplayer.extractor.mp4.AtomParsers$Stz2SampleSizeBox:
    1285:1289:void <init>(com.google.android.exoplayer.extractor.mp4.Atom$LeafAtom) -> <init>
    1294:1294:int getSampleCount() -> getSampleCount
    1299:1312:int readNextSampleSize() -> readNextSampleSize
com.google.android.exoplayer.extractor.mp4.AtomParsers$TkhdData -> com.google.android.exoplayer.extractor.mp4.AtomParsers$TkhdData:
    1174:1177:void <init>(int,long,int) -> <init>
    1168:1168:long access$000(com.google.android.exoplayer.extractor.mp4.AtomParsers$TkhdData) -> access$000
    1168:1168:int access$100(com.google.android.exoplayer.extractor.mp4.AtomParsers$TkhdData) -> access$100
    1168:1168:int access$200(com.google.android.exoplayer.extractor.mp4.AtomParsers$TkhdData) -> access$200
com.google.android.exoplayer.extractor.mp4.DefaultSampleValues -> com.google.android.exoplayer.extractor.mp4.DefaultSampleValues:
    25:29:void <init>(int,int,int,int) -> <init>
com.google.android.exoplayer.extractor.mp4.FixedSampleSizeRechunker -> com.google.android.exoplayer.extractor.mp4.FixedSampleSizeRechunker:
    57:94:com.google.android.exoplayer.extractor.mp4.FixedSampleSizeRechunker$Results rechunk(int,long[],int[],long) -> rechunk
com.google.android.exoplayer.extractor.mp4.FixedSampleSizeRechunker$Results -> com.google.android.exoplayer.extractor.mp4.FixedSampleSizeRechunker$Results:
    35:40:void <init>(long[],int[],int,long[],int[]) -> <init>
com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor -> com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor:
    51:73:void <clinit>() -> <clinit>
    119:119:void <init>() -> <init>
    126:126:void <init>(int) -> <init>
    134:144:void <init>(int,com.google.android.exoplayer.extractor.mp4.Track) -> <init>
    989:1014:int appendSampleEncryptionData(com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor$TrackBundle) -> appendSampleEncryptionData
    203:204:void enterReadingAtomHeaderState() -> enterReadingAtomHeaderState
    1021:1033:com.google.android.exoplayer.drm.DrmInitData$Mapped getDrmInitDataFromAtoms(java.util.List) -> getDrmInitDataFromAtoms
    964:970:com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor$TrackBundle getNextFragmentRun(android.util.SparseArray) -> getNextFragmentRun
    154:159:void init(com.google.android.exoplayer.extractor.ExtractorOutput) -> init
    310:315:void onContainerAtomRead(com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom) -> onContainerAtomRead
    298:305:void onLeafAtomRead(com.google.android.exoplayer.extractor.mp4.Atom$LeafAtom,long) -> onLeafAtomRead
    375:378:void onMoofContainerAtomRead(com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom) -> onMoofContainerAtomRead
    320:370:void onMoovContainerAtomRead(com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom) -> onMoovContainerAtomRead
    401:404:long parseMehd(com.google.android.exoplayer.util.ParsableByteArray) -> parseMehd
    409:413:void parseMoof(com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom,android.util.SparseArray,int,byte[]) -> parseMoof
    516:526:void parseSaio(com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.extractor.mp4.TrackFragment) -> parseSaio
    479:490:void parseSaiz(com.google.android.exoplayer.extractor.mp4.TrackEncryptionBox,com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.extractor.mp4.TrackFragment) -> parseSaiz
    690:690:void parseSenc(com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.extractor.mp4.TrackFragment) -> parseSenc
    695:701:void parseSenc(com.google.android.exoplayer.util.ParsableByteArray,int,com.google.android.exoplayer.extractor.mp4.TrackFragment) -> parseSenc
    717:727:void parseSgpd(com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.extractor.mp4.TrackFragment) -> parseSgpd
    769:818:com.google.android.exoplayer.extractor.ChunkIndex parseSidx(com.google.android.exoplayer.util.ParsableByteArray,long) -> parseSidx
    582:585:long parseTfdt(com.google.android.exoplayer.util.ParsableByteArray) -> parseTfdt
    546:570:com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor$TrackBundle parseTfhd(com.google.android.exoplayer.util.ParsableByteArray,android.util.SparseArray,int) -> parseTfhd
    423:424:void parseTraf(com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom,android.util.SparseArray,int,byte[]) -> parseTraf
    386:393:android.util.Pair parseTrex(com.google.android.exoplayer.util.ParsableByteArray) -> parseTrex
    599:670:void parseTrun(com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor$TrackBundle,long,int,com.google.android.exoplayer.util.ParsableByteArray) -> parseTrun
    675:686:void parseUuid(com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.extractor.mp4.TrackFragment,byte[]) -> parseUuid
    291:294:void processAtomEnded(long) -> processAtomEnded
    182:184:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    208:270:boolean readAtomHeader(com.google.android.exoplayer.extractor.ExtractorInput) -> readAtomHeader
    280:287:void readAtomPayload(com.google.android.exoplayer.extractor.ExtractorInput) -> readAtomPayload
    824:839:void readEncryptionData(com.google.android.exoplayer.extractor.ExtractorInput) -> readEncryptionData
    860:952:boolean readSample(com.google.android.exoplayer.extractor.ExtractorInput) -> readSample
    165:170:void seek() -> seek
    1054:1054:boolean shouldParseContainerAtom(int) -> shouldParseContainerAtom
    1043:1043:boolean shouldParseLeafAtom(int) -> shouldParseLeafAtom
    149:149:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor$TrackBundle -> com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor$TrackBundle:
    1071:1073:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    1077:1080:void init(com.google.android.exoplayer.extractor.mp4.Track,com.google.android.exoplayer.extractor.mp4.DefaultSampleValues) -> init
    1084:1085:void reset() -> reset
com.google.android.exoplayer.extractor.mp4.Mp4Extractor -> com.google.android.exoplayer.extractor.mp4.Mp4Extractor:
    49:49:void <clinit>() -> <clinit>
    79:84:void <init>() -> <init>
    169:170:void enterReadingAtomHeaderState() -> enterReadingAtomHeaderState
    149:158:long getPosition(long) -> getPosition
    423:430:int getTrackIndexOfEarliestCurrentSample() -> getTrackIndexOfEarliestCurrentSample
    94:94:void init(com.google.android.exoplayer.extractor.ExtractorOutput) -> init
    249:261:void processAtomEnded(long) -> processAtomEnded
    272:279:boolean processFtypAtom(com.google.android.exoplayer.util.ParsableByteArray) -> processFtypAtom
    290:335:void processMoovAtom(com.google.android.exoplayer.extractor.mp4.Atom$ContainerAtom) -> processMoovAtom
    115:120:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    174:212:boolean readAtomHeader(com.google.android.exoplayer.extractor.ExtractorInput) -> readAtomHeader
    225:245:boolean readAtomPayload(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> readAtomPayload
    356:366:int readSample(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> readSample
    99:103:void seek() -> seek
    456:456:boolean shouldParseContainerAtom(int) -> shouldParseContainerAtom
    444:444:boolean shouldParseLeafAtom(int) -> shouldParseLeafAtom
    89:89:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
com.google.android.exoplayer.extractor.mp4.Mp4Extractor$Mp4Track -> com.google.android.exoplayer.extractor.mp4.Mp4Extractor$Mp4Track:
    468:471:void <init>(com.google.android.exoplayer.extractor.mp4.Track,com.google.android.exoplayer.extractor.mp4.TrackSampleTable,com.google.android.exoplayer.extractor.TrackOutput) -> <init>
com.google.android.exoplayer.extractor.mp4.PsshAtomUtil -> com.google.android.exoplayer.extractor.mp4.PsshAtomUtil:
    41:50:byte[] buildPsshAtom(java.util.UUID,byte[]) -> buildPsshAtom
    102:135:android.util.Pair parsePsshAtom(byte[]) -> parsePsshAtom
    82:90:byte[] parseSchemeSpecificData(byte[],java.util.UUID) -> parseSchemeSpecificData
    63:67:java.util.UUID parseUuid(byte[]) -> parseUuid
com.google.android.exoplayer.extractor.mp4.Sniffer -> com.google.android.exoplayer.extractor.mp4.Sniffer:
    35:59:void <clinit>() -> <clinit>
    173:176:boolean isCompatibleBrand(int) -> isCompatibleBrand
    73:73:boolean sniffFragmented(com.google.android.exoplayer.extractor.ExtractorInput) -> sniffFragmented
    92:162:boolean sniffInternal(com.google.android.exoplayer.extractor.ExtractorInput,boolean) -> sniffInternal
    87:87:boolean sniffUnfragmented(com.google.android.exoplayer.extractor.ExtractorInput) -> sniffUnfragmented
com.google.android.exoplayer.extractor.mp4.Track -> com.google.android.exoplayer.extractor.mp4.Track:
    27:31:void <clinit>() -> <clinit>
    87:97:void <init>(int,int,long,long,long,com.google.android.exoplayer.MediaFormat,com.google.android.exoplayer.extractor.mp4.TrackEncryptionBox[],int,long[],long[]) -> <init>
com.google.android.exoplayer.extractor.mp4.TrackEncryptionBox -> com.google.android.exoplayer.extractor.mp4.TrackEncryptionBox:
    45:48:void <init>(boolean,int,byte[]) -> <init>
com.google.android.exoplayer.extractor.mp4.TrackFragment -> com.google.android.exoplayer.extractor.mp4.TrackFragment:
    25:25:void <init>() -> <init>
    153:155:void fillEncryptionData(com.google.android.exoplayer.extractor.ExtractorInput) -> fillEncryptionData
    164:166:void fillEncryptionData(com.google.android.exoplayer.util.ParsableByteArray) -> fillEncryptionData
    170:170:long getSamplePresentationTime(int) -> getSamplePresentationTime
    139:144:void initEncryptionData(int) -> initEncryptionData
    116:125:void initTables(int) -> initTables
    100:104:void reset() -> reset
com.google.android.exoplayer.extractor.mp4.TrackSampleTable -> com.google.android.exoplayer.extractor.mp4.TrackSampleTable:
    57:67:void <init>(long[],int[],int,long[],int[]) -> <init>
    80:82:int getIndexOfEarlierOrEqualSynchronizationSample(long) -> getIndexOfEarlierOrEqualSynchronizationSample
    97:99:int getIndexOfLaterOrEqualSynchronizationSample(long) -> getIndexOfLaterOrEqualSynchronizationSample
com.google.android.exoplayer.extractor.ogg.FlacReader -> com.google.android.exoplayer.extractor.ogg.FlacReader:
    37:37:void <init>() -> <init>
    56:95:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    49:50:boolean verifyBitstreamType(com.google.android.exoplayer.util.ParsableByteArray) -> verifyBitstreamType
com.google.android.exoplayer.extractor.ogg.OggExtractor -> com.google.android.exoplayer.extractor.ogg.OggExtractor:
    30:30:void <init>() -> <init>
    65:67:void init(com.google.android.exoplayer.extractor.ExtractorOutput) -> init
    83:83:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    72:72:void seek() -> seek
    37:58:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
com.google.android.exoplayer.extractor.ogg.OggParser -> com.google.android.exoplayer.extractor.ogg.OggParser:
    29:37:void <init>() -> <init>
    111:118:long readGranuleOfLastPage(com.google.android.exoplayer.extractor.ExtractorInput) -> readGranuleOfLastPage
    64:94:boolean readPacket(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.util.ParsableByteArray) -> readPacket
    44:46:void reset() -> reset
    138:148:long skipToPageOfGranule(com.google.android.exoplayer.extractor.ExtractorInput,long) -> skipToPageOfGranule
com.google.android.exoplayer.extractor.ogg.OggSeeker -> com.google.android.exoplayer.extractor.ogg.OggSeeker:
    27:33:void <init>() -> <init>
    64:71:long getNextSeekPosition(long,com.google.android.exoplayer.extractor.ExtractorInput) -> getNextSeekPosition
    43:45:void setup(long,long) -> setup
com.google.android.exoplayer.extractor.ogg.OggUtil -> com.google.android.exoplayer.extractor.ogg.OggUtil:
    33:33:void <clinit>() -> <clinit>
    156:160:void calculatePacketSize(com.google.android.exoplayer.extractor.ogg.OggUtil$PageHeader,int,com.google.android.exoplayer.extractor.ogg.OggUtil$PacketInfoHolder) -> calculatePacketSize
    101:109:boolean populatePageHeader(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.ogg.OggUtil$PageHeader,com.google.android.exoplayer.util.ParsableByteArray,boolean) -> populatePageHeader
    58:80:void skipToNextPage(com.google.android.exoplayer.extractor.ExtractorInput) -> skipToNextPage
com.google.android.exoplayer.extractor.ogg.OggUtil$PacketInfoHolder -> com.google.android.exoplayer.extractor.ogg.OggUtil$PacketInfoHolder:
    205:205:void <init>() -> <init>
com.google.android.exoplayer.extractor.ogg.OggUtil$PageHeader -> com.google.android.exoplayer.extractor.ogg.OggUtil$PageHeader:
    172:183:void <init>() -> <init>
    189:197:void reset() -> reset
com.google.android.exoplayer.extractor.ogg.StreamReader -> com.google.android.exoplayer.extractor.ogg.StreamReader:
    13:18:void <init>() -> <init>
    25:26:void init(com.google.android.exoplayer.extractor.ExtractorOutput,com.google.android.exoplayer.extractor.TrackOutput) -> init
    33:34:void seek() -> seek
com.google.android.exoplayer.extractor.ogg.VorbisBitArray -> com.google.android.exoplayer.extractor.ogg.VorbisBitArray:
    39:39:void <init>(byte[]) -> <init>
    48:50:void <init>(byte[],int) -> <init>
    130:130:int getPosition() -> getPosition
    65:65:boolean readBit() -> readBit
    75:104:int readBits(int) -> readBits
    115:120:void skipBits(int) -> skipBits
com.google.android.exoplayer.extractor.ogg.VorbisReader -> com.google.android.exoplayer.extractor.ogg.VorbisReader:
    34:44:void <init>() -> <init>
    187:193:void appendNumberOfSamples(com.google.android.exoplayer.util.ParsableByteArray,long) -> appendNumberOfSamples
    198:203:int decodeBlockSize(byte,com.google.android.exoplayer.extractor.ogg.VorbisReader$VorbisSetup) -> decodeBlockSize
    216:220:long getPosition(long) -> getPosition
    210:210:boolean isSeekable() -> isSeekable
    74:147:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    157:180:com.google.android.exoplayer.extractor.ogg.VorbisReader$VorbisSetup readSetupHeaders(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.util.ParsableByteArray) -> readSetupHeaders
    63:66:void seek() -> seek
    55:55:boolean verifyBitstreamType(com.google.android.exoplayer.util.ParsableByteArray) -> verifyBitstreamType
com.google.android.exoplayer.extractor.ogg.VorbisReader$VorbisSetup -> com.google.android.exoplayer.extractor.ogg.VorbisReader$VorbisSetup:
    236:241:void <init>(com.google.android.exoplayer.extractor.ogg.VorbisUtil$VorbisIdHeader,com.google.android.exoplayer.extractor.ogg.VorbisUtil$CommentHeader,byte[],com.google.android.exoplayer.extractor.ogg.VorbisUtil$Mode[],int) -> <init>
com.google.android.exoplayer.extractor.ogg.VorbisUtil -> com.google.android.exoplayer.extractor.ogg.VorbisUtil:
    401:401:long mapType1QuantValues(long,long) -> mapType1QuantValues
    338:340:com.google.android.exoplayer.extractor.ogg.VorbisUtil$CodeBook readBook(com.google.android.exoplayer.extractor.ogg.VorbisBitArray) -> readBook
    284:296:void readFloors(com.google.android.exoplayer.extractor.ogg.VorbisBitArray) -> readFloors
    210:232:void readMappings(int,com.google.android.exoplayer.extractor.ogg.VorbisBitArray) -> readMappings
    196:203:com.google.android.exoplayer.extractor.ogg.VorbisUtil$Mode[] readModes(com.google.android.exoplayer.extractor.ogg.VorbisBitArray) -> readModes
    252:256:void readResidues(com.google.android.exoplayer.extractor.ogg.VorbisBitArray) -> readResidues
    92:110:com.google.android.exoplayer.extractor.ogg.VorbisUtil$CommentHeader readVorbisCommentHeader(com.google.android.exoplayer.util.ParsableByteArray) -> readVorbisCommentHeader
    59:76:com.google.android.exoplayer.extractor.ogg.VorbisUtil$VorbisIdHeader readVorbisIdentificationHeader(com.google.android.exoplayer.util.ParsableByteArray) -> readVorbisIdentificationHeader
    167:190:com.google.android.exoplayer.extractor.ogg.VorbisUtil$Mode[] readVorbisModes(com.google.android.exoplayer.util.ParsableByteArray,int) -> readVorbisModes
    129:146:boolean verifyVorbisHeaderCapturePattern(int,com.google.android.exoplayer.util.ParsableByteArray,boolean) -> verifyVorbisHeaderCapturePattern
com.google.android.exoplayer.extractor.ogg.VorbisUtil$CodeBook -> com.google.android.exoplayer.extractor.ogg.VorbisUtil$CodeBook:
    413:418:void <init>(int,int,long[],int,boolean) -> <init>
com.google.android.exoplayer.extractor.ogg.VorbisUtil$CommentHeader -> com.google.android.exoplayer.extractor.ogg.VorbisUtil$CommentHeader:
    429:432:void <init>(java.lang.String,java.lang.String[],int) -> <init>
com.google.android.exoplayer.extractor.ogg.VorbisUtil$Mode -> com.google.android.exoplayer.extractor.ogg.VorbisUtil$Mode:
    478:482:void <init>(boolean,int,int,int) -> <init>
com.google.android.exoplayer.extractor.ogg.VorbisUtil$VorbisIdHeader -> com.google.android.exoplayer.extractor.ogg.VorbisUtil$VorbisIdHeader:
    452:462:void <init>(long,int,long,int,int,int,int,int,boolean,byte[]) -> <init>
com.google.android.exoplayer.extractor.ts.Ac3Reader -> com.google.android.exoplayer.extractor.ts.Ac3Reader:
    62:66:void <init>(com.google.android.exoplayer.extractor.TrackOutput,boolean) -> <init>
    83:90:void consume(com.google.android.exoplayer.util.ParsableByteArray) -> consume
    130:133:boolean continueRead(com.google.android.exoplayer.util.ParsableByteArray,byte[],int) -> continueRead
    78:78:void packetStarted(long,boolean) -> packetStarted
    164:177:void parseHeader() -> parseHeader
    71:73:void seek() -> seek
    144:154:boolean skipToNextSync(com.google.android.exoplayer.util.ParsableByteArray) -> skipToNextSync
com.google.android.exoplayer.extractor.ts.AdtsExtractor -> com.google.android.exoplayer.extractor.ts.AdtsExtractor:
    35:35:void <clinit>() -> <clinit>
    50:50:void <init>() -> <init>
    53:55:void <init>(long) -> <init>
    115:117:void init(com.google.android.exoplayer.extractor.ExtractorOutput) -> init
    134:150:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    122:123:void seek() -> seek
    61:73:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
com.google.android.exoplayer.extractor.ts.AdtsReader -> com.google.android.exoplayer.extractor.ts.AdtsReader:
    54:54:void <clinit>() -> <clinit>
    83:88:void <init>(com.google.android.exoplayer.extractor.TrackOutput,com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    103:106:void consume(com.google.android.exoplayer.util.ParsableByteArray) -> consume
    141:144:boolean continueRead(com.google.android.exoplayer.util.ParsableByteArray,byte[],int) -> continueRead
    199:234:void findNextSample(com.google.android.exoplayer.util.ParsableByteArray) -> findNextSample
    98:98:void packetStarted(long,boolean) -> packetStarted
    251:296:void parseAdtsHeader() -> parseAdtsHeader
    241:243:void parseId3Header() -> parseId3Header
    303:309:void readSample(com.google.android.exoplayer.util.ParsableByteArray) -> readSample
    93:93:void seek() -> seek
    151:153:void setFindingSampleState() -> setFindingSampleState
    188:189:void setReadingAdtsHeaderState() -> setReadingAdtsHeaderState
    161:164:void setReadingId3HeaderState() -> setReadingId3HeaderState
    177:181:void setReadingSampleState(com.google.android.exoplayer.extractor.TrackOutput,long,int,int) -> setReadingSampleState
com.google.android.exoplayer.extractor.ts.DtsReader -> com.google.android.exoplayer.extractor.ts.DtsReader:
    59:65:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    82:87:void consume(com.google.android.exoplayer.util.ParsableByteArray) -> consume
    127:130:boolean continueRead(com.google.android.exoplayer.util.ParsableByteArray,byte[],int) -> continueRead
    77:77:void packetStarted(long,boolean) -> packetStarted
    156:165:void parseHeader() -> parseHeader
    70:72:void seek() -> seek
    141:145:boolean skipToNextSync(com.google.android.exoplayer.util.ParsableByteArray) -> skipToNextSync
com.google.android.exoplayer.extractor.ts.ElementaryStreamReader -> com.google.android.exoplayer.extractor.ts.ElementaryStreamReader:
    31:32:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
com.google.android.exoplayer.extractor.ts.H262Reader -> com.google.android.exoplayer.extractor.ts.H262Reader:
    39:39:void <clinit>() -> <clinit>
    62:64:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    86:144:void consume(com.google.android.exoplayer.util.ParsableByteArray) -> consume
    78:80:void packetStarted(long,boolean) -> packetStarted
    167:209:android.util.Pair parseCsdBuffer(com.google.android.exoplayer.extractor.ts.H262Reader$CsdBuffer) -> parseCsdBuffer
    69:73:void seek() -> seek
com.google.android.exoplayer.extractor.ts.H262Reader$CsdBuffer -> com.google.android.exoplayer.extractor.ts.H262Reader$CsdBuffer:
    220:221:void <init>(int) -> <init>
    266:274:void onData(byte[],int,int) -> onData
    244:253:boolean onStartCode(int,int) -> onStartCode
    228:230:void reset() -> reset
com.google.android.exoplayer.extractor.ts.H264Reader -> com.google.android.exoplayer.extractor.ts.H264Reader:
    68:75:void <init>(com.google.android.exoplayer.extractor.TrackOutput,com.google.android.exoplayer.extractor.ts.SeiReader,boolean,boolean) -> <init>
    95:131:void consume(com.google.android.exoplayer.util.ParsableByteArray) -> consume
    162:198:void endNalUnit(long,int,int,long) -> endNalUnit
    153:158:void nalUnitData(byte[],int,int) -> nalUnitData
    90:90:void packetStarted(long,boolean) -> packetStarted
    80:85:void seek() -> seek
    144:149:void startNalUnit(long,int,long) -> startNalUnit
    202:204:com.google.android.exoplayer.util.ParsableBitArray unescape(com.google.android.exoplayer.extractor.ts.NalUnitTargetBuffer) -> unescape
com.google.android.exoplayer.extractor.ts.H264Reader$SampleReader -> com.google.android.exoplayer.extractor.ts.H264Reader$SampleReader:
    245:255:void <init>(com.google.android.exoplayer.extractor.TrackOutput,boolean,boolean) -> <init>
    302:412:void appendToNalUnit(byte[],int,int) -> appendToNalUnit
    416:429:void endNalUnit(long,int) -> endNalUnit
    259:259:boolean needsSpsPps() -> needsSpsPps
    433:435:void outputSample(int) -> outputSample
    267:267:void putPps(com.google.android.exoplayer.util.NalUnitUtil$PpsData) -> putPps
    263:263:void putSps(com.google.android.exoplayer.util.NalUnitUtil$SpsData) -> putSps
    271:273:void reset() -> reset
    277:290:void startNalUnit(long,int,long) -> startNalUnit
com.google.android.exoplayer.extractor.ts.H264Reader$SampleReader$SliceHeaderData -> com.google.android.exoplayer.extractor.ts.H264Reader$SampleReader$SliceHeaderData:
    438:438:void <init>() -> <init>
    438:438:void <init>(com.google.android.exoplayer.extractor.ts.H264Reader$1) -> <init>
    438:438:boolean access$100(com.google.android.exoplayer.extractor.ts.H264Reader$SampleReader$SliceHeaderData,com.google.android.exoplayer.extractor.ts.H264Reader$SampleReader$SliceHeaderData) -> access$100
    462:463:void clear() -> clear
    499:499:boolean isFirstVclNalUnitOfPicture(com.google.android.exoplayer.extractor.ts.H264Reader$SampleReader$SliceHeaderData) -> isFirstVclNalUnitOfPicture
    494:494:boolean isISlice() -> isISlice
    475:490:void setAll(com.google.android.exoplayer.util.NalUnitUtil$SpsData,int,int,int,int,boolean,boolean,boolean,boolean,int,int,int,int,int) -> setAll
    467:468:void setSliceType(int) -> setSliceType
com.google.android.exoplayer.extractor.ts.H265Reader -> com.google.android.exoplayer.extractor.ts.H265Reader:
    70:79:void <init>(com.google.android.exoplayer.extractor.TrackOutput,com.google.android.exoplayer.extractor.ts.SeiReader) -> <init>
    101:138:void consume(com.google.android.exoplayer.util.ParsableByteArray) -> consume
    175:200:void endNalUnit(long,int,int,long) -> endNalUnit
    163:171:void nalUnitData(byte[],int,int) -> nalUnitData
    96:96:void packetStarted(long,boolean) -> packetStarted
    207:311:com.google.android.exoplayer.MediaFormat parseMediaFormat(com.google.android.exoplayer.extractor.ts.NalUnitTargetBuffer,com.google.android.exoplayer.extractor.ts.NalUnitTargetBuffer,com.google.android.exoplayer.extractor.ts.NalUnitTargetBuffer) -> parseMediaFormat
    84:91:void seek() -> seek
    322:332:void skipScalingList(com.google.android.exoplayer.util.ParsableBitArray) -> skipScalingList
    344:374:void skipShortTermRefPicSets(com.google.android.exoplayer.util.ParsableBitArray) -> skipShortTermRefPicSets
    151:159:void startNalUnit(long,int,int,long) -> startNalUnit
com.google.android.exoplayer.extractor.ts.H265Reader$SampleReader -> com.google.android.exoplayer.extractor.ts.H265Reader$SampleReader:
    406:407:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    456:470:void endNalUnit(long,int) -> endNalUnit
    475:477:void outputSample(int) -> outputSample
    444:450:void readNalUnitData(byte[],int,int) -> readNalUnitData
    411:415:void reset() -> reset
    419:440:void startNalUnit(long,int,int,long) -> startNalUnit
com.google.android.exoplayer.extractor.ts.Id3Reader -> com.google.android.exoplayer.extractor.ts.Id3Reader:
    41:43:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    64:82:void consume(com.google.android.exoplayer.util.ParsableByteArray) -> consume
    87:91:void packetFinished() -> packetFinished
    56:59:void packetStarted(long,boolean) -> packetStarted
    48:48:void seek() -> seek
com.google.android.exoplayer.extractor.ts.MpegAudioReader -> com.google.android.exoplayer.extractor.ts.MpegAudioReader:
    53:58:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    75:78:void consume(com.google.android.exoplayer.util.ParsableByteArray) -> consume
    108:125:void findHeader(com.google.android.exoplayer.util.ParsableByteArray) -> findHeader
    70:70:void packetStarted(long,boolean) -> packetStarted
    190:201:void readFrameRemainder(com.google.android.exoplayer.util.ParsableByteArray) -> readFrameRemainder
    145:174:void readHeaderRemainder(com.google.android.exoplayer.util.ParsableByteArray) -> readHeaderRemainder
    63:65:void seek() -> seek
com.google.android.exoplayer.extractor.ts.NalUnitTargetBuffer -> com.google.android.exoplayer.extractor.ts.NalUnitTargetBuffer:
    35:40:void <init>(int,int) -> <init>
    81:89:void appendToNalUnit(byte[],int,int) -> appendToNalUnit
    100:105:boolean endNalUnit(int) -> endNalUnit
    55:55:boolean isCompleted() -> isCompleted
    47:48:void reset() -> reset
    64:69:void startNalUnit(int) -> startNalUnit
com.google.android.exoplayer.extractor.ts.PsExtractor -> com.google.android.exoplayer.extractor.ts.PsExtractor:
    56:56:void <init>() -> <init>
    59:62:void <init>(com.google.android.exoplayer.extractor.ts.PtsTimestampAdjuster) -> <init>
    108:109:void init(com.google.android.exoplayer.extractor.ExtractorOutput) -> init
    129:217:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    114:116:void seek() -> seek
    69:102:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
com.google.android.exoplayer.extractor.ts.PsExtractor$PesReader -> com.google.android.exoplayer.extractor.ts.PsExtractor$PesReader:
    243:246:void <init>(com.google.android.exoplayer.extractor.ts.ElementaryStreamReader,com.google.android.exoplayer.extractor.ts.PtsTimestampAdjuster) -> <init>
    268:277:void consume(com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.extractor.ExtractorOutput) -> consume
    285:291:void parseHeader() -> parseHeader
    295:320:void parseHeaderExtension() -> parseHeaderExtension
    257:258:void seek() -> seek
com.google.android.exoplayer.extractor.ts.PtsTimestampAdjuster -> com.google.android.exoplayer.extractor.ts.PtsTimestampAdjuster:
    49:51:void <init>(long) -> <init>
    75:92:long adjustTimestamp(long) -> adjustTimestamp
    65:65:boolean isInitialized() -> isInitialized
    102:102:long ptsToUs(long) -> ptsToUs
    58:58:void reset() -> reset
    112:112:long usToPts(long) -> usToPts
com.google.android.exoplayer.extractor.ts.SeiReader -> com.google.android.exoplayer.extractor.ts.SeiReader:
    34:36:void <init>(com.google.android.exoplayer.extractor.TrackOutput) -> <init>
    42:60:void consume(long,com.google.android.exoplayer.util.ParsableByteArray) -> consume
com.google.android.exoplayer.extractor.ts.TsExtractor -> com.google.android.exoplayer.extractor.ts.TsExtractor:
    65:67:void <clinit>() -> <clinit>
    86:86:void <init>() -> <init>
    90:90:void <init>(com.google.android.exoplayer.extractor.ts.PtsTimestampAdjuster) -> <init>
    93:102:void <init>(com.google.android.exoplayer.extractor.ts.PtsTimestampAdjuster,int) -> <init>
    38:38:int access$100(com.google.android.exoplayer.extractor.ts.TsExtractor) -> access$100
    38:38:int access$208(com.google.android.exoplayer.extractor.ts.TsExtractor) -> access$208
    38:38:com.google.android.exoplayer.extractor.ts.PtsTimestampAdjuster access$300(com.google.android.exoplayer.extractor.ts.TsExtractor) -> access$300
    38:38:long access$400() -> access$400
    38:38:long access$500() -> access$500
    38:38:long access$600() -> access$600
    127:128:void init(com.google.android.exoplayer.extractor.ExtractorOutput) -> init
    149:227:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    133:138:void seek() -> seek
    109:117:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
com.google.android.exoplayer.extractor.ts.TsExtractor$PatReader -> com.google.android.exoplayer.extractor.ts.TsExtractor$PatReader:
    271:273:void <init>(com.google.android.exoplayer.extractor.ts.TsExtractor) -> <init>
    286:326:void consume(com.google.android.exoplayer.util.ParsableByteArray,boolean,com.google.android.exoplayer.extractor.ExtractorOutput) -> consume
com.google.android.exoplayer.extractor.ts.TsExtractor$PesReader -> com.google.android.exoplayer.extractor.ts.TsExtractor$PesReader:
    557:561:void <init>(com.google.android.exoplayer.extractor.ts.ElementaryStreamReader,com.google.android.exoplayer.extractor.ts.PtsTimestampAdjuster) -> <init>
    576:602:void consume(com.google.android.exoplayer.util.ParsableByteArray,boolean,com.google.android.exoplayer.extractor.ExtractorOutput) -> consume
    654:663:boolean continueRead(com.google.android.exoplayer.util.ParsableByteArray,byte[],int) -> continueRead
    669:692:boolean parseHeader() -> parseHeader
    699:725:void parseHeaderExtension() -> parseHeaderExtension
    566:569:void seek() -> seek
    640:641:void setState(int) -> setState
com.google.android.exoplayer.extractor.ts.TsExtractor$PmtReader -> com.google.android.exoplayer.extractor.ts.TsExtractor$PmtReader:
    347:349:void <init>(com.google.android.exoplayer.extractor.ts.TsExtractor) -> <init>
    362:483:void consume(com.google.android.exoplayer.util.ParsableByteArray,boolean,com.google.android.exoplayer.extractor.ExtractorOutput) -> consume
    497:521:int readPrivateDataStreamType(com.google.android.exoplayer.util.ParsableByteArray,int) -> readPrivateDataStreamType
com.google.android.exoplayer.extractor.ts.TsExtractor$TsPayloadReader -> com.google.android.exoplayer.extractor.ts.TsExtractor$TsPayloadReader:
    236:236:void <init>() -> <init>
    236:236:void <init>(com.google.android.exoplayer.extractor.ts.TsExtractor$1) -> <init>
com.google.android.exoplayer.extractor.wav.WavExtractor -> com.google.android.exoplayer.extractor.wav.WavExtractor:
    31:31:void <init>() -> <init>
    132:132:long getPosition(long) -> getPosition
    49:52:void init(com.google.android.exoplayer.extractor.ExtractorOutput) -> init
    69:108:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    57:57:void seek() -> seek
    44:44:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
com.google.android.exoplayer.extractor.wav.WavHeader -> com.google.android.exoplayer.extractor.wav.WavHeader:
    47:53:void <init>(int,int,int,int,int,int) -> <init>
    69:69:int getBitrate() -> getBitrate
    64:64:int getBytesPerFrame() -> getBytesPerFrame
    58:59:long getDurationUs() -> getDurationUs
    107:107:int getEncoding() -> getEncoding
    79:79:int getNumChannels() -> getNumChannels
    84:86:long getPosition(long) -> getPosition
    74:74:int getSampleRateHz() -> getSampleRateHz
    91:91:long getTimeUs(long) -> getTimeUs
    96:96:boolean hasDataBounds() -> hasDataBounds
    101:102:void setDataBounds(long,long) -> setDataBounds
com.google.android.exoplayer.extractor.wav.WavHeaderReader -> com.google.android.exoplayer.extractor.wav.WavHeaderReader:
    49:87:com.google.android.exoplayer.extractor.wav.WavHeader peek(com.google.android.exoplayer.extractor.ExtractorInput) -> peek
    124:149:void skipToData(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.wav.WavHeader) -> skipToData
com.google.android.exoplayer.extractor.wav.WavHeaderReader$ChunkHeader -> com.google.android.exoplayer.extractor.wav.WavHeaderReader$ChunkHeader:
    163:165:void <init>(int,long) -> <init>
    179:185:com.google.android.exoplayer.extractor.wav.WavHeaderReader$ChunkHeader peek(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.util.ParsableByteArray) -> peek
com.google.android.exoplayer.extractor.webm.DefaultEbmlReader -> com.google.android.exoplayer.extractor.webm.DefaultEbmlReader:
    29:44:void <init>() -> <init>
    53:53:void init(com.google.android.exoplayer.extractor.webm.EbmlReaderOutput) -> init
    149:160:long maybeResyncToNextLevel1Element(com.google.android.exoplayer.extractor.ExtractorInput) -> maybeResyncToNextLevel1Element
    65:128:boolean read(com.google.android.exoplayer.extractor.ExtractorInput) -> read
    194:199:double readFloat(com.google.android.exoplayer.extractor.ExtractorInput,int) -> readFloat
    175:178:long readInteger(com.google.android.exoplayer.extractor.ExtractorInput,int) -> readInteger
    218:220:java.lang.String readString(com.google.android.exoplayer.extractor.ExtractorInput,int) -> readString
    58:60:void reset() -> reset
com.google.android.exoplayer.extractor.webm.DefaultEbmlReader$MasterElement -> com.google.android.exoplayer.extractor.webm.DefaultEbmlReader$MasterElement:
    227:227:void <init>(int,long,com.google.android.exoplayer.extractor.webm.DefaultEbmlReader$1) -> <init>
    232:234:void <init>(int,long) -> <init>
    227:227:long access$000(com.google.android.exoplayer.extractor.webm.DefaultEbmlReader$MasterElement) -> access$000
    227:227:int access$100(com.google.android.exoplayer.extractor.webm.DefaultEbmlReader$MasterElement) -> access$100
com.google.android.exoplayer.extractor.webm.Sniffer -> com.google.android.exoplayer.extractor.webm.Sniffer:
    38:39:void <init>() -> <init>
    92:109:long readUint(com.google.android.exoplayer.extractor.ExtractorInput) -> readUint
    46:82:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
com.google.android.exoplayer.extractor.webm.VarintReader -> com.google.android.exoplayer.extractor.webm.VarintReader:
    22:22:void <clinit>() -> <clinit>
    31:32:void <init>() -> <init>
    129:134:long assembleVarint(byte[],int,boolean) -> assembleVarint
    99:99:int getLastLength() -> getLastLength
    110:111:int parseUnsignedVarintLength(int) -> parseUnsignedVarintLength
    68:92:long readUnsignedVarint(com.google.android.exoplayer.extractor.ExtractorInput,boolean,boolean,int) -> readUnsignedVarint
    39:40:void reset() -> reset
com.google.android.exoplayer.extractor.webm.WebmExtractor -> com.google.android.exoplayer.extractor.webm.WebmExtractor:
    169:203:void <clinit>() -> <clinit>
    275:275:void <init>() -> <init>
    278:291:void <init>(com.google.android.exoplayer.extractor.webm.EbmlReader) -> <init>
    56:56:java.util.UUID access$300() -> access$300
    688:829:void binaryElement(int,int,com.google.android.exoplayer.extractor.ExtractorInput) -> binaryElement
    1105:1111:com.google.android.exoplayer.extractor.SeekMap buildSeekMap() -> buildSeekMap
    839:844:void commitSampleToOutput(com.google.android.exoplayer.extractor.webm.WebmExtractor$Track,long) -> commitSampleToOutput
    476:493:void endMasterElement(int) -> endMasterElement
    1201:1206:int[] ensureArrayCapacity(int[],int) -> ensureArrayCapacity
    649:652:void floatElement(int,double) -> floatElement
    301:301:void init(com.google.android.exoplayer.extractor.ExtractorOutput) -> init
    552:573:void integerElement(int,long) -> integerElement
    1168:1192:boolean isCodecSupported(java.lang.String) -> isCodecSupported
    1144:1154:boolean maybeSeekForCues(com.google.android.exoplayer.extractor.PositionHolder,long) -> maybeSeekForCues
    321:325:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    866:874:void readScratch(com.google.android.exoplayer.extractor.ExtractorInput,int) -> readScratch
    1086:1094:int readToOutput(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.TrackOutput,int) -> readToOutput
    1071:1076:void readToTarget(com.google.android.exoplayer.extractor.ExtractorInput,byte[],int,int) -> readToTarget
    848:857:void resetSample() -> resetSample
    1161:1162:long scaleTimecodeToUs(long) -> scaleTimecodeToUs
    306:310:void seek() -> seek
    1049:1061:void setSubripSampleEndTimecode(byte[],long) -> setSubripSampleEndTimecode
    296:296:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
    426:440:void startMasterElement(int,long,long) -> startMasterElement
    671:668:void stringElement(int,java.lang.String) -> stringElement
    879:1034:void writeSampleData(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.webm.WebmExtractor$Track,int) -> writeSampleData
    1039:1043:void writeSubripSample(com.google.android.exoplayer.extractor.webm.WebmExtractor$Track) -> writeSubripSample
com.google.android.exoplayer.extractor.webm.WebmExtractor$InnerEbmlReaderOutput -> com.google.android.exoplayer.extractor.webm.WebmExtractor$InnerEbmlReaderOutput:
    1213:1213:void <init>(com.google.android.exoplayer.extractor.webm.WebmExtractor) -> <init>
    1213:1213:void <init>(com.google.android.exoplayer.extractor.webm.WebmExtractor,com.google.android.exoplayer.extractor.webm.WebmExtractor$1) -> <init>
    1254:1254:void binaryElement(int,int,com.google.android.exoplayer.extractor.ExtractorInput) -> binaryElement
    1233:1233:void endMasterElement(int) -> endMasterElement
    1243:1243:void floatElement(int,double) -> floatElement
    1217:1217:int getElementType(int) -> getElementType
    1238:1238:void integerElement(int,long) -> integerElement
    1222:1222:boolean isLevel1Element(int) -> isLevel1Element
    1228:1228:void startMasterElement(int,long,long) -> startMasterElement
    1248:1248:void stringElement(int,java.lang.String) -> stringElement
com.google.android.exoplayer.extractor.webm.WebmExtractor$Track -> com.google.android.exoplayer.extractor.webm.WebmExtractor$Track:
    1259:1288:void <init>() -> <init>
    1259:1259:void <init>(com.google.android.exoplayer.extractor.webm.WebmExtractor$1) -> <init>
    1259:1259:java.lang.String access$202(com.google.android.exoplayer.extractor.webm.WebmExtractor$Track,java.lang.String) -> access$202
    1303:1443:void initializeOutput(com.google.android.exoplayer.extractor.ExtractorOutput,int,long) -> initializeOutput
    1492:1508:android.util.Pair parseAvcCodecPrivate(com.google.android.exoplayer.util.ParsableByteArray) -> parseAvcCodecPrivate
    1457:1478:java.util.List parseFourCcVc1Private(com.google.android.exoplayer.util.ParsableByteArray) -> parseFourCcVc1Private
    1522:1561:android.util.Pair parseHevcCodecPrivate(com.google.android.exoplayer.util.ParsableByteArray) -> parseHevcCodecPrivate
    1624:1635:boolean parseMsAcmCodecPrivate(com.google.android.exoplayer.util.ParsableByteArray) -> parseMsAcmCodecPrivate
    1574:1612:java.util.List parseVorbisCodecPrivate(byte[]) -> parseVorbisCodecPrivate
com.google.android.exoplayer.hls.Aes128DataSource -> com.google.android.exoplayer.hls.Aes128DataSource:
    56:59:void <init>(com.google.android.exoplayer.upstream.DataSource,byte[],byte[]) -> <init>
    92:93:void close() -> close
    66:68:long open(com.google.android.exoplayer.upstream.DataSpec) -> open
    98:99:int read(byte[],int,int) -> read
com.google.android.exoplayer.hls.DefaultHlsTrackSelector -> com.google.android.exoplayer.hls.DefaultHlsTrackSelector:
    65:67:void <init>(android.content.Context,int) -> <init>
    53:53:com.google.android.exoplayer.hls.DefaultHlsTrackSelector newAudioInstance() -> newAudioInstance
    44:44:com.google.android.exoplayer.hls.DefaultHlsTrackSelector newDefaultInstance(android.content.Context) -> newDefaultInstance
    62:62:com.google.android.exoplayer.hls.DefaultHlsTrackSelector newSubtitleInstance() -> newSubtitleInstance
    72:76:void selectTracks(com.google.android.exoplayer.hls.HlsMasterPlaylist,com.google.android.exoplayer.hls.HlsTrackSelector$Output) -> selectTracks
    126:132:boolean variantHasExplicitCodecWithPrefix(com.google.android.exoplayer.hls.Variant,java.lang.String) -> variantHasExplicitCodecWithPrefix
com.google.android.exoplayer.hls.HlsChunkSource -> com.google.android.exoplayer.hls.HlsChunkSource:
    157:157:void <init>(boolean,com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.hls.HlsPlaylist,com.google.android.exoplayer.hls.HlsTrackSelector,com.google.android.exoplayer.upstream.BandwidthMeter,com.google.android.exoplayer.hls.PtsTimestampAdjusterProvider) -> <init>
    210:232:void <init>(boolean,com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.hls.HlsPlaylist,com.google.android.exoplayer.hls.HlsTrackSelector,com.google.android.exoplayer.upstream.BandwidthMeter,com.google.android.exoplayer.hls.PtsTimestampAdjusterProvider,long,long,android.os.Handler,com.google.android.exoplayer.hls.HlsChunkSource$EventListener) -> <init>
    56:56:com.google.android.exoplayer.hls.HlsChunkSource$EventListener access$400(com.google.android.exoplayer.hls.HlsChunkSource) -> access$400
    626:648:void adaptiveTrack(com.google.android.exoplayer.hls.HlsMasterPlaylist,com.google.android.exoplayer.hls.Variant[]) -> adaptiveTrack
    833:833:boolean allVariantsBlacklisted() -> allVariantsBlacklisted
    819:822:void clearEncryptionData() -> clearEncryptionData
    842:846:void clearStaleBlacklistedVariants() -> clearStaleBlacklistedVariants
    661:662:int computeDefaultVariantIndex(com.google.android.exoplayer.hls.HlsMasterPlaylist,com.google.android.exoplayer.hls.Variant[],com.google.android.exoplayer.upstream.BandwidthMeter) -> computeDefaultVariantIndex
    653:653:void fixedTrack(com.google.android.exoplayer.hls.HlsMasterPlaylist,com.google.android.exoplayer.hls.Variant) -> fixedTrack
    392:538:void getChunkOperation(com.google.android.exoplayer.hls.TsChunk,long,com.google.android.exoplayer.chunk.ChunkOperationHolder) -> getChunkOperation
    285:285:long getDurationUs() -> getDurationUs
    309:310:com.google.android.exoplayer.hls.Variant getFixedTrackVariant(int) -> getFixedTrackVariant
    695:720:int getLiveNextChunkSequenceNumber(int,int,int) -> getLiveNextChunkSequenceNumber
    676:678:int getLiveStartChunkSequenceNumber(int) -> getLiveStartChunkSequenceNumber
    319:319:java.lang.String getMuxedAudioLanguage() -> getMuxedAudioLanguage
    328:328:java.lang.String getMuxedCaptionLanguage() -> getMuxedCaptionLanguage
    724:754:int getNextVariantIndex(com.google.android.exoplayer.hls.TsChunk,long) -> getNextVariantIndex
    339:339:int getSelectedTrackIndex() -> getSelectedTrackIndex
    296:296:int getTrackCount() -> getTrackCount
    852:858:int getVariantIndex(com.google.android.exoplayer.chunk.Format) -> getVariantIndex
    764:773:int getVariantIndexForBandwidth(long) -> getVariantIndexForBandwidth
    274:274:boolean isLive() -> isLive
    243:244:void maybeThrowError() -> maybeThrowError
    794:795:com.google.android.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk newEncryptionKeyChunk(android.net.Uri,java.lang.String,int) -> newEncryptionKeyChunk
    786:790:com.google.android.exoplayer.hls.HlsChunkSource$MediaPlaylistChunk newMediaPlaylistChunk(int) -> newMediaPlaylistChunk
    550:566:void onChunkLoadCompleted(com.google.android.exoplayer.chunk.Chunk) -> onChunkLoadCompleted
    580:614:boolean onChunkLoadError(com.google.android.exoplayer.chunk.Chunk,java.io.IOException) -> onChunkLoadError
    254:263:boolean prepare() -> prepare
    376:376:void reset() -> reset
    365:366:void seek() -> seek
    350:356:void selectTrack(int) -> selectTrack
    800:815:void setEncryptionData(android.net.Uri,java.lang.String,byte[]) -> setEncryptionData
    826:829:void setMediaPlaylist(int,com.google.android.exoplayer.hls.HlsMediaPlaylist) -> setMediaPlaylist
    779:782:boolean shouldRerequestLiveMediaPlaylist(int) -> shouldRerequestLiveMediaPlaylist
com.google.android.exoplayer.hls.HlsChunkSource$1 -> com.google.android.exoplayer.hls.HlsChunkSource$1:
    556:556:void <init>(com.google.android.exoplayer.hls.HlsChunkSource,byte[]) -> <init>
    559:559:void run() -> run
com.google.android.exoplayer.hls.HlsChunkSource$2 -> com.google.android.exoplayer.hls.HlsChunkSource$2:
    626:627:void <init>(com.google.android.exoplayer.hls.HlsChunkSource) -> <init>
    626:626:int compare(java.lang.Object,java.lang.Object) -> compare
    631:631:int compare(com.google.android.exoplayer.hls.Variant,com.google.android.exoplayer.hls.Variant) -> compare
com.google.android.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk -> com.google.android.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk:
    933:936:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec,byte[],java.lang.String,int) -> <init>
    941:941:void consume(byte[],int) -> consume
    945:945:byte[] getResult() -> getResult
com.google.android.exoplayer.hls.HlsChunkSource$ExposedTrack -> com.google.android.exoplayer.hls.HlsChunkSource$ExposedTrack:
    871:875:void <init>(com.google.android.exoplayer.hls.Variant) -> <init>
    879:883:void <init>(com.google.android.exoplayer.hls.Variant[],int,int,int) -> <init>
    863:863:com.google.android.exoplayer.hls.Variant[] access$000(com.google.android.exoplayer.hls.HlsChunkSource$ExposedTrack) -> access$000
    863:863:int access$100(com.google.android.exoplayer.hls.HlsChunkSource$ExposedTrack) -> access$100
    863:863:int access$200(com.google.android.exoplayer.hls.HlsChunkSource$ExposedTrack) -> access$200
    863:863:int access$300(com.google.android.exoplayer.hls.HlsChunkSource$ExposedTrack) -> access$300
com.google.android.exoplayer.hls.HlsChunkSource$MediaPlaylistChunk -> com.google.android.exoplayer.hls.HlsChunkSource$MediaPlaylistChunk:
    900:904:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec,byte[],com.google.android.exoplayer.hls.HlsPlaylistParser,int,java.lang.String) -> <init>
    909:910:void consume(byte[],int) -> consume
    915:915:byte[] getRawResponse() -> getRawResponse
    919:919:com.google.android.exoplayer.hls.HlsMediaPlaylist getResult() -> getResult
com.google.android.exoplayer.hls.HlsExtractorWrapper -> com.google.android.exoplayer.hls.HlsExtractorWrapper:
    59:67:void <init>(int,com.google.android.exoplayer.chunk.Format,long,com.google.android.exoplayer.extractor.Extractor,boolean,int,int) -> <init>
    110:111:void clear() -> clear
    146:159:void configureSpliceTo(com.google.android.exoplayer.hls.HlsExtractorWrapper) -> configureSpliceTo
    211:212:void discardUntil(int,long) -> discardUntil
    263:263:void endTracks() -> endTracks
    245:246:long getAdjustedEndTimeUs() -> getAdjustedEndTimeUs
    122:123:long getLargestParsedTimestampUs() -> getLargestParsedTimestampUs
    184:185:com.google.android.exoplayer.MediaFormat getMediaFormat(int) -> getMediaFormat
    198:199:boolean getSample(int,com.google.android.exoplayer.SampleHolder) -> getSample
    171:172:int getTrackCount() -> getTrackCount
    225:226:boolean hasSamples(int) -> hasSamples
    76:77:void init(com.google.android.exoplayer.upstream.Allocator) -> init
    86:103:boolean isPrepared() -> isPrepared
    238:239:int read(com.google.android.exoplayer.extractor.ExtractorInput) -> read
    256:257:com.google.android.exoplayer.extractor.TrackOutput track(int) -> track
com.google.android.exoplayer.hls.HlsMasterPlaylist -> com.google.android.exoplayer.hls.HlsMasterPlaylist:
    36:41:void <init>(java.lang.String,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String) -> <init>
com.google.android.exoplayer.hls.HlsMediaPlaylist -> com.google.android.exoplayer.hls.HlsMediaPlaylist:
    73:84:void <init>(java.lang.String,int,int,int,boolean,java.util.List) -> <init>
com.google.android.exoplayer.hls.HlsMediaPlaylist$Segment -> com.google.android.exoplayer.hls.HlsMediaPlaylist$Segment:
    43:52:void <init>(java.lang.String,double,int,long,boolean,java.lang.String,java.lang.String,long,long) -> <init>
    29:29:int compareTo(java.lang.Object) -> compareTo
    57:57:int compareTo(java.lang.Long) -> compareTo
com.google.android.exoplayer.hls.HlsParserUtil -> com.google.android.exoplayer.hls.HlsParserUtil:
    48:48:double parseDoubleAttr(java.lang.String,java.util.regex.Pattern,java.lang.String) -> parseDoubleAttr
    43:43:int parseIntAttr(java.lang.String,java.util.regex.Pattern,java.lang.String) -> parseIntAttr
    52:54:java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern) -> parseOptionalStringAttr
    34:38:java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.lang.String) -> parseStringAttr
com.google.android.exoplayer.hls.HlsPlaylist -> com.google.android.exoplayer.hls.HlsPlaylist:
    29:31:void <init>(java.lang.String,int) -> <init>
com.google.android.exoplayer.hls.HlsPlaylistParser -> com.google.android.exoplayer.hls.HlsPlaylistParser:
    72:102:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
    38:38:java.lang.Object parse(java.lang.String,java.io.InputStream) -> parse
    111:137:com.google.android.exoplayer.hls.HlsPlaylist parse(java.lang.String,java.io.InputStream) -> parse
    144:226:com.google.android.exoplayer.hls.HlsMasterPlaylist parseMasterPlaylist(com.google.android.exoplayer.hls.HlsPlaylistParser$LineIterator,java.lang.String) -> parseMasterPlaylist
    236:311:com.google.android.exoplayer.hls.HlsMediaPlaylist parseMediaPlaylist(com.google.android.exoplayer.hls.HlsPlaylistParser$LineIterator,java.lang.String) -> parseMediaPlaylist
com.google.android.exoplayer.hls.HlsPlaylistParser$LineIterator -> com.google.android.exoplayer.hls.HlsPlaylistParser$LineIterator:
    321:323:void <init>(java.util.Queue,java.io.BufferedReader) -> <init>
    327:336:boolean hasNext() -> hasNext
    345:347:java.lang.String next() -> next
com.google.android.exoplayer.hls.HlsSampleSource -> com.google.android.exoplayer.hls.HlsSampleSource:
    118:118:void <init>(com.google.android.exoplayer.hls.HlsChunkSource,com.google.android.exoplayer.LoadControl,int,android.os.Handler,com.google.android.exoplayer.hls.HlsSampleSource$EventListener,int) -> <init>
    124:134:void <init>(com.google.android.exoplayer.hls.HlsChunkSource,com.google.android.exoplayer.LoadControl,int,android.os.Handler,com.google.android.exoplayer.hls.HlsSampleSource$EventListener,int,int) -> <init>
    43:43:int access$000(com.google.android.exoplayer.hls.HlsSampleSource) -> access$000
    43:43:com.google.android.exoplayer.hls.HlsSampleSource$EventListener access$100(com.google.android.exoplayer.hls.HlsSampleSource) -> access$100
    505:567:void buildTracks(com.google.android.exoplayer.hls.HlsExtractorWrapper) -> buildTracks
    682:685:void clearCurrentLoadable() -> clearCurrentLoadable
    673:678:void clearState() -> clearState
    256:275:boolean continueBuffering(int,long) -> continueBuffering
    598:601:com.google.android.exoplayer.MediaFormat copyWithFixedTrackInfo(com.google.android.exoplayer.MediaFormat,com.google.android.exoplayer.chunk.Format,java.lang.String) -> copyWithFixedTrackInfo
    236:249:void disable(int) -> disable
    639:644:void discardSamplesForDisabledTracks(com.google.android.exoplayer.hls.HlsExtractorWrapper,long) -> discardSamplesForDisabledTracks
    197:229:void enable(int,long) -> enable
    385:399:long getBufferedPositionUs() -> getBufferedPositionUs
    629:633:com.google.android.exoplayer.hls.HlsExtractorWrapper getCurrentExtractor() -> getCurrentExtractor
    191:192:com.google.android.exoplayer.MediaFormat getFormat(int) -> getFormat
    754:757:long getNextLoadPositionUs() -> getNextLoadPositionUs
    771:771:long getRetryDelayMillis(long) -> getRetryDelayMillis
    185:186:int getTrackCount() -> getTrackCount
    650:654:boolean haveSamplesForEnabledTracks(com.google.android.exoplayer.hls.HlsExtractorWrapper) -> haveSamplesForEnabledTracks
    767:767:boolean isPendingReset() -> isPendingReset
    763:763:boolean isTsChunk(com.google.android.exoplayer.chunk.Chunk) -> isTsChunk
    689:746:void maybeStartLoading() -> maybeStartLoading
    358:361:void maybeThrowError() -> maybeThrowError
    829:830:void notifyDownstreamFormatChanged(com.google.android.exoplayer.chunk.Format,int,long) -> notifyDownstreamFormatChanged
    806:807:void notifyLoadCanceled(long) -> notifyLoadCanceled
    794:795:void notifyLoadCompleted(long,int,int,com.google.android.exoplayer.chunk.Format,long,long,long,long) -> notifyLoadCompleted
    817:818:void notifyLoadError(java.io.IOException) -> notifyLoadError
    780:781:void notifyLoadStarted(long,int,int,com.google.android.exoplayer.chunk.Format,long,long) -> notifyLoadStarted
    441:446:void onLoadCanceled(com.google.android.exoplayer.upstream.Loader$Loadable) -> onLoadCanceled
    421:436:void onLoadCompleted(com.google.android.exoplayer.upstream.Loader$Loadable) -> onLoadCompleted
    452:464:void onLoadError(com.google.android.exoplayer.upstream.Loader$Loadable,java.io.IOException) -> onLoadError
    145:179:boolean prepare(long) -> prepare
    294:349:int readData(int,long,com.google.android.exoplayer.MediaFormatHolder,com.google.android.exoplayer.SampleHolder) -> readData
    284:286:long readDiscontinuity(int) -> readDiscontinuity
    139:139:com.google.android.exoplayer.SampleSource$SampleSourceReader register() -> register
    406:413:void release() -> release
    662:668:void restartFrom(long) -> restartFrom
    611:615:void seekToInternal(long) -> seekToInternal
    367:380:void seekToUs(long) -> seekToUs
    579:584:void setTrackEnabledState(int,boolean) -> setTrackEnabledState
    775:775:long usToMs(long) -> usToMs
com.google.android.exoplayer.hls.HlsSampleSource$1 -> com.google.android.exoplayer.hls.HlsSampleSource$1:
    781:781:void <init>(com.google.android.exoplayer.hls.HlsSampleSource,long,int,int,com.google.android.exoplayer.chunk.Format,long,long) -> <init>
    784:784:void run() -> run
com.google.android.exoplayer.hls.HlsSampleSource$2 -> com.google.android.exoplayer.hls.HlsSampleSource$2:
    795:795:void <init>(com.google.android.exoplayer.hls.HlsSampleSource,long,int,int,com.google.android.exoplayer.chunk.Format,long,long,long,long) -> <init>
    798:798:void run() -> run
com.google.android.exoplayer.hls.HlsSampleSource$3 -> com.google.android.exoplayer.hls.HlsSampleSource$3:
    807:807:void <init>(com.google.android.exoplayer.hls.HlsSampleSource,long) -> <init>
    810:810:void run() -> run
com.google.android.exoplayer.hls.HlsSampleSource$4 -> com.google.android.exoplayer.hls.HlsSampleSource$4:
    818:818:void <init>(com.google.android.exoplayer.hls.HlsSampleSource,java.io.IOException) -> <init>
    821:821:void run() -> run
com.google.android.exoplayer.hls.HlsSampleSource$5 -> com.google.android.exoplayer.hls.HlsSampleSource$5:
    830:830:void <init>(com.google.android.exoplayer.hls.HlsSampleSource,com.google.android.exoplayer.chunk.Format,int,long) -> <init>
    833:833:void run() -> run
com.google.android.exoplayer.hls.PtsTimestampAdjusterProvider -> com.google.android.exoplayer.hls.PtsTimestampAdjusterProvider:
    30:31:void <init>() -> <init>
    47:52:com.google.android.exoplayer.extractor.ts.PtsTimestampAdjuster getAdjuster(boolean,int,long) -> getAdjuster
    59:59:void reset() -> reset
com.google.android.exoplayer.hls.TsChunk -> com.google.android.exoplayer.hls.TsChunk:
    65:71:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec,int,com.google.android.exoplayer.chunk.Format,long,long,int,int,com.google.android.exoplayer.hls.HlsExtractorWrapper,byte[],byte[]) -> <init>
    145:145:com.google.android.exoplayer.upstream.DataSource buildDataSource(com.google.android.exoplayer.upstream.DataSource,byte[],byte[]) -> buildDataSource
    76:76:long bytesLoaded() -> bytesLoaded
    83:83:void cancelLoad() -> cancelLoad
    131:131:long getAdjustedEndTimeUs() -> getAdjustedEndTimeUs
    88:88:boolean isLoadCanceled() -> isLoadCanceled
    99:126:void load() -> load
com.google.android.exoplayer.hls.Variant -> com.google.android.exoplayer.hls.Variant:
    29:31:void <init>(java.lang.String,com.google.android.exoplayer.chunk.Format) -> <init>
    36:36:com.google.android.exoplayer.chunk.Format getFormat() -> getFormat
com.google.android.exoplayer.hls.WebvttExtractor -> com.google.android.exoplayer.hls.WebvttExtractor:
    48:49:void <clinit>() -> <clinit>
    59:62:void <init>(com.google.android.exoplayer.extractor.ts.PtsTimestampAdjuster) -> <init>
    164:167:com.google.android.exoplayer.extractor.TrackOutput buildTrackOutput(long) -> buildTrackOutput
    75:76:void init(com.google.android.exoplayer.extractor.ExtractorOutput) -> init
    116:160:void processSample() -> processSample
    93:111:int read(com.google.android.exoplayer.extractor.ExtractorInput,com.google.android.exoplayer.extractor.PositionHolder) -> read
    82:82:void seek() -> seek
    70:70:boolean sniff(com.google.android.exoplayer.extractor.ExtractorInput) -> sniff
com.google.android.exoplayer.metadata.MetadataTrackRenderer -> com.google.android.exoplayer.metadata.MetadataTrackRenderer:
    79:85:void <init>(com.google.android.exoplayer.SampleSource,com.google.android.exoplayer.metadata.MetadataParser,com.google.android.exoplayer.metadata.MetadataTrackRenderer$MetadataRenderer,android.os.Looper) -> <init>
    102:119:void doSomeWork(long,long,boolean) -> doSomeWork
    155:157:boolean handleMessage(android.os.Message) -> handleMessage
    90:90:boolean handlesTrack(com.google.android.exoplayer.MediaFormat) -> handlesTrack
    145:148:void invokeRenderer(java.lang.Object) -> invokeRenderer
    164:164:void invokeRendererInternal(java.lang.Object) -> invokeRendererInternal
    136:136:boolean isEnded() -> isEnded
    125:126:void onDisabled() -> onDisabled
    95:96:void onDiscontinuity(long) -> onDiscontinuity
com.google.android.exoplayer.metadata.id3.ApicFrame -> com.google.android.exoplayer.metadata.id3.ApicFrame:
    31:35:void <init>(java.lang.String,java.lang.String,int,byte[]) -> <init>
com.google.android.exoplayer.metadata.id3.BinaryFrame -> com.google.android.exoplayer.metadata.id3.BinaryFrame:
    26:27:void <init>(java.lang.String,byte[]) -> <init>
com.google.android.exoplayer.metadata.id3.GeobFrame -> com.google.android.exoplayer.metadata.id3.GeobFrame:
    31:35:void <init>(java.lang.String,java.lang.String,java.lang.String,byte[]) -> <init>
com.google.android.exoplayer.metadata.id3.Id3Frame -> com.google.android.exoplayer.metadata.id3.Id3Frame:
    28:29:void <init>(java.lang.String) -> <init>
com.google.android.exoplayer.metadata.id3.Id3Parser -> com.google.android.exoplayer.metadata.id3.Id3Parser:
    32:32:void <init>() -> <init>
    41:41:boolean canParse(java.lang.String) -> canParse
    91:106:int indexOfEos(byte[],int,int) -> indexOfEos
    110:115:int indexOfZeroByte(byte[],int) -> indexOfZeroByte
    32:32:java.lang.Object parse(byte[],int) -> parse
    46:87:java.util.List parse(byte[],int) -> parse
    221:240:com.google.android.exoplayer.metadata.id3.ApicFrame parseApicFrame(com.google.android.exoplayer.util.ParsableByteArray,int) -> parseApicFrame
    258:261:com.google.android.exoplayer.metadata.id3.BinaryFrame parseBinaryFrame(com.google.android.exoplayer.util.ParsableByteArray,int,java.lang.String) -> parseBinaryFrame
    194:216:com.google.android.exoplayer.metadata.id3.GeobFrame parseGeobFrame(com.google.android.exoplayer.util.ParsableByteArray,int) -> parseGeobFrame
    131:135:int parseId3Header(com.google.android.exoplayer.util.ParsableByteArray) -> parseId3Header
    180:189:com.google.android.exoplayer.metadata.id3.PrivFrame parsePrivFrame(com.google.android.exoplayer.util.ParsableByteArray,int) -> parsePrivFrame
    245:254:com.google.android.exoplayer.metadata.id3.TextInformationFrame parseTextInformationFrame(com.google.android.exoplayer.util.ParsableByteArray,int,java.lang.String) -> parseTextInformationFrame
    162:175:com.google.android.exoplayer.metadata.id3.TxxxFrame parseTxxxFrame(com.google.android.exoplayer.util.ParsableByteArray,int) -> parseTxxxFrame
com.google.android.exoplayer.metadata.id3.PrivFrame -> com.google.android.exoplayer.metadata.id3.PrivFrame:
    29:31:void <init>(java.lang.String,byte[]) -> <init>
com.google.android.exoplayer.metadata.id3.TextInformationFrame -> com.google.android.exoplayer.metadata.id3.TextInformationFrame:
    26:27:void <init>(java.lang.String,java.lang.String) -> <init>
com.google.android.exoplayer.metadata.id3.TxxxFrame -> com.google.android.exoplayer.metadata.id3.TxxxFrame:
    29:31:void <init>(java.lang.String,java.lang.String) -> <init>
com.google.android.exoplayer.smoothstreaming.DefaultSmoothStreamingTrackSelector -> com.google.android.exoplayer.smoothstreaming.DefaultSmoothStreamingTrackSelector:
    62:66:void <init>(int,android.content.Context,boolean,boolean) -> <init>
    54:54:com.google.android.exoplayer.smoothstreaming.DefaultSmoothStreamingTrackSelector newAudioInstance() -> newAudioInstance
    58:58:com.google.android.exoplayer.smoothstreaming.DefaultSmoothStreamingTrackSelector newTextInstance() -> newTextInstance
    49:49:com.google.android.exoplayer.smoothstreaming.DefaultSmoothStreamingTrackSelector newVideoInstance(android.content.Context,boolean,boolean) -> newVideoInstance
    71:92:void selectTracks(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest,com.google.android.exoplayer.smoothstreaming.SmoothStreamingTrackSelector$Output) -> selectTracks
com.google.android.exoplayer.smoothstreaming.SmoothStreamingChunkSource -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingChunkSource:
    108:108:void <init>(com.google.android.exoplayer.util.ManifestFetcher,com.google.android.exoplayer.smoothstreaming.SmoothStreamingTrackSelector,com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.chunk.FormatEvaluator,long) -> <init>
    128:151:void <init>(com.google.android.exoplayer.util.ManifestFetcher,com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest,com.google.android.exoplayer.smoothstreaming.SmoothStreamingTrackSelector,com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.chunk.FormatEvaluator,long) -> <init>
    351:372:void adaptiveTrack(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest,int,int[]) -> adaptiveTrack
    202:232:void continueBuffering(long) -> continueBuffering
    337:344:void disable(java.util.List) -> disable
    191:196:void enable(int) -> enable
    377:379:void fixedTrack(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest,int,int) -> fixedTrack
    239:322:void getChunkOperation(java.util.List,long,com.google.android.exoplayer.chunk.ChunkOperationHolder) -> getChunkOperation
    186:186:com.google.android.exoplayer.MediaFormat getFormat(int) -> getFormat
    452:458:long getLiveSeekPosition(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest,long) -> getLiveSeekPosition
    465:472:int getManifestTrackIndex(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest$StreamElement,com.google.android.exoplayer.chunk.Format) -> getManifestTrackIndex
    489:489:int getManifestTrackKey(int,int) -> getManifestTrackKey
    494:505:byte[] getProtectionElementKeyId(byte[]) -> getProtectionElementKeyId
    181:181:int getTrackCount() -> getTrackCount
    386:437:com.google.android.exoplayer.MediaFormat initManifestTrack(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest,int,int) -> initManifestTrack
    159:160:void maybeThrowError() -> maybeThrowError
    480:483:com.google.android.exoplayer.chunk.MediaChunk newMediaChunk(com.google.android.exoplayer.chunk.Format,android.net.Uri,java.lang.String,com.google.android.exoplayer.chunk.ChunkExtractorWrapper,com.google.android.exoplayer.drm.DrmInitData,com.google.android.exoplayer.upstream.DataSource,int,long,long,int,com.google.android.exoplayer.MediaFormat,int,int) -> newMediaChunk
    168:176:boolean prepare() -> prepare
    510:512:void swap(byte[],int,int) -> swap
com.google.android.exoplayer.smoothstreaming.SmoothStreamingChunkSource$ExposedTrack -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingChunkSource$ExposedTrack:
    531:537:void <init>(com.google.android.exoplayer.MediaFormat,int,com.google.android.exoplayer.chunk.Format) -> <init>
    541:547:void <init>(com.google.android.exoplayer.MediaFormat,int,com.google.android.exoplayer.chunk.Format[],int,int) -> <init>
    517:517:int access$000(com.google.android.exoplayer.smoothstreaming.SmoothStreamingChunkSource$ExposedTrack) -> access$000
    517:517:com.google.android.exoplayer.chunk.Format[] access$100(com.google.android.exoplayer.smoothstreaming.SmoothStreamingChunkSource$ExposedTrack) -> access$100
    517:517:com.google.android.exoplayer.chunk.Format access$200(com.google.android.exoplayer.smoothstreaming.SmoothStreamingChunkSource$ExposedTrack) -> access$200
    517:517:int access$300(com.google.android.exoplayer.smoothstreaming.SmoothStreamingChunkSource$ExposedTrack) -> access$300
    517:517:int access$400(com.google.android.exoplayer.smoothstreaming.SmoothStreamingChunkSource$ExposedTrack) -> access$400
    551:551:boolean isAdaptive() -> isAdaptive
com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest:
    96:106:void <init>(int,int,long,long,long,int,boolean,com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest$ProtectionElement,com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest$StreamElement[]) -> <init>
com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest$ProtectionElement -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest$ProtectionElement:
    117:119:void <init>(java.util.UUID,byte[]) -> <init>
com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest$StreamElement -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest$StreamElement:
    182:201:void <init>(java.lang.String,java.lang.String,int,java.lang.String,long,java.lang.String,int,int,int,int,int,java.lang.String,com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest$TrackElement[],java.util.List,long) -> <init>
    243:249:android.net.Uri buildRequestUri(int,int) -> buildRequestUri
    231:231:long getChunkDurationUs(int) -> getChunkDurationUs
    211:211:int getChunkIndex(long) -> getChunkIndex
    221:221:long getStartTimeUs(int) -> getStartTimeUs
com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest$TrackElement -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest$TrackElement:
    133:135:void <init>(int,int,java.lang.String,byte[][],int,int,int,int,java.lang.String) -> <init>
    141:141:com.google.android.exoplayer.chunk.Format getFormat() -> getFormat
com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser:
    50:54:void <init>() -> <init>
    46:46:java.lang.Object parse(java.lang.String,java.io.InputStream) -> parse
    62:68:com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest parse(java.lang.String,java.io.InputStream) -> parse
com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$ElementParser -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$ElementParser:
    94:98:void <init>(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$ElementParser,java.lang.String,java.lang.String) -> <init>
    191:197:java.lang.Object getNormalizedAttribute(java.lang.String) -> getNormalizedAttribute
    158:163:com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$ElementParser newChildParser(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$ElementParser,java.lang.String,java.lang.String) -> newChildParser
    107:153:java.lang.Object parse(org.xmlpull.v1.XmlPullParser) -> parse
    309:311:boolean parseBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean) -> parseBoolean
    255:260:int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> parseInt
    282:287:long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long) -> parseLong
    268:276:int parseRequiredInt(org.xmlpull.v1.XmlPullParser,java.lang.String) -> parseRequiredInt
    296:304:long parseRequiredLong(org.xmlpull.v1.XmlPullParser,java.lang.String) -> parseRequiredLong
    245:249:java.lang.String parseRequiredString(org.xmlpull.v1.XmlPullParser,java.lang.String) -> parseRequiredString
    180:180:void putNormalizedAttribute(java.lang.String,java.lang.Object) -> putNormalizedAttribute
com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$MissingFieldException -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$MissingFieldException:
    78:78:void <init>(java.lang.String) -> <init>
com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$ProtectionElementParser -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$ProtectionElementParser:
    392:392:void <init>(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$ElementParser,java.lang.String) -> <init>
    426:426:java.lang.Object build() -> build
    397:397:boolean handleChildInline(java.lang.String) -> handleChildInline
    419:420:void parseEndTag(org.xmlpull.v1.XmlPullParser) -> parseEndTag
    402:406:void parseStartTag(org.xmlpull.v1.XmlPullParser) -> parseStartTag
    412:413:void parseText(org.xmlpull.v1.XmlPullParser) -> parseText
    430:431:java.lang.String stripCurlyBraces(java.lang.String) -> stripCurlyBraces
com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$SmoothStreamMediaParser -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$SmoothStreamMediaParser:
    342:345:void <init>(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$ElementParser,java.lang.String) -> <init>
    362:366:void addChild(java.lang.Object) -> addChild
    372:374:java.lang.Object build() -> build
    350:357:void parseStartTag(org.xmlpull.v1.XmlPullParser) -> parseStartTag
com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$StreamElementParser -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$StreamElementParser:
    480:482:void <init>(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$ElementParser,java.lang.String) -> <init>
    570:571:void addChild(java.lang.Object) -> addChild
    577:579:java.lang.Object build() -> build
    487:487:boolean handleChildInline(java.lang.String) -> handleChildInline
    492:495:void parseStartTag(org.xmlpull.v1.XmlPullParser) -> parseStartTag
    529:549:void parseStreamElementStartTag(org.xmlpull.v1.XmlPullParser) -> parseStreamElementStartTag
    500:524:void parseStreamFragmentStartTag(org.xmlpull.v1.XmlPullParser) -> parseStreamFragmentStartTag
    553:565:int parseType(org.xmlpull.v1.XmlPullParser) -> parseType
com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$TrackElementParser -> com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$TrackElementParser:
    613:614:void <init>(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifestParser$ElementParser,java.lang.String) -> <init>
    664:668:java.lang.Object build() -> build
    673:691:java.lang.String fourCCToMimeType(java.lang.String) -> fourCCToMimeType
    619:655:void parseStartTag(org.xmlpull.v1.XmlPullParser) -> parseStartTag
com.google.android.exoplayer.text.CaptionStyleCompat -> com.google.android.exoplayer.text.CaptionStyleCompat:
    63:63:void <clinit>() -> <clinit>
    130:136:void <init>(int,int,int,int,int,android.graphics.Typeface) -> <init>
com.google.android.exoplayer.text.Cue -> com.google.android.exoplayer.text.Cue:
    121:121:void <init>() -> <init>
    125:125:void <init>(java.lang.CharSequence) -> <init>
    129:137:void <init>(java.lang.CharSequence,android.text.Layout$Alignment,float,int,int,float,int,float) -> <init>
com.google.android.exoplayer.text.CuePainter -> com.google.android.exoplayer.text.CuePainter:
    91:112:void <init>(android.content.Context) -> <init>
    352:352:boolean areCharSequencesEqual(java.lang.CharSequence,java.lang.CharSequence) -> areCharSequencesEqual
    137:277:void draw(com.google.android.exoplayer.text.Cue,boolean,com.google.android.exoplayer.text.CaptionStyleCompat,float,float,android.graphics.Canvas,int,int,int,int) -> draw
    286:341:void drawLayout(android.graphics.Canvas) -> drawLayout
com.google.android.exoplayer.text.PlayableSubtitle -> com.google.android.exoplayer.text.PlayableSubtitle:
    44:47:void <init>(com.google.android.exoplayer.text.Subtitle,boolean,long,long) -> <init>
    72:72:java.util.List getCues(long) -> getCues
    57:57:long getEventTime(int) -> getEventTime
    52:52:int getEventTimeCount() -> getEventTimeCount
    67:67:int getNextEventTimeIndex(long) -> getNextEventTimeIndex
com.google.android.exoplayer.text.SubtitleLayout -> com.google.android.exoplayer.text.SubtitleLayout:
    61:61:void <init>(android.content.Context) -> <init>
    65:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    195:217:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    153:158:void setApplyEmbeddedStyles(boolean) -> setApplyEmbeddedStyles
    185:190:void setBottomPaddingFraction(float) -> setBottomPaddingFraction
    80:90:void setCues(java.util.List) -> setCues
    102:109:void setFixedTextSize(int,float) -> setFixedTextSize
    121:121:void setFractionalTextSize(float) -> setFractionalTextSize
    134:134:void setFractionalTextSize(float,boolean) -> setFractionalTextSize
    167:172:void setStyle(com.google.android.exoplayer.text.CaptionStyleCompat) -> setStyle
    138:144:void setTextSize(int,float) -> setTextSize
com.google.android.exoplayer.text.SubtitleParserHelper -> com.google.android.exoplayer.text.SubtitleParserHelper:
    54:57:void <init>(android.os.Looper,com.google.android.exoplayer.text.SubtitleParser) -> <init>
    64:69:void flush() -> flush
    129:139:com.google.android.exoplayer.text.PlayableSubtitle getAndClearResult() -> getAndClearResult
    90:90:com.google.android.exoplayer.SampleHolder getSampleHolder() -> getSampleHolder
    159:160:void handleFormat(com.google.android.exoplayer.MediaFormat) -> handleFormat
    145:147:boolean handleMessage(android.os.Message) -> handleMessage
    168:184:void handleSample(long,com.google.android.exoplayer.SampleHolder) -> handleSample
    77:77:boolean isParsing() -> isParsing
    99:99:void setFormat(com.google.android.exoplayer.MediaFormat) -> setFormat
    109:116:void startParseOperation() -> startParseOperation
com.google.android.exoplayer.text.TextTrackRenderer -> com.google.android.exoplayer.text.TextTrackRenderer:
    70:103:void <clinit>() -> <clinit>
    137:137:void <init>(com.google.android.exoplayer.SampleSource,com.google.android.exoplayer.text.TextRenderer,android.os.Looper,com.google.android.exoplayer.text.SubtitleParser[]) -> <init>
    153:170:void <init>(com.google.android.exoplayer.SampleSource[],com.google.android.exoplayer.text.TextRenderer,android.os.Looper,com.google.android.exoplayer.text.SubtitleParser[]) -> <init>
    299:299:void clearTextRenderer() -> clearTextRenderer
    202:250:void doSomeWork(long,long,boolean) -> doSomeWork
    285:287:long getNextEventTime() -> getNextEventTime
    318:319:int getParserIndex(com.google.android.exoplayer.MediaFormat) -> getParserIndex
    305:307:boolean handleMessage(android.os.Message) -> handleMessage
    175:175:boolean handlesTrack(com.google.android.exoplayer.MediaFormat) -> handlesTrack
    314:314:void invokeRendererInternalCues(java.util.List) -> invokeRendererInternalCues
    274:274:boolean isEnded() -> isEnded
    257:263:void onDisabled() -> onDisabled
    190:195:void onDiscontinuity(long) -> onDiscontinuity
    181:185:void onEnabled(int,long,boolean) -> onEnabled
    291:294:void updateTextRenderer(java.util.List) -> updateTextRenderer
com.google.android.exoplayer.text.eia608.ClosedCaption -> com.google.android.exoplayer.text.eia608.ClosedCaption:
    37:38:void <init>(int) -> <init>
com.google.android.exoplayer.text.eia608.ClosedCaptionCtrl -> com.google.android.exoplayer.text.eia608.ClosedCaptionCtrl:
    76:78:void <init>(byte,byte) -> <init>
    86:86:boolean isMiscCode() -> isMiscCode
    94:94:boolean isPreambleAddressCode() -> isPreambleAddressCode
    98:98:boolean isRepeatable() -> isRepeatable
com.google.android.exoplayer.text.eia608.ClosedCaptionList -> com.google.android.exoplayer.text.eia608.ClosedCaptionList:
    24:27:void <init>(long,boolean,com.google.android.exoplayer.text.eia608.ClosedCaption[]) -> <init>
    18:18:int compareTo(java.lang.Object) -> compareTo
    32:32:int compareTo(com.google.android.exoplayer.text.eia608.ClosedCaptionList) -> compareTo
com.google.android.exoplayer.text.eia608.ClosedCaptionText -> com.google.android.exoplayer.text.eia608.ClosedCaptionText:
    23:24:void <init>(java.lang.String) -> <init>
com.google.android.exoplayer.text.eia608.Eia608Parser -> com.google.android.exoplayer.text.eia608.Eia608Parser:
    37:95:void <clinit>() -> <clinit>
    108:111:void <init>() -> <init>
    226:228:void addBufferedText() -> addBufferedText
    233:234:void addCtrl(byte,byte) -> addCtrl
    238:238:void backspace() -> backspace
    115:115:boolean canParse(java.lang.String) -> canParse
    207:207:char getChar(byte) -> getChar
    217:217:char getExtendedEsFrChar(byte) -> getExtendedEsFrChar
    222:222:char getExtendedPtDeChar(byte) -> getExtendedPtDeChar
    212:212:char getSpecialChar(byte) -> getSpecialChar
    256:261:boolean isSeiMessageEia608(int,int,com.google.android.exoplayer.util.ParsableByteArray) -> isSeiMessageEia608
    119:202:com.google.android.exoplayer.text.eia608.ClosedCaptionList parse(com.google.android.exoplayer.SampleHolder) -> parse
com.google.android.exoplayer.text.eia608.Eia608TrackRenderer -> com.google.android.exoplayer.text.eia608.Eia608TrackRenderer:
    80:87:void <init>(com.google.android.exoplayer.SampleSource,com.google.android.exoplayer.text.TextRenderer,android.os.Looper) -> <init>
    353:354:void clearPendingSample() -> clearPendingSample
    204:237:void consumeCaptionList(com.google.android.exoplayer.text.eia608.ClosedCaptionList) -> consumeCaptionList
    115:139:void doSomeWork(long,long,boolean) -> doSomeWork
    325:349:java.lang.String getDisplayCaption() -> getDisplayCaption
    175:177:boolean handleMessage(android.os.Message) -> handleMessage
    248:262:void handleMiscCode(com.google.android.exoplayer.text.eia608.ClosedCaptionCtrl) -> handleMiscCode
    300:300:void handlePreambleAddressCode() -> handlePreambleAddressCode
    242:243:void handleText(com.google.android.exoplayer.text.eia608.ClosedCaptionText) -> handleText
    92:92:boolean handlesTrack(com.google.android.exoplayer.MediaFormat) -> handlesTrack
    160:168:void invokeRenderer(java.lang.String) -> invokeRenderer
    185:187:void invokeRendererInternal(java.lang.String) -> invokeRendererInternal
    151:151:boolean isEnded() -> isEnded
    358:358:boolean isSamplePending() -> isSamplePending
    318:320:void maybeAppendNewline() -> maybeAppendNewline
    192:199:void maybeParsePendingSample(long) -> maybeParsePendingSample
    103:109:void onDiscontinuity(long) -> onDiscontinuity
    98:98:void onEnabled(int,long,boolean) -> onEnabled
    304:313:void setCaptionMode(int) -> setCaptionMode
com.google.android.exoplayer.text.subrip.SubripParser -> com.google.android.exoplayer.text.subrip.SubripParser:
    38:40:void <clinit>() -> <clinit>
    44:45:void <init>() -> <init>
    50:50:boolean canParse(java.lang.String) -> canParse
    34:34:com.google.android.exoplayer.text.Subtitle parse(byte[],int,int) -> parse
    55:111:com.google.android.exoplayer.text.subrip.SubripSubtitle parse(byte[],int,int) -> parse
    115:117:long parseTimecode(java.lang.String) -> parseTimecode
com.google.android.exoplayer.text.subrip.SubripSubtitle -> com.google.android.exoplayer.text.subrip.SubripSubtitle:
    37:39:void <init>(com.google.android.exoplayer.text.Cue[],long[]) -> <init>
    70:73:java.util.List getCues(long) -> getCues
    55:57:long getEventTime(int) -> getEventTime
    50:50:int getEventTimeCount() -> getEventTimeCount
    44:45:int getNextEventTimeIndex(long) -> getNextEventTimeIndex
com.google.android.exoplayer.text.ttml.TtmlColorParser -> com.google.android.exoplayer.text.ttml.TtmlColorParser:
    35:82:void <clinit>() -> <clinit>
    86:127:int parseColor(java.lang.String) -> parseColor
    135:135:int rgb(int,int,int) -> rgb
com.google.android.exoplayer.text.ttml.TtmlNode -> com.google.android.exoplayer.text.ttml.TtmlNode:
    102:112:void <init>(java.lang.String,java.lang.String,long,long,com.google.android.exoplayer.text.ttml.TtmlStyle,java.lang.String[],java.lang.String) -> <init>
    123:126:void addChild(com.google.android.exoplayer.text.ttml.TtmlNode) -> addChild
    242:244:void applyStyleToOutput(java.util.Map,android.text.SpannableStringBuilder,int,int) -> applyStyleToOutput
    98:98:com.google.android.exoplayer.text.ttml.TtmlNode buildNode(java.lang.String,long,long,com.google.android.exoplayer.text.ttml.TtmlStyle,java.lang.String[],java.lang.String) -> buildNode
    92:92:com.google.android.exoplayer.text.ttml.TtmlNode buildTextNode(java.lang.String) -> buildTextNode
    252:290:android.text.SpannableStringBuilder cleanUpText(android.text.SpannableStringBuilder) -> cleanUpText
    130:131:com.google.android.exoplayer.text.ttml.TtmlNode getChild(int) -> getChild
    137:137:int getChildCount() -> getChildCount
    175:181:java.util.List getCues(long,java.util.Map,java.util.Map) -> getCues
    152:165:void getEventTimes(java.util.TreeSet,boolean) -> getEventTimes
    141:146:long[] getEventTimesUs() -> getEventTimesUs
    221:224:android.text.SpannableStringBuilder getRegionOutput(java.lang.String,java.util.Map) -> getRegionOutput
    116:116:boolean isActive(long) -> isActive
    229:234:void traverseForStyle(java.util.Map,java.util.Map) -> traverseForStyle
    189:214:void traverseForText(long,boolean,java.lang.String,java.util.Map) -> traverseForText
com.google.android.exoplayer.text.ttml.TtmlParser -> com.google.android.exoplayer.text.ttml.TtmlParser:
    72:82:void <clinit>() -> <clinit>
    87:92:void <init>() -> <init>
    98:98:boolean canParse(java.lang.String) -> canParse
    358:358:com.google.android.exoplayer.text.ttml.TtmlStyle createIfNull(com.google.android.exoplayer.text.ttml.TtmlStyle) -> createIfNull
    414:428:boolean isSupportedTag(java.lang.String) -> isSupportedTag
    59:59:com.google.android.exoplayer.text.Subtitle parse(byte[],int,int) -> parse
    104:161:com.google.android.exoplayer.text.ttml.TtmlSubtitle parse(byte[],int,int) -> parse
    435:444:void parseFontSize(java.lang.String,com.google.android.exoplayer.text.ttml.TtmlStyle) -> parseFontSize
    169:197:com.google.android.exoplayer.text.ttml.TtmlParser$FrameAndTickRate parseFrameAndTickRates(org.xmlpull.v1.XmlPullParser) -> parseFrameAndTickRates
    204:223:java.util.Map parseHeader(org.xmlpull.v1.XmlPullParser,java.util.Map,java.util.Map) -> parseHeader
    368:410:com.google.android.exoplayer.text.ttml.TtmlNode parseNode(org.xmlpull.v1.XmlPullParser,com.google.android.exoplayer.text.ttml.TtmlNode,java.util.Map,com.google.android.exoplayer.text.ttml.TtmlParser$FrameAndTickRate) -> parseNode
    232:261:android.util.Pair parseRegionAttributes(org.xmlpull.v1.XmlPullParser) -> parseRegionAttributes
    270:276:com.google.android.exoplayer.text.ttml.TtmlStyle parseStyleAttributes(org.xmlpull.v1.XmlPullParser,com.google.android.exoplayer.text.ttml.TtmlStyle) -> parseStyleAttributes
    266:266:java.lang.String[] parseStyleIds(java.lang.String) -> parseStyleIds
    482:522:long parseTimeExpression(java.lang.String,com.google.android.exoplayer.text.ttml.TtmlParser$FrameAndTickRate) -> parseTimeExpression
com.google.android.exoplayer.text.ttml.TtmlParser$FrameAndTickRate -> com.google.android.exoplayer.text.ttml.TtmlParser$FrameAndTickRate:
    530:533:void <init>(float,int,int) -> <init>
com.google.android.exoplayer.text.ttml.TtmlRegion -> com.google.android.exoplayer.text.ttml.TtmlRegion:
    31:31:void <init>() -> <init>
    34:38:void <init>(float,float,int,float) -> <init>
com.google.android.exoplayer.text.ttml.TtmlRenderUtil -> com.google.android.exoplayer.text.ttml.TtmlRenderUtil:
    69:98:void applyStylesToSpan(android.text.SpannableStringBuilder,int,int,com.google.android.exoplayer.text.ttml.TtmlStyle) -> applyStylesToSpan
    137:144:java.lang.String applyTextElementSpacePolicy(java.lang.String) -> applyTextElementSpacePolicy
    120:125:void endParagraph(android.text.SpannableStringBuilder) -> endParagraph
    42:58:com.google.android.exoplayer.text.ttml.TtmlStyle resolveStyle(com.google.android.exoplayer.text.ttml.TtmlStyle,java.lang.String[],java.util.Map) -> resolveStyle
com.google.android.exoplayer.text.ttml.TtmlStyle -> com.google.android.exoplayer.text.ttml.TtmlStyle:
    56:61:void <init>() -> <init>
    173:173:com.google.android.exoplayer.text.ttml.TtmlStyle chain(com.google.android.exoplayer.text.ttml.TtmlStyle) -> chain
    127:128:int getBackgroundColor() -> getBackgroundColor
    109:110:int getFontColor() -> getFontColor
    99:99:java.lang.String getFontFamily() -> getFontFamily
    244:244:float getFontSize() -> getFontSize
    240:240:int getFontSizeUnit() -> getFontSizeUnit
    217:217:java.lang.String getId() -> getId
    71:74:int getStyle() -> getStyle
    221:221:android.text.Layout$Alignment getTextAlign() -> getTextAlign
    140:140:boolean hasBackgroundColor() -> hasBackgroundColor
    123:123:boolean hasFontColor() -> hasFontColor
    178:205:com.google.android.exoplayer.text.ttml.TtmlStyle inherit(com.google.android.exoplayer.text.ttml.TtmlStyle,boolean) -> inherit
    79:79:boolean isLinethrough() -> isLinethrough
    89:89:boolean isUnderline() -> isUnderline
    134:135:com.google.android.exoplayer.text.ttml.TtmlStyle setBackgroundColor(int) -> setBackgroundColor
    144:145:com.google.android.exoplayer.text.ttml.TtmlStyle setBold(boolean) -> setBold
    116:118:com.google.android.exoplayer.text.ttml.TtmlStyle setFontColor(int) -> setFontColor
    103:104:com.google.android.exoplayer.text.ttml.TtmlStyle setFontFamily(java.lang.String) -> setFontFamily
    230:230:com.google.android.exoplayer.text.ttml.TtmlStyle setFontSize(float) -> setFontSize
    235:235:com.google.android.exoplayer.text.ttml.TtmlStyle setFontSizeUnit(int) -> setFontSizeUnit
    212:212:com.google.android.exoplayer.text.ttml.TtmlStyle setId(java.lang.String) -> setId
    150:151:com.google.android.exoplayer.text.ttml.TtmlStyle setItalic(boolean) -> setItalic
    83:84:com.google.android.exoplayer.text.ttml.TtmlStyle setLinethrough(boolean) -> setLinethrough
    225:225:com.google.android.exoplayer.text.ttml.TtmlStyle setTextAlign(android.text.Layout$Alignment) -> setTextAlign
    93:94:com.google.android.exoplayer.text.ttml.TtmlStyle setUnderline(boolean) -> setUnderline
com.google.android.exoplayer.text.ttml.TtmlSubtitle -> com.google.android.exoplayer.text.ttml.TtmlSubtitle:
    36:41:void <init>(com.google.android.exoplayer.text.ttml.TtmlNode,java.util.Map,java.util.Map) -> <init>
    72:72:java.util.List getCues(long) -> getCues
    57:57:long getEventTime(int) -> getEventTime
    52:52:int getEventTimeCount() -> getEventTimeCount
    46:47:int getNextEventTimeIndex(long) -> getNextEventTimeIndex
com.google.android.exoplayer.text.tx3g.Tx3gParser -> com.google.android.exoplayer.text.tx3g.Tx3gParser:
    33:34:void <init>() -> <init>
    39:39:boolean canParse(java.lang.String) -> canParse
    44:50:com.google.android.exoplayer.text.Subtitle parse(byte[],int,int) -> parse
com.google.android.exoplayer.text.tx3g.Tx3gSubtitle -> com.google.android.exoplayer.text.tx3g.Tx3gSubtitle:
    29:29:void <clinit>() -> <clinit>
    33:34:void <init>(com.google.android.exoplayer.text.Cue) -> <init>
    37:38:void <init>() -> <init>
    64:64:java.util.List getCues(long) -> getCues
    53:53:long getEventTime(int) -> getEventTime
com.google.android.exoplayer.text.webvtt.Mp4WebvttParser -> com.google.android.exoplayer.text.webvtt.Mp4WebvttParser:
    34:36:void <clinit>() -> <clinit>
    41:43:void <init>() -> <init>
    48:48:boolean canParse(java.lang.String) -> canParse
    30:30:com.google.android.exoplayer.text.Subtitle parse(byte[],int,int) -> parse
    55:71:com.google.android.exoplayer.text.webvtt.Mp4WebvttSubtitle parse(byte[],int,int) -> parse
    76:96:com.google.android.exoplayer.text.Cue parseVttCueBox(com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.text.webvtt.WebvttCue$Builder,int) -> parseVttCueBox
com.google.android.exoplayer.text.webvtt.Mp4WebvttSubtitle -> com.google.android.exoplayer.text.webvtt.Mp4WebvttSubtitle:
    31:32:void <init>(java.util.List) -> <init>
    58:58:java.util.List getCues(long) -> getCues
    47:47:long getEventTime(int) -> getEventTime
com.google.android.exoplayer.text.webvtt.WebvttCue -> com.google.android.exoplayer.text.webvtt.WebvttCue:
    31:31:void <init>(java.lang.CharSequence) -> <init>
    35:35:void <init>(long,long,java.lang.CharSequence) -> <init>
    41:43:void <init>(long,long,java.lang.CharSequence,android.text.Layout$Alignment,float,int,int,float,int,float) -> <init>
    53:53:boolean isNormalCue() -> isNormalCue
com.google.android.exoplayer.text.webvtt.WebvttCue$1 -> com.google.android.exoplayer.text.webvtt.WebvttCue$1:
    158:158:void <clinit>() -> <clinit>
com.google.android.exoplayer.text.webvtt.WebvttCue$Builder -> com.google.android.exoplayer.text.webvtt.WebvttCue$Builder:
    77:78:void <init>() -> <init>
    97:100:com.google.android.exoplayer.text.webvtt.WebvttCue build() -> build
    155:160:com.google.android.exoplayer.text.webvtt.WebvttCue$Builder derivePositionAnchorFromAlignment() -> derivePositionAnchorFromAlignment
    82:91:void reset() -> reset
    110:110:com.google.android.exoplayer.text.webvtt.WebvttCue$Builder setEndTime(long) -> setEndTime
    125:125:com.google.android.exoplayer.text.webvtt.WebvttCue$Builder setLine(float) -> setLine
    135:135:com.google.android.exoplayer.text.webvtt.WebvttCue$Builder setLineAnchor(int) -> setLineAnchor
    130:130:com.google.android.exoplayer.text.webvtt.WebvttCue$Builder setLineType(int) -> setLineType
    140:140:com.google.android.exoplayer.text.webvtt.WebvttCue$Builder setPosition(float) -> setPosition
    145:145:com.google.android.exoplayer.text.webvtt.WebvttCue$Builder setPositionAnchor(int) -> setPositionAnchor
    105:105:com.google.android.exoplayer.text.webvtt.WebvttCue$Builder setStartTime(long) -> setStartTime
    115:115:com.google.android.exoplayer.text.webvtt.WebvttCue$Builder setText(java.lang.CharSequence) -> setText
    120:120:com.google.android.exoplayer.text.webvtt.WebvttCue$Builder setTextAlignment(android.text.Layout$Alignment) -> setTextAlignment
    150:150:com.google.android.exoplayer.text.webvtt.WebvttCue$Builder setWidth(float) -> setWidth
com.google.android.exoplayer.text.webvtt.WebvttCueParser -> com.google.android.exoplayer.text.webvtt.WebvttCueParser:
    37:40:void <clinit>() -> <clinit>
    69:70:void <init>() -> <init>
    317:319:void applyEntity(java.lang.String,android.text.SpannableStringBuilder) -> applyEntity
    351:353:void applySpansForTag(com.google.android.exoplayer.text.webvtt.WebvttCueParser$StartTag,android.text.SpannableStringBuilder) -> applySpansForTag
    312:313:int findEndOfTag(java.lang.String,int) -> findEndOfTag
    131:137:java.util.regex.Matcher findNextCueHeader(com.google.android.exoplayer.util.ParsableByteArray) -> findNextCueHeader
    337:337:boolean isSupportedTag(java.lang.String) -> isSupportedTag
    220:223:boolean parseCue(java.util.regex.Matcher,com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.text.webvtt.WebvttCue$Builder,java.lang.StringBuilder) -> parseCue
    99:116:void parseCueSettingsList(java.lang.String,com.google.android.exoplayer.text.webvtt.WebvttCue$Builder) -> parseCueSettingsList
    152:213:void parseCueText(java.lang.String,com.google.android.exoplayer.text.webvtt.WebvttCue$Builder) -> parseCueText
    246:256:void parseLineAttribute(java.lang.String,com.google.android.exoplayer.text.webvtt.WebvttCue$Builder) -> parseLineAttribute
    82:83:boolean parseNextValidCue(com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.text.webvtt.WebvttCue$Builder) -> parseNextValidCue
    273:282:int parsePositionAnchor(java.lang.String) -> parsePositionAnchor
    262:269:void parsePositionAttribute(java.lang.String,com.google.android.exoplayer.text.webvtt.WebvttCue$Builder) -> parsePositionAttribute
    288:291:android.text.Layout$Alignment parseTextAlignment(java.lang.String) -> parseTextAlignment
    377:384:java.lang.String[] tokenizeTag(java.lang.String) -> tokenizeTag
com.google.android.exoplayer.text.webvtt.WebvttCueParser$StartTag -> com.google.android.exoplayer.text.webvtt.WebvttCueParser$StartTag:
    392:394:void <init>(java.lang.String,int) -> <init>
com.google.android.exoplayer.text.webvtt.WebvttParser -> com.google.android.exoplayer.text.webvtt.WebvttParser:
    36:39:void <init>() -> <init>
    44:44:boolean canParse(java.lang.String) -> canParse
    30:30:com.google.android.exoplayer.text.Subtitle parse(byte[],int,int) -> parse
    49:63:com.google.android.exoplayer.text.webvtt.WebvttSubtitle parse(byte[],int,int) -> parse
com.google.android.exoplayer.text.webvtt.WebvttParserUtil -> com.google.android.exoplayer.text.webvtt.WebvttParserUtil:
    27:27:void <clinit>() -> <clinit>
    68:69:float parsePercentage(java.lang.String) -> parsePercentage
    53:58:long parseTimestampUs(java.lang.String) -> parseTimestampUs
    38:40:void validateWebvttHeaderLine(com.google.android.exoplayer.util.ParsableByteArray) -> validateWebvttHeaderLine
com.google.android.exoplayer.text.webvtt.WebvttSubtitle -> com.google.android.exoplayer.text.webvtt.WebvttSubtitle:
    41:52:void <init>(java.util.List) -> <init>
    87:121:java.util.List getCues(long) -> getCues
    68:70:long getEventTime(int) -> getEventTime
    63:63:int getEventTimeCount() -> getEventTimeCount
    57:58:int getNextEventTimeIndex(long) -> getNextEventTimeIndex
com.google.android.exoplayer.upstream.Allocation -> com.google.android.exoplayer.upstream.Allocation:
    38:40:void <init>(byte[],int) -> <init>
    50:50:int translateOffset(int) -> translateOffset
com.google.android.exoplayer.upstream.AssetDataSource -> com.google.android.exoplayer.upstream.AssetDataSource:
    61:63:void <init>(android.content.Context,com.google.android.exoplayer.upstream.TransferListener) -> <init>
    140:151:void close() -> close
    135:135:java.lang.String getUri() -> getUri
    69:96:long open(com.google.android.exoplayer.upstream.DataSpec) -> open
    108:117:int read(byte[],int,int) -> read
com.google.android.exoplayer.upstream.AssetDataSource$AssetDataSourceException -> com.google.android.exoplayer.upstream.AssetDataSource$AssetDataSourceException:
    36:36:void <init>(java.io.IOException) -> <init>
com.google.android.exoplayer.upstream.ContentDataSource -> com.google.android.exoplayer.upstream.ContentDataSource:
    64:66:void <init>(android.content.Context,com.google.android.exoplayer.upstream.TransferListener) -> <init>
    138:158:void close() -> close
    133:133:java.lang.String getUri() -> getUri
    72:93:long open(com.google.android.exoplayer.upstream.DataSpec) -> open
    106:115:int read(byte[],int,int) -> read
com.google.android.exoplayer.upstream.ContentDataSource$ContentDataSourceException -> com.google.android.exoplayer.upstream.ContentDataSource$ContentDataSourceException:
    38:38:void <init>(java.io.IOException) -> <init>
com.google.android.exoplayer.upstream.DataSourceInputStream -> com.google.android.exoplayer.upstream.DataSourceInputStream:
    39:42:void <init>(com.google.android.exoplayer.upstream.DataSource,com.google.android.exoplayer.upstream.DataSpec) -> <init>
    95:97:void checkOpened() -> checkOpened
    88:90:void close() -> close
    55:55:void open() -> open
    60:64:int read() -> read
    69:69:int read(byte[]) -> read
    74:76:int read(byte[],int,int) -> read
    81:83:long skip(long) -> skip
com.google.android.exoplayer.upstream.DataSpec -> com.google.android.exoplayer.upstream.DataSpec:
    90:90:void <init>(android.net.Uri,int) -> <init>
    102:102:void <init>(android.net.Uri,long,long,java.lang.String) -> <init>
    115:115:void <init>(android.net.Uri,long,long,java.lang.String,int) -> <init>
    131:131:void <init>(android.net.Uri,long,long,long,java.lang.String,int) -> <init>
    147:157:void <init>(android.net.Uri,byte[],long,long,long,java.lang.String,int) -> <init>
    162:162:java.lang.String toString() -> toString
com.google.android.exoplayer.upstream.DefaultAllocator -> com.google.android.exoplayer.upstream.DefaultAllocator:
    42:42:void <init>(int) -> <init>
    53:66:void <init>(int,int) -> <init>
    72:80:com.google.android.exoplayer.upstream.Allocation allocate() -> allocate
    166:169:void blockWhileTotalBytesAllocatedExceeds(int) -> blockWhileTotalBytesAllocatedExceeds
    173:173:int getIndividualAllocationLength() -> getIndividualAllocationLength
    160:160:int getTotalBytesAllocated() -> getTotalBytesAllocated
    86:95:void release(com.google.android.exoplayer.upstream.Allocation) -> release
    99:114:void release(com.google.android.exoplayer.upstream.Allocation[]) -> release
    118:156:void trim(int) -> trim
com.google.android.exoplayer.upstream.DefaultBandwidthMeter -> com.google.android.exoplayer.upstream.DefaultBandwidthMeter:
    43:43:void <init>() -> <init>
    47:47:void <init>(android.os.Handler,com.google.android.exoplayer.upstream.BandwidthMeter$EventListener) -> <init>
    51:51:void <init>(android.os.Handler,com.google.android.exoplayer.upstream.BandwidthMeter$EventListener,com.google.android.exoplayer.util.Clock) -> <init>
    59:64:void <init>(android.os.Handler,com.google.android.exoplayer.upstream.BandwidthMeter$EventListener,com.google.android.exoplayer.util.Clock,int) -> <init>
    28:28:com.google.android.exoplayer.upstream.BandwidthMeter$EventListener access$000(com.google.android.exoplayer.upstream.DefaultBandwidthMeter) -> access$000
    69:69:long getBitrateEstimate() -> getBitrateEstimate
    106:107:void notifyBandwidthSample(int,long,long) -> notifyBandwidthSample
    82:83:void onBytesTransferred(int) -> onBytesTransferred
    87:103:void onTransferEnd() -> onTransferEnd
    74:78:void onTransferStart() -> onTransferStart
com.google.android.exoplayer.upstream.DefaultBandwidthMeter$1 -> com.google.android.exoplayer.upstream.DefaultBandwidthMeter$1:
    107:107:void <init>(com.google.android.exoplayer.upstream.DefaultBandwidthMeter,int,long,long) -> <init>
    110:110:void run() -> run
com.google.android.exoplayer.upstream.DefaultHttpDataSource -> com.google.android.exoplayer.upstream.DefaultHttpDataSource:
    62:63:void <clinit>() -> <clinit>
    91:91:void <init>(java.lang.String,com.google.android.exoplayer.util.Predicate) -> <init>
    103:103:void <init>(java.lang.String,com.google.android.exoplayer.util.Predicate,com.google.android.exoplayer.upstream.TransferListener) -> <init>
    120:120:void <init>(java.lang.String,com.google.android.exoplayer.util.Predicate,com.google.android.exoplayer.upstream.TransferListener,int,int) -> <init>
    139:146:void <init>(java.lang.String,com.google.android.exoplayer.util.Predicate,com.google.android.exoplayer.upstream.TransferListener,int,int,boolean) -> <init>
    323:323:long bytesRemaining() -> bytesRemaining
    265:279:void close() -> close
    570:576:void closeConnectionQuietly() -> closeConnectionQuietly
    454:483:long getContentLength(java.net.HttpURLConnection) -> getContentLength
    151:151:java.lang.String getUri() -> getUri
    430:427:java.net.URL handleRedirect(java.net.URL,java.lang.String) -> handleRedirect
    330:369:java.net.HttpURLConnection makeConnection(com.google.android.exoplayer.upstream.DataSpec) -> makeConnection
    384:391:java.net.HttpURLConnection makeConnection(java.net.URL,byte[],long,long,boolean,boolean) -> makeConnection
    185:191:long open(com.google.android.exoplayer.upstream.DataSpec) -> open
    255:258:int read(byte[],int,int) -> read
    543:561:int readInternal(byte[],int,int) -> readInternal
    499:525:void skipInternal() -> skipInternal
com.google.android.exoplayer.upstream.DefaultUriDataSource -> com.google.android.exoplayer.upstream.DefaultUriDataSource:
    63:63:void <init>(android.content.Context,java.lang.String) -> <init>
    79:79:void <init>(android.content.Context,com.google.android.exoplayer.upstream.TransferListener,java.lang.String) -> <init>
    93:93:void <init>(android.content.Context,com.google.android.exoplayer.upstream.TransferListener,java.lang.String,boolean) -> <init>
    107:111:void <init>(android.content.Context,com.google.android.exoplayer.upstream.TransferListener,com.google.android.exoplayer.upstream.UriDataSource) -> <init>
    148:152:void close() -> close
    143:143:java.lang.String getUri() -> getUri
    116:133:long open(com.google.android.exoplayer.upstream.DataSpec) -> open
    138:138:int read(byte[],int,int) -> read
com.google.android.exoplayer.upstream.FileDataSource -> com.google.android.exoplayer.upstream.FileDataSource:
    58:59:void <init>(com.google.android.exoplayer.upstream.TransferListener) -> <init>
    115:126:void close() -> close
    110:110:java.lang.String getUri() -> getUri
    65:74:long open(com.google.android.exoplayer.upstream.DataSpec) -> open
    87:94:int read(byte[],int,int) -> read
com.google.android.exoplayer.upstream.FileDataSource$FileDataSourceException -> com.google.android.exoplayer.upstream.FileDataSource$FileDataSourceException:
    34:34:void <init>(java.io.IOException) -> <init>
com.google.android.exoplayer.upstream.HttpDataSource -> com.google.android.exoplayer.upstream.HttpDataSource:
    33:33:void <clinit>() -> <clinit>
com.google.android.exoplayer.upstream.HttpDataSource$1 -> com.google.android.exoplayer.upstream.HttpDataSource$1:
    33:33:void <init>() -> <init>
    33:33:boolean evaluate(java.lang.Object) -> evaluate
    37:40:boolean evaluate(java.lang.String) -> evaluate
com.google.android.exoplayer.upstream.HttpDataSource$HttpDataSourceException -> com.google.android.exoplayer.upstream.HttpDataSource$HttpDataSourceException:
    68:70:void <init>(java.lang.String,com.google.android.exoplayer.upstream.DataSpec,int) -> <init>
    74:76:void <init>(java.io.IOException,com.google.android.exoplayer.upstream.DataSpec,int) -> <init>
    80:82:void <init>(java.lang.String,java.io.IOException,com.google.android.exoplayer.upstream.DataSpec,int) -> <init>
com.google.android.exoplayer.upstream.HttpDataSource$InvalidContentTypeException -> com.google.android.exoplayer.upstream.HttpDataSource$InvalidContentTypeException:
    95:96:void <init>(java.lang.String,com.google.android.exoplayer.upstream.DataSpec) -> <init>
com.google.android.exoplayer.upstream.HttpDataSource$InvalidResponseCodeException -> com.google.android.exoplayer.upstream.HttpDataSource$InvalidResponseCodeException:
    118:120:void <init>(int,java.util.Map,com.google.android.exoplayer.upstream.DataSpec) -> <init>
com.google.android.exoplayer.upstream.Loader -> com.google.android.exoplayer.upstream.Loader:
    112:113:void <init>(java.lang.String) -> <init>
    32:32:boolean access$002(com.google.android.exoplayer.upstream.Loader,boolean) -> access$002
    32:32:com.google.android.exoplayer.upstream.Loader$LoadTask access$102(com.google.android.exoplayer.upstream.Loader,com.google.android.exoplayer.upstream.Loader$LoadTask) -> access$102
    162:163:void cancelLoading() -> cancelLoading
    153:153:boolean isLoading() -> isLoading
    172:172:void release() -> release
    184:190:void release(java.lang.Runnable) -> release
    125:127:void startLoading(com.google.android.exoplayer.upstream.Loader$Loadable,com.google.android.exoplayer.upstream.Loader$Callback) -> startLoading
    141:144:void startLoading(android.os.Looper,com.google.android.exoplayer.upstream.Loader$Loadable,com.google.android.exoplayer.upstream.Loader$Callback) -> startLoading
com.google.android.exoplayer.upstream.Loader$LoadTask -> com.google.android.exoplayer.upstream.Loader$LoadTask:
    203:206:void <init>(com.google.android.exoplayer.upstream.Loader,android.os.Looper,com.google.android.exoplayer.upstream.Loader$Loadable,com.google.android.exoplayer.upstream.Loader$Callback) -> <init>
    248:249:void handleMessage(android.os.Message) -> handleMessage
    267:268:void onFinished() -> onFinished
    210:212:void quit() -> quit
    219:227:void run() -> run
com.google.android.exoplayer.upstream.Loader$UnexpectedLoaderException -> com.google.android.exoplayer.upstream.Loader$UnexpectedLoaderException:
    40:40:void <init>(java.lang.Exception) -> <init>
com.google.android.exoplayer.upstream.NetworkLock -> com.google.android.exoplayer.upstream.NetworkLock:
    45:45:void <clinit>() -> <clinit>
    64:66:void <init>() -> <init>
    116:119:void add(int) -> add
    128:132:void remove(int) -> remove
com.google.android.exoplayer.upstream.UriLoadable -> com.google.android.exoplayer.upstream.UriLoadable:
    61:64:void <init>(java.lang.String,com.google.android.exoplayer.upstream.UriDataSource,com.google.android.exoplayer.upstream.UriLoadable$Parser) -> <init>
    78:78:void cancelLoad() -> cancelLoad
    71:71:java.lang.Object getResult() -> getResult
    83:83:boolean isLoadCanceled() -> isLoadCanceled
    88:93:void load() -> load
com.google.android.exoplayer.util.Ac3Util -> com.google.android.exoplayer.util.Ac3Util:
    37:58:void <clinit>() -> <clinit>
    225:229:int getAc3SyncframeSize(int,int) -> getAc3SyncframeSize
    73:80:com.google.android.exoplayer.MediaFormat parseAc3AnnexFFormat(com.google.android.exoplayer.util.ParsableByteArray,java.lang.String,long,java.lang.String) -> parseAc3AnnexFFormat
    123:137:com.google.android.exoplayer.MediaFormat parseAc3SyncframeFormat(com.google.android.exoplayer.util.ParsableBitArray,java.lang.String,long,java.lang.String) -> parseAc3SyncframeFormat
    177:179:int parseAc3SyncframeSize(byte[]) -> parseAc3SyncframeSize
    96:107:com.google.android.exoplayer.MediaFormat parseEAc3AnnexFFormat(com.google.android.exoplayer.util.ParsableByteArray,java.lang.String,long,java.lang.String) -> parseEAc3AnnexFFormat
    207:207:int parseEAc3SyncframeAudioSampleCount(byte[]) -> parseEAc3SyncframeAudioSampleCount
    219:221:int parseEAc3SyncframeAudioSampleCount(java.nio.ByteBuffer) -> parseEAc3SyncframeAudioSampleCount
    189:189:int parseEAc3SyncframeSize(byte[]) -> parseEAc3SyncframeSize
    154:165:com.google.android.exoplayer.MediaFormat parseEac3SyncframeFormat(com.google.android.exoplayer.util.ParsableBitArray,java.lang.String,long,java.lang.String) -> parseEac3SyncframeFormat
com.google.android.exoplayer.util.Assertions -> com.google.android.exoplayer.util.Assertions:
    38:38:void checkArgument(boolean) -> checkArgument
    53:53:void checkArgument(boolean,java.lang.Object) -> checkArgument
    121:122:java.lang.String checkNotEmpty(java.lang.String) -> checkNotEmpty
    92:92:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    65:65:void checkState(boolean) -> checkState
    79:79:void checkState(boolean,java.lang.Object) -> checkState
com.google.android.exoplayer.util.CodecSpecificDataUtil -> com.google.android.exoplayer.util.CodecSpecificDataUtil:
    27:49:void <clinit>() -> <clinit>
    132:132:byte[] buildAacAudioSpecificConfig(int,int,int) -> buildAacAudioSpecificConfig
    147:159:byte[] buildAacAudioSpecificConfig(int,int) -> buildAacAudioSpecificConfig
    174:176:byte[] buildNalUnit(byte[],int,int) -> buildNalUnit
    221:223:int findNalStartCode(byte[],int) -> findNalStartCode
    238:242:boolean isNalStartCode(byte[],int) -> isNalStartCode
    87:119:android.util.Pair parseAacAudioSpecificConfig(byte[]) -> parseAacAudioSpecificConfig
    192:208:byte[][] splitNalUnits(byte[]) -> splitNalUnits
com.google.android.exoplayer.util.DtsUtil -> com.google.android.exoplayer.util.DtsUtil:
    29:45:void <clinit>() -> <clinit>
    108:108:int getDtsFrameSize(byte[]) -> getDtsFrameSize
    85:85:int parseDtsAudioSampleCount(byte[]) -> parseDtsAudioSampleCount
    95:97:int parseDtsAudioSampleCount(java.nio.ByteBuffer) -> parseDtsAudioSampleCount
    61:73:com.google.android.exoplayer.MediaFormat parseDtsFormat(byte[],java.lang.String,long,java.lang.String) -> parseDtsFormat
com.google.android.exoplayer.util.FlacSeekTable -> com.google.android.exoplayer.util.FlacSeekTable:
    57:59:void <init>(long[],long[]) -> <init>
    23:23:long[] access$000(com.google.android.exoplayer.util.FlacSeekTable) -> access$000
    23:23:long[] access$100(com.google.android.exoplayer.util.FlacSeekTable) -> access$100
    70:70:com.google.android.exoplayer.extractor.SeekMap createSeekMap(long,long) -> createSeekMap
    41:54:com.google.android.exoplayer.util.FlacSeekTable parseSeekTable(com.google.android.exoplayer.util.ParsableByteArray) -> parseSeekTable
com.google.android.exoplayer.util.FlacSeekTable$1 -> com.google.android.exoplayer.util.FlacSeekTable$1:
    70:70:void <init>(com.google.android.exoplayer.util.FlacSeekTable,long,long) -> <init>
    78:81:long getPosition(long) -> getPosition
com.google.android.exoplayer.util.FlacStreamInfo -> com.google.android.exoplayer.util.FlacStreamInfo:
    40:50:void <init>(byte[],int) -> <init>
    71:71:int bitRate() -> bitRate
    75:75:long durationUs() -> durationUs
com.google.android.exoplayer.util.FlacUtil -> com.google.android.exoplayer.util.FlacUtil:
    42:48:long extractSampleTimestamp(com.google.android.exoplayer.util.FlacStreamInfo,com.google.android.exoplayer.util.ParsableByteArray) -> extractSampleTimestamp
com.google.android.exoplayer.util.LongArray -> com.google.android.exoplayer.util.LongArray:
    31:31:void <init>() -> <init>
    37:38:void <init>(int) -> <init>
    47:50:void add(long) -> add
    62:63:long get(int) -> get
    74:74:int size() -> size
    83:83:long[] toArray() -> toArray
com.google.android.exoplayer.util.ManifestFetcher -> com.google.android.exoplayer.util.ManifestFetcher:
    134:134:void <init>(java.lang.String,com.google.android.exoplayer.upstream.UriDataSource,com.google.android.exoplayer.upstream.UriLoadable$Parser) -> <init>
    146:151:void <init>(java.lang.String,com.google.android.exoplayer.upstream.UriDataSource,com.google.android.exoplayer.upstream.UriLoadable$Parser,android.os.Handler,com.google.android.exoplayer.util.ManifestFetcher$EventListener) -> <init>
    47:47:com.google.android.exoplayer.util.ManifestFetcher$EventListener access$000(com.google.android.exoplayer.util.ManifestFetcher) -> access$000
    235:238:void disable() -> disable
    225:227:void enable() -> enable
    184:184:java.lang.Object getManifest() -> getManifest
    203:203:long getManifestLoadCompleteTimestamp() -> getManifestLoadCompleteTimestamp
    194:194:long getManifestLoadStartTimestamp() -> getManifestLoadStartTimestamp
    313:313:long getRetryDelayMillis(long) -> getRetryDelayMillis
    215:218:void maybeThrowError() -> maybeThrowError
    339:340:void notifyManifestError(java.io.IOException) -> notifyManifestError
    317:318:void notifyManifestRefreshStarted() -> notifyManifestRefreshStarted
    328:329:void notifyManifestRefreshed() -> notifyManifestRefreshed
    265:284:void onLoadCompleted(com.google.android.exoplayer.upstream.Loader$Loadable) -> onLoadCompleted
    294:303:void onLoadError(com.google.android.exoplayer.upstream.Loader$Loadable,java.io.IOException) -> onLoadError
    307:309:void onSingleFetchCompleted(java.lang.Object,long) -> onSingleFetchCompleted
    247:259:void requestRefresh() -> requestRefresh
    171:173:void singleLoad(android.os.Looper,com.google.android.exoplayer.util.ManifestFetcher$ManifestCallback) -> singleLoad
com.google.android.exoplayer.util.ManifestFetcher$1 -> com.google.android.exoplayer.util.ManifestFetcher$1:
    318:318:void <init>(com.google.android.exoplayer.util.ManifestFetcher) -> <init>
    321:321:void run() -> run
com.google.android.exoplayer.util.ManifestFetcher$2 -> com.google.android.exoplayer.util.ManifestFetcher$2:
    329:329:void <init>(com.google.android.exoplayer.util.ManifestFetcher) -> <init>
    332:332:void run() -> run
com.google.android.exoplayer.util.ManifestFetcher$3 -> com.google.android.exoplayer.util.ManifestFetcher$3:
    340:340:void <init>(com.google.android.exoplayer.util.ManifestFetcher,java.io.IOException) -> <init>
    343:343:void run() -> run
com.google.android.exoplayer.util.ManifestFetcher$ManifestIOException -> com.google.android.exoplayer.util.ManifestFetcher$ManifestIOException:
    53:53:void <init>(java.lang.Throwable) -> <init>
com.google.android.exoplayer.util.ManifestFetcher$SingleFetchHelper -> com.google.android.exoplayer.util.ManifestFetcher$SingleFetchHelper:
    359:363:void <init>(com.google.android.exoplayer.util.ManifestFetcher,com.google.android.exoplayer.upstream.UriLoadable,android.os.Looper,com.google.android.exoplayer.util.ManifestFetcher$ManifestCallback) -> <init>
    386:389:void onLoadCanceled(com.google.android.exoplayer.upstream.Loader$Loadable) -> onLoadCanceled
    374:378:void onLoadCompleted(com.google.android.exoplayer.upstream.Loader$Loadable) -> onLoadCompleted
    396:398:void onLoadError(com.google.android.exoplayer.upstream.Loader$Loadable,java.io.IOException) -> onLoadError
    403:403:void releaseLoader() -> releaseLoader
    367:368:void startLoading() -> startLoading
com.google.android.exoplayer.util.MimeTypes -> com.google.android.exoplayer.util.MimeTypes:
    167:184:java.lang.String getAudioMediaMimeType(java.lang.String) -> getAudioMediaMimeType
    124:126:java.lang.String getTopLevelType(java.lang.String) -> getTopLevelType
    141:150:java.lang.String getVideoMediaMimeType(java.lang.String) -> getVideoMediaMimeType
    84:84:boolean isAudio(java.lang.String) -> isAudio
    104:104:boolean isText(java.lang.String) -> isText
    94:94:boolean isVideo(java.lang.String) -> isVideo
com.google.android.exoplayer.util.MpegAudioHeader -> com.google.android.exoplayer.util.MpegAudioHeader:
    31:42:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    74:104:int getFrameSize(int) -> getFrameSize
    142:175:boolean populateHeader(int,com.google.android.exoplayer.util.MpegAudioHeader) -> populateHeader
    197:203:void setValues(int,java.lang.String,int,int,int,int,int) -> setValues
com.google.android.exoplayer.util.NalUnitUtil -> com.google.android.exoplayer.util.NalUnitUtil:
    81:114:void <clinit>() -> <clinit>
    447:449:void clearPrefixFlags(boolean[]) -> clearPrefixFlags
    173:197:void discardToSps(java.nio.ByteBuffer) -> discardToSps
    387:435:int findNalUnit(byte[],int,int,boolean[]) -> findNalUnit
    454:454:int findNextUnescapeIndex(byte[],int,int) -> findNextUnescapeIndex
    231:231:int getH265NalUnitType(byte[],int) -> getH265NalUnitType
    219:219:int getNalUnitType(byte[],int) -> getNalUnitType
    204:207:byte[] parseChildNalUnit(com.google.android.exoplayer.util.ParsableByteArray) -> parseChildNalUnit
    355:359:com.google.android.exoplayer.util.NalUnitUtil$PpsData parsePpsNalUnit(com.google.android.exoplayer.util.ParsableBitArray) -> parsePpsNalUnit
    243:341:com.google.android.exoplayer.util.NalUnitUtil$SpsData parseSpsNalUnit(com.google.android.exoplayer.util.ParsableBitArray) -> parseSpsNalUnit
    466:467:void skipScalingList(com.google.android.exoplayer.util.ParsableBitArray,int) -> skipScalingList
    128:160:int unescapeStream(byte[],int) -> unescapeStream
com.google.android.exoplayer.util.NalUnitUtil$PpsData -> com.google.android.exoplayer.util.NalUnitUtil$PpsData:
    72:75:void <init>(int,int,boolean) -> <init>
com.google.android.exoplayer.util.NalUnitUtil$SpsData -> com.google.android.exoplayer.util.NalUnitUtil$SpsData:
    47:57:void <init>(int,int,int,float,boolean,boolean,int,int,int,boolean) -> <init>
com.google.android.exoplayer.util.ParsableBitArray -> com.google.android.exoplayer.util.ParsableBitArray:
    32:32:void <init>() -> <init>
    40:40:void <init>(byte[]) -> <init>
    49:51:void <init>(byte[],int) -> <init>
    228:228:void assertValidOffset() -> assertValidOffset
    80:80:int bitsLeft() -> bitsLeft
    187:196:boolean canReadExpGolombCodedNum() -> canReadExpGolombCodedNum
    124:124:boolean readBit() -> readBit
    141:176:int readBits(int) -> readBits
    220:223:int readExpGolombCodeNum() -> readExpGolombCodeNum
    214:215:int readSignedExpGolombCodedInt() -> readSignedExpGolombCodedInt
    205:205:int readUnsignedExpGolombCodedInt() -> readUnsignedExpGolombCodedInt
    60:60:void reset(byte[]) -> reset
    70:73:void reset(byte[],int) -> reset
    98:100:void setPosition(int) -> setPosition
    109:115:void skipBits(int) -> skipBits
com.google.android.exoplayer.util.ParsableByteArray -> com.google.android.exoplayer.util.ParsableByteArray:
    33:33:void <init>() -> <init>
    36:38:void <init>(int) -> <init>
    42:44:void <init>(byte[]) -> <init>
    53:55:void <init>(byte[],int) -> <init>
    90:90:int bytesLeft() -> bytesLeft
    115:115:int capacity() -> capacity
    110:110:int getPosition() -> getPosition
    95:95:int limit() -> limit
    149:150:void readBytes(com.google.android.exoplayer.util.ParsableBitArray,int) -> readBytes
    159:160:void readBytes(byte[],int,int) -> readBytes
    348:348:double readDouble() -> readDouble
    239:239:int readInt() -> readInt
    385:409:java.lang.String readLine() -> readLine
    247:247:int readLittleEndianInt() -> readLittleEndianInt
    267:267:long readLittleEndianLong() -> readLittleEndianLong
    231:231:long readLittleEndianUnsignedInt() -> readLittleEndianUnsignedInt
    321:323:int readLittleEndianUnsignedIntToInt() -> readLittleEndianUnsignedIntToInt
    186:186:int readLittleEndianUnsignedShort() -> readLittleEndianUnsignedShort
    255:255:long readLong() -> readLong
    191:191:short readShort() -> readShort
    358:358:java.lang.String readString(int) -> readString
    369:370:java.lang.String readString(int,java.nio.charset.Charset) -> readString
    294:297:int readSynchSafeInt() -> readSynchSafeInt
    444:458:long readUTF8EncodedLong() -> readUTF8EncodedLong
    175:175:int readUnsignedByte() -> readUnsignedByte
    279:281:int readUnsignedFixedPoint1616() -> readUnsignedFixedPoint1616
    223:223:long readUnsignedInt() -> readUnsignedInt
    202:202:int readUnsignedInt24() -> readUnsignedInt24
    307:309:int readUnsignedIntToInt() -> readUnsignedIntToInt
    334:336:long readUnsignedLongToLong() -> readUnsignedLongToLong
    180:180:int readUnsignedShort() -> readUnsignedShort
    65:65:void reset(int) -> reset
    75:77:void reset(byte[],int) -> reset
    84:85:void reset() -> reset
    104:105:void setLimit(int) -> setLimit
    127:128:void setPosition(int) -> setPosition
    138:138:void skipBytes(int) -> skipBytes
com.google.android.exoplayer.util.ParserUtil -> com.google.android.exoplayer.util.ParserUtil:
    46:49:java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String) -> getAttributeValue
    29:29:boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String) -> isEndTag
    33:33:boolean isEndTag(org.xmlpull.v1.XmlPullParser) -> isEndTag
    38:38:boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String) -> isStartTag
    42:42:boolean isStartTag(org.xmlpull.v1.XmlPullParser) -> isStartTag
com.google.android.exoplayer.util.PlayerControl -> com.google.android.exoplayer.util.PlayerControl:
    31:32:void <init>(com.google.android.exoplayer.ExoPlayer) -> <init>
    62:62:int getAudioSessionId() -> getAudioSessionId
    67:67:int getBufferPercentage() -> getBufferPercentage
    72:73:int getCurrentPosition() -> getCurrentPosition
    78:79:int getDuration() -> getDuration
    84:84:boolean isPlaying() -> isPlaying
    94:94:void pause() -> pause
    99:101:void seekTo(int) -> seekTo
    89:89:void start() -> start
com.google.android.exoplayer.util.PriorityHandlerThread -> com.google.android.exoplayer.util.PriorityHandlerThread:
    33:34:void <init>(java.lang.String,int) -> <init>
    39:40:void run() -> run
com.google.android.exoplayer.util.SlidingPercentile -> com.google.android.exoplayer.util.SlidingPercentile:
    37:44:void <clinit>() -> <clinit>
    67:71:void <init>(int) -> <init>
    82:103:void addSample(int,float) -> addSample
    133:135:void ensureSortedByIndex() -> ensureSortedByIndex
    143:145:void ensureSortedByValue() -> ensureSortedByValue
    115:126:float getPercentile(float) -> getPercentile
com.google.android.exoplayer.util.SlidingPercentile$1 -> com.google.android.exoplayer.util.SlidingPercentile$1:
    37:37:void <init>() -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    40:40:int compare(com.google.android.exoplayer.util.SlidingPercentile$Sample,com.google.android.exoplayer.util.SlidingPercentile$Sample) -> compare
com.google.android.exoplayer.util.SlidingPercentile$2 -> com.google.android.exoplayer.util.SlidingPercentile$2:
    44:44:void <init>() -> <init>
    44:44:int compare(java.lang.Object,java.lang.Object) -> compare
    47:47:int compare(com.google.android.exoplayer.util.SlidingPercentile$Sample,com.google.android.exoplayer.util.SlidingPercentile$Sample) -> compare
com.google.android.exoplayer.util.SlidingPercentile$Sample -> com.google.android.exoplayer.util.SlidingPercentile$Sample:
    149:149:void <init>() -> <init>
    149:149:void <init>(com.google.android.exoplayer.util.SlidingPercentile$1) -> <init>
com.google.android.exoplayer.util.SystemClock -> com.google.android.exoplayer.util.SystemClock:
    21:21:void <init>() -> <init>
    25:25:long elapsedRealtime() -> elapsedRealtime
com.google.android.exoplayer.util.TraceUtil -> com.google.android.exoplayer.util.TraceUtil:
    34:35:void beginSection(java.lang.String) -> beginSection
    52:52:void beginSectionV18(java.lang.String) -> beginSectionV18
    45:46:void endSection() -> endSection
    57:57:void endSectionV18() -> endSectionV18
com.google.android.exoplayer.util.UriUtil -> com.google.android.exoplayer.util.UriUtil:
    206:243:int[] getUriIndices(java.lang.String) -> getUriIndices
    156:196:java.lang.String removeDotSegments(java.lang.StringBuilder,int,int) -> removeDotSegments
    85:142:java.lang.String resolve(java.lang.String,java.lang.String) -> resolve
    73:73:android.net.Uri resolveToUri(java.lang.String,java.lang.String) -> resolveToUri
com.google.android.exoplayer.util.Util -> com.google.android.exoplayer.util.Util:
    68:1019:void <clinit>() -> <clinit>
    172:172:boolean areEqual(java.lang.Object,java.lang.Object) -> areEqual
    318:320:int binarySearchCeil(long[],long,boolean,boolean) -> binarySearchCeil
    297:299:int binarySearchFloor(long[],long,boolean,boolean) -> binarySearchFloor
    339:341:int binarySearchFloor(java.util.List,java.lang.Object,boolean,boolean) -> binarySearchFloor
    268:268:int ceilDivide(int,int) -> ceilDivide
    279:279:long ceilDivide(long,long) -> ceilDivide
    186:187:boolean contains(java.lang.Object[],java.lang.Object) -> contains
    928:928:int crc(byte[],int,int,int) -> crc
    741:768:byte[] executePost(java.lang.String,byte[],java.util.Map) -> executePost
    373:375:int[] firstIntegersArray(int) -> firstIntegersArray
    681:685:byte[] getBytesFromHexString(java.lang.String) -> getBytesFromHexString
    697:704:java.lang.String getCommaDelimitedSimpleClassNames(java.lang.Object[]) -> getCommaDelimitedSimpleClassNames
    1006:1006:void getDisplaySizeV16(android.view.Display,android.graphics.Point) -> getDisplaySizeV16
    1001:1001:void getDisplaySizeV17(android.view.Display,android.graphics.Point) -> getDisplaySizeV17
    994:996:void getDisplaySizeV23(android.view.Display,android.graphics.Point) -> getDisplaySizeV23
    1011:1012:void getDisplaySizeV9(android.view.Display,android.graphics.Point) -> getDisplaySizeV9
    627:632:int getIntegerCodeForString(java.lang.String) -> getIntegerCodeForString
    943:987:android.graphics.Point getPhysicalDisplaySize(android.content.Context) -> getPhysicalDisplaySize
    615:617:com.google.android.exoplayer.upstream.DataSpec getRemainderDataSpec(com.google.android.exoplayer.upstream.DataSpec,int) -> getRemainderDataSpec
    717:723:java.lang.String getUserAgent(android.content.Context,java.lang.String) -> getUserAgent
    806:810:int inferContentType(java.lang.String) -> inferContentType
    159:160:boolean isLocalFileUri(android.net.Uri) -> isLocalFileUri
    571:594:void maybeTerminateInputStream(java.net.HttpURLConnection,long) -> maybeTerminateInputStream
    201:201:java.util.concurrent.ExecutorService newSingleThreadExecutor(java.lang.String) -> newSingleThreadExecutor
    419:421:long parseXsDateTime(java.lang.String) -> parseXsDateTime
    387:407:long parseXsDuration(java.lang.String) -> parseXsDuration
<<<<<<< HEAD
    474:478:long scaleLargeTimestamp(long,long,long) -> scaleLargeTimestamp
=======
    474:482:long scaleLargeTimestamp(long,long,long) -> scaleLargeTimestamp
>>>>>>> rename package name,fix action event info list same time crash
    495:509:long[] scaleLargeTimestamps(java.util.List,long,long) -> scaleLargeTimestamps
    523:536:void scaleLargeTimestampsInPlace(long[],long,long) -> scaleLargeTimestampsInPlace
    551:554:int[] toArray(java.util.List) -> toArray
    144:150:byte[] toByteArray(java.io.InputStream) -> toByteArray
    257:257:java.lang.String toLowerInvariant(java.lang.String) -> toLowerInvariant
com.google.android.exoplayer.util.Util$1 -> com.google.android.exoplayer.util.Util$1:
    201:201:void <init>(java.lang.String) -> <init>
    204:204:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.android.exoplayer.util.VerboseLogUtil -> com.google.android.exoplayer.util.VerboseLogUtil:
    55:65:boolean isTagEnabled(java.lang.String) -> isTagEnabled
com.google.android.material.R$styleable -> com.google.android.material.R$styleable:
    1802:2508:void <clinit>() -> <clinit>
com.google.android.material.animation.AnimationUtils -> com.google.android.material.animation.AnimationUtils:
    32:39:void <clinit>() -> <clinit>
    48:48:int lerp(int,int,float) -> lerp
com.google.android.material.animation.AnimatorSetCompat -> com.google.android.material.animation.AnimatorSetCompat:
    38:46:void playTogether(android.animation.AnimatorSet,java.util.List) -> playTogether
com.google.android.material.animation.ArgbEvaluatorCompat -> com.google.android.material.animation.ArgbEvaluatorCompat:
    28:28:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    27:27:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    55:88:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    38:38:com.google.android.material.animation.ArgbEvaluatorCompat getInstance() -> getInstance
com.google.android.material.animation.ChildrenAlphaProperty -> com.google.android.material.animation.ChildrenAlphaProperty:
    37:37:void <clinit>() -> <clinit>
    41:41:void <init>(java.lang.String) -> <init>
    32:32:java.lang.Object get(java.lang.Object) -> get
    46:50:java.lang.Float get(android.view.ViewGroup) -> get
    32:32:void set(java.lang.Object,java.lang.Object) -> set
    56:62:void set(android.view.ViewGroup,java.lang.Float) -> set
com.google.android.material.animation.DrawableAlphaProperty -> com.google.android.material.animation.DrawableAlphaProperty:
    34:34:void <clinit>() -> <clinit>
    40:37:void <init>() -> <init>
    28:28:java.lang.Object get(java.lang.Object) -> get
    45:51:java.lang.Integer get(android.graphics.drawable.Drawable) -> get
    28:28:void set(java.lang.Object,java.lang.Object) -> set
    56:60:void set(android.graphics.drawable.Drawable,java.lang.Integer) -> set
com.google.android.material.animation.ImageMatrixProperty -> com.google.android.material.animation.ImageMatrixProperty:
    30:27:void <init>() -> <init>
    26:26:java.lang.Object get(java.lang.Object) -> get
    40:41:android.graphics.Matrix get(android.widget.ImageView) -> get
    26:26:void set(java.lang.Object,java.lang.Object) -> set
    35:35:void set(android.widget.ImageView,android.graphics.Matrix) -> set
com.google.android.material.animation.MatrixEvaluator -> com.google.android.material.animation.MatrixEvaluator:
    25:28:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    32:39:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.animation.MotionSpec -> com.google.android.material.animation.MotionSpec:
    63:67:void <init>() -> <init>
    149:153:void addTimingFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator) -> addTimingFromAnimator
    110:113:com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> createFromAttribute
    123:135:com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int) -> createFromResource
    141:143:com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List) -> createSpecFromAnimators
    162:168:boolean equals(java.lang.Object) -> equals
    79:80:com.google.android.material.animation.MotionTiming getTiming(java.lang.String) -> getTiming
    96:98:long getTotalDuration() -> getTotalDuration
    71:71:boolean hasTiming(java.lang.String) -> hasTiming
    173:173:int hashCode() -> hashCode
    87:87:void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming) -> setTiming
    178:186:java.lang.String toString() -> toString
com.google.android.material.animation.MotionTiming -> com.google.android.material.animation.MotionTiming:
    39:41:void <init>(long,long) -> <init>
    44:47:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:56:void apply(android.animation.Animator) -> apply
    81:85:com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> createFromAnimator
    117:135:boolean equals(java.lang.Object) -> equals
    61:61:long getDelay() -> getDelay
    65:65:long getDuration() -> getDuration
    69:69:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    100:102:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> getInterpolatorCompat
    73:73:int getRepeatCount() -> getRepeatCount
    77:77:int getRepeatMode() -> getRepeatMode
    140:144:int hashCode() -> hashCode
    150:166:java.lang.String toString() -> toString
com.google.android.material.animation.Positioning -> com.google.android.material.animation.Positioning:
    34:37:void <init>(int,float,float) -> <init>
com.google.android.material.appbar.AppBarLayout -> com.google.android.material.appbar.AppBarLayout:
    169:169:void <init>(android.content.Context) -> <init>
    173:216:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    233:237:void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener) -> addOnOffsetChangedListener
    242:242:void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener) -> addOnOffsetChangedListener
    356:356:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    505:509:void dispatchOffsetUpdates(int) -> dispatchOffsetUpdates
    110:110:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    110:110:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    361:361:com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    110:110:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    110:110:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    110:110:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    110:110:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    366:366:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    371:376:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    431:463:int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    468:499:int getDownNestedScrollRange() -> getDownNestedScrollRange
    516:533:int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    637:637:int getPendingAction() -> getPendingAction
    646:646:int getTopInset() -> getTopInset
    389:417:int getTotalScrollRange() -> getTotalScrollRange
    426:426:int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    380:380:boolean hasChildWithInterpolator() -> hasChildWithInterpolator
    292:293:boolean hasCollapsibleChild() -> hasCollapsibleChild
    421:421:boolean hasScrollableChildren() -> hasScrollableChildren
    302:304:void invalidateScrollRanges() -> invalidateScrollRanges
    610:610:boolean isLiftOnScroll() -> isLiftOnScroll
    538:554:int[] onCreateDrawableState(int) -> onCreateDrawableState
    270:287:void onLayout(boolean,int,int,int,int) -> onLayout
    264:265:void onMeasure(int,int) -> onMeasure
    652:660:androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat) -> onWindowInsetChanged
    253:254:void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener) -> removeOnOffsetChangedListener
    259:259:void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener) -> removeOnOffsetChangedListener
    641:641:void resetPendingAction() -> resetPendingAction
    328:328:void setExpanded(boolean) -> setExpanded
    343:343:void setExpanded(boolean,boolean) -> setExpanded
    347:351:void setExpanded(boolean,boolean,boolean) -> setExpanded
    605:605:void setLiftOnScroll(boolean) -> setLiftOnScroll
    569:571:boolean setLiftableState(boolean) -> setLiftableState
    588:590:boolean setLiftedState(boolean) -> setLiftedState
    313:310:void setOrientation(int) -> setOrientation
    622:623:void setTargetElevation(float) -> setTargetElevation
com.google.android.material.appbar.AppBarLayout$1 -> com.google.android.material.appbar.AppBarLayout$1:
    218:218:void <init>(com.google.android.material.appbar.AppBarLayout) -> <init>
    221:221:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.appbar.AppBarLayout$BaseBehavior -> com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    900:893:void <init>() -> <init>
    903:893:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    869:869:int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$000
    1029:1040:void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float) -> animateOffsetTo
    1048:1073:void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int) -> animateOffsetWithDuration
    869:869:boolean canDragView(android.view.View) -> canDragView
    1234:1245:boolean canDragView(com.google.android.material.appbar.AppBarLayout) -> canDragView
    936:937:boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> canScrollChildren
    1455:1457:android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout) -> findFirstScrollingChild
    1443:1446:android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getAppBarChildOnOffset
    1077:1086:int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getChildIndexOnOffset
    869:869:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    1260:1260:int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout) -> getMaxDragOffset
    869:869:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    1265:1265:int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout) -> getScrollRangeForDragFling
    1466:1466:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    1328:1362:int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int) -> interpolateOffset
    869:869:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    1255:1255:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onFlingFinished
    869:869:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1177:1227:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    869:869:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1155:1171:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    869:869:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    954:963:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    869:869:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    981:985:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int) -> onNestedScroll
    869:869:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    1495:1503:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    869:869:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    1471:1484:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    869:869:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    918:929:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    869:869:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    1006:1012:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    869:869:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    1275:1316:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    1428:1436:boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> shouldJumpElevationState
    1097:1136:void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> snapToChildIfNeeded
    991:994:void stopNestedScrollIfNeeded(int,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> stopNestedScrollIfNeeded
    1381:1420:void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$1:
    1060:1060:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> <init>
    1063:1063:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState:
    1532:1532:void <clinit>() -> <clinit>
    1514:1517:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1521:1521:void <init>(android.os.Parcelable) -> <init>
    1526:1529:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
    1533:1533:void <init>() -> <init>
    1533:1533:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1533:1533:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1536:1536:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1541:1541:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1533:1533:java.lang.Object[] newArray(int) -> newArray
    1546:1546:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.appbar.AppBarLayout$Behavior -> com.google.android.material.appbar.AppBarLayout$Behavior:
    852:852:void <init>() -> <init>
    860:860:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    842:842:int getTopAndBottomOffset() -> getTopAndBottomOffset
    842:842:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    842:842:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    842:842:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    842:842:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int) -> onNestedScroll
    842:842:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    842:842:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    842:842:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    842:842:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    842:842:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.AppBarLayout$LayoutParams -> com.google.android.material.appbar.AppBarLayout$LayoutParams:
    743:750:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    754:739:void <init>(int,int) -> <init>
    762:739:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    766:739:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    772:739:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    805:805:int getScrollFlags() -> getScrollFlags
    827:827:android.view.animation.Interpolator getScrollInterpolator() -> getScrollInterpolator
    832:832:boolean isCollapsible() -> isCollapsible
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior -> com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    1558:1558:void <init>() -> <init>
    1561:1567:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1556:1556:android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    1653:1656:com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    1644:1646:int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout) -> getAppBarLayoutOffset
    1622:1626:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    1664:1667:int getScrollRange(android.view.View) -> getScrollRange
    1573:1573:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    1606:1611:void offsetChildAsNeeded(android.view.View,android.view.View) -> offsetChildAsNeeded
    1578:1579:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1556:1556:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1556:1556:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1586:1597:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    1672:1675:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> updateLiftedStateIfNeeded
com.google.android.material.appbar.CollapsingToolbarLayout -> com.google.android.material.appbar.CollapsingToolbarLayout:
    147:147:void <init>(android.content.Context) -> <init>
    151:151:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    155:237:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    609:629:void animateScrim(int) -> animateScrim
    1100:1100:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    299:320:void draw(android.graphics.Canvas) -> draw
    331:336:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    734:752:void drawableStateChanged() -> drawableStateChanged
    348:379:void ensureToolbar() -> ensureToolbar
    391:391:android.view.View findDirectChild(android.view.View) -> findDirectChild
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1105:1105:com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1110:1110:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1115:1115:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    854:854:int getCollapsedTitleGravity() -> getCollapsedTitleGravity
    916:916:android.graphics.Typeface getCollapsedTitleTypeface() -> getCollapsedTitleTypeface
    700:700:android.graphics.drawable.Drawable getContentScrim() -> getContentScrim
    901:901:int getExpandedTitleGravity() -> getExpandedTitleGravity
    1024:1024:int getExpandedTitleMarginBottom() -> getExpandedTitleMarginBottom
    1003:1003:int getExpandedTitleMarginEnd() -> getExpandedTitleMarginEnd
    961:961:int getExpandedTitleMarginStart() -> getExpandedTitleMarginStart
    982:982:int getExpandedTitleMarginTop() -> getExpandedTitleMarginTop
    931:931:android.graphics.Typeface getExpandedTitleTypeface() -> getExpandedTitleTypeface
    507:512:int getHeightWithMargins(android.view.View) -> getHeightWithMargins
    1234:1236:int getMaxOffsetForPinChild(android.view.View) -> getMaxOffsetForPinChild
    644:644:int getScrimAlpha() -> getScrimAlpha
    1095:1095:long getScrimAnimationDuration() -> getScrimAnimationDuration
    1064:1080:int getScrimVisibleHeightTrigger() -> getScrimVisibleHeightTrigger
    806:806:android.graphics.drawable.Drawable getStatusBarScrim() -> getStatusBarScrim
    544:544:java.lang.CharSequence getTitle() -> getTitle
    516:519:com.google.android.material.appbar.ViewOffsetHelper getViewOffsetHelper(android.view.View) -> getViewOffsetHelper
    383:383:boolean isToolbarChild(android.view.View) -> isToolbarChild
    249:263:void onAttachedToWindow() -> onAttachedToWindow
    270:275:void onDetachedFromWindow() -> onDetachedFromWindow
    435:503:void onLayout(boolean,int,int,int,int) -> onLayout
    419:429:void onMeasure(int,int) -> onMeasure
    341:343:void onSizeChanged(int,int,int,int) -> onSizeChanged
    281:294:androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat) -> onWindowInsetChanged
    845:845:void setCollapsedTitleGravity(int) -> setCollapsedTitleGravity
    817:817:void setCollapsedTitleTextAppearance(int) -> setCollapsedTitleTextAppearance
    826:826:void setCollapsedTitleTextColor(int) -> setCollapsedTitleTextColor
    835:835:void setCollapsedTitleTextColor(android.content.res.ColorStateList) -> setCollapsedTitleTextColor
    910:910:void setCollapsedTitleTypeface(android.graphics.Typeface) -> setCollapsedTitleTypeface
    656:666:void setContentScrim(android.graphics.drawable.Drawable) -> setContentScrim
    678:678:void setContentScrimColor(int) -> setContentScrimColor
    689:689:void setContentScrimResource(int) -> setContentScrimResource
    873:873:void setExpandedTitleColor(int) -> setExpandedTitleColor
    892:892:void setExpandedTitleGravity(int) -> setExpandedTitleGravity
    948:952:void setExpandedTitleMargin(int,int,int,int) -> setExpandedTitleMargin
    1035:1036:void setExpandedTitleMarginBottom(int) -> setExpandedTitleMarginBottom
    1014:1015:void setExpandedTitleMarginEnd(int) -> setExpandedTitleMarginEnd
    972:973:void setExpandedTitleMarginStart(int) -> setExpandedTitleMarginStart
    993:994:void setExpandedTitleMarginTop(int) -> setExpandedTitleMarginTop
    864:864:void setExpandedTitleTextAppearance(int) -> setExpandedTitleTextAppearance
    882:882:void setExpandedTitleTextColor(android.content.res.ColorStateList) -> setExpandedTitleTextColor
    925:925:void setExpandedTitleTypeface(android.graphics.Typeface) -> setExpandedTitleTypeface
    633:639:void setScrimAlpha(int) -> setScrimAlpha
    1090:1090:void setScrimAnimationDuration(long) -> setScrimAnimationDuration
    1050:1053:void setScrimVisibleHeightTrigger(int) -> setScrimVisibleHeightTrigger
    585:585:void setScrimsShown(boolean) -> setScrimsShown
    598:604:void setScrimsShown(boolean,boolean) -> setScrimsShown
    714:728:void setStatusBarScrim(android.graphics.drawable.Drawable) -> setStatusBarScrim
    784:784:void setStatusBarScrimColor(int) -> setStatusBarScrimColor
    795:795:void setStatusBarScrimResource(int) -> setStatusBarScrimResource
    532:533:void setTitle(java.lang.CharSequence) -> setTitle
    557:561:void setTitleEnabled(boolean) -> setTitleEnabled
    763:770:void setVisibility(int) -> setVisibility
    1241:1241:void updateContentDescriptionFromTitle() -> updateContentDescriptionFromTitle
    400:412:void updateDummyView() -> updateDummyView
    1228:1229:void updateScrimVisibility() -> updateScrimVisibility
    758:758:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.CollapsingToolbarLayout$1 -> com.google.android.material.appbar.CollapsingToolbarLayout$1:
    239:239:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    242:242:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.appbar.CollapsingToolbarLayout$2 -> com.google.android.material.appbar.CollapsingToolbarLayout$2:
    618:618:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    621:621:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams -> com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams:
    1147:1157:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1161:1144:void <init>(int,int) -> <init>
    1169:1144:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1212:1212:void setParallaxMultiplier(float) -> setParallaxMultiplier
com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener -> com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener:
    1245:1245:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    1249:1281:void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int) -> onOffsetChanged
com.google.android.material.appbar.HeaderBehavior -> com.google.android.material.appbar.HeaderBehavior:
    48:45:void <init>() -> <init>
    51:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    295:296:void ensureVelocityTracker() -> ensureVelocityTracker
    243:267:boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    56:119:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    124:192:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    232:229:int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    199:199:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
com.google.android.material.appbar.HeaderBehavior$FlingRunnable -> com.google.android.material.appbar.HeaderBehavior$FlingRunnable:
    304:306:void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> <init>
    311:317:void run() -> run
com.google.android.material.appbar.HeaderScrollingViewBehavior -> com.google.android.material.appbar.HeaderScrollingViewBehavior:
    45:42:void <init>() -> <init>
    48:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    156:158:int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    193:193:int getOverlayTop() -> getOverlayTop
    168:168:int getScrollRange(android.view.View) -> getScrollRange
    175:175:int getVerticalLayoutGap() -> getVerticalLayoutGap
    107:147:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    59:95:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    185:185:void setOverlayTop(int) -> setOverlayTop
com.google.android.material.appbar.ViewOffsetBehavior -> com.google.android.material.appbar.ViewOffsetBehavior:
    32:30:void <init>() -> <init>
    35:30:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:84:int getTopAndBottomOffset() -> getTopAndBottomOffset
    62:62:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    41:54:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    66:69:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewOffsetHelper -> com.google.android.material.appbar.ViewOffsetHelper:
    38:39:void <init>(android.view.View) -> <init>
    95:95:int getLayoutTop() -> getLayoutTop
    87:87:int getTopAndBottomOffset() -> getTopAndBottomOffset
    44:48:void onViewLayout() -> onViewLayout
    78:80:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    63:65:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    52:53:void updateOffsets() -> updateOffsets
com.google.android.material.appbar.ViewUtilsLollipop -> com.google.android.material.appbar.ViewUtilsLollipop:
    35:35:void <clinit>() -> <clinit>
    38:38:void setBoundsViewOutlineProvider(android.view.View) -> setBoundsViewOutlineProvider
    60:77:void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> setDefaultAppBarLayoutStateListAnimator
    43:54:void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int) -> setStateListAnimatorFromAttrs
com.google.android.material.behavior.HideBottomViewOnScrollBehavior -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    48:44:void <init>() -> <init>
    57:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    35:35:android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> access$002
    115:119:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> animateChildTo
    62:63:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    85:88:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    103:108:void slideDown(android.view.View) -> slideDown
    93:98:void slideUp(android.view.View) -> slideUp
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1:
    120:120:void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior) -> <init>
    123:123:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.behavior.SwipeDismissBehavior -> com.google.android.material.behavior.SwipeDismissBehavior:
    38:207:void <init>() -> <init>
    384:384:float clamp(float,float,float) -> clamp
    388:388:int clamp(int,int,int) -> clamp
    354:358:void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    166:183:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    190:191:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    149:149:void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    112:112:void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener) -> setListener
    140:140:void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    122:122:void setSwipeDirection(int) -> setSwipeDirection
com.google.android.material.behavior.SwipeDismissBehavior$1 -> com.google.android.material.behavior.SwipeDismissBehavior$1:
    208:212:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    301:326:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    331:331:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    295:295:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    222:229:void onViewCaptured(android.view.View,int) -> onViewCaptured
    235:236:void onViewDragStateChanged(int) -> onViewDragStateChanged
    336:348:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    243:263:void onViewReleased(android.view.View,float,float) -> onViewReleased
    270:287:boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    217:217:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable -> com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable:
    366:368:void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    373:377:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar -> com.google.android.material.bottomappbar.BottomAppBar:
    119:119:void <init>(android.content.Context) -> <init>
    123:123:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    127:162:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:86:android.animation.Animator access$002(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$002
    86:86:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment access$100(com.google.android.material.bottomappbar.BottomAppBar) -> access$100
    86:86:void access$1000(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$1000
    86:86:com.google.android.material.floatingactionbutton.FloatingActionButton access$1100(com.google.android.material.bottomappbar.BottomAppBar) -> access$1100
    86:86:boolean access$1200(com.google.android.material.bottomappbar.BottomAppBar) -> access$1200
    86:86:void access$1300(com.google.android.material.bottomappbar.BottomAppBar) -> access$1300
    86:86:float access$1400(com.google.android.material.bottomappbar.BottomAppBar) -> access$1400
    86:86:com.google.android.material.shape.MaterialShapeDrawable access$200(com.google.android.material.bottomappbar.BottomAppBar) -> access$200
    86:86:android.animation.Animator access$302(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$302
    86:86:void access$400(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> access$400
    86:86:android.animation.Animator access$502(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$502
    86:86:boolean access$600(com.google.android.material.bottomappbar.BottomAppBar) -> access$600
    86:86:void access$700(com.google.android.material.bottomappbar.BottomAppBar,boolean) -> access$700
    86:86:int access$800(com.google.android.material.bottomappbar.BottomAppBar) -> access$800
    86:86:void access$900(com.google.android.material.bottomappbar.BottomAppBar,int,boolean) -> access$900
    657:659:void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> addFabAnimationListeners
    590:597:void cancelAnimations() -> cancelAnimations
    475:488:void createCradleShapeAnimation(boolean,java.util.List) -> createCradleShapeAnimation
    316:333:void createCradleTranslationAnimation(int,java.util.List) -> createCradleTranslationAnimation
    361:363:void createFabTranslationXAnimation(int,java.util.List) -> createFabTranslationXAnimation
    492:500:void createFabTranslationYAnimation(boolean,java.util.List) -> createFabTranslationYAnimation
    403:437:void createMenuViewTranslationAnimation(int,boolean,java.util.List) -> createMenuViewTranslationAnimation
    338:346:com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab() -> findDependentFab
    544:547:androidx.appcompat.widget.ActionMenuView getActionMenuView() -> getActionMenuView
    193:193:android.content.res.ColorStateList getBackgroundTint() -> getBackgroundTint
    680:680:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    233:233:float getCradleVerticalOffset() -> getCradleVerticalOffset
    171:171:int getFabAlignmentMode() -> getFabAlignmentMode
    200:200:float getFabCradleMargin() -> getFabCradleMargin
    216:216:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    532:534:int getFabTranslationX(int) -> getFabTranslationX
    539:539:float getFabTranslationX() -> getFabTranslationX
    504:524:float getFabTranslationY(boolean) -> getFabTranslationY
    528:528:float getFabTranslationY() -> getFabTranslationY
    254:254:boolean getHideOnScroll() -> getHideOnScroll
    602:604:boolean isAnimationRunning() -> isAnimationRunning
    354:355:boolean isVisibleFab() -> isVisibleFab
    446:469:void maybeAnimateAttachChange(boolean) -> maybeAnimateAttachChange
    367:395:void maybeAnimateMenuView(int,boolean) -> maybeAnimateMenuView
    288:311:void maybeAnimateModeChange(int) -> maybeAnimateModeChange
    609:614:void onLayout(boolean,int,int,int,int) -> onLayout
    795:802:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    786:789:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    663:664:void removeFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> removeFabAnimationListeners
    188:188:void setBackgroundTint(android.content.res.ColorStateList) -> setBackgroundTint
    242:244:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    619:632:void setCutoutState() -> setCutoutState
    182:184:void setFabAlignmentMode(int) -> setFabAlignmentMode
    207:209:void setFabCradleMargin(float) -> setFabCradleMargin
    221:223:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    281:283:void setFabDiameter(int) -> setFabDiameter
    263:263:void setHideOnScroll(boolean) -> setHideOnScroll
    567:585:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean) -> translateActionMenuView
com.google.android.material.bottomappbar.BottomAppBar$1 -> com.google.android.material.bottomappbar.BottomAppBar$1:
    305:305:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    308:308:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$2 -> com.google.android.material.bottomappbar.BottomAppBar$2:
    325:325:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    328:329:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.bottomappbar.BottomAppBar$3 -> com.google.android.material.bottomappbar.BottomAppBar$3:
    389:389:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    392:392:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$4 -> com.google.android.material.bottomappbar.BottomAppBar$4:
    418:418:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    423:423:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    428:429:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$5 -> com.google.android.material.bottomappbar.BottomAppBar$5:
    463:463:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    466:466:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$6 -> com.google.android.material.bottomappbar.BottomAppBar$6:
    481:481:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    484:484:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.bottomappbar.BottomAppBar$7 -> com.google.android.material.bottomappbar.BottomAppBar$7:
    642:642:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    645:646:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$Behavior -> com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    692:693:void <init>() -> <init>
    703:704:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    687:687:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    722:737:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int) -> onLayoutChild
    687:687:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    749:750:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    687:687:void slideDown(android.view.View) -> slideDown
    769:779:void slideDown(com.google.android.material.bottomappbar.BottomAppBar) -> slideDown
    687:687:void slideUp(android.view.View) -> slideUp
    756:763:void slideUp(com.google.android.material.bottomappbar.BottomAppBar) -> slideUp
    710:714:boolean updateFabPositionAndVisibility(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.bottomappbar.BottomAppBar) -> updateFabPositionAndVisibility
com.google.android.material.bottomappbar.BottomAppBar$SavedState -> com.google.android.material.bottomappbar.BottomAppBar$SavedState:
    826:826:void <clinit>() -> <clinit>
    810:810:void <init>(android.os.Parcelable) -> <init>
    814:816:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    821:823:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1 -> com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
    827:827:void <init>() -> <init>
    827:827:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    827:827:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    830:830:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    835:835:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    827:827:java.lang.Object[] newArray(int) -> newArray
    840:840:com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment -> com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    56:62:void <init>(float,float,float) -> <init>
    163:163:float getCradleVerticalOffset() -> getCradleVerticalOffset
    69:144:void getEdgePath(float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
    184:184:float getFabCradleMargin() -> getFabCradleMargin
    192:192:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    176:176:float getFabDiameter() -> getFabDiameter
    154:154:float getHorizontalOffset() -> getHorizontalOffset
    172:172:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    188:188:void setFabCradleMargin(float) -> setFabCradleMargin
    196:196:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    180:180:void setFabDiameter(float) -> setFabDiameter
    149:149:void setHorizontalOffset(float) -> setHorizontalOffset
com.google.android.material.bottomnavigation.BottomNavigationItemView -> com.google.android.material.bottomnavigation.BottomNavigationItemView:
    53:53:void <clinit>() -> <clinit>
    73:73:void <init>(android.content.Context) -> <init>
    77:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    81:96:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    331:333:void calculateTextScaleFactors(float,float) -> calculateTextScaleFactors
    147:147:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    120:120:int getItemPosition() -> getItemPosition
    101:112:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    267:269:int[] onCreateDrawableState(int) -> onCreateDrawableState
    161:161:void setCheckable(boolean) -> setCheckable
    166:234:void setChecked(boolean) -> setChecked
    252:261:void setEnabled(boolean) -> setEnabled
    280:285:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    307:310:void setIconSize(int) -> setIconSize
    299:302:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    338:339:void setItemBackground(int) -> setItemBackground
    343:343:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    116:116:void setItemPosition(int) -> setItemPosition
    135:140:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    124:129:void setShifting(boolean) -> setShifting
    319:320:void setTextAppearanceActive(int) -> setTextAppearanceActive
    314:315:void setTextAppearanceInactive(int) -> setTextAppearanceInactive
    325:326:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    152:155:void setTitle(java.lang.CharSequence) -> setTitle
    238:241:void setViewLayoutParams(android.view.View,int,int) -> setViewLayoutParams
    245:247:void setViewValues(android.view.View,float,float,int) -> setViewValues
com.google.android.material.bottomnavigation.BottomNavigationMenu -> com.google.android.material.bottomnavigation.BottomNavigationMenu:
    34:34:void <init>(android.content.Context) -> <init>
    44:45:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    39:39:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
com.google.android.material.bottomnavigation.BottomNavigationMenuView -> com.google.android.material.bottomnavigation.BottomNavigationMenuView:
    53:54:void <clinit>() -> <clinit>
    86:86:void <init>(android.content.Context) -> <init>
    90:120:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:50:com.google.android.material.bottomnavigation.BottomNavigationPresenter access$000(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> access$000
    50:50:androidx.appcompat.view.menu.MenuBuilder access$100(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> access$100
    487:529:void buildMenuView() -> buildMenuView
    463:478:android.content.res.ColorStateList createDefaultColorStateList(int) -> createDefaultColorStateList
    252:252:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    404:409:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    380:380:int getItemBackgroundRes() -> getItemBackgroundRes
    274:274:int getItemIconSize() -> getItemIconSize
    355:355:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    326:326:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    297:297:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    436:436:int getLabelVisibilityMode() -> getLabelVisibilityMode
    569:571:com.google.android.material.bottomnavigation.BottomNavigationItemView getNewItem() -> getNewItem
    577:577:int getSelectedItemId() -> getSelectedItemId
    125:125:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    459:459:boolean isItemHorizontalTranslationEnabled() -> isItemHorizontalTranslationEnabled
    208:222:void onLayout(boolean,int,int,int,int) -> onLayout
    130:200:void onMeasure(int,int) -> onMeasure
    237:240:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    389:392:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    364:367:void setItemBackgroundRes(int) -> setItemBackgroundRes
    448:448:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
    263:266:void setItemIconSize(int) -> setItemIconSize
    335:342:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    306:313:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    283:286:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    427:427:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    483:483:void setPresenter(com.google.android.material.bottomnavigation.BottomNavigationPresenter) -> setPresenter
    587:593:void tryRestoreSelectedItemId(int) -> tryRestoreSelectedItemId
    533:564:void updateMenuView() -> updateMenuView
com.google.android.material.bottomnavigation.BottomNavigationMenuView$1 -> com.google.android.material.bottomnavigation.BottomNavigationMenuView$1:
    110:110:void <init>(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> <init>
    113:116:void onClick(android.view.View) -> onClick
com.google.android.material.bottomnavigation.BottomNavigationPresenter -> com.google.android.material.bottomnavigation.BottomNavigationPresenter:
    35:38:void <init>() -> <init>
    100:100:int getId() -> getId
    47:48:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    112:113:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    105:106:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    42:42:void setBottomNavigationMenuView(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> setBottomNavigationMenuView
    95:95:void setId(int) -> setId
    118:118:void setUpdateSuspended(boolean) -> setUpdateSuspended
    58:64:void updateMenuView(boolean) -> updateMenuView
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState -> com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState:
    140:140:void <clinit>() -> <clinit>
    124:124:void <init>() -> <init>
    126:127:void <init>(android.os.Parcel) -> <init>
    137:137:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1 -> com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1:
    141:141:void <init>() -> <init>
    141:141:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    144:144:com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    141:141:java.lang.Object[] newArray(int) -> newArray
    149:149:com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomnavigation.BottomNavigationView -> com.google.android.material.bottomnavigation.BottomNavigationView:
    110:110:void <init>(android.content.Context) -> <init>
    114:114:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    118:196:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener access$000(com.google.android.material.bottomnavigation.BottomNavigationView) -> access$000
    97:97:com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener access$100(com.google.android.material.bottomnavigation.BottomNavigationView) -> access$100
    532:540:void addCompatibilityTopDivider(android.content.Context) -> addCompatibilityTopDivider
    373:373:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    352:352:int getItemBackgroundResource() -> getItemBackgroundResource
    315:315:int getItemIconSize() -> getItemIconSize
    270:270:android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    478:478:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    459:459:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    328:328:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    440:440:int getLabelVisibilityMode() -> getLabelVisibilityMode
    240:240:android.view.Menu getMenu() -> getMenu
    544:547:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    393:393:int getSelectedItemId() -> getSelectedItemId
    251:254:void inflateMenu(int) -> inflateMenu
    561:567:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    552:555:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    383:383:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    362:362:void setItemBackgroundResource(int) -> setItemBackgroundResource
    489:491:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
    292:292:void setItemIconSize(int) -> setItemIconSize
    304:304:void setItemIconSizeRes(int) -> setItemIconSizeRes
    280:280:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    468:468:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    449:449:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    339:339:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    426:428:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    234:234:void setOnNavigationItemReselectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener) -> setOnNavigationItemReselectedListener
    222:222:void setOnNavigationItemSelectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener) -> setOnNavigationItemSelectedListener
    403:406:void setSelectedItemId(int) -> setSelectedItemId
com.google.android.material.bottomnavigation.BottomNavigationView$1 -> com.google.android.material.bottomnavigation.BottomNavigationView$1:
    197:197:void <init>(com.google.android.material.bottomnavigation.BottomNavigationView) -> <init>
    200:204:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState -> com.google.android.material.bottomnavigation.BottomNavigationView$SavedState:
    592:592:void <clinit>() -> <clinit>
    574:574:void <init>(android.os.Parcelable) -> <init>
    578:579:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    589:589:void readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    584:585:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1 -> com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1:
    593:593:void <init>() -> <init>
    593:593:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    593:593:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    596:596:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    601:601:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    593:593:java.lang.Object[] newArray(int) -> newArray
    606:606:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior -> com.google.android.material.bottomsheet.BottomSheetBehavior:
    179:765:void <init>() -> <init>
    188:205:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:55:boolean access$000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$000
    55:55:int access$100(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$100
    683:686:void calculateCollapsedOffset() -> calculateCollapsedOffset
    892:898:void dispatchOnSlide(int) -> dispatchOnSlide
    712:718:android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    736:736:int getExpandedOffset() -> getExpandedOffset
    728:732:float getYVelocity() -> getYVelocity
    271:324:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    227:265:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    487:489:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    383:414:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    215:219:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    210:210:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    365:366:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    423:477:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    329:354:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    691:694:void reset() -> reset
    509:520:void setFitToContents(boolean) -> setFitToContents
    569:569:void setHideable(boolean) -> setHideable
    533:546:void setPeekHeight(int) -> setPeekHeight
    590:590:void setSkipCollapsed(boolean) -> setSkipCollapsed
    666:678:void setStateInternal(int) -> setStateInternal
    699:707:boolean shouldHide(android.view.View,float) -> shouldHide
    993:1037:void updateImportantForAccessibility(boolean) -> updateImportantForAccessibility
com.google.android.material.bottomsheet.BottomSheetBehavior$2 -> com.google.android.material.bottomsheet.BottomSheetBehavior$2:
    766:766:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    878:878:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    872:872:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    883:886:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    795:795:void onViewDragStateChanged(int) -> onViewDragStateChanged
    789:789:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    804:866:void onViewReleased(android.view.View,float,float) -> onViewReleased
    770:783:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    954:954:void <clinit>() -> <clinit>
    938:940:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    944:945:void <init>(android.os.Parcelable,int) -> <init>
    950:951:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
    955:955:void <init>() -> <init>
    955:955:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    955:955:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    958:958:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    963:963:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    955:955:java.lang.Object[] newArray(int) -> newArray
    968:968:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable -> com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable:
    915:917:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    922:925:void run() -> run
com.google.android.material.button.MaterialButton -> com.google.android.material.button.MaterialButton:
    129:129:void <init>(android.content.Context) -> <init>
    133:133:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    137:167:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    262:262:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    273:273:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    717:717:int getCornerRadius() -> getCornerRadius
    470:470:android.graphics.drawable.Drawable getIcon() -> getIcon
    729:729:int getIconGravity() -> getIconGravity
    396:396:int getIconPadding() -> getIconPadding
    426:426:int getIconSize() -> getIconSize
    509:509:android.content.res.ColorStateList getIconTint() -> getIconTint
    534:534:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    591:591:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    633:633:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    676:676:int getStrokeWidth() -> getStrokeWidth
    207:213:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    245:250:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    358:358:boolean isLayoutRTL() -> isLayoutRTL
    744:744:boolean isUsingOriginalBackground() -> isUsingOriginalBackground
    172:175:void onDraw(android.graphics.Canvas) -> onDraw
    321:324:void onLayout(boolean,int,int,int,int) -> onLayout
    330:353:void onMeasure(int,int) -> onMeasure
    289:289:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    278:283:void setBackgroundColor(int) -> setBackgroundColor
    303:315:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    296:298:void setBackgroundResource(int) -> setBackgroundResource
    256:256:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    267:267:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    688:689:void setCornerRadius(int) -> setCornerRadius
    702:703:void setCornerRadiusResource(int) -> setCornerRadiusResource
    439:441:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    740:740:void setIconGravity(int) -> setIconGravity
    381:383:void setIconPadding(int) -> setIconPadding
    456:458:void setIconResource(int) -> setIconResource
    411:408:void setIconSize(int) -> setIconSize
    482:484:void setIconTint(android.content.res.ColorStateList) -> setIconTint
    520:522:void setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    497:497:void setIconTintResource(int) -> setIconTintResource
    370:370:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    563:564:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    577:578:void setRippleColorResource(int) -> setRippleColorResource
    604:605:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    619:620:void setStrokeColorResource(int) -> setStrokeColorResource
    646:647:void setStrokeWidth(int) -> setStrokeWidth
    661:662:void setStrokeWidthResource(int) -> setStrokeWidthResource
    188:193:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    226:231:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    539:551:void updateIcon() -> updateIcon
com.google.android.material.button.MaterialButtonBackgroundDrawable -> com.google.android.material.button.MaterialButtonBackgroundDrawable:
    59:59:void <init>(android.content.res.ColorStateList,android.graphics.drawable.InsetDrawable,android.graphics.drawable.Drawable) -> <init>
    65:69:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.google.android.material.button.MaterialButtonHelper -> com.google.android.material.button.MaterialButtonHelper:
    57:57:void <clinit>() -> <clinit>
    89:90:void <init>(com.google.android.material.button.MaterialButton) -> <init>
    183:200:android.graphics.drawable.Drawable createBackgroundCompat() -> createBackgroundCompat
    255:276:android.graphics.drawable.Drawable createBackgroundLollipop() -> createBackgroundLollipop
    163:173:void drawStroke(android.graphics.Canvas) -> drawStroke
    377:377:int getCornerRadius() -> getCornerRadius
    308:308:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    324:324:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    336:336:int getStrokeWidth() -> getStrokeWidth
    221:221:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    236:236:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    158:158:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    94:135:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    288:291:void setBackgroundColor(int) -> setBackgroundColor
    150:154:void setBackgroundOverwritten() -> setBackgroundOverwritten
    351:371:void setCornerRadius(int) -> setCornerRadius
    296:301:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    312:318:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    328:331:void setStrokeWidth(int) -> setStrokeWidth
    210:215:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    225:230:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    394:398:android.graphics.drawable.GradientDrawable unwrapBackgroundDrawable() -> unwrapBackgroundDrawable
    382:386:android.graphics.drawable.GradientDrawable unwrapStrokeDrawable() -> unwrapStrokeDrawable
    282:283:void updateMaskBounds(int,int) -> updateMaskBounds
    340:346:void updateStroke() -> updateStroke
    240:243:void updateTintAndTintModeLollipop() -> updateTintAndTintModeLollipop
    206:206:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> wrapDrawableWithInset
com.google.android.material.canvas.CanvasCompat -> com.google.android.material.canvas.CanvasCompat:
    52:55:int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int) -> saveLayerAlpha
com.google.android.material.card.MaterialCardView -> com.google.android.material.card.MaterialCardView:
    44:44:void <init>(android.content.Context) -> <init>
    48:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    52:66:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    81:81:int getStrokeColor() -> getStrokeColor
    96:96:int getStrokeWidth() -> getStrokeWidth
    101:102:void setRadius(float) -> setRadius
    75:75:void setStrokeColor(int) -> setStrokeColor
    90:90:void setStrokeWidth(int) -> setStrokeWidth
com.google.android.material.card.MaterialCardViewHelper -> com.google.android.material.card.MaterialCardViewHelper:
    40:41:void <init>(com.google.android.material.card.MaterialCardView) -> <init>
    102:106:void adjustContentPadding() -> adjustContentPadding
    87:94:android.graphics.drawable.Drawable createForegroundDrawable() -> createForegroundDrawable
    59:59:int getStrokeColor() -> getStrokeColor
    70:70:int getStrokeWidth() -> getStrokeWidth
    45:49:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    53:54:void setStrokeColor(int) -> setStrokeColor
    63:65:void setStrokeWidth(int) -> setStrokeWidth
    78:78:void updateForeground() -> updateForeground
com.google.android.material.chip.Chip -> com.google.android.material.chip.Chip:
    121:123:void <clinit>() -> <clinit>
    161:161:void <init>(android.content.Context) -> <init>
    165:165:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    169:197:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    116:116:com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip) -> access$000
    116:116:boolean access$100(com.google.android.material.chip.Chip) -> access$100
    116:116:android.graphics.RectF access$200(com.google.android.material.chip.Chip) -> access$200
    116:116:android.graphics.Rect access$300(com.google.android.material.chip.Chip) -> access$300
    116:116:android.graphics.Rect access$400() -> access$400
    327:327:void applyChipDrawable(com.google.android.material.chip.ChipDrawable) -> applyChipDrawable
    363:364:float calculateTextOffsetFromStart(com.google.android.material.chip.ChipDrawable) -> calculateTextOffsetFromStart
    882:918:int[] createCloseIconDrawableState() -> createCloseIconDrawableState
    714:716:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    721:721:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    867:876:void drawableStateChanged() -> drawableStateChanged
    818:819:void ensureFocus() -> ensureFocus
    1460:1460:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1029:1029:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1061:1061:float getChipCornerRadius() -> getChipCornerRadius
    293:293:android.graphics.drawable.Drawable getChipDrawable() -> getChipDrawable
    1622:1622:float getChipEndPadding() -> getChipEndPadding
    1252:1252:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1298:1298:float getChipIconSize() -> getChipIconSize
    1270:1270:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1045:1045:float getChipMinHeight() -> getChipMinHeight
    1510:1510:float getChipStartPadding() -> getChipStartPadding
    1078:1078:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1094:1094:float getChipStrokeWidth() -> getChipStrokeWidth
    1134:1134:java.lang.CharSequence getChipText() -> getChipText
    1349:1349:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1405:1405:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    1606:1606:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1382:1382:float getCloseIconSize() -> getCloseIconSize
    1590:1590:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1366:1366:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    929:936:android.graphics.RectF getCloseIconTouchBounds() -> getCloseIconTouchBounds
    940:942:android.graphics.Rect getCloseIconTouchBoundsInt() -> getCloseIconTouchBoundsInt
    504:504:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    825:828:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    1494:1494:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1542:1542:float getIconEndPadding() -> getIconEndPadding
    1526:1526:float getIconStartPadding() -> getIconStartPadding
    1111:1111:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1477:1477:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1128:1128:java.lang.CharSequence getText() -> getText
    1166:1166:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    1574:1574:float getTextEndPadding() -> getTextEndPadding
    1558:1558:float getTextStartPadding() -> getTextStartPadding
    682:697:boolean handleAccessibilityExit(android.view.MotionEvent) -> handleAccessibilityExit
    925:925:boolean hasCloseIcon() -> hasCloseIcon
    275:276:void initOutlineProvider() -> initOutlineProvider
    801:810:boolean moveFocus(boolean) -> moveFocus
    563:566:void onChipDrawableSizeChange() -> onChipDrawableSizeChange
    332:334:int[] onCreateDrawableState(int) -> onCreateDrawableState
    341:342:void onDraw(android.graphics.Canvas) -> onDraw
    728:735:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    662:673:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    744:796:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    948:949:android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int) -> onResolvePointerIcon
    628:657:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    609:619:boolean performCloseIconClick() -> performCloseIconClick
    396:400:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    384:384:void setBackgroundColor(int) -> setBackgroundColor
    406:410:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    390:390:void setBackgroundResource(int) -> setBackgroundResource
    372:372:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    378:378:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1419:1420:void setCheckable(boolean) -> setCheckable
    1413:1414:void setCheckableResource(int) -> setCheckableResource
    572:581:void setChecked(boolean) -> setChecked
    1470:1471:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1455:1455:void setCheckedIconEnabled(boolean) -> setCheckedIconEnabled
    1449:1449:void setCheckedIconEnabledResource(int) -> setCheckedIconEnabledResource
    1464:1465:void setCheckedIconResource(int) -> setCheckedIconResource
    1435:1436:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1441:1442:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1039:1040:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1033:1034:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1071:1072:void setChipCornerRadius(float) -> setChipCornerRadius
    1065:1066:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    298:315:void setChipDrawable(com.google.android.material.chip.ChipDrawable) -> setChipDrawable
    1632:1633:void setChipEndPadding(float) -> setChipEndPadding
    1626:1627:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1262:1263:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1247:1247:void setChipIconEnabled(boolean) -> setChipIconEnabled
    1241:1241:void setChipIconEnabledResource(int) -> setChipIconEnabledResource
    1256:1257:void setChipIconResource(int) -> setChipIconResource
    1308:1309:void setChipIconSize(float) -> setChipIconSize
    1302:1303:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1292:1293:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1280:1281:void setChipIconTintResource(int) -> setChipIconTintResource
    1227:1228:void setChipIconVisible(int) -> setChipIconVisible
    1233:1234:void setChipIconVisible(boolean) -> setChipIconVisible
    1055:1056:void setChipMinHeight(float) -> setChipMinHeight
    1049:1050:void setChipMinHeightResource(int) -> setChipMinHeightResource
    1520:1521:void setChipStartPadding(float) -> setChipStartPadding
    1514:1515:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1088:1089:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1082:1083:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1104:1105:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1098:1099:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1161:1161:void setChipText(java.lang.CharSequence) -> setChipText
    1155:1155:void setChipTextResource(int) -> setChipTextResource
    1359:1360:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1398:1399:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1344:1344:void setCloseIconEnabled(boolean) -> setCloseIconEnabled
    1338:1338:void setCloseIconEnabledResource(int) -> setCloseIconEnabledResource
    1616:1617:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    1610:1611:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    859:861:void setCloseIconFocused(boolean) -> setCloseIconFocused
    852:854:void setCloseIconHovered(boolean) -> setCloseIconHovered
    845:847:void setCloseIconPressed(boolean) -> setCloseIconPressed
    1353:1354:void setCloseIconResource(int) -> setCloseIconResource
    1392:1393:void setCloseIconSize(float) -> setCloseIconSize
    1386:1387:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    1600:1601:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    1594:1595:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1376:1377:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1370:1371:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1324:1325:void setCloseIconVisible(int) -> setCloseIconVisible
    1330:1331:void setCloseIconVisible(boolean) -> setCloseIconVisible
    427:421:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    471:465:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    484:478:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    499:494:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    439:433:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    455:449:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    509:513:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    833:839:void setFocusedVirtualView(int) -> setFocusedVirtualView
    355:357:void setGravity(int) -> setGravity
    1504:1505:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1498:1499:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    1552:1553:void setIconEndPadding(float) -> setIconEndPadding
    1546:1547:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    1536:1537:void setIconStartPadding(float) -> setIconStartPadding
    1530:1531:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    534:532:void setLines(int) -> setLines
    550:548:void setMaxLines(int) -> setMaxLines
    555:557:void setMaxWidth(int) -> setMaxWidth
    542:540:void setMinLines(int) -> setMinLines
    592:592:void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListenerInternal
    597:597:void setOnCloseIconClickListener(android.view.View$OnClickListener) -> setOnCloseIconClickListener
    1121:1122:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1115:1116:void setRippleColorResource(int) -> setRippleColorResource
    1487:1488:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1481:1482:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    526:524:void setSingleLine(boolean) -> setSingleLine
    1139:1148:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    1183:1188:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1194:1200:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    1206:1212:void setTextAppearance(int) -> setTextAppearance
    1176:1179:void setTextAppearanceResource(int) -> setTextAppearanceResource
    1584:1585:void setTextEndPadding(float) -> setTextEndPadding
    1578:1579:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    1568:1569:void setTextStartPadding(float) -> setTextStartPadding
    1562:1563:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    322:322:void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable) -> unapplyChipDrawable
    205:231:void updatePaddingInternal() -> updatePaddingInternal
    1170:1172:void updateTextPaintDrawState(com.google.android.material.resources.TextAppearance) -> updateTextPaintDrawState
    244:245:void validateAttributes(android.util.AttributeSet) -> validateAttributes
com.google.android.material.chip.Chip$1 -> com.google.android.material.chip.Chip$1:
    147:147:void <init>(com.google.android.material.chip.Chip) -> <init>
    151:153:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
com.google.android.material.chip.Chip$2 -> com.google.android.material.chip.Chip$2:
    277:277:void <init>(com.google.android.material.chip.Chip) -> <init>
    281:284:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.chip.Chip$ChipTouchHelper -> com.google.android.material.chip.Chip$ChipTouchHelper:
    957:958:void <init>(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip) -> <init>
    963:963:int getVirtualViewAt(float,float) -> getVirtualViewAt
    970:971:void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    1019:1019:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    1002:1010:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    978:996:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
com.google.android.material.chip.ChipDrawable -> com.google.android.material.chip.ChipDrawable:
    161:161:void <clinit>() -> <clinit>
    325:337:void <init>(android.content.Context) -> <init>
    158:158:boolean access$002(com.google.android.material.chip.ChipDrawable,boolean) -> access$002
    1211:1223:void applyChildDrawable(android.graphics.drawable.Drawable) -> applyChildDrawable
    751:765:void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipIconBounds
    515:516:float calculateChipIconWidth() -> calculateChipIconWidth
    858:871:void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipTouchBounds
    839:853:void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconBounds
    877:896:void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconTouchBounds
    545:546:float calculateCloseIconWidth() -> calculateCloseIconWidth
    813:830:void calculateTextBounds(android.graphics.Rect,android.graphics.RectF) -> calculateTextBounds
    804:805:float calculateTextCenterFromBaseline() -> calculateTextCenterFromBaseline
    771:785:android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF) -> calculateTextOriginAndAlignment
    537:537:float calculateTextWidth(java.lang.CharSequence) -> calculateTextWidth
    510:510:boolean canShowCheckedIcon() -> canShowCheckedIcon
    277:278:com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    553:592:void draw(android.graphics.Canvas) -> draw
    648:658:void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCheckedIcon
    597:601:void drawChipBackground(android.graphics.Canvas,android.graphics.Rect) -> drawChipBackground
    633:643:void drawChipIcon(android.graphics.Canvas,android.graphics.Rect) -> drawChipIcon
    609:621:void drawChipStroke(android.graphics.Canvas,android.graphics.Rect) -> drawChipStroke
    695:705:void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCloseIcon
    626:629:void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect) -> drawCompatRipple
    710:742:void drawDebug(android.graphics.Canvas,android.graphics.Rect) -> drawDebug
    664:689:void drawText(android.graphics.Canvas,android.graphics.Rect) -> drawText
    1126:1126:int getAlpha() -> getAlpha
    1747:1747:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1268:1268:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1299:1299:float getChipCornerRadius() -> getChipCornerRadius
    1924:1924:float getChipEndPadding() -> getChipEndPadding
    1466:1466:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1527:1527:float getChipIconSize() -> getChipIconSize
    1495:1495:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1283:1283:float getChipMinHeight() -> getChipMinHeight
    1798:1798:float getChipStartPadding() -> getChipStartPadding
    1315:1315:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1330:1330:float getChipStrokeWidth() -> getChipStrokeWidth
    1595:1595:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1671:1671:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    1906:1906:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1643:1643:float getCloseIconSize() -> getCloseIconSize
    1888:1888:float getCloseIconStartPadding() -> getCloseIconStartPadding
    944:944:int[] getCloseIconState() -> getCloseIconState
    1623:1623:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    469:469:void getCloseIconTouchBounds(android.graphics.RectF) -> getCloseIconTouchBounds
    1140:1140:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    1411:1411:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    1786:1786:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1835:1835:float getIconEndPadding() -> getIconEndPadding
    1814:1814:float getIconStartPadding() -> getIconStartPadding
    490:490:int getIntrinsicHeight() -> getIntrinsicHeight
    475:484:int getIntrinsicWidth() -> getIntrinsicWidth
    1168:1175:void getOutline(android.graphics.Outline) -> getOutline
    1349:1349:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1773:1773:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1366:1366:java.lang.CharSequence getText() -> getText
    1389:1389:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    1872:1872:float getTextEndPadding() -> getTextEndPadding
    1856:1856:float getTextStartPadding() -> getTextStartPadding
    522:529:float getTextWidth() -> getTextWidth
    1235:1235:android.graphics.ColorFilter getTintColorFilter() -> getTintColorFilter
    1249:1249:boolean hasState(int[],int) -> hasState
    1180:1182:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1675:1675:boolean isCheckable() -> isCheckable
    1700:1700:boolean isCheckedIconVisible() -> isCheckedIconVisible
    1419:1419:boolean isChipIconVisible() -> isChipIconVisible
    924:924:boolean isCloseIconStateful() -> isCloseIconStateful
    1548:1548:boolean isCloseIconVisible() -> isCloseIconVisible
    908:915:boolean isStateful() -> isStateful
    1038:1038:boolean isStateful(android.content.res.ColorStateList) -> isStateful
    1042:1042:boolean isStateful(android.graphics.drawable.Drawable) -> isStateful
    1046:1048:boolean isStateful(com.google.android.material.resources.TextAppearance) -> isStateful
    342:426:void loadFromAttributes(android.util.AttributeSet,int,int) -> loadFromAttributes
    1054:1067:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    1074:1087:boolean onLevelChange(int) -> onLevelChange
    450:452:void onSizeChange() -> onSizeChange
    949:949:boolean onStateChange(int[]) -> onStateChange
    958:1032:boolean onStateChange(int[],int[]) -> onStateChange
    1188:1190:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1118:1120:void setAlpha(int) -> setAlpha
    1683:1694:void setCheckable(boolean) -> setCheckable
    1679:1679:void setCheckableResource(int) -> setCheckableResource
    1755:1766:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1751:1751:void setCheckedIconResource(int) -> setCheckedIconResource
    1710:1710:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1714:1728:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1276:1278:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1272:1272:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1307:1309:void setChipCornerRadius(float) -> setChipCornerRadius
    1303:1303:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    1932:1935:void setChipEndPadding(float) -> setChipEndPadding
    1928:1928:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1474:1487:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1470:1470:void setChipIconResource(int) -> setChipIconResource
    1535:1542:void setChipIconSize(float) -> setChipIconSize
    1531:1531:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1515:1522:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1505:1505:void setChipIconTintResource(int) -> setChipIconTintResource
    1429:1429:void setChipIconVisible(int) -> setChipIconVisible
    1433:1447:void setChipIconVisible(boolean) -> setChipIconVisible
    1291:1294:void setChipMinHeight(float) -> setChipMinHeight
    1287:1287:void setChipMinHeightResource(int) -> setChipMinHeightResource
    1806:1809:void setChipStartPadding(float) -> setChipStartPadding
    1802:1802:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1323:1325:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1319:1319:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1338:1343:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1334:1334:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1603:1616:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1661:1665:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1914:1918:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    1910:1910:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    1599:1599:void setCloseIconResource(int) -> setCloseIconResource
    1651:1655:void setCloseIconSize(float) -> setCloseIconSize
    1647:1647:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    1896:1900:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    1892:1892:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    932:935:boolean setCloseIconState(int[]) -> setCloseIconState
    1631:1638:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1627:1627:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1558:1558:void setCloseIconVisible(int) -> setCloseIconVisible
    1562:1576:void setCloseIconVisible(boolean) -> setCloseIconVisible
    1131:1133:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    445:445:void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate) -> setDelegate
    1415:1415:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    1794:1794:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1790:1790:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    1843:1850:void setIconEndPadding(float) -> setIconEndPadding
    1839:1839:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    1822:1829:void setIconStartPadding(float) -> setIconStartPadding
    1818:1818:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    1947:1947:void setMaxWidth(int) -> setMaxWidth
    1357:1360:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1353:1353:void setRippleColorResource(int) -> setRippleColorResource
    1961:1961:void setShouldDrawText(boolean) -> setShouldDrawText
    1781:1781:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1777:1777:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    1377:1383:void setText(java.lang.CharSequence) -> setText
    1397:1406:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1393:1393:void setTextAppearanceResource(int) -> setTextAppearanceResource
    1880:1883:void setTextEndPadding(float) -> setTextEndPadding
    1876:1876:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    1864:1867:void setTextStartPadding(float) -> setTextStartPadding
    1860:1860:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    1145:1147:void setTintList(android.content.res.ColorStateList) -> setTintList
    1153:1156:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    431:434:void setUseCompatRipple(boolean) -> setUseCompatRipple
    1094:1107:boolean setVisible(boolean,boolean) -> setVisible
    1951:1951:boolean shouldDrawText() -> shouldDrawText
    500:500:boolean showsCheckedIcon() -> showsCheckedIcon
    495:495:boolean showsChipIcon() -> showsChipIcon
    505:505:boolean showsCloseIcon() -> showsCloseIcon
    1204:1204:void unapplyChildDrawable(android.graphics.drawable.Drawable) -> unapplyChildDrawable
    1196:1198:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1239:1240:void updateCompatRippleColor() -> updateCompatRippleColor
com.google.android.material.chip.ChipDrawable$1 -> com.google.android.material.chip.ChipDrawable$1:
    178:178:void <init>(com.google.android.material.chip.ChipDrawable) -> <init>
    181:183:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
com.google.android.material.chip.ChipGroup -> com.google.android.material.chip.ChipGroup:
    102:102:void <init>(android.content.Context) -> <init>
    106:106:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    110:133:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    50:50:boolean access$300(com.google.android.material.chip.ChipGroup) -> access$300
    50:50:int access$400(com.google.android.material.chip.ChipGroup) -> access$400
    50:50:boolean access$500(com.google.android.material.chip.ChipGroup) -> access$500
    50:50:void access$600(com.google.android.material.chip.ChipGroup,int,boolean) -> access$600
    50:50:void access$700(com.google.android.material.chip.ChipGroup,int) -> access$700
    50:50:com.google.android.material.chip.ChipGroup$CheckedStateTracker access$800(com.google.android.material.chip.ChipGroup) -> access$800
    175:185:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    153:153:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    273:282:void clearCheck() -> clearCheck
    148:148:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    138:138:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    143:143:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    262:262:int getCheckedChipId() -> getCheckedChipId
    326:326:int getChipSpacingHorizontal() -> getChipSpacingHorizontal
    346:346:int getChipSpacingVertical() -> getChipSpacingVertical
    164:169:void onFinishInflate() -> onFinishInflate
    296:299:void setCheckedId(int) -> setCheckedId
    304:308:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    314:315:void setChipSpacing(int) -> setChipSpacing
    331:334:void setChipSpacingHorizontal(int) -> setChipSpacingHorizontal
    340:340:void setChipSpacingHorizontalResource(int) -> setChipSpacingHorizontalResource
    320:320:void setChipSpacingResource(int) -> setChipSpacingResource
    351:354:void setChipSpacingVertical(int) -> setChipSpacingVertical
    360:360:void setChipSpacingVerticalResource(int) -> setChipSpacingVerticalResource
    191:191:void setDividerDrawableHorizontal(android.graphics.drawable.Drawable) -> setDividerDrawableHorizontal
    199:199:void setDividerDrawableVertical(android.graphics.drawable.Drawable) -> setDividerDrawableVertical
    221:221:void setFlexWrap(int) -> setFlexWrap
    292:292:void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener) -> setOnCheckedChangeListener
    159:159:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    207:207:void setShowDividerHorizontal(int) -> setShowDividerHorizontal
    214:214:void setShowDividerVertical(int) -> setShowDividerVertical
    365:365:void setSingleLine(int) -> setSingleLine
    379:382:void setSingleSelection(boolean) -> setSingleSelection
    392:392:void setSingleSelection(int) -> setSingleSelection
com.google.android.material.chip.ChipGroup$CheckedStateTracker -> com.google.android.material.chip.ChipGroup$CheckedStateTracker:
    395:395:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    395:395:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    399:412:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.google.android.material.chip.ChipGroup$LayoutParams -> com.google.android.material.chip.ChipGroup$LayoutParams:
    72:72:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:76:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    80:80:void <init>(int,int) -> <init>
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener -> com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener:
    423:423:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    423:423:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    423:423:android.view.ViewGroup$OnHierarchyChangeListener access$202(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener) -> access$202
    428:443:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    449:454:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
com.google.android.material.circularreveal.CircularRevealCompat -> com.google.android.material.circularreveal.CircularRevealCompat:
    55:66:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float) -> createCircularReveal
    118:118:android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget) -> createCircularRevealListener
com.google.android.material.circularreveal.CircularRevealCompat$1 -> com.google.android.material.circularreveal.CircularRevealCompat$1:
    118:118:void <init>(com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    126:126:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    121:121:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.circularreveal.CircularRevealFrameLayout -> com.google.android.material.circularreveal.CircularRevealFrameLayout:
    33:33:void <init>(android.content.Context) -> <init>
    37:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    95:95:void actualDraw(android.graphics.Canvas) -> actualDraw
    109:109:boolean actualIsOpaque() -> actualIsOpaque
    43:43:void buildCircularRevealCache() -> buildCircularRevealCache
    48:48:void destroyCircularRevealCache() -> destroyCircularRevealCache
    86:89:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    100:103:boolean isOpaque() -> isOpaque
    80:80:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:59:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealGridLayout -> com.google.android.material.circularreveal.CircularRevealGridLayout:
    32:32:void <init>(android.content.Context) -> <init>
    36:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    93:93:void actualDraw(android.graphics.Canvas) -> actualDraw
    107:107:boolean actualIsOpaque() -> actualIsOpaque
    42:42:void buildCircularRevealCache() -> buildCircularRevealCache
    47:47:void destroyCircularRevealCache() -> destroyCircularRevealCache
    84:87:void draw(android.graphics.Canvas) -> draw
    74:74:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    63:63:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    53:53:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    98:101:boolean isOpaque() -> isOpaque
    79:79:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:68:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    58:58:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealHelper -> com.google.android.material.circularreveal.CircularRevealHelper:
    126:131:void <clinit>() -> <clinit>
    135:143:void <init>(com.google.android.material.circularreveal.CircularRevealHelper$Delegate) -> <init>
    152:170:void buildCircularRevealCache() -> buildCircularRevealCache
    175:179:void destroyCircularRevealCache() -> destroyCircularRevealCache
    263:299:void draw(android.graphics.Canvas) -> draw
    303:310:void drawOverlayDrawable(android.graphics.Canvas) -> drawOverlayDrawable
    232:232:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    227:227:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    253:253:float getDistanceToFurthestCorner(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> getDistanceToFurthestCorner
    209:215:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    241:249:void invalidateRevealInfo() -> invalidateRevealInfo
    315:315:boolean isOpaque() -> isOpaque
    236:237:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    221:222:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    189:204:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
    319:321:boolean shouldDrawCircularReveal() -> shouldDrawCircularReveal
    332:332:boolean shouldDrawOverlayDrawable() -> shouldDrawOverlayDrawable
    328:328:boolean shouldDrawScrim() -> shouldDrawScrim
com.google.android.material.circularreveal.CircularRevealLinearLayout -> com.google.android.material.circularreveal.CircularRevealLinearLayout:
    32:32:void <init>(android.content.Context) -> <init>
    36:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    93:93:void actualDraw(android.graphics.Canvas) -> actualDraw
    107:107:boolean actualIsOpaque() -> actualIsOpaque
    42:42:void buildCircularRevealCache() -> buildCircularRevealCache
    47:47:void destroyCircularRevealCache() -> destroyCircularRevealCache
    84:87:void draw(android.graphics.Canvas) -> draw
    74:74:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    63:63:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    53:53:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    98:101:boolean isOpaque() -> isOpaque
    79:79:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:68:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    58:58:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealRelativeLayout -> com.google.android.material.circularreveal.CircularRevealRelativeLayout:
    32:32:void <init>(android.content.Context) -> <init>
    36:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    93:93:void actualDraw(android.graphics.Canvas) -> actualDraw
    107:107:boolean actualIsOpaque() -> actualIsOpaque
    42:42:void buildCircularRevealCache() -> buildCircularRevealCache
    47:47:void destroyCircularRevealCache() -> destroyCircularRevealCache
    84:87:void draw(android.graphics.Canvas) -> draw
    74:74:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    63:63:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    53:53:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    98:101:boolean isOpaque() -> isOpaque
    79:79:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:68:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    58:58:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    208:208:void <clinit>() -> <clinit>
    206:209:void <init>() -> <init>
    206:206:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    213:217:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> evaluate
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
    181:181:void <clinit>() -> <clinit>
    185:185:void <init>(java.lang.String) -> <init>
    179:179:java.lang.Object get(java.lang.Object) -> get
    190:190:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    179:179:void set(java.lang.Object,java.lang.Object) -> set
    195:195:void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    227:227:void <clinit>() -> <clinit>
    231:231:void <init>(java.lang.String) -> <init>
    225:225:java.lang.Object get(java.lang.Object) -> get
    236:236:java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    225:225:void set(java.lang.Object,java.lang.Object) -> set
    241:241:void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer) -> set
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo -> com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    132:132:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$1) -> <init>
    144:144:void <init>() -> <init>
    146:149:void <init>(float,float,float) -> <init>
    153:153:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> <init>
    171:171:boolean isInvalid() -> isInvalid
    157:159:void set(float,float,float) -> set
    163:163:void set(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.cardview.CircularRevealCardView -> com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    36:36:void <init>(android.content.Context) -> <init>
    40:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    97:97:void actualDraw(android.graphics.Canvas) -> actualDraw
    111:111:boolean actualIsOpaque() -> actualIsOpaque
    46:46:void buildCircularRevealCache() -> buildCircularRevealCache
    51:51:void destroyCircularRevealCache() -> destroyCircularRevealCache
    88:91:void draw(android.graphics.Canvas) -> draw
    78:78:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    72:72:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    62:62:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    102:105:boolean isOpaque() -> isOpaque
    83:83:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    67:67:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    56:56:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout -> com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout:
    35:35:void <init>(android.content.Context) -> <init>
    39:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    96:96:void actualDraw(android.graphics.Canvas) -> actualDraw
    110:110:boolean actualIsOpaque() -> actualIsOpaque
    45:45:void buildCircularRevealCache() -> buildCircularRevealCache
    50:50:void destroyCircularRevealCache() -> destroyCircularRevealCache
    87:90:void draw(android.graphics.Canvas) -> draw
    77:77:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    71:71:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    61:61:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    101:104:boolean isOpaque() -> isOpaque
    82:82:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    66:66:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    55:55:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.drawable.DrawableUtils -> com.google.android.material.drawable.DrawableUtils:
    42:43:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
com.google.android.material.expandable.ExpandableWidgetHelper -> com.google.android.material.expandable.ExpandableWidgetHelper:
    39:40:void <init>(com.google.android.material.expandable.ExpandableWidget) -> <init>
    89:91:void dispatchExpandedStateChanged() -> dispatchExpandedStateChanged
    85:85:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    55:55:boolean isExpanded() -> isExpanded
    69:73:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    60:62:android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    79:79:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
com.google.android.material.floatingactionbutton.FloatingActionButton -> com.google.android.material.floatingactionbutton.FloatingActionButton:
    184:184:void <init>(android.content.Context) -> <init>
    188:188:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    192:242:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    93:93:int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$000
    93:93:void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable) -> access$101
    544:544:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    512:512:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    1255:1258:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl() -> createImpl
    737:738:void drawableStateChanged() -> drawableStateChanged
    328:328:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    354:354:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    1104:1104:float getCompatElevation() -> getCompatElevation
    1139:1139:float getCompatHoveredFocusedTranslationZ() -> getCompatHoveredFocusedTranslationZ
    1174:1174:float getCompatPressedTranslationZ() -> getCompatPressedTranslationZ
    810:810:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    782:784:boolean getContentRect(android.graphics.Rect) -> getContentRect
    684:684:int getCustomSize() -> getCustomSize
    568:568:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1226:1226:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1248:1251:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl() -> getImpl
    796:797:void getMeasuredContentRect(android.graphics.Rect) -> getMeasuredContentRect
    274:274:int getRippleColor() -> getRippleColor
    285:285:android.content.res.ColorStateList getRippleColorStateList() -> getRippleColorStateList
    1203:1203:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    628:628:int getSize() -> getSize
    698:698:int getSizeDimension() -> getSizeDimension
    702:714:int getSizeDimension(int) -> getSizeDimension
    388:388:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    407:407:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    421:421:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    435:435:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    596:596:boolean getUseCompatPadding() -> getUseCompatPadding
    540:540:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    558:558:boolean isExpanded() -> isExpanded
    656:656:boolean isOrWillBeShown() -> isOrWillBeShown
    743:744:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    801:804:void offsetRectWithShadow(android.graphics.Rect) -> offsetRectWithShadow
    439:457:void onApplySupportImageTint() -> onApplySupportImageTint
    725:726:void onAttachedToWindow() -> onAttachedToWindow
    731:732:void onDetachedFromWindow() -> onDetachedFromWindow
    247:260:void onMeasure(int,int) -> onMeasure
    760:768:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    749:752:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    841:847:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    548:548:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    516:516:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    815:827:int resolveAdjustedSize(int,int) -> resolveAdjustedSize
    472:472:void setBackgroundColor(int) -> setBackgroundColor
    462:462:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    467:467:void setBackgroundResource(int) -> setBackgroundResource
    339:341:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    366:368:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1116:1116:void setCompatElevation(float) -> setCompatElevation
    1128:1128:void setCompatElevationResource(int) -> setCompatElevationResource
    1151:1151:void setCompatHoveredFocusedTranslationZ(float) -> setCompatHoveredFocusedTranslationZ
    1163:1163:void setCompatHoveredFocusedTranslationZResource(int) -> setCompatHoveredFocusedTranslationZResource
    1186:1186:void setCompatPressedTranslationZ(float) -> setCompatPressedTranslationZ
    1198:1198:void setCompatPressedTranslationZResource(int) -> setCompatPressedTranslationZResource
    674:671:void setCustomSize(int) -> setCustomSize
    563:563:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
    1235:1235:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1244:1244:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    483:484:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    478:478:void setImageResource(int) -> setImageResource
    299:299:void setRippleColor(int) -> setRippleColor
    313:315:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1212:1212:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1221:1221:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    613:616:void setSize(int) -> setSize
    378:378:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    397:397:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    412:414:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    426:428:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    581:583:void setUseCompatPadding(boolean) -> setUseCompatPadding
    508:508:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
    638:638:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> wrapOnVisibilityChangedListener
com.google.android.material.floatingactionbutton.FloatingActionButton$1 -> com.google.android.material.floatingactionbutton.FloatingActionButton$1:
    638:638:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    646:646:void onHidden() -> onHidden
    641:641:void onShown() -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    882:883:void <init>() -> <init>
    887:894:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    873:873:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1047:1048:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    944:946:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1062:1090:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> offsetIfNeeded
    923:926:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    873:873:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    933:938:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    873:873:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1020:1036:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    958:970:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> shouldUpdateVisibility
    980:997:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1004:1011:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    859:859:void <init>() -> <init>
    863:863:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    856:856:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    856:856:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    856:856:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    856:856:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl -> com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    1263:1263:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton) -> <init>
    1267:1267:float getRadius() -> getRadius
    1284:1284:boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
    1279:1279:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1272:1273:void setShadowPadding(int,int,int,int) -> setShadowPadding
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    62:126:void <clinit>() -> <clinit>
    138:164:void <init>(com.google.android.material.internal.VisibilityAwareImageButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    356:359:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    341:344:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    290:302:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> calculateImageMatrixFromScale
    515:538:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float) -> createAnimator
    582:590:com.google.android.material.internal.CircularBorderDrawable createBorderDrawable(int,android.content.res.ColorStateList) -> createBorderDrawable
    651:656:android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createElevationAnimator
    620:622:android.graphics.drawable.GradientDrawable createShapeDrawable() -> createShapeDrawable
    607:608:void ensurePreDrawListener() -> ensurePreDrawListener
    543:543:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    505:509:com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec() -> getDefaultHideMotionSpec
    497:501:com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec() -> getDefaultShowMotionSpec
    241:241:float getElevation() -> getElevation
    317:317:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    245:245:float getHoveredFocusedTranslationZ() -> getHoveredFocusedTranslationZ
    558:558:void getPadding(android.graphics.Rect) -> getPadding
    249:249:float getPressedTranslationZ() -> getPressedTranslationZ
    308:308:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    371:428:void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    641:646:boolean isOrWillBeHidden() -> isOrWillBeHidden
    631:636:boolean isOrWillBeShown() -> isOrWillBeShown
    337:337:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    595:595:com.google.android.material.internal.CircularBorderDrawable newCircularDrawable() -> newCircularDrawable
    627:627:android.graphics.drawable.GradientDrawable newGradientDrawableForShape() -> newGradientDrawableForShape
    564:566:void onAttachedToWindow() -> onAttachedToWindow
    571:573:void onDetachedFromWindow() -> onDetachedFromWindow
    333:333:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    326:328:void onElevationsChanged(float,float,float) -> onElevationsChanged
    599:602:void onPreDraw() -> onPreDraw
    363:367:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    348:352:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    174:208:void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> setBackgroundDrawable
    212:216:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    221:222:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    234:236:void setElevation(float) -> setElevation
    321:321:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    253:255:void setHoveredFocusedTranslationZ(float) -> setHoveredFocusedTranslationZ
    282:286:void setImageMatrixScale(float) -> setImageMatrixScale
    267:269:void setMaxImageSize(int) -> setMaxImageSize
    260:262:void setPressedTranslationZ(float) -> setPressedTranslationZ
    227:228:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    312:312:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    725:725:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    434:491:void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    729:748:void updateFromViewRotation() -> updateFromViewRotation
    278:278:void updateImageMatrixScale() -> updateImageMatrixScale
    551:554:void updatePadding() -> updatePadding
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1:
    388:388:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    402:402:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    407:413:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    393:397:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2:
    459:459:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    470:474:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    462:465:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
    609:609:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    612:612:boolean onPreDraw() -> onPreDraw
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
    716:716:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation:
    698:698:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    702:702:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation:
    707:707:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    711:711:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation:
    689:689:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    693:693:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
    660:660:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    660:660:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1) -> <init>
    680:681:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    668:674:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
    53:53:void <init>(com.google.android.material.internal.VisibilityAwareImageButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    155:160:android.animation.Animator createElevationAnimator(float,float) -> createElevationAnimator
    166:166:float getElevation() -> getElevation
    228:241:void getPadding(android.graphics.Rect) -> getPadding
    218:218:com.google.android.material.internal.CircularBorderDrawable newCircularDrawable() -> newCircularDrawable
    223:223:android.graphics.drawable.GradientDrawable newGradientDrawableForShape() -> newGradientDrawableForShape
    171:171:void onCompatShadowChanged() -> onCompatShadowChanged
    188:200:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    102:149:void onElevationsChanged(float,float,float) -> onElevationsChanged
    176:182:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    63:84:void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> setBackgroundDrawable
    89:93:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulGradientDrawable -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulGradientDrawable:
    251:251:void <init>() -> <init>
com.google.android.material.internal.BaselineLayout -> com.google.android.material.internal.BaselineLayout:
    34:31:void <init>(android.content.Context) -> <init>
    38:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:31:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:108:void onLayout(boolean,int,int,int,int) -> onLayout
    47:77:void onMeasure(int,int) -> onMeasure
com.google.android.material.internal.CheckableImageButton -> com.google.android.material.internal.CheckableImageButton:
    37:37:void <clinit>() -> <clinit>
    42:42:void <init>(android.content.Context) -> <init>
    46:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:82:boolean isChecked() -> isChecked
    92:97:int[] onCreateDrawableState(int) -> onCreateDrawableState
    73:76:void setChecked(boolean) -> setChecked
    87:87:void toggle() -> toggle
com.google.android.material.internal.CheckableImageButton$1 -> com.google.android.material.internal.CheckableImageButton$1:
    54:54:void <init>(com.google.android.material.internal.CheckableImageButton) -> <init>
    57:58:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    64:66:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.CircularBorderDrawable -> com.google.android.material.internal.CircularBorderDrawable:
    71:73:void <init>() -> <init>
    200:225:android.graphics.Shader createGradientShader() -> createGradientShader
    105:126:void draw(android.graphics.Canvas) -> draw
    79:79:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    159:159:int getOpacity() -> getOpacity
    131:132:boolean getPadding(android.graphics.Rect) -> getPadding
    176:176:boolean isStateful() -> isStateful
    171:171:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:191:boolean onStateChange(int[]) -> onStateChange
    138:139:void setAlpha(int) -> setAlpha
    144:148:void setBorderTint(android.content.res.ColorStateList) -> setBorderTint
    95:99:void setBorderWidth(float) -> setBorderWidth
    153:154:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    87:90:void setGradientColors(int,int,int,int) -> setGradientColors
    163:165:void setRotation(float) -> setRotation
com.google.android.material.internal.CircularBorderDrawable$CircularBorderState -> com.google.android.material.internal.CircularBorderDrawable$CircularBorderState:
    233:233:void <init>(com.google.android.material.internal.CircularBorderDrawable) -> <init>
    233:233:void <init>(com.google.android.material.internal.CircularBorderDrawable,com.google.android.material.internal.CircularBorderDrawable$1) -> <init>
    238:238:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.internal.CircularBorderDrawableLollipop -> com.google.android.material.internal.CircularBorderDrawableLollipop:
    28:28:void <init>() -> <init>
    32:33:void getOutline(android.graphics.Outline) -> getOutline
com.google.android.material.internal.CollapsingTextHelper -> com.google.android.material.internal.CollapsingTextHelper:
    52:61:void <clinit>() -> <clinit>
    123:131:void <init>(android.view.View) -> <init>
    759:763:int blendColors(int,int,float) -> blendColors
    448:521:void calculateBaseOffsets() -> calculateBaseOffsets
    189:193:float calculateCollapsedTextWidth() -> calculateCollapsedTextWidth
    399:399:void calculateCurrentOffsets() -> calculateCurrentOffsets
    579:584:boolean calculateIsRtl(java.lang.CharSequence) -> calculateIsRtl
    403:425:void calculateOffsets(float) -> calculateOffsets
    603:669:void calculateUsingTextSize(float) -> calculateUsingTextSize
    729:731:void clearTexture() -> clearTexture
    535:575:void draw(android.graphics.Canvas) -> draw
    675:697:void ensureExpandedTexture() -> ensureExpandedTexture
    203:209:void getCollapsedTextActualBounds(android.graphics.RectF) -> getCollapsedTextActualBounds
    748:748:android.content.res.ColorStateList getCollapsedTextColor() -> getCollapsedTextColor
    244:244:int getCollapsedTextGravity() -> getCollapsedTextGravity
    197:199:float getCollapsedTextHeight() -> getCollapsedTextHeight
    347:347:android.graphics.Typeface getCollapsedTypeface() -> getCollapsedTypeface
    440:443:int getCurrentCollapsedTextColor() -> getCurrentCollapsedTextColor
    430:433:int getCurrentExpandedTextColor() -> getCurrentExpandedTextColor
    233:233:int getExpandedTextGravity() -> getExpandedTextGravity
    351:351:android.graphics.Typeface getExpandedTypeface() -> getExpandedTypeface
    387:387:float getExpansionFraction() -> getExpansionFraction
    725:725:java.lang.CharSequence getText() -> getText
    213:214:void getTextPaintCollapsed(android.text.TextPaint) -> getTextPaintCollapsed
    525:531:void interpolateBounds(float) -> interpolateBounds
    740:740:boolean isClose(float,float) -> isClose
    382:383:boolean isStateful() -> isStateful
    769:771:float lerp(float,float,float,android.animation.TimeInterpolator) -> lerp
    218:222:void onBoundsChanged() -> onBoundsChanged
    312:320:android.graphics.Typeface readFontFamilyTypeface(int) -> readFontFamilyTypeface
    702:706:void recalculate() -> recalculate
    775:775:boolean rectEquals(android.graphics.Rect,int,int,int,int) -> rectEquals
    181:184:void setCollapsedBounds(int,int,int,int) -> setCollapsedBounds
    248:276:void setCollapsedTextAppearance(int) -> setCollapsedTextAppearance
    159:161:void setCollapsedTextColor(android.content.res.ColorStateList) -> setCollapsedTextColor
    237:239:void setCollapsedTextGravity(int) -> setCollapsedTextGravity
    327:329:void setCollapsedTypeface(android.graphics.Typeface) -> setCollapsedTypeface
    173:176:void setExpandedBounds(int,int,int,int) -> setExpandedBounds
    280:308:void setExpandedTextAppearance(int) -> setExpandedTextAppearance
    166:168:void setExpandedTextColor(android.content.res.ColorStateList) -> setExpandedTextColor
    226:228:void setExpandedTextGravity(int) -> setExpandedTextGravity
    145:147:void setExpandedTextSize(float) -> setExpandedTextSize
    335:337:void setExpandedTypeface(android.graphics.Typeface) -> setExpandedTypeface
    362:366:void setExpansionFraction(float) -> setExpansionFraction
    588:598:void setInterpolatedTextSize(float) -> setInterpolatedTextSize
    140:141:void setPositionInterpolator(android.animation.TimeInterpolator) -> setPositionInterpolator
    371:374:boolean setState(int[]) -> setState
    716:720:void setText(java.lang.CharSequence) -> setText
    135:136:void setTextSizeInterpolator(android.animation.TimeInterpolator) -> setTextSizeInterpolator
    342:343:void setTypefaces(android.graphics.Typeface) -> setTypefaces
com.google.android.material.internal.DescendantOffsetUtils -> com.google.android.material.internal.DescendantOffsetUtils:
    36:37:void <clinit>() -> <clinit>
    80:81:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    85:95:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:65:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
com.google.android.material.internal.DrawableUtils -> com.google.android.material.internal.DrawableUtils:
    45:45:boolean setContainerConstantState(android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable$ConstantState) -> setContainerConstantState
    50:66:boolean setContainerConstantStateV9(android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable$ConstantState) -> setContainerConstantStateV9
com.google.android.material.internal.FlowLayout -> com.google.android.material.internal.FlowLayout:
    47:47:void <init>(android.content.Context) -> <init>
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:57:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    84:84:int getItemSpacing() -> getItemSpacing
    76:76:int getLineSpacing() -> getLineSpacing
    163:163:int getMeasuredDimension(int,int,int) -> getMeasuredDimension
    92:92:boolean isSingleLine() -> isSingleLine
    69:72:void loadFromAttributes(android.content.Context,android.util.AttributeSet) -> loadFromAttributes
    171:219:void onLayout(boolean,int,int,int,int) -> onLayout
    102:155:void onMeasure(int,int) -> onMeasure
    88:88:void setItemSpacing(int) -> setItemSpacing
    80:80:void setLineSpacing(int) -> setLineSpacing
    97:97:void setSingleLine(boolean) -> setSingleLine
com.google.android.material.internal.ForegroundLinearLayout -> com.google.android.material.internal.ForegroundLinearLayout:
    53:53:void <init>(android.content.Context) -> <init>
    57:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    61:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    202:231:void draw(android.graphics.Canvas) -> draw
    239:241:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    136:138:void drawableStateChanged() -> drawableStateChanged
    185:185:android.graphics.drawable.Drawable getForeground() -> getForeground
    89:89:int getForegroundGravity() -> getForegroundGravity
    128:130:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    190:191:void onLayout(boolean,int,int,int,int) -> onLayout
    196:197:void onSizeChanged(int,int,int,int) -> onSizeChanged
    151:173:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    100:116:void setForegroundGravity(int) -> setForegroundGravity
    122:122:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.NavigationMenu -> com.google.android.material.internal.NavigationMenu:
    38:38:void <init>(android.content.Context) -> <init>
    43:45:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
com.google.android.material.internal.NavigationMenuItemView -> com.google.android.material.internal.NavigationMenuItemView:
    52:52:void <clinit>() -> <clinit>
    83:83:void <init>(android.content.Context) -> <init>
    87:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    91:97:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    128:141:void adjustAppearance() -> adjustAppearance
    166:172:android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    180:180:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    102:118:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    242:244:int[] onCreateDrawableState(int) -> onCreateDrawableState
    147:150:void recycle() -> recycle
    155:161:void setActionView(android.view.View) -> setActionView
    190:193:void setCheckable(boolean) -> setCheckable
    200:201:void setChecked(boolean) -> setChecked
    271:271:void setHorizontalPadding(int) -> setHorizontalPadding
    210:227:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    275:275:void setIconPadding(int) -> setIconPadding
    250:254:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    267:267:void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    259:259:void setTextAppearance(int) -> setTextAppearance
    263:263:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    185:185:void setTitle(java.lang.CharSequence) -> setTitle
    122:124:boolean shouldExpandActionArea() -> shouldExpandActionArea
com.google.android.material.internal.NavigationMenuItemView$1 -> com.google.android.material.internal.NavigationMenuItemView$1:
    73:73:void <init>(com.google.android.material.internal.NavigationMenuItemView) -> <init>
    77:78:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuPresenter -> com.google.android.material.internal.NavigationMenuPresenter:
    53:344:void <init>() -> <init>
    213:215:void addHeaderView(android.view.View) -> addHeaderView
    294:301:void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    203:203:androidx.appcompat.view.menu.MenuItemImpl getCheckedItem() -> getCheckedItem
    226:226:int getHeaderCount() -> getHeaderCount
    152:152:int getId() -> getId
    261:261:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    270:270:int getItemHorizontalPadding() -> getItemHorizontalPadding
    279:279:int getItemIconPadding() -> getItemIconPadding
    245:245:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    235:235:android.content.res.ColorStateList getItemTintList() -> getItemTintList
    97:108:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    207:208:android.view.View inflateHeaderView(int) -> inflateHeaderView
    88:92:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    130:131:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    180:192:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    161:173:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    198:198:void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl) -> setCheckedItem
    156:156:void setId(int) -> setId
    265:266:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    274:275:void setItemHorizontalPadding(int) -> setItemHorizontalPadding
    283:284:void setItemIconPadding(int) -> setItemIconPadding
    239:240:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    254:256:void setItemTextAppearance(int) -> setItemTextAppearance
    249:250:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    288:289:void setUpdateSuspended(boolean) -> setUpdateSuspended
    113:114:void updateMenuView(boolean) -> updateMenuView
com.google.android.material.internal.NavigationMenuPresenter$1 -> com.google.android.material.internal.NavigationMenuPresenter$1:
    345:345:void <init>(com.google.android.material.internal.NavigationMenuPresenter) -> <init>
    349:357:void onClick(android.view.View) -> onClick
com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder:
    337:337:void <init>(android.view.View) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter:
    375:376:void <init>(com.google.android.material.internal.NavigationMenuPresenter) -> <init>
    552:553:void appendTransparentIconIfMissing(int,int) -> appendTransparentIconIfMissing
    573:591:android.os.Bundle createInstanceState() -> createInstanceState
    569:569:androidx.appcompat.view.menu.MenuItemImpl getCheckedItem() -> getCheckedItem
    386:386:int getItemCount() -> getItemCount
    391:404:int getItemViewType(int) -> getItemViewType
    361:361:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    424:442:void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int) -> onBindViewHolder
    361:361:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    417:411:com.google.android.material.internal.NavigationMenuPresenter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    361:361:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    467:468:void onViewRecycled(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder) -> onViewRecycled
    482:547:void prepareMenuItems() -> prepareMenuItems
    596:633:void restoreInstanceState(android.os.Bundle) -> restoreInstanceState
    558:565:void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl) -> setCheckedItem
    639:639:void setUpdateSuspended(boolean) -> setUpdateSuspended
    473:474:void update() -> update
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem:
    685:685:void <init>() -> <init>
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem:
    669:671:void <init>(int,int) -> <init>
    679:679:int getPaddingBottom() -> getPaddingBottom
    675:675:int getPaddingTop() -> getPaddingTop
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem:
    653:654:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    658:658:androidx.appcompat.view.menu.MenuItemImpl getMenuItem() -> getMenuItem
com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder:
    315:316:void <init>(android.view.LayoutInflater,android.view.ViewGroup,android.view.View$OnClickListener) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder:
    330:330:void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder:
    323:323:void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$ViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$ViewHolder:
    307:307:void <init>(android.view.View) -> <init>
com.google.android.material.internal.NavigationMenuView -> com.google.android.material.internal.NavigationMenuView:
    34:34:void <init>(android.content.Context) -> <init>
    38:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
com.google.android.material.internal.NavigationSubMenu -> com.google.android.material.internal.NavigationSubMenu:
    37:37:void <init>(android.content.Context,com.google.android.material.internal.NavigationMenu,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    42:43:void onItemsChanged(boolean) -> onItemsChanged
com.google.android.material.internal.ParcelableSparseArray -> com.google.android.material.internal.ParcelableSparseArray:
    64:64:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    35:41:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    52:61:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseArray$1 -> com.google.android.material.internal.ParcelableSparseArray$1:
    65:65:void <init>() -> <init>
    65:65:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    65:65:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    68:68:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    73:73:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel) -> createFromParcel
    65:65:java.lang.Object[] newArray(int) -> newArray
    78:78:com.google.android.material.internal.ParcelableSparseArray[] newArray(int) -> newArray
com.google.android.material.internal.ScrimInsetsFrameLayout -> com.google.android.material.internal.ScrimInsetsFrameLayout:
    47:47:void <init>(android.content.Context) -> <init>
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    91:119:void draw(android.graphics.Canvas) -> draw
    125:127:void onAttachedToWindow() -> onAttachedToWindow
    133:135:void onDetachedFromWindow() -> onDetachedFromWindow
com.google.android.material.internal.ScrimInsetsFrameLayout$1 -> com.google.android.material.internal.ScrimInsetsFrameLayout$1:
    70:70:void <init>(com.google.android.material.internal.ScrimInsetsFrameLayout) -> <init>
    73:84:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.StateListAnimator -> com.google.android.material.internal.StateListAnimator:
    35:42:void <init>() -> <init>
    60:62:void addState(int[],android.animation.ValueAnimator) -> addState
    96:98:void cancel() -> cancel
    108:110:void jumpToCurrentState() -> jumpToCurrentState
    68:86:void setState(int[]) -> setState
    91:92:void start(com.google.android.material.internal.StateListAnimator$Tuple) -> start
com.google.android.material.internal.StateListAnimator$1 -> com.google.android.material.internal.StateListAnimator$1:
    43:43:void <init>(com.google.android.material.internal.StateListAnimator) -> <init>
    46:47:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.internal.StateListAnimator$Tuple -> com.google.android.material.internal.StateListAnimator$Tuple:
    118:120:void <init>(int[],android.animation.ValueAnimator) -> <init>
com.google.android.material.internal.TextScale -> com.google.android.material.internal.TextScale:
    32:32:void <init>() -> <init>
    42:42:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    37:37:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    46:48:void captureValues(androidx.transition.TransitionValues) -> captureValues
    55:74:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
com.google.android.material.internal.TextScale$1 -> com.google.android.material.internal.TextScale$1:
    75:75:void <init>(com.google.android.material.internal.TextScale,android.widget.TextView) -> <init>
    78:80:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.internal.ThemeEnforcement -> com.google.android.material.internal.ThemeEnforcement:
    40:43:void <clinit>() -> <clinit>
    196:196:void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    121:131:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> checkCompatibleTheme
    200:200:void checkMaterialTheme(android.content.Context) -> checkMaterialTheme
    141:170:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> checkTextAppearance
    220:221:void checkTheme(android.content.Context,int[],java.lang.String) -> checkTheme
    184:191:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> isCustomTextAppearanceValid
    212:214:boolean isTheme(android.content.Context,int[]) -> isTheme
    72:78:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainStyledAttributes
    110:116:androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainTintedStyledAttributes
com.google.android.material.internal.ViewUtils -> com.google.android.material.internal.ViewUtils:
    53:53:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    46:36:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
com.google.android.material.internal.VisibilityAwareImageButton -> com.google.android.material.internal.VisibilityAwareImageButton:
    37:37:void <init>(android.content.Context) -> <init>
    41:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:62:int getUserSetVisibility() -> getUserSetVisibility
    55:57:void internalSetVisibility(int,boolean) -> internalSetVisibility
    51:51:void setVisibility(int) -> setVisibility
com.google.android.material.math.MathUtils -> com.google.android.material.math.MathUtils:
    30:30:float dist(float,float,float,float) -> dist
    66:65:float distanceToFurthestCorner(float,float,float,float,float,float) -> distanceToFurthestCorner
com.google.android.material.navigation.NavigationView -> com.google.android.material.navigation.NavigationView:
    86:87:void <clinit>() -> <clinit>
    100:100:void <init>(android.content.Context) -> <init>
    104:104:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    108:196:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    509:524:android.content.res.ColorStateList createDefaultColorStateList(int) -> createDefaultColorStateList
    489:489:android.view.MenuItem getCheckedItem() -> getCheckedItem
    308:308:int getHeaderCount() -> getHeaderCount
    372:372:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    403:403:int getItemHorizontalPadding() -> getItemHorizontalPadding
    434:434:int getItemIconPadding() -> getItemIconPadding
    330:330:android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    351:351:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    271:271:android.view.Menu getMenu() -> getMenu
    502:505:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    281:281:android.view.View inflateHeaderView(int) -> inflateHeaderView
    263:266:void inflateMenu(int) -> inflateMenu
    252:252:void onInsetsChanged(androidx.core.view.WindowInsetsCompat) -> onInsetsChanged
    231:245:void onMeasure(int,int) -> onMeasure
    210:216:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    201:204:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    463:465:void setCheckedItem(int) -> setCheckedItem
    475:479:void setCheckedItem(android.view.MenuItem) -> setCheckedItem
    392:392:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    382:382:void setItemBackgroundResource(int) -> setItemBackgroundResource
    413:413:void setItemHorizontalPadding(int) -> setItemHorizontalPadding
    423:423:void setItemHorizontalPaddingResource(int) -> setItemHorizontalPaddingResource
    444:444:void setItemIconPadding(int) -> setItemIconPadding
    454:454:void setItemIconPaddingResource(int) -> setItemIconPaddingResource
    340:340:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    498:498:void setItemTextAppearance(int) -> setItemTextAppearance
    361:361:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    226:226:void setNavigationItemSelectedListener(com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener) -> setNavigationItemSelectedListener
com.google.android.material.navigation.NavigationView$1 -> com.google.android.material.navigation.NavigationView$1:
    167:167:void <init>(com.google.android.material.navigation.NavigationView) -> <init>
    170:170:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
com.google.android.material.navigation.NavigationView$SavedState -> com.google.android.material.navigation.NavigationView$SavedState:
    561:561:void <clinit>() -> <clinit>
    547:548:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    552:552:void <init>(android.os.Parcelable) -> <init>
    557:558:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationView$SavedState$1 -> com.google.android.material.navigation.NavigationView$SavedState$1:
    562:562:void <init>() -> <init>
    562:562:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    562:562:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    565:565:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    570:570:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    562:562:java.lang.Object[] newArray(int) -> newArray
    575:575:com.google.android.material.navigation.NavigationView$SavedState[] newArray(int) -> newArray
com.google.android.material.resources.MaterialResources -> com.google.android.material.resources.MaterialResources:
    43:52:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> getColorStateList
    64:73:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
    99:99:int getIndexWithValue(android.content.res.TypedArray,int,int) -> getIndexWithValue
    84:87:com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int) -> getTextAppearance
com.google.android.material.resources.TextAppearance -> com.google.android.material.resources.TextAppearance:
    73:103:void <init>(android.content.Context,int) -> <init>
    45:45:android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface) -> access$002
    45:45:boolean access$102(com.google.android.material.resources.TextAppearance,boolean) -> access$102
    45:45:void access$200(com.google.android.material.resources.TextAppearance) -> access$200
    193:214:void createFallbackTypeface() -> createFallbackTypeface
    114:134:android.graphics.Typeface getFont(android.content.Context) -> getFont
    147:187:void getFontAsync(android.content.Context,android.text.TextPaint,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFontAsync
    226:232:void updateDrawState(android.content.Context,android.text.TextPaint,androidx.core.content.res.ResourcesCompat$FontCallback) -> updateDrawState
    249:255:void updateMeasureState(android.content.Context,android.text.TextPaint,androidx.core.content.res.ResourcesCompat$FontCallback) -> updateMeasureState
    267:273:void updateTextPaintMeasureState(android.text.TextPaint,android.graphics.Typeface) -> updateTextPaintMeasureState
com.google.android.material.resources.TextAppearance$1 -> com.google.android.material.resources.TextAppearance$1:
    167:167:void <init>(com.google.android.material.resources.TextAppearance,android.text.TextPaint,androidx.core.content.res.ResourcesCompat$FontCallback) -> <init>
    178:180:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    170:173:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
com.google.android.material.resources.TextAppearanceConfig -> com.google.android.material.resources.TextAppearanceConfig:
    37:37:boolean shouldLoadFontSynchronously() -> shouldLoadFontSynchronously
com.google.android.material.ripple.RippleUtils -> com.google.android.material.ripple.RippleUtils:
    36:63:void <clinit>() -> <clinit>
    95:167:android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList) -> convertToRippleDrawableColor
    189:190:int doubleAlpha(int) -> doubleAlpha
    175:179:int getColorForState(android.content.res.ColorStateList,int[]) -> getColorForState
com.google.android.material.shadow.ShadowDrawableWrapper -> com.google.android.material.shadow.ShadowDrawableWrapper:
    41:41:void <clinit>() -> <clinit>
    83:95:void <init>(android.content.Context,android.graphics.drawable.Drawable,float,float,float) -> <init>
    357:371:void buildComponents(android.graphics.Rect) -> buildComponents
    306:350:void buildShadowCorners() -> buildShadowCorners
    178:178:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    169:169:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    201:207:void draw(android.graphics.Canvas) -> draw
    218:302:void drawShadow(android.graphics.Canvas) -> drawShadow
    154:162:boolean getPadding(android.graphics.Rect) -> getPadding
    149:149:float getShadowSize() -> getShadowSize
    118:118:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    105:106:void setAddPaddingForCorners(boolean) -> setAddPaddingForCorners
    111:113:void setAlpha(int) -> setAlpha
    211:213:void setRotation(float) -> setRotation
    125:123:void setShadowSize(float,float) -> setShadowSize
    145:145:void setShadowSize(float) -> setShadowSize
    100:101:int toEven(float) -> toEven
com.google.android.material.shape.CornerTreatment -> com.google.android.material.shape.CornerTreatment:
    23:23:void <init>() -> <init>
com.google.android.material.shape.EdgeTreatment -> com.google.android.material.shape.EdgeTreatment:
    23:23:void <init>() -> <init>
    43:43:void getEdgePath(float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.MaterialShapeDrawable -> com.google.android.material.shape.MaterialShapeDrawable:
    88:94:void <init>(com.google.android.material.shape.ShapePathModel) -> <init>
<<<<<<< HEAD
    498:517:float angleOfCorner(int,int,int) -> angleOfCorner
=======
    498:520:float angleOfCorner(int,int,int) -> angleOfCorner
>>>>>>> rename package name,fix action event info list same time crash
    527:539:float angleOfEdge(int,int,int) -> angleOfEdge
    424:432:void appendCornerPath(int,android.graphics.Path) -> appendCornerPath
    436:448:void appendEdgePath(int,android.graphics.Path) -> appendEdgePath
    352:366:void draw(android.graphics.Canvas) -> draw
    492:482:void getCoordinatesOfCorner(int,int,int,android.graphics.PointF) -> getCoordinatesOfCorner
    461:454:com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int) -> getCornerTreatmentForIndex
    475:468:com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int) -> getEdgeTreatmentForIndex
    219:219:float getInterpolation() -> getInterpolation
    543:549:void getPath(int,int,android.graphics.Path) -> getPath
    379:399:void getPathForSize(int,int,android.graphics.Path) -> getPathForSize
    129:129:android.content.res.ColorStateList getTintList() -> getTintList
    172:177:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    160:161:void setAlpha(int) -> setAlpha
    166:167:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    403:410:void setCornerPathAndTransform(int,int,int) -> setCornerPathAndTransform
    414:420:void setEdgeTransform(int,int,int) -> setEdgeTransform
    230:231:void setInterpolation(float) -> setInterpolation
    327:328:void setPaintStyle(android.graphics.Paint$Style) -> setPaintStyle
    208:209:void setShadowEnabled(boolean) -> setShadowEnabled
    148:148:void setTint(int) -> setTint
    134:136:void setTintList(android.content.res.ColorStateList) -> setTintList
    141:143:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    553:554:void updateTintFilter() -> updateTintFilter
com.google.android.material.shape.ShapePath -> com.google.android.material.shape.ShapePath:
    40:41:void <init>() -> <init>
    104:112:void addArc(float,float,float,float,float,float) -> addArc
    122:124:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    63:69:void lineTo(float,float) -> lineTo
    49:53:void reset(float,float) -> reset
com.google.android.material.shape.ShapePath$PathArcOperation -> com.google.android.material.shape.ShapePath$PathArcOperation:
    169:169:void <clinit>() -> <clinit>
    178:182:void <init>(float,float,float,float) -> <init>
    187:192:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
com.google.android.material.shape.ShapePath$PathLineOperation -> com.google.android.material.shape.ShapePath$PathLineOperation:
    136:136:void <init>() -> <init>
    136:136:float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$002
    136:136:float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$102
    142:146:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
com.google.android.material.shape.ShapePath$PathOperation -> com.google.android.material.shape.ShapePath$PathOperation:
    129:130:void <init>() -> <init>
com.google.android.material.shape.ShapePathModel -> com.google.android.material.shape.ShapePathModel:
    27:28:void <clinit>() -> <clinit>
    40:48:void <init>() -> <init>
    227:227:com.google.android.material.shape.EdgeTreatment getBottomEdge() -> getBottomEdge
    173:173:com.google.android.material.shape.CornerTreatment getBottomLeftCorner() -> getBottomLeftCorner
    155:155:com.google.android.material.shape.CornerTreatment getBottomRightCorner() -> getBottomRightCorner
    245:245:com.google.android.material.shape.EdgeTreatment getLeftEdge() -> getLeftEdge
    209:209:com.google.android.material.shape.EdgeTreatment getRightEdge() -> getRightEdge
    191:191:com.google.android.material.shape.EdgeTreatment getTopEdge() -> getTopEdge
    119:119:com.google.android.material.shape.CornerTreatment getTopLeftCorner() -> getTopLeftCorner
    137:137:com.google.android.material.shape.CornerTreatment getTopRightCorner() -> getTopRightCorner
    200:200:void setTopEdge(com.google.android.material.shape.EdgeTreatment) -> setTopEdge
com.google.android.material.snackbar.BaseTransientBottomBar -> com.google.android.material.snackbar.BaseTransientBottomBar:
    176:185:void <clinit>() -> <clinit>
    241:243:void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    72:72:com.google.android.material.snackbar.ContentViewCallback access$100(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$100
    72:72:boolean access$200() -> access$200
    566:608:void animateViewIn() -> animateViewIn
    612:646:void animateViewOut(int) -> animateViewOut
    390:390:void dismiss() -> dismiss
    394:394:void dispatchDismiss(int) -> dispatchDismiss
    374:374:android.content.Context getContext() -> getContext
    348:348:int getDuration() -> getDuration
    464:464:com.google.android.material.behavior.SwipeDismissBehavior getNewBehavior() -> getNewBehavior
    314:314:int getSnackbarBaseLayoutResId() -> getSnackbarBaseLayoutResId
    650:653:int getTranslationYBottom() -> getTranslationYBottom
    323:325:boolean hasSnackbarStyleAttr() -> hasSnackbarStyleAttr
    659:663:void hideView(int) -> hideView
    446:446:boolean isShownOrQueued() -> isShownOrQueued
    681:693:void onViewHidden(int) -> onViewHidden
    668:674:void onViewShown() -> onViewShown
    337:337:com.google.android.material.snackbar.BaseTransientBottomBar setDuration(int) -> setDuration
    700:702:boolean shouldAnimate() -> shouldAnimate
    385:385:void show() -> show
    468:547:void showView() -> showView
com.google.android.material.snackbar.BaseTransientBottomBar$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$1:
    186:186:void <init>() -> <init>
    189:191:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.BaseTransientBottomBar$10 -> com.google.android.material.snackbar.BaseTransientBottomBar$10:
    617:617:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    625:625:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    620:620:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$11 -> com.google.android.material.snackbar.BaseTransientBottomBar$11:
    629:630:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    634:643:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$2 -> com.google.android.material.snackbar.BaseTransientBottomBar$2:
    272:272:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    278:277:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.snackbar.BaseTransientBottomBar$3 -> com.google.android.material.snackbar.BaseTransientBottomBar$3:
    289:289:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    293:295:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    301:304:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.snackbar.BaseTransientBottomBar$4 -> com.google.android.material.snackbar.BaseTransientBottomBar$4:
    450:450:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    458:458:void dismiss(int) -> dismiss
    453:453:void show() -> show
com.google.android.material.snackbar.BaseTransientBottomBar$5 -> com.google.android.material.snackbar.BaseTransientBottomBar$5:
    482:482:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    485:486:void onDismiss(android.view.View) -> onDismiss
    495:499:void onDragStateChanged(int) -> onDragStateChanged
com.google.android.material.snackbar.BaseTransientBottomBar$6 -> com.google.android.material.snackbar.BaseTransientBottomBar$6:
    515:515:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    521:526:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.snackbar.BaseTransientBottomBar$6$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$6$1:
    527:527:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar$6) -> <init>
    530:530:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$7 -> com.google.android.material.snackbar.BaseTransientBottomBar$7:
    548:548:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    551:558:void onLayoutChange(android.view.View,int,int,int,int) -> onLayoutChange
com.google.android.material.snackbar.BaseTransientBottomBar$8 -> com.google.android.material.snackbar.BaseTransientBottomBar$8:
    578:578:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    587:587:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    581:581:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$9 -> com.google.android.material.snackbar.BaseTransientBottomBar$9:
    591:592:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    596:605:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback -> com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback:
    79:79:void <init>() -> <init>
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior -> com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    792:793:void <init>() -> <init>
    789:789:void access$000(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar) -> access$000
    802:802:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    807:808:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    797:797:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate -> com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    818:821:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    829:829:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    833:838:void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    825:825:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
    716:716:void <init>(android.content.Context) -> <init>
    720:740:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    707:707:void access$300(com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout,boolean) -> access$300
    758:763:void onAttachedToWindow() -> onAttachedToWindow
    768:773:void onDetachedFromWindow() -> onDetachedFromWindow
    750:752:void onLayout(boolean,int,int,int,int) -> onLayout
    744:745:void setClickableOrFocusableBasedOnAccessibility(boolean) -> setClickableOrFocusableBasedOnAccessibility
    784:784:void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener) -> setOnAttachStateChangeListener
    779:779:void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener) -> setOnLayoutChangeListener
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1:
    731:731:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout) -> <init>
    734:734:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
com.google.android.material.snackbar.Snackbar -> com.google.android.material.snackbar.Snackbar:
    95:95:void <clinit>() -> <clinit>
    134:136:void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    150:150:void dismiss() -> dismiss
    236:253:android.view.ViewGroup findSuitableParent(android.view.View) -> findSuitableParent
    329:331:int getDuration() -> getDuration
    206:208:boolean hasSnackbarButtonStyleAttr(android.content.Context) -> hasSnackbarButtonStyleAttr
    179:181:com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int) -> make
    230:230:com.google.android.material.snackbar.Snackbar make(android.view.View,int,int) -> make
    292:292:com.google.android.material.snackbar.Snackbar setAction(int,android.view.View$OnClickListener) -> setAction
    303:308:com.google.android.material.snackbar.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener) -> setAction
    268:270:com.google.android.material.snackbar.Snackbar setText(java.lang.CharSequence) -> setText
    143:143:void show() -> show
com.google.android.material.snackbar.Snackbar$1 -> com.google.android.material.snackbar.Snackbar$1:
    314:314:void <init>(com.google.android.material.snackbar.Snackbar,android.view.View$OnClickListener) -> <init>
    317:319:void onClick(android.view.View) -> onClick
com.google.android.material.snackbar.Snackbar$SnackbarLayout -> com.google.android.material.snackbar.Snackbar$SnackbarLayout:
    393:393:void <init>(android.content.Context) -> <init>
    397:397:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    402:412:void onMeasure(int,int) -> onMeasure
com.google.android.material.snackbar.SnackbarContentLayout -> com.google.android.material.snackbar.SnackbarContentLayout:
    42:42:void <init>(android.content.Context) -> <init>
    46:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    134:139:void animateContentIn(int,int) -> animateContentIn
    145:150:void animateContentOut(int,int) -> animateContentOut
    66:66:android.widget.Button getActionView() -> getActionView
    62:62:android.widget.TextView getMessageView() -> getMessageView
    56:58:void onFinishInflate() -> onFinishInflate
    71:100:void onMeasure(int,int) -> onMeasure
    120:128:void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    107:113:boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
com.google.android.material.snackbar.SnackbarManager -> com.google.android.material.snackbar.SnackbarManager:
    47:51:void <init>() -> <init>
    202:206:boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    104:110:void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int) -> dismiss
    35:38:com.google.android.material.snackbar.SnackbarManager getInstance() -> getInstance
    237:241:void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> handleTimeout
    166:168:boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentOrNext
    213:213:boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    217:217:boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isNextSnackbarLocked
    118:126:void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback) -> onDismissed
    134:138:void onShown(com.google.android.material.snackbar.SnackbarManager$Callback) -> onShown
    142:147:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> pauseTimeout
    151:156:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> restoreTimeoutIfPaused
    221:233:void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> scheduleTimeoutLocked
    72:100:void show(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> show
    187:196:void showNextSnackbarLocked() -> showNextSnackbarLocked
com.google.android.material.snackbar.SnackbarManager$1 -> com.google.android.material.snackbar.SnackbarManager$1:
    52:52:void <init>(com.google.android.material.snackbar.SnackbarManager) -> <init>
    55:57:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord -> com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    176:178:void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> <init>
    182:182:boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback) -> isSnackbar
com.google.android.material.stateful.ExtendableSavedState -> com.google.android.material.stateful.ExtendableSavedState:
    88:88:void <clinit>() -> <clinit>
    34:34:void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1) -> <init>
    39:40:void <init>(android.os.Parcelable) -> <init>
    44:56:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    81:82:java.lang.String toString() -> toString
    62:76:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.stateful.ExtendableSavedState$1 -> com.google.android.material.stateful.ExtendableSavedState$1:
    89:89:void <init>() -> <init>
    89:89:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:93:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    98:98:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:java.lang.Object[] newArray(int) -> newArray
    103:103:com.google.android.material.stateful.ExtendableSavedState[] newArray(int) -> newArray
com.google.android.material.tabs.TabItem -> com.google.android.material.tabs.TabItem:
    48:48:void <init>(android.content.Context) -> <init>
    52:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.android.material.tabs.TabLayout -> com.google.android.material.tabs.TabLayout:
    191:191:void <clinit>() -> <clinit>
    395:395:void <init>(android.content.Context) -> <init>
    399:399:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    403:463:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:167:android.graphics.RectF access$400(com.google.android.material.tabs.TabLayout) -> access$400
    672:673:void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> addOnTabSelectedListener
    584:584:void addTab(com.google.android.material.tabs.TabLayout$Tab) -> addTab
    605:605:void addTab(com.google.android.material.tabs.TabLayout$Tab,boolean) -> addTab
    616:617:void addTab(com.google.android.material.tabs.TabLayout$Tab,int,boolean) -> addTab
    628:641:void addTabFromItemView(com.google.android.material.tabs.TabItem) -> addTabFromItemView
    1369:1370:void addTabView(com.google.android.material.tabs.TabLayout$Tab) -> addTabView
    1375:1375:void addView(android.view.View) -> addView
    1380:1380:void addView(android.view.View,int) -> addView
    1385:1385:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    1390:1390:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1394:1397:void addViewInternal(android.view.View) -> addViewInternal
    1514:1519:void animateToTab(int) -> animateToTab
    1648:1663:void applyModeAndGravity() -> applyModeAndGravity
    1625:1639:int calculateScrollXForTab(int,float) -> calculateScrollXForTab
    1359:1364:void configureTab(com.google.android.material.tabs.TabLayout$Tab,int) -> configureTab
    2704:2717:android.content.res.ColorStateList createColorStateList(int,int) -> createColorStateList
    1402:1404:android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs() -> createLayoutParamsForTabs
    709:711:com.google.android.material.tabs.TabLayout$Tab createTabFromPool() -> createTabFromPool
    1343:1353:com.google.android.material.tabs.TabLayout$TabView createTabView(com.google.android.material.tabs.TabLayout$Tab) -> createTabView
    1619:1620:void dispatchTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabReselected
    1607:1608:void dispatchTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabSelected
    1613:1614:void dispatchTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabUnselected
    1420:1420:int dpToPx(int) -> dpToPx
    1538:1542:void ensureScrollAnimator() -> ensureScrollAnimator
    166:166:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2748:2748:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2723:2730:int getDefaultHeight() -> getDefaultHeight
    742:742:int getSelectedTabPosition() -> getSelectedTabPosition
    733:733:com.google.android.material.tabs.TabLayout$Tab getTabAt(int) -> getTabAt
    727:727:int getTabCount() -> getTabCount
    854:854:int getTabGravity() -> getTabGravity
    1062:1062:android.content.res.ColorStateList getTabIconTint() -> getTabIconTint
    887:887:int getTabIndicatorGravity() -> getTabIndicatorGravity
    2752:2752:int getTabMaxWidth() -> getTabMaxWidth
    2734:2739:int getTabMinWidth() -> getTabMinWidth
    831:831:int getTabMode() -> getTabMode
    1073:1073:android.content.res.ColorStateList getTabRippleColor() -> getTabRippleColor
    1293:1293:int getTabScrollRange() -> getTabScrollRange
    1120:1120:android.graphics.drawable.Drawable getTabSelectedIndicator() -> getTabSelectedIndicator
    1024:1024:android.content.res.ColorStateList getTabTextColors() -> getTabTextColors
    701:703:com.google.android.material.tabs.TabLayout$Tab newTab() -> newTab
    1267:1276:void onAttachedToWindow() -> onAttachedToWindow
    1283:1288:void onDetachedFromWindow() -> onDetachedFromWindow
    1426:1433:void onDraw(android.graphics.Canvas) -> onDraw
    1440:1494:void onMeasure(int,int) -> onMeasure
    1318:1330:void populateFromPagerAdapter() -> populateFromPagerAdapter
    718:718:boolean releaseFromTabPool(com.google.android.material.tabs.TabLayout$Tab) -> releaseFromTabPool
    788:799:void removeAllTabs() -> removeAllTabs
    684:684:void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> removeOnTabSelectedListener
    1500:1506:void removeTabViewAt(int) -> removeTabViewAt
    1569:1569:void selectTab(com.google.android.material.tabs.TabLayout$Tab) -> selectTab
    1573:1601:void selectTab(com.google.android.material.tabs.TabLayout$Tab,boolean) -> selectTab
    930:938:void setInlineLabel(boolean) -> setInlineLabel
    951:951:void setInlineLabelResource(int) -> setInlineLabelResource
    652:659:void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> setOnTabSelectedListener
    1298:1314:void setPagerAdapter(androidx.viewpager.widget.PagerAdapter,boolean) -> setPagerAdapter
    1553:1554:void setScrollAnimatorListener(android.animation.Animator$AnimatorListener) -> setScrollAnimatorListener
    547:547:void setScrollPosition(int,float,boolean) -> setScrollPosition
    555:573:void setScrollPosition(int,float,boolean,boolean) -> setScrollPosition
    1134:1136:void setSelectedTabIndicator(android.graphics.drawable.Drawable) -> setSelectedTabIndicator
    1153:1155:void setSelectedTabIndicator(int) -> setSelectedTabIndicator
    520:520:void setSelectedTabIndicatorColor(int) -> setSelectedTabIndicatorColor
    872:874:void setSelectedTabIndicatorGravity(int) -> setSelectedTabIndicatorGravity
    533:533:void setSelectedTabIndicatorHeight(int) -> setSelectedTabIndicatorHeight
    1558:1563:void setSelectedTabView(int) -> setSelectedTabView
    841:843:void setTabGravity(int) -> setTabGravity
    1043:1045:void setTabIconTint(android.content.res.ColorStateList) -> setTabIconTint
    1056:1056:void setTabIconTintResource(int) -> setTabIconTintResource
    906:907:void setTabIndicatorFullWidth(boolean) -> setTabIndicatorFullWidth
    818:820:void setTabMode(int) -> setTabMode
    1087:1092:void setTabRippleColor(android.content.res.ColorStateList) -> setTabRippleColor
    1108:1108:void setTabRippleColorResource(int) -> setTabRippleColorResource
    1015:1017:void setTabTextColors(android.content.res.ColorStateList) -> setTabTextColors
    1034:1034:void setTabTextColors(int,int) -> setTabTextColors
    1256:1256:void setTabsFromPagerAdapter(androidx.viewpager.widget.PagerAdapter) -> setTabsFromPagerAdapter
    975:980:void setUnboundedRipple(boolean) -> setUnboundedRipple
    995:995:void setUnboundedRippleResource(int) -> setUnboundedRippleResource
    1168:1168:void setupWithViewPager(androidx.viewpager.widget.ViewPager) -> setupWithViewPager
    1188:1188:void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean) -> setupWithViewPager
    1193:1246:void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean,boolean) -> setupWithViewPager
    1262:1262:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1337:1338:void updateAllTabs() -> updateAllTabs
    1409:1414:void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams) -> updateTabViewLayoutParams
    1667:1672:void updateTabViews(boolean) -> updateTabViews
com.google.android.material.tabs.TabLayout$1 -> com.google.android.material.tabs.TabLayout$1:
    1543:1543:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    1546:1546:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.tabs.TabLayout$AdapterChangeListener -> com.google.android.material.tabs.TabLayout$AdapterChangeListener:
    2862:2862:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    2869:2870:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    2875:2875:void setAutoRefresh(boolean) -> setAutoRefresh
com.google.android.material.tabs.TabLayout$PagerAdapterObserver -> com.google.android.material.tabs.TabLayout$PagerAdapterObserver:
    2846:2846:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    2850:2850:void onChanged() -> onChanged
    2855:2855:void onInvalidated() -> onInvalidated
com.google.android.material.tabs.TabLayout$SlidingTabIndicator -> com.google.android.material.tabs.TabLayout$SlidingTabIndicator:
    2385:2389:void <init>(com.google.android.material.tabs.TabLayout,android.content.Context) -> <init>
    2566:2615:void animateIndicatorToPosition(int,int) -> animateIndicatorToPosition
    2632:2642:void calculateTabViewContentBounds(com.google.android.material.tabs.TabLayout$TabView,android.graphics.RectF) -> calculateTabViewContentBounds
    2407:2409:boolean childrenNeedLayout() -> childrenNeedLayout
    2648:2699:void draw(android.graphics.Canvas) -> draw
    2502:2514:void onLayout(boolean,int,int,int,int) -> onLayout
    2446:2495:void onMeasure(int,int) -> onMeasure
    2432:2439:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2557:2561:void setIndicatorPosition(int,int) -> setIndicatorPosition
    2417:2423:void setIndicatorPositionFromTabPosition(int,float) -> setIndicatorPositionFromTabPosition
    2393:2395:void setSelectedIndicatorColor(int) -> setSelectedIndicatorColor
    2400:2402:void setSelectedIndicatorHeight(int) -> setSelectedIndicatorHeight
    2519:2553:void updateIndicatorPosition() -> updateIndicatorPosition
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1 -> com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1:
    2598:2598:void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,int,int,int,int) -> <init>
    2601:2602:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2 -> com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2:
    2608:2608:void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,int) -> <init>
    2611:2612:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.tabs.TabLayout$Tab -> com.google.android.material.tabs.TabLayout$Tab:
    1704:1695:void <init>() -> <init>
    1679:1679:java.lang.CharSequence access$100(com.google.android.material.tabs.TabLayout$Tab) -> access$100
    1679:1679:java.lang.CharSequence access$200(com.google.android.material.tabs.TabLayout$Tab) -> access$200
    1734:1734:android.view.View getCustomView() -> getCustomView
    1780:1780:android.graphics.drawable.Drawable getIcon() -> getIcon
    1790:1790:int getPosition() -> getPosition
    1804:1804:java.lang.CharSequence getText() -> getText
    1879:1880:boolean isSelected() -> isSelected
    1939:1946:void reset() -> reset
    1871:1872:void select() -> select
    1913:1914:com.google.android.material.tabs.TabLayout$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    1750:1751:com.google.android.material.tabs.TabLayout$Tab setCustomView(android.view.View) -> setCustomView
    1769:1770:com.google.android.material.tabs.TabLayout$Tab setCustomView(int) -> setCustomView
    1815:1816:com.google.android.material.tabs.TabLayout$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    1794:1794:void setPosition(int) -> setPosition
    1843:1850:com.google.android.material.tabs.TabLayout$Tab setText(java.lang.CharSequence) -> setText
    1933:1934:void updateView() -> updateView
com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener -> com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener:
    2769:2770:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    2775:2776:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    2782:2793:void onPageScrolled(int,float,int) -> onPageScrolled
    2799:2809:void onPageSelected(int) -> onPageSelected
    2814:2814:void reset() -> reset
com.google.android.material.tabs.TabLayout$TabView -> com.google.android.material.tabs.TabLayout$TabView:
    1962:1970:void <init>(com.google.android.material.tabs.TabLayout,android.content.Context) -> <init>
    1950:1950:void access$000(com.google.android.material.tabs.TabLayout$TabView,android.content.Context) -> access$000
    1950:1950:void access$300(com.google.android.material.tabs.TabLayout$TabView,android.graphics.Canvas) -> access$300
    1950:1950:int access$500(com.google.android.material.tabs.TabLayout$TabView) -> access$500
    2366:2366:float approximateLineWidth(android.text.Layout,int,float) -> approximateLineWidth
    2030:2032:void drawBackground(android.graphics.Canvas) -> drawBackground
    2038:2047:void drawableStateChanged() -> drawableStateChanged
    2349:2352:int getContentWidth() -> getContentWidth
    2092:2094:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2100:2102:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    2107:2164:void onMeasure(int,int) -> onMeasure
    2053:2059:boolean performClick() -> performClick
    2178:2179:void reset() -> reset
    2068:2086:void setSelected(boolean) -> setSelected
    2171:2173:void setTab(com.google.android.material.tabs.TabLayout$Tab) -> setTab
    2183:2265:void update() -> update
    1975:2016:void updateBackgroundDrawable(android.content.Context) -> updateBackgroundDrawable
    2269:2271:void updateOrientation() -> updateOrientation
    2279:2335:void updateTextAndIcon(android.widget.TextView,android.widget.ImageView) -> updateTextAndIcon
com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener -> com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener:
    2825:2826:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    2831:2831:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
com.google.android.material.textfield.CutoutDrawable -> com.google.android.material.textfield.CutoutDrawable:
    42:45:void <init>() -> <init>
    81:87:void draw(android.graphics.Canvas) -> draw
    55:55:boolean hasCutout() -> hasCutout
    112:113:void postDraw(android.graphics.Canvas) -> postDraw
    91:98:void preDraw(android.graphics.Canvas) -> preDraw
    76:76:void removeCutout() -> removeCutout
    103:107:void saveCanvasLayer(android.graphics.Canvas) -> saveCanvasLayer
    61:66:void setCutout(float,float,float,float) -> setCutout
    71:71:void setCutout(android.graphics.RectF) -> setCutout
    49:51:void setPaintStyles() -> setPaintStyles
    118:118:boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback) -> useHardwareLayer
com.google.android.material.textfield.IndicatorViewController -> com.google.android.material.textfield.IndicatorViewController:
    118:122:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    57:57:int access$002(com.google.android.material.textfield.IndicatorViewController,int) -> access$002
    57:57:android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator) -> access$102
    57:57:android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController) -> access$200
    359:387:void addIndicator(android.widget.TextView,int) -> addIndicator
    343:345:void adjustIndicatorPadding() -> adjustIndicatorPadding
    355:355:boolean canAdjustIndicatorPadding() -> canAdjustIndicatorPadding
    321:322:void cancelCaptionAnimator() -> cancelCaptionAnimator
    297:299:void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int) -> createCaptionAnimators
    306:308:android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean) -> createCaptionOpacityAnimator
    313:316:android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView) -> createCaptionTranslationYAnimator
    484:484:boolean errorShouldBeShown() -> errorShouldBeShown
    336:334:android.widget.TextView getCaptionViewFromDisplayState(int) -> getCaptionViewFromDisplayState
    508:508:java.lang.CharSequence getErrorText() -> getErrorText
    532:532:int getErrorViewCurrentTextColor() -> getErrorViewCurrentTextColor
    537:537:android.content.res.ColorStateList getErrorViewTextColors() -> getErrorViewTextColors
    512:512:java.lang.CharSequence getHelperText() -> getHelperText
    555:555:int getHelperTextViewCurrentTextColor() -> getHelperTextViewCurrentTextColor
    163:175:void hideError() -> hideError
    139:145:void hideHelperText() -> hideHelperText
    488:490:boolean isCaptionStateError(int) -> isCaptionStateError
    442:442:boolean isErrorEnabled() -> isErrorEnabled
    446:446:boolean isHelperTextEnabled() -> isHelperTextEnabled
    391:403:void removeIndicator(android.widget.TextView,int) -> removeIndicator
    263:280:void setCaptionViewVisibilities(int,int) -> setCaptionViewVisibilities
    414:438:void setErrorEnabled(boolean) -> setErrorEnabled
    547:549:void setErrorTextAppearance(int) -> setErrorTextAppearance
    541:542:void setErrorViewTextColor(android.content.res.ColorStateList) -> setErrorViewTextColor
    570:572:void setHelperTextAppearance(int) -> setHelperTextAppearance
    451:476:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    564:565:void setHelperTextViewTextColor(android.content.res.ColorStateList) -> setHelperTextViewTextColor
    526:526:void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface) -> setTextViewTypeface
    517:520:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    408:408:void setViewGroupGoneIfEmpty(android.view.ViewGroup,int) -> setViewGroupGoneIfEmpty
    189:193:boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence) -> shouldAnimateCaptionView
    150:158:void showError(java.lang.CharSequence) -> showError
    126:134:void showHelper(java.lang.CharSequence) -> showHelper
    202:253:void updateCaptionViewsVisibility(int,int,boolean) -> updateCaptionViewsVisibility
com.google.android.material.textfield.IndicatorViewController$1 -> com.google.android.material.textfield.IndicatorViewController$1:
    227:227:void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView) -> <init>
    230:235:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    242:243:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.TextInputEditText -> com.google.android.material.textfield.TextInputEditText:
    40:40:void <init>(android.content.Context) -> <init>
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:59:java.lang.CharSequence getHint() -> getHint
    87:88:java.lang.CharSequence getHintFromLayout() -> getHintFromLayout
    75:80:com.google.android.material.textfield.TextInputLayout getTextInputLayout() -> getTextInputLayout
    64:68:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
com.google.android.material.textfield.TextInputLayout -> com.google.android.material.textfield.TextInputLayout:
    243:243:void <init>(android.content.Context) -> <init>
    247:247:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    251:371:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    143:143:boolean access$000(com.google.android.material.textfield.TextInputLayout) -> access$000
    376:391:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2049:2065:void animateToExpansionFraction(float) -> animateToExpansionFraction
    1342:1369:void applyBoxAttributes() -> applyBoxAttributes
    1954:1957:void applyCutoutPadding(android.graphics.RectF) -> applyCutoutPadding
    1865:1878:void applyPasswordToggleTint() -> applyPasswordToggleTint
    425:435:void assignBoxBackgroundByMode() -> assignBoxBackgroundByMode
    1254:1260:int calculateBoxBackgroundTop() -> calculateBoxBackgroundTop
    1285:1289:int calculateCollapsedTextTopBounds() -> calculateCollapsedTextTopBounds
    1269:1278:int calculateLabelMarginTop() -> calculateLabelMarginTop
    1948:1949:void closeCutout() -> closeCutout
    1919:1929:void collapseHint(boolean) -> collapseHint
    1934:1934:boolean cutoutEnabled() -> cutoutEnabled
    641:642:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    1522:1524:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1574:1579:void draw(android.graphics.Canvas) -> draw
    1967:1996:void drawableStateChanged() -> drawableStateChanged
    1407:1440:void ensureBackgroundDrawableStateWorkaround() -> ensureBackgroundDrawableStateWorkaround
    2033:2044:void expandHint(boolean) -> expandHint
    397:398:android.graphics.drawable.Drawable getBoxBackground() -> getBoxBackground
    493:493:int getBoxBackgroundColor() -> getBoxBackgroundColor
    573:573:float getBoxCornerRadiusBottomEnd() -> getBoxCornerRadiusBottomEnd
    583:583:float getBoxCornerRadiusBottomStart() -> getBoxCornerRadiusBottomStart
    563:563:float getBoxCornerRadiusTopEnd() -> getBoxCornerRadiusTopEnd
    553:553:float getBoxCornerRadiusTopStart() -> getBoxCornerRadiusTopStart
    461:461:int getBoxStrokeColor() -> getBoxStrokeColor
    587:599:float[] getCornerRadiiAsArray() -> getCornerRadiiAsArray
    1148:1148:int getCounterMaxLength() -> getCounterMaxLength
    1157:1158:java.lang.CharSequence getCounterOverflowDescription() -> getCounterOverflowDescription
    927:927:android.content.res.ColorStateList getDefaultHintTextColor() -> getDefaultHintTextColor
    795:795:android.widget.EditText getEditText() -> getEditText
    1535:1535:java.lang.CharSequence getError() -> getError
    958:958:int getErrorCurrentTextColors() -> getErrorCurrentTextColors
    2090:2090:int getErrorTextCurrentColor() -> getErrorTextCurrentColor
    1547:1548:java.lang.CharSequence getHelperText() -> getHelperText
    1035:1035:int getHelperTextCurrentTextColor() -> getHelperTextCurrentTextColor
    830:830:java.lang.CharSequence getHint() -> getHint
    2085:2085:float getHintCollapsedTextHeight() -> getHintCollapsedTextHeight
    2080:2080:int getHintCurrentCollapsedTextColor() -> getHintCurrentCollapsedTextColor
    1742:1742:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    1731:1731:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    636:636:android.graphics.Typeface getTypeface() -> getTypeface
    1856:1857:boolean hasPasswordTransformation() -> hasPasswordTransformation
    1024:1024:boolean isHelperTextEnabled() -> isHelperTextEnabled
    892:892:boolean isProvidingHint() -> isProvidingHint
    417:421:void onApplyBoxBackgroundMode() -> onApplyBoxBackgroundMode
    1885:1913:void onLayout(boolean,int,int,int,int) -> onLayout
    1585:1586:void onMeasure(int,int) -> onMeasure
    1507:1517:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1496:1501:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1938:1944:void openCutout() -> openCutout
    1820:1838:void passwordVisibilityToggleRequested(boolean) -> passwordVisibilityToggleRequested
    1133:1137:void recursiveSetEnabled(android.view.ViewGroup,boolean) -> recursiveSetEnabled
    1324:1326:void setBoxAttributes() -> setBoxAttributes
    480:482:void setBoxBackgroundColor(int) -> setBoxBackgroundColor
    470:470:void setBoxBackgroundColorResource(int) -> setBoxBackgroundColorResource
    409:413:void setBoxBackgroundMode(int) -> setBoxBackgroundMode
    534:542:void setBoxCornerRadii(float,float,float,float) -> setBoxCornerRadii
    511:510:void setBoxCornerRadiiResources(int,int,int,int) -> setBoxCornerRadiiResources
    448:450:void setBoxStrokeColor(int) -> setBoxStrokeColor
    1071:1090:void setCounterEnabled(boolean) -> setCounterEnabled
    1111:1118:void setCounterMaxLength(int) -> setCounterMaxLength
    913:917:void setDefaultHintTextColor(android.content.res.ColorStateList) -> setDefaultHintTextColor
    663:664:void setEditText(android.widget.EditText) -> setEditText
    1128:1129:void setEnabled(boolean) -> setEnabled
    1049:1061:void setError(java.lang.CharSequence) -> setError
    938:938:void setErrorEnabled(boolean) -> setErrorEnabled
    947:947:void setErrorTextAppearance(int) -> setErrorTextAppearance
    952:952:void setErrorTextColor(android.content.res.ColorStateList) -> setErrorTextColor
    1005:1013:void setHelperText(java.lang.CharSequence) -> setHelperText
    1029:1029:void setHelperTextColor(android.content.res.ColorStateList) -> setHelperTextColor
    988:988:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    967:967:void setHelperTextTextAppearance(int) -> setHelperTextTextAppearance
    805:807:void setHint(java.lang.CharSequence) -> setHint
    1569:1569:void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    845:871:void setHintEnabled(boolean) -> setHintEnabled
    812:817:void setHintInternal(java.lang.CharSequence) -> setHintInternal
    901:907:void setHintTextAppearance(int) -> setHintTextAppearance
    1704:1703:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    1717:1719:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    1674:1673:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    1687:1689:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    1764:1776:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    1792:1794:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    1806:1808:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    1204:1222:void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int) -> setTextAppearanceCompatWithErrorFallback
    1850:1851:void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate) -> setTextInputAccessibilityDelegate
    619:626:void setTypeface(android.graphics.Typeface) -> setTypeface
    1861:1861:boolean shouldShowPasswordIcon() -> shouldShowPasswordIcon
    1164:1197:void updateCounter(int) -> updateCounter
    1373:1402:void updateEditTextBackground() -> updateEditTextBackground
    1296:1319:void updateEditTextBackgroundBounds() -> updateEditTextBackgroundBounds
    742:747:void updateInputLayoutMargins() -> updateInputLayoutMargins
    752:752:void updateLabelState(boolean) -> updateLabelState
    756:782:void updateLabelState(boolean,boolean) -> updateLabelState
    1590:1657:void updatePasswordToggleView() -> updatePasswordToggleView
    1227:1250:void updateTextInputBoxBounds() -> updateTextInputBoxBounds
    2000:2028:void updateTextInputBoxState() -> updateTextInputBoxState
com.google.android.material.textfield.TextInputLayout$1 -> com.google.android.material.textfield.TextInputLayout$1:
    694:694:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    697:699:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.textfield.TextInputLayout$2 -> com.google.android.material.textfield.TextInputLayout$2:
    1606:1606:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    1609:1609:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.TextInputLayout$3 -> com.google.android.material.textfield.TextInputLayout$3:
    2057:2057:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    2060:2060:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate -> com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate:
    2102:2103:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    2108:2132:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2138:2143:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
com.google.android.material.textfield.TextInputLayout$SavedState -> com.google.android.material.textfield.TextInputLayout$SavedState:
    1475:1475:void <clinit>() -> <clinit>
    1450:1450:void <init>(android.os.Parcelable) -> <init>
    1454:1456:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1468:1469:java.lang.String toString() -> toString
    1461:1463:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.textfield.TextInputLayout$SavedState$1 -> com.google.android.material.textfield.TextInputLayout$SavedState$1:
    1476:1476:void <init>() -> <init>
    1476:1476:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1476:1476:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1479:1479:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1484:1484:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1476:1476:java.lang.Object[] newArray(int) -> newArray
    1489:1489:com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int) -> newArray
com.google.android.material.theme.MaterialComponentsViewInflater -> com.google.android.material.theme.MaterialComponentsViewInflater:
    32:32:void <init>() -> <init>
    37:37:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
com.google.android.material.transformation.ExpandableBehavior -> com.google.android.material.transformation.ExpandableBehavior:
    61:59:void <init>() -> <init>
    64:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:int access$000(com.google.android.material.transformation.ExpandableBehavior) -> access$000
    141:144:boolean didStateChange(boolean) -> didStateChange
    128:132:com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findExpandableWidget
    116:120:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    88:95:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
com.google.android.material.transformation.ExpandableBehavior$1 -> com.google.android.material.transformation.ExpandableBehavior$1:
    96:96:void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget) -> <init>
    99:102:boolean onPreDraw() -> onPreDraw
com.google.android.material.transformation.ExpandableTransformationBehavior -> com.google.android.material.transformation.ExpandableTransformationBehavior:
    42:42:void <init>() -> <init>
    45:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> access$002
    70:89:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
com.google.android.material.transformation.ExpandableTransformationBehavior$1 -> com.google.android.material.transformation.ExpandableTransformationBehavior$1:
    78:78:void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior) -> <init>
    81:81:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior -> com.google.android.material.transformation.FabTransformationBehavior:
    79:77:void <init>() -> <init>
    82:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    633:641:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> calculateChildContentContainer
    592:608:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> calculateChildVisibleBoundsAtEndOfExpansion
    556:565:float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterX
    569:578:float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterY
    492:512:float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationX
    517:537:float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationY
    613:626:float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float) -> calculateValueOfAnimationAtEndOfExpansion
    543:552:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> calculateWindowBounds
    459:488:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createChildrenFadeAnimation
    419:448:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createColorAnimation
    187:201:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createElevationAnimation
    334:408:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> createExpansionAnimation
    272:309:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createIconFadeAnimation
    695:703:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List) -> createPostFillRadialExpansion
    673:681:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List) -> createPreFillRadialExpansion
    213:261:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> createTranslationAnimation
    658:660:int getBackgroundTint(android.view.View) -> getBackgroundTint
    88:89:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    104:107:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    115:171:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    650:651:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> toViewGroupOrNull
com.google.android.material.transformation.FabTransformationBehavior$1 -> com.google.android.material.transformation.FabTransformationBehavior$1:
    149:149:void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    162:166:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    152:156:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$2 -> com.google.android.material.transformation.FabTransformationBehavior$2:
    297:297:void <init>(com.google.android.material.transformation.FabTransformationBehavior,android.view.View) -> <init>
    302:302:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transformation.FabTransformationBehavior$3 -> com.google.android.material.transformation.FabTransformationBehavior$3:
    310:310:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable) -> <init>
    319:319:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    314:314:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$4 -> com.google.android.material.transformation.FabTransformationBehavior$4:
    362:362:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    367:369:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec -> com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec:
    709:709:void <init>() -> <init>
com.google.android.material.transformation.FabTransformationScrimBehavior -> com.google.android.material.transformation.FabTransformationScrimBehavior:
    51:49:void <init>() -> <init>
    54:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    104:117:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> createScrimAnimation
    59:59:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    72:79:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    65:65:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
com.google.android.material.transformation.FabTransformationScrimBehavior$1 -> com.google.android.material.transformation.FabTransformationScrimBehavior$1:
    80:80:void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    90:91:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    83:84:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationSheetBehavior -> com.google.android.material.transformation.FabTransformationSheetBehavior:
    47:47:void <init>() -> <init>
    50:50:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:64:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> onCreateMotionSpec
    72:73:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
    77:118:void updateImportantForAccessibility(android.view.View,boolean) -> updateImportantForAccessibility
com.google.android.material.transformation.TransformationChildCard -> com.google.android.material.transformation.TransformationChildCard:
    35:35:void <init>(android.content.Context) -> <init>
    39:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.android.material.transformation.TransformationChildLayout -> com.google.android.material.transformation.TransformationChildLayout:
    36:36:void <init>(android.content.Context) -> <init>
    40:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.common.base.Ascii -> com.google.common.base.Ascii:
<<<<<<< HEAD
    438:448:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
com.google.common.base.Equivalence -> com.google.common.base.Equivalence:
    44:44:void <init>() -> <init>
    306:306:com.google.common.base.Equivalence equals() -> equals
    71:71:boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    104:104:int hash(java.lang.Object) -> hash
    318:318:com.google.common.base.Equivalence identity() -> identity
com.google.common.base.Equivalence$Equals -> com.google.common.base.Equivalence$Equals:
    324:324:void <clinit>() -> <clinit>
    321:321:void <init>() -> <init>
    327:327:boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    330:330:int doHash(java.lang.Object) -> doHash
com.google.common.base.Equivalence$Identity -> com.google.common.base.Equivalence$Identity:
    342:342:void <clinit>() -> <clinit>
    339:339:void <init>() -> <init>
    349:349:int doHash(java.lang.Object) -> doHash
com.google.common.base.Joiner -> com.google.common.base.Joiner:
    66:66:void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner$1) -> <init>
    83:84:void <init>(java.lang.String) -> <init>
    87:88:void <init>(com.google.common.base.Joiner) -> <init>
    106:111:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    152:154:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    183:183:java.lang.String join(java.lang.Iterable) -> join
    193:193:java.lang.String join(java.util.Iterator) -> join
    201:201:java.lang.String join(java.lang.Object[]) -> join
    71:71:com.google.common.base.Joiner on(java.lang.String) -> on
    78:78:com.google.common.base.Joiner on(char) -> on
    433:434:java.lang.CharSequence toString(java.lang.Object) -> toString
    218:219:com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    278:278:com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
com.google.common.base.Joiner$1 -> com.google.common.base.Joiner$1:
    219:219:void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner,java.lang.String) -> <init>
    221:221:java.lang.CharSequence toString(java.lang.Object) -> toString
    225:225:com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
com.google.common.base.Joiner$MapJoiner -> com.google.common.base.Joiner$MapJoiner:
    299:299:void <init>(com.google.common.base.Joiner,java.lang.String,com.google.common.base.Joiner$1) -> <init>
    303:305:void <init>(com.google.common.base.Joiner,java.lang.String) -> <init>
com.google.common.base.MoreObjects -> com.google.common.base.MoreObjects:
    52:52:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
    130:144:java.lang.String simpleName(java.lang.Class) -> simpleName
    95:95:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
com.google.common.base.MoreObjects$ToStringHelper -> com.google.common.base.MoreObjects$ToStringHelper:
    153:153:void <init>(java.lang.String,com.google.common.base.MoreObjects$1) -> <init>
    162:163:void <init>(java.lang.String) -> <init>
    185:185:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    235:235:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int) -> add
    245:245:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,long) -> add
    366:367:com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder() -> addHolder
    372:373:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.Object) -> addHolder
    378:380:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> addHolder
    257:257:com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object) -> addValue
    346:362:java.lang.String toString() -> toString
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder -> com.google.common.base.MoreObjects$ToStringHelper$ValueHolder:
    384:384:void <init>() -> <init>
    384:384:void <init>(com.google.common.base.MoreObjects$1) -> <init>
com.google.common.base.Objects -> com.google.common.base.Objects:
    60:60:boolean equal(java.lang.Object,java.lang.Object) -> equal
    84:84:int hashCode(java.lang.Object[]) -> hashCode
com.google.common.base.Platform -> com.google.common.base.Platform:
    34:34:long systemNanoTime() -> systemNanoTime
com.google.common.base.Preconditions -> com.google.common.base.Preconditions:
    317:319:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    360:362:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    395:389:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    108:108:void checkArgument(boolean) -> checkArgument
    122:122:void checkArgument(boolean,java.lang.Object) -> checkArgument
    145:145:void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    292:292:int checkElementIndex(int,int) -> checkElementIndex
    310:310:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    210:210:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    336:336:int checkPositionIndex(int,int) -> checkPositionIndex
    353:353:int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    383:383:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    158:158:void checkState(boolean) -> checkState
    173:173:void checkState(boolean,java.lang.Object) -> checkState
    197:197:void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    410:438:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.google.common.base.Predicates -> com.google.common.base.Predicates:
    346:346:void <clinit>() -> <clinit>
    231:231:com.google.common.base.Predicate in(java.util.Collection) -> in
com.google.common.base.Predicates$InPredicate -> com.google.common.base.Predicates$InPredicate:
    503:503:void <init>(java.util.Collection,com.google.common.base.Predicates$1) -> <init>
    506:507:void <init>(java.util.Collection) -> <init>
    513:513:boolean apply(java.lang.Object) -> apply
    522:524:boolean equals(java.lang.Object) -> equals
    530:530:int hashCode() -> hashCode
    534:534:java.lang.String toString() -> toString
com.google.common.base.Ticker -> com.google.common.base.Ticker:
    57:57:void <clinit>() -> <clinit>
    40:40:void <init>() -> <init>
    54:54:com.google.common.base.Ticker systemTicker() -> systemTicker
com.google.common.base.Ticker$1 -> com.google.common.base.Ticker$1:
    57:57:void <init>() -> <init>
    60:60:long read() -> read
com.google.common.collect.AbstractIndexedListIterator -> com.google.common.collect.AbstractIndexedListIterator:
    68:71:void <init>(int,int) -> <init>
    76:76:boolean hasNext() -> hasNext
    94:94:boolean hasPrevious() -> hasPrevious
    81:82:java.lang.Object next() -> next
    89:89:int nextIndex() -> nextIndex
    99:100:java.lang.Object previous() -> previous
    107:107:int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.google.common.collect.AbstractIterator:
    68:65:void <init>() -> <init>
    124:124:java.lang.Object endOfData() -> endOfData
    130:138:boolean hasNext() -> hasNext
    153:154:java.lang.Object next() -> next
    142:145:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.collect.AbstractIterator$1 -> com.google.common.collect.AbstractIterator$1:
    131:131:void <clinit>() -> <clinit>
=======
    404:414:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
com.google.common.base.Equivalence -> com.google.common.base.Equivalence:
    39:39:void <init>() -> <init>
    323:323:com.google.common.base.Equivalence equals() -> equals
    65:65:boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    112:112:int hash(java.lang.Object) -> hash
    335:335:com.google.common.base.Equivalence identity() -> identity
    76:76:boolean test(java.lang.Object,java.lang.Object) -> test
com.google.common.base.Equivalence$Equals -> com.google.common.base.Equivalence$Equals:
    340:340:void <clinit>() -> <clinit>
    338:338:void <init>() -> <init>
    344:344:boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    349:349:int doHash(java.lang.Object) -> doHash
com.google.common.base.Equivalence$Identity -> com.google.common.base.Equivalence$Identity:
    361:361:void <clinit>() -> <clinit>
    359:359:void <init>() -> <init>
    370:370:int doHash(java.lang.Object) -> doHash
com.google.common.base.Joiner -> com.google.common.base.Joiner:
    79:80:void <init>(java.lang.String) -> <init>
    104:109:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    152:154:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    188:188:java.lang.String join(java.lang.Iterable) -> join
    198:198:java.lang.String join(java.util.Iterator) -> join
    206:206:java.lang.String join(java.lang.Object[]) -> join
    69:69:com.google.common.base.Joiner on(java.lang.String) -> on
    456:457:java.lang.CharSequence toString(java.lang.Object) -> toString
com.google.common.base.MoreObjects -> com.google.common.base.MoreObjects:
    61:61:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
    105:105:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
com.google.common.base.MoreObjects$ToStringHelper -> com.google.common.base.MoreObjects$ToStringHelper:
    140:140:void <init>(java.lang.String,com.google.common.base.MoreObjects$1) -> <init>
    147:148:void <init>(java.lang.String) -> <init>
    171:171:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    221:221:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int) -> add
    231:231:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,long) -> add
    361:362:com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder() -> addHolder
    367:368:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.Object) -> addHolder
    373:375:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> addHolder
    242:242:com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object) -> addValue
    334:357:java.lang.String toString() -> toString
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder -> com.google.common.base.MoreObjects$ToStringHelper$ValueHolder:
    379:379:void <init>() -> <init>
    379:379:void <init>(com.google.common.base.MoreObjects$1) -> <init>
com.google.common.base.Objects -> com.google.common.base.Objects:
    52:52:boolean equal(java.lang.Object,java.lang.Object) -> equal
    77:77:int hashCode(java.lang.Object[]) -> hashCode
com.google.common.base.Preconditions -> com.google.common.base.Preconditions:
    1355:1357:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    1400:1402:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    1435:1429:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    121:121:void checkArgument(boolean) -> checkArgument
    135:135:void checkArgument(boolean,java.lang.Object) -> checkArgument
    210:210:void checkArgument(boolean,java.lang.String,java.lang.Object) -> checkArgument
    1330:1330:int checkElementIndex(int,int) -> checkElementIndex
    1348:1348:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    882:882:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    1375:1375:int checkPositionIndex(int,int) -> checkPositionIndex
    1393:1393:int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    1423:1423:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    488:488:void checkState(boolean) -> checkState
    504:504:void checkState(boolean,java.lang.Object) -> checkState
    585:585:void checkState(boolean,java.lang.String,java.lang.Object) -> checkState
    1451:1481:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.google.common.collect.AbstractIndexedListIterator -> com.google.common.collect.AbstractIndexedListIterator:
    61:64:void <init>(int,int) -> <init>
    69:69:boolean hasNext() -> hasNext
    87:87:boolean hasPrevious() -> hasPrevious
    74:75:java.lang.Object next() -> next
    82:82:int nextIndex() -> nextIndex
    92:93:java.lang.Object previous() -> previous
    100:100:int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.google.common.collect.AbstractIterator:
    68:65:void <init>() -> <init>
    121:121:java.lang.Object endOfData() -> endOfData
    128:136:boolean hasNext() -> hasNext
    152:153:java.lang.Object next() -> next
    140:143:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.collect.AbstractIterator$1 -> com.google.common.collect.AbstractIterator$1:
    129:129:void <clinit>() -> <clinit>
>>>>>>> rename package name,fix action event info list same time crash
com.google.common.collect.AbstractIterator$State -> com.google.common.collect.AbstractIterator$State:
    72:70:void <clinit>() -> <clinit>
    70:70:void <init>(java.lang.String,int) -> <init>
    70:70:com.google.common.collect.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    70:70:com.google.common.collect.AbstractIterator$State[] values() -> values
com.google.common.collect.AbstractMapEntry -> com.google.common.collect.AbstractMapEntry:
<<<<<<< HEAD
    33:33:void <init>() -> <init>
    47:49:boolean equals(java.lang.Object) -> equals
    56:58:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultiset -> com.google.common.collect.AbstractMultiset:
    47:47:void <init>() -> <init>
    80:80:boolean add(java.lang.Object) -> add
    117:117:boolean addAll(java.util.Collection) -> addAll
    60:60:boolean contains(java.lang.Object) -> contains
    138:140:java.util.Set elementSet() -> elementSet
    167:169:java.util.Set entrySet() -> entrySet
    202:202:boolean equals(java.lang.Object) -> equals
    212:212:int hashCode() -> hashCode
    64:64:java.util.Iterator iterator() -> iterator
    90:90:boolean remove(java.lang.Object) -> remove
    121:121:boolean removeAll(java.util.Collection) -> removeAll
    125:125:boolean retainAll(java.util.Collection) -> retainAll
    222:222:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultiset$EntrySet -> com.google.common.collect.AbstractMultiset$EntrySet:
    174:174:void <init>(com.google.common.collect.AbstractMultiset) -> <init>
    180:180:java.util.Iterator iterator() -> iterator
    184:184:int size() -> size
com.google.common.collect.AbstractSequentialIterator -> com.google.common.collect.AbstractSequentialIterator:
    52:53:void <init>(java.lang.Object) -> <init>
    66:66:boolean hasNext() -> hasNext
    71:72:java.lang.Object next() -> next
com.google.common.collect.CollectPreconditions -> com.google.common.collect.CollectPreconditions:
    39:39:int checkNonnegative(int,java.lang.String) -> checkNonnegative
    49:49:void checkRemove(boolean) -> checkRemove
com.google.common.collect.Collections2 -> com.google.common.collect.Collections2:
    323:323:void <clinit>() -> <clinit>
    320:320:java.util.Collection cast(java.lang.Iterable) -> cast
    290:290:boolean containsAllImpl(java.util.Collection,java.util.Collection) -> containsAllImpl
    108:110:boolean safeContains(java.util.Collection,java.lang.Object) -> safeContains
    124:126:boolean safeRemove(java.util.Collection,java.lang.Object) -> safeRemove
com.google.common.collect.ConcurrentHashMultiset -> com.google.common.collect.ConcurrentHashMultiset:
    140:142:void <init>(java.util.concurrent.ConcurrentMap) -> <init>
    57:57:java.util.concurrent.ConcurrentMap access$100(com.google.common.collect.ConcurrentHashMultiset) -> access$100
    57:57:boolean add(java.lang.Object) -> add
    212:246:int add(java.lang.Object,int) -> add
    57:57:boolean addAll(java.util.Collection) -> addAll
    529:529:void clear() -> clear
    57:57:boolean contains(java.lang.Object) -> contains
    154:155:int count(java.lang.Object) -> count
    87:87:com.google.common.collect.ConcurrentHashMultiset create() -> create
    449:450:java.util.Set createElementSet() -> createElementSet
    476:476:java.util.Set createEntrySet() -> createEntrySet
    480:480:int distinctElements() -> distinctElements
    57:57:java.util.Set elementSet() -> elementSet
    490:508:java.util.Iterator entryIterator() -> entryIterator
    57:57:java.util.Set entrySet() -> entrySet
    57:57:boolean equals(java.lang.Object) -> equals
    57:57:int hashCode() -> hashCode
    484:484:boolean isEmpty() -> isEmpty
    57:57:java.util.Iterator iterator() -> iterator
    57:57:boolean remove(java.lang.Object) -> remove
    278:294:int remove(java.lang.Object,int) -> remove
    57:57:boolean removeAll(java.util.Collection) -> removeAll
    57:57:boolean retainAll(java.util.Collection) -> retainAll
    350:384:int setCount(java.lang.Object,int) -> setCount
    405:437:boolean setCount(java.lang.Object,int,int) -> setCount
    166:169:int size() -> size
    190:194:java.util.List snapshot() -> snapshot
    178:178:java.lang.Object[] toArray() -> toArray
    182:182:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    57:57:java.lang.String toString() -> toString
com.google.common.collect.ConcurrentHashMultiset$1 -> com.google.common.collect.ConcurrentHashMultiset$1:
    450:450:void <init>(com.google.common.collect.ConcurrentHashMultiset,java.util.Set) -> <init>
    457:457:boolean contains(java.lang.Object) -> contains
    462:462:boolean containsAll(java.util.Collection) -> containsAll
    450:450:java.lang.Object delegate() -> delegate
    450:450:java.util.Collection delegate() -> delegate
    452:452:java.util.Set delegate() -> delegate
    466:466:boolean remove(java.lang.Object) -> remove
    470:470:boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.ConcurrentHashMultiset$2 -> com.google.common.collect.ConcurrentHashMultiset$2:
    491:492:void <init>(com.google.common.collect.ConcurrentHashMultiset) -> <init>
    491:491:java.lang.Object computeNext() -> computeNext
    496:502:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
com.google.common.collect.ConcurrentHashMultiset$3 -> com.google.common.collect.ConcurrentHashMultiset$3:
    508:508:void <init>(com.google.common.collect.ConcurrentHashMultiset,java.util.Iterator) -> <init>
    508:508:java.lang.Object delegate() -> delegate
    512:512:java.util.Iterator delegate() -> delegate
    508:508:java.lang.Object next() -> next
    516:517:com.google.common.collect.Multiset$Entry next() -> next
    521:523:void remove() -> remove
com.google.common.collect.ConcurrentHashMultiset$EntrySet -> com.google.common.collect.ConcurrentHashMultiset$EntrySet:
    532:532:void <init>(com.google.common.collect.ConcurrentHashMultiset) -> <init>
    532:532:void <init>(com.google.common.collect.ConcurrentHashMultiset,com.google.common.collect.ConcurrentHashMultiset$1) -> <init>
    532:532:com.google.common.collect.Multiset multiset() -> multiset
    534:534:com.google.common.collect.ConcurrentHashMultiset multiset() -> multiset
    551:553:java.util.List snapshot() -> snapshot
    543:543:java.lang.Object[] toArray() -> toArray
    547:547:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ForwardingCollection -> com.google.common.collect.ForwardingCollection:
    53:53:void <init>() -> <init>
    84:84:boolean add(java.lang.Object) -> add
    99:99:boolean addAll(java.util.Collection) -> addAll
    109:109:void clear() -> clear
    74:74:boolean isEmpty() -> isEmpty
    59:59:java.util.Iterator iterator() -> iterator
    104:104:boolean retainAll(java.util.Collection) -> retainAll
    64:64:int size() -> size
    141:141:boolean standardContainsAll(java.util.Collection) -> standardContainsAll
    114:114:java.lang.Object[] toArray() -> toArray
    119:119:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ForwardingIterator -> com.google.common.collect.ForwardingIterator:
    37:37:void <init>() -> <init>
    43:43:boolean hasNext() -> hasNext
    48:48:java.lang.Object next() -> next
com.google.common.collect.ForwardingObject -> com.google.common.collect.ForwardingObject:
    56:56:void <init>() -> <init>
    72:72:java.lang.String toString() -> toString
com.google.common.collect.ForwardingSet -> com.google.common.collect.ForwardingSet:
    54:54:void <init>() -> <init>
    59:59:boolean equals(java.lang.Object) -> equals
    63:63:int hashCode() -> hashCode
    76:76:boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
com.google.common.collect.GenericMapMaker -> com.google.common.collect.GenericMapMaker:
    64:64:void <init>() -> <init>
    131:131:com.google.common.collect.MapMaker$RemovalListener getRemovalListener() -> getRemovalListener
com.google.common.collect.GenericMapMaker$NullListener -> com.google.common.collect.GenericMapMaker$NullListener:
    53:51:void <clinit>() -> <clinit>
    52:52:void <init>(java.lang.String,int) -> <init>
    51:51:com.google.common.collect.GenericMapMaker$NullListener valueOf(java.lang.String) -> valueOf
    51:51:com.google.common.collect.GenericMapMaker$NullListener[] values() -> values
com.google.common.collect.ImmutableAsList -> com.google.common.collect.ImmutableAsList:
    35:35:void <init>() -> <init>
=======
    31:31:void <init>() -> <init>
    64:64:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultiset -> com.google.common.collect.AbstractMultiset:
    45:45:void <init>() -> <init>
    62:62:boolean add(java.lang.Object) -> add
    107:107:boolean addAll(java.util.Collection) -> addAll
    55:55:boolean contains(java.lang.Object) -> contains
    131:133:java.util.Set elementSet() -> elementSet
    165:167:java.util.Set entrySet() -> entrySet
    208:208:boolean equals(java.lang.Object) -> equals
    218:218:int hashCode() -> hashCode
    75:75:boolean remove(java.lang.Object) -> remove
    113:113:boolean removeAll(java.util.Collection) -> removeAll
    119:119:boolean retainAll(java.util.Collection) -> retainAll
    229:229:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultiset$EntrySet -> com.google.common.collect.AbstractMultiset$EntrySet:
    173:173:void <init>(com.google.common.collect.AbstractMultiset) -> <init>
    181:181:java.util.Iterator iterator() -> iterator
    186:186:int size() -> size
com.google.common.collect.CollectPreconditions -> com.google.common.collect.CollectPreconditions:
    39:39:int checkNonnegative(int,java.lang.String) -> checkNonnegative
    54:54:void checkPositive(int,java.lang.String) -> checkPositive
    63:63:void checkRemove(boolean) -> checkRemove
com.google.common.collect.CollectSpliterators -> com.google.common.collect.CollectSpliterators:
    203:289:java.util.Spliterator flatMap(java.util.Spliterator,java.util.function.Function,int,long) -> flatMap
    39:39:java.util.Spliterator indexed(int,int,java.util.function.IntFunction) -> indexed
    48:96:java.util.Spliterator indexed(int,int,java.util.function.IntFunction,java.util.Comparator) -> indexed
com.google.common.collect.CollectSpliterators$1FlatMapSpliterator -> com.google.common.collect.CollectSpliterators$1FlatMapSpliterator:
    218:222:void <init>(java.util.Spliterator,java.util.Spliterator,int,long,java.util.function.Function) -> <init>
    286:286:int characteristics() -> characteristics
    278:281:long estimateSize() -> estimateSize
    244:249:void forEachRemaining(java.util.function.Consumer) -> forEachRemaining
    248:248:void lambda$forEachRemaining$1(java.util.function.Function,java.util.function.Consumer,java.lang.Object) -> lambda$forEachRemaining$1
    236:236:void lambda$tryAdvance$0(java.util.function.Function,java.lang.Object) -> lambda$tryAdvance$0$CollectSpliterators$1FlatMapSpliterator
    228:236:boolean tryAdvance(java.util.function.Consumer) -> tryAdvance
    254:269:java.util.Spliterator trySplit() -> trySplit
com.google.common.collect.CollectSpliterators$1WithCharacteristics -> com.google.common.collect.CollectSpliterators$1WithCharacteristics:
    53:54:void <init>(java.util.Spliterator$OfInt,java.util.function.IntFunction,int,java.util.Comparator) -> <init>
    81:81:int characteristics() -> characteristics
    76:76:long estimateSize() -> estimateSize
    64:64:void forEachRemaining(java.util.function.Consumer) -> forEachRemaining
    89:92:java.util.Comparator getComparator() -> getComparator
    64:64:void lambda$forEachRemaining$1(java.util.function.Consumer,java.util.function.IntFunction,int) -> lambda$forEachRemaining$1
    59:59:void lambda$tryAdvance$0(java.util.function.Consumer,java.util.function.IntFunction,int) -> lambda$tryAdvance$0
    59:59:boolean tryAdvance(java.util.function.Consumer) -> tryAdvance
    70:71:java.util.Spliterator trySplit() -> trySplit
com.google.common.collect.Collections2 -> com.google.common.collect.Collections2:
    357:357:java.util.Collection cast(java.lang.Iterable) -> cast
    323:324:boolean containsAllImpl(java.util.Collection,java.util.Collection) -> containsAllImpl
    101:103:boolean safeContains(java.util.Collection,java.lang.Object) -> safeContains
    114:116:boolean safeRemove(java.util.Collection,java.lang.Object) -> safeRemove
com.google.common.collect.ConcurrentHashMultiset -> com.google.common.collect.ConcurrentHashMultiset:
    126:128:void <init>(java.util.concurrent.ConcurrentMap) -> <init>
    59:59:java.util.concurrent.ConcurrentMap access$100(com.google.common.collect.ConcurrentHashMultiset) -> access$100
    204:239:int add(java.lang.Object,int) -> add
    554:554:void clear() -> clear
    58:58:boolean contains(java.lang.Object) -> contains
    141:142:int count(java.lang.Object) -> count
    89:89:com.google.common.collect.ConcurrentHashMultiset create() -> create
    449:450:java.util.Set createElementSet() -> createElementSet
    487:487:java.util.Set createEntrySet() -> createEntrySet
    492:492:int distinctElements() -> distinctElements
    58:58:java.util.Set elementSet() -> elementSet
    504:524:java.util.Iterator entryIterator() -> entryIterator
    58:58:java.util.Set entrySet() -> entrySet
    497:497:boolean isEmpty() -> isEmpty
    549:549:java.util.Iterator iterator() -> iterator
    272:288:int remove(java.lang.Object,int) -> remove
    348:382:int setCount(java.lang.Object,int) -> setCount
    404:436:boolean setCount(java.lang.Object,int,int) -> setCount
    154:157:int size() -> size
    180:184:java.util.List snapshot() -> snapshot
    167:167:java.lang.Object[] toArray() -> toArray
    172:172:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ConcurrentHashMultiset$1 -> com.google.common.collect.ConcurrentHashMultiset$1:
    450:450:void <init>(com.google.common.collect.ConcurrentHashMultiset,java.util.Set) -> <init>
    458:458:boolean contains(java.lang.Object) -> contains
    463:463:boolean containsAll(java.util.Collection) -> containsAll
    450:450:java.lang.Object delegate() -> delegate
    450:450:java.util.Collection delegate() -> delegate
    453:453:java.util.Set delegate() -> delegate
    468:468:boolean remove(java.lang.Object) -> remove
    473:473:boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.ConcurrentHashMultiset$2 -> com.google.common.collect.ConcurrentHashMultiset$2:
    505:507:void <init>(com.google.common.collect.ConcurrentHashMultiset) -> <init>
    505:505:java.lang.Object computeNext() -> computeNext
    512:518:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
com.google.common.collect.ConcurrentHashMultiset$3 -> com.google.common.collect.ConcurrentHashMultiset$3:
    524:524:void <init>(com.google.common.collect.ConcurrentHashMultiset,java.util.Iterator) -> <init>
    524:524:java.lang.Object delegate() -> delegate
    529:529:java.util.Iterator delegate() -> delegate
    524:524:java.lang.Object next() -> next
    534:535:com.google.common.collect.Multiset$Entry next() -> next
    540:542:void remove() -> remove
com.google.common.collect.ConcurrentHashMultiset$EntrySet -> com.google.common.collect.ConcurrentHashMultiset$EntrySet:
    558:558:void <init>(com.google.common.collect.ConcurrentHashMultiset) -> <init>
    558:558:void <init>(com.google.common.collect.ConcurrentHashMultiset,com.google.common.collect.ConcurrentHashMultiset$1) -> <init>
    557:557:com.google.common.collect.Multiset multiset() -> multiset
    561:561:com.google.common.collect.ConcurrentHashMultiset multiset() -> multiset
    580:582:java.util.List snapshot() -> snapshot
    571:571:java.lang.Object[] toArray() -> toArray
    576:576:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ForwardingCollection -> com.google.common.collect.ForwardingCollection:
    53:53:void <init>() -> <init>
    87:87:boolean add(java.lang.Object) -> add
    104:104:boolean addAll(java.util.Collection) -> addAll
    115:115:void clear() -> clear
    76:76:boolean isEmpty() -> isEmpty
    60:60:java.util.Iterator iterator() -> iterator
    110:110:boolean retainAll(java.util.Collection) -> retainAll
    65:65:int size() -> size
    148:148:boolean standardContainsAll(java.util.Collection) -> standardContainsAll
    120:120:java.lang.Object[] toArray() -> toArray
    126:126:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ForwardingIterator -> com.google.common.collect.ForwardingIterator:
    42:42:void <init>() -> <init>
    49:49:boolean hasNext() -> hasNext
    55:55:java.lang.Object next() -> next
com.google.common.collect.ForwardingObject -> com.google.common.collect.ForwardingObject:
    50:50:void <init>() -> <init>
    63:63:java.lang.String toString() -> toString
com.google.common.collect.ForwardingSet -> com.google.common.collect.ForwardingSet:
    53:53:void <init>() -> <init>
    60:60:boolean equals(java.lang.Object) -> equals
    65:65:int hashCode() -> hashCode
    77:77:boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
com.google.common.collect.ImmutableAsList -> com.google.common.collect.ImmutableAsList:
    34:34:void <init>() -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    41:41:boolean contains(java.lang.Object) -> contains
    51:51:boolean isEmpty() -> isEmpty
    56:56:boolean isPartialView() -> isPartialView
    46:46:int size() -> size
com.google.common.collect.ImmutableCollection -> com.google.common.collect.ImmutableCollection:
<<<<<<< HEAD
    50:50:void <init>() -> <init>
    96:96:boolean add(java.lang.Object) -> add
    120:120:boolean addAll(java.util.Collection) -> addAll
    171:172:com.google.common.collect.ImmutableList asList() -> asList
    156:156:void clear() -> clear
    84:84:boolean contains(java.lang.Object) -> contains
    199:200:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    176:178:com.google.common.collect.ImmutableList createAsList() -> createAsList
    45:45:java.util.Iterator iterator() -> iterator
    108:108:boolean remove(java.lang.Object) -> remove
    132:132:boolean removeAll(java.util.Collection) -> removeAll
    144:144:boolean retainAll(java.util.Collection) -> retainAll
    60:65:java.lang.Object[] toArray() -> toArray
    71:78:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ImmutableEntry -> com.google.common.collect.ImmutableEntry:
    34:36:void <init>(java.lang.Object,java.lang.Object) -> <init>
    40:40:java.lang.Object getKey() -> getKey
    44:44:java.lang.Object getValue() -> getValue
    48:48:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableList -> com.google.common.collect.ImmutableList:
    66:66:void <clinit>() -> <clinit>
    335:335:void <init>() -> <init>
    467:467:void add(int,java.lang.Object) -> add
    443:443:boolean addAll(int,java.util.Collection) -> addAll
    312:312:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> asImmutableList
    328:322:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int) -> asImmutableList
    303:303:com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> construct
    368:368:boolean contains(java.lang.Object) -> contains
    494:496:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    251:258:com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> copyOf
    567:567:boolean equals(java.lang.Object) -> equals
    572:574:int hashCode() -> hashCode
    358:358:int indexOf(java.lang.Object) -> indexOf
    61:61:java.util.Iterator iterator() -> iterator
    340:340:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    363:363:int lastIndexOf(java.lang.Object) -> lastIndexOf
    61:61:java.util.ListIterator listIterator() -> listIterator
    61:61:java.util.ListIterator listIterator(int) -> listIterator
    344:344:com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    348:348:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    77:77:com.google.common.collect.ImmutableList of() -> of
    89:89:com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    479:479:java.lang.Object remove(int) -> remove
    455:455:java.lang.Object set(int,java.lang.Object) -> set
    61:61:java.util.List subList(int,int) -> subList
    381:385:com.google.common.collect.ImmutableList subList(int,int) -> subList
    399:399:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
com.google.common.collect.ImmutableList$1 -> com.google.common.collect.ImmutableList$1:
    348:348:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    351:351:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableList$SubList -> com.google.common.collect.ImmutableList$SubList:
    406:408:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    418:419:java.lang.Object get(int) -> get
    402:402:java.util.Iterator iterator() -> iterator
    402:402:java.util.ListIterator listIterator() -> listIterator
    402:402:java.util.ListIterator listIterator(int) -> listIterator
    413:413:int size() -> size
    402:402:java.util.List subList(int,int) -> subList
    424:425:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.Iterables -> com.google.common.collect.Iterables:
    632:632:boolean all(java.lang.Iterable,com.google.common.base.Predicate) -> all
    315:317:java.lang.Object[] toArray(java.lang.Iterable,java.lang.Class) -> toArray
    337:337:java.util.Collection toCollection(java.lang.Iterable) -> toCollection
com.google.common.collect.Iterators -> com.google.common.collect.Iterators:
    72:127:void <clinit>() -> <clinit>
    358:362:boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    694:697:boolean all(java.util.Iterator,com.google.common.base.Predicate) -> all
    269:279:boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    112:112:com.google.common.collect.UnmodifiableIterator emptyIterator() -> emptyIterator
    124:124:com.google.common.collect.UnmodifiableListIterator emptyListIterator() -> emptyListIterator
    1043:1058:com.google.common.collect.UnmodifiableListIterator forArray(java.lang.Object[],int,int,int) -> forArray
    216:216:boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    232:236:boolean removeIf(java.util.Iterator,com.google.common.base.Predicate) -> removeIf
    1073:1073:com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
com.google.common.collect.Iterators$1 -> com.google.common.collect.Iterators$1:
    73:73:void <init>() -> <init>
    80:80:java.lang.Object next() -> next
    88:88:java.lang.Object previous() -> previous
com.google.common.collect.Iterators$11 -> com.google.common.collect.Iterators$11:
    1058:1058:void <init>(int,int,java.lang.Object[],int) -> <init>
    1060:1060:java.lang.Object get(int) -> get
com.google.common.collect.Iterators$12 -> com.google.common.collect.Iterators$12:
    1073:1073:void <init>(java.lang.Object) -> <init>
    1077:1077:boolean hasNext() -> hasNext
    1081:1082:java.lang.Object next() -> next
com.google.common.collect.Iterators$2 -> com.google.common.collect.Iterators$2:
    128:128:void <init>() -> <init>
    134:134:java.lang.Object next() -> next
    138:138:void remove() -> remove
com.google.common.collect.Lists -> com.google.common.collect.Lists:
    119:122:int computeArrayListCapacity(int) -> computeArrayListCapacity
    944:953:boolean equalsImpl(java.util.List,java.lang.Object) -> equalsImpl
    975:978:int indexOfImpl(java.util.List,java.lang.Object) -> indexOfImpl
    988:991:int lastIndexOfImpl(java.util.List,java.lang.Object) -> lastIndexOfImpl
    88:88:java.util.ArrayList newArrayList() -> newArrayList
    110:114:java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    142:144:java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    159:160:java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
    185:186:java.util.ArrayList newArrayListWithCapacity(int) -> newArrayListWithCapacity
    208:208:java.util.ArrayList newArrayListWithExpectedSize(int) -> newArrayListWithExpectedSize
    232:232:java.util.LinkedList newLinkedList() -> newLinkedList
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    136:124:void <init>() -> <init>
    248:248:int getConcurrencyLevel() -> getConcurrencyLevel
    442:442:long getExpireAfterAccessNanos() -> getExpireAfterAccessNanos
    399:399:long getExpireAfterWriteNanos() -> getExpireAfterWriteNanos
    178:178:int getInitialCapacity() -> getInitialCapacity
    155:155:com.google.common.base.Equivalence getKeyEquivalence() -> getKeyEquivalence
    280:280:com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength() -> getKeyStrength
    447:447:com.google.common.base.Ticker getTicker() -> getTicker
    349:349:com.google.common.collect.MapMakerInternalMap$Strength getValueStrength() -> getValueStrength
    506:509:java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    269:274:com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setKeyStrength
    596:624:java.lang.String toString() -> toString
    265:265:com.google.common.collect.MapMaker weakKeys() -> weakKeys
com.google.common.collect.MapMaker$NullConcurrentMap -> com.google.common.collect.MapMaker$NullConcurrentMap:
    758:760:void <init>(com.google.common.collect.MapMaker) -> <init>
    825:825:java.util.Set entrySet() -> entrySet
    781:783:void notifyRemoval(java.lang.Object,java.lang.Object) -> notifyRemoval
    788:790:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    796:796:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    811:812:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    818:819:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
com.google.common.collect.MapMaker$RemovalCause -> com.google.common.collect.MapMaker$RemovalCause:
    690:685:void <clinit>() -> <clinit>
    685:685:void <init>(java.lang.String,int) -> <init>
    685:685:void <init>(java.lang.String,int,com.google.common.collect.MapMaker$1) -> <init>
    685:685:com.google.common.collect.MapMaker$RemovalCause valueOf(java.lang.String) -> valueOf
    685:685:com.google.common.collect.MapMaker$RemovalCause[] values() -> values
com.google.common.collect.MapMaker$RemovalCause$1 -> com.google.common.collect.MapMaker$RemovalCause$1:
    690:690:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.MapMaker$RemovalCause$2 -> com.google.common.collect.MapMaker$RemovalCause$2:
    703:703:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.MapMaker$RemovalCause$3 -> com.google.common.collect.MapMaker$RemovalCause$3:
    714:714:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.MapMaker$RemovalCause$4 -> com.google.common.collect.MapMaker$RemovalCause$4:
    725:725:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.MapMaker$RemovalCause$5 -> com.google.common.collect.MapMaker$RemovalCause$5:
    736:736:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.MapMaker$RemovalNotification -> com.google.common.collect.MapMaker$RemovalNotification:
    662:663:void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.MapMaker$RemovalCause) -> <init>
com.google.common.collect.MapMakerInternalMap -> com.google.common.collect.MapMakerInternalMap:
    135:868:void <clinit>() -> <clinit>
    195:259:void <init>(com.google.common.collect.MapMaker) -> <init>
    3559:3560:void clear() -> clear
    1961:1962:void connectEvictables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> connectEvictables
    1929:1930:void connectExpirables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> connectExpirables
    3454:3455:boolean containsKey(java.lang.Object) -> containsKey
    3469:3487:boolean containsValue(java.lang.Object) -> containsValue
    1887:1887:com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> createSegment
    900:900:java.util.Queue discardingQueue() -> discardingQueue
    3584:3585:java.util.Set entrySet() -> entrySet
    266:266:boolean evictsBySize() -> evictsBySize
    270:270:boolean expires() -> expires
    278:278:boolean expiresAfterAccess() -> expiresAfterAccess
    274:274:boolean expiresAfterWrite() -> expiresAfterWrite
    3433:3434:java.lang.Object get(java.lang.Object) -> get
    1896:1904:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> getLiveValue
    1851:1852:int hash(java.lang.Object) -> hash
    3396:3409:boolean isEmpty() -> isEmpty
    1916:1916:boolean isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> isExpired
    1924:1924:boolean isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long) -> isExpired
    3568:3569:java.util.Set keySet() -> keySet
    1974:1974:com.google.common.collect.MapMakerInternalMap$Segment[] newSegmentArray(int) -> newSegmentArray
    865:865:com.google.common.collect.MapMakerInternalMap$ReferenceEntry nullEntry() -> nullEntry
    1967:1969:void nullifyEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> nullifyEvictable
    1935:1937:void nullifyExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> nullifyExpirable
    1949:1953:void processPendingNotifications() -> processPendingNotifications
    3499:3502:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    3515:3516:void putAll(java.util.Map) -> putAll
    3507:3510:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    1862:1863:void reclaimKey(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> reclaimKey
    1856:1858:void reclaimValue(com.google.common.collect.MapMakerInternalMap$ValueReference) -> reclaimValue
    3525:3526:java.lang.Object remove(java.lang.Object) -> remove
    3534:3535:boolean remove(java.lang.Object,java.lang.Object) -> remove
    3540:3546:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    3551:3554:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    1883:1883:com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> segmentFor
    3420:3425:int size() -> size
    614:614:com.google.common.collect.MapMakerInternalMap$ValueReference unset() -> unset
    282:282:boolean usesKeyReferences() -> usesKeyReferences
    286:286:boolean usesValueReferences() -> usesValueReferences
    3576:3577:java.util.Collection values() -> values
com.google.common.collect.MapMakerInternalMap$1 -> com.google.common.collect.MapMakerInternalMap$1:
    578:578:void <init>() -> <init>
com.google.common.collect.MapMakerInternalMap$2 -> com.google.common.collect.MapMakerInternalMap$2:
    868:868:void <init>() -> <init>
    891:891:java.util.Iterator iterator() -> iterator
com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry -> com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry:
    786:786:void <init>() -> <init>
    814:814:long getExpirationTime() -> getExpirationTime
    804:804:int getHash() -> getHash
    809:809:java.lang.Object getKey() -> getKey
    799:799:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> getNext
    844:844:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    824:824:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    854:854:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    834:834:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    789:789:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> getValueReference
    819:819:void setExpirationTime(long) -> setExpirationTime
    849:849:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    829:829:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    859:859:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
    839:839:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    794:794:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> setValueReference
com.google.common.collect.MapMakerInternalMap$EntryFactory -> com.google.common.collect.MapMakerInternalMap$EntryFactory:
    352:470:void <clinit>() -> <clinit>
    351:351:void <init>(java.lang.String,int) -> <init>
    351:351:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    502:502:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
    521:524:void copyEvictableEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEvictableEntry
    509:514:void copyExpirableEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyExpirableEntry
    479:479:com.google.common.collect.MapMakerInternalMap$EntryFactory getFactory(com.google.common.collect.MapMakerInternalMap$Strength,boolean,boolean) -> getFactory
    351:351:com.google.common.collect.MapMakerInternalMap$EntryFactory valueOf(java.lang.String) -> valueOf
    351:351:com.google.common.collect.MapMakerInternalMap$EntryFactory[] values() -> values
com.google.common.collect.MapMakerInternalMap$EntryFactory$1 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$1:
    352:352:void <init>(java.lang.String,int) -> <init>
    356:356:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$2 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$2:
    359:359:void <init>(java.lang.String,int) -> <init>
    369:370:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
    363:363:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$3 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$3:
    374:374:void <init>(java.lang.String,int) -> <init>
    384:385:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
    378:378:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$4 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$4:
    389:389:void <init>(java.lang.String,int) -> <init>
    399:401:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
    393:393:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$5 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$5:
    406:406:void <init>(java.lang.String,int) -> <init>
    410:410:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$6 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$6:
    413:413:void <init>(java.lang.String,int) -> <init>
    423:424:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
    417:417:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$7 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$7:
    428:428:void <init>(java.lang.String,int) -> <init>
    438:439:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
    432:432:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
com.google.common.collect.MapMakerInternalMap$EntryFactory$8 -> com.google.common.collect.MapMakerInternalMap$EntryFactory$8:
    443:443:void <init>(java.lang.String,int) -> <init>
    453:455:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
    447:447:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
com.google.common.collect.MapMakerInternalMap$EntryIterator -> com.google.common.collect.MapMakerInternalMap$EntryIterator:
    3765:3765:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3765:3765:java.lang.Object next() -> next
    3769:3769:java.util.Map$Entry next() -> next
com.google.common.collect.MapMakerInternalMap$EntrySet -> com.google.common.collect.MapMakerInternalMap$EntrySet:
    3834:3834:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3878:3878:void clear() -> clear
    3843:3853:boolean contains(java.lang.Object) -> contains
    3873:3873:boolean isEmpty() -> isEmpty
    3838:3838:java.util.Iterator iterator() -> iterator
    3858:3863:boolean remove(java.lang.Object) -> remove
    3868:3868:int size() -> size
com.google.common.collect.MapMakerInternalMap$EvictionQueue -> com.google.common.collect.MapMakerInternalMap$EvictionQueue:
    3111:3112:void <init>() -> <init>
    3205:3213:void clear() -> clear
    3185:3186:boolean contains(java.lang.Object) -> contains
    3191:3191:boolean isEmpty() -> isEmpty
    3218:3218:java.util.Iterator iterator() -> iterator
    3111:3111:boolean offer(java.lang.Object) -> offer
    3144:3148:boolean offer(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> offer
    3111:3111:java.lang.Object peek() -> peek
    3155:3156:com.google.common.collect.MapMakerInternalMap$ReferenceEntry peek() -> peek
    3111:3111:java.lang.Object poll() -> poll
    3161:3166:com.google.common.collect.MapMakerInternalMap$ReferenceEntry poll() -> poll
    3173:3179:boolean remove(java.lang.Object) -> remove
    3197:3197:int size() -> size
com.google.common.collect.MapMakerInternalMap$EvictionQueue$1 -> com.google.common.collect.MapMakerInternalMap$EvictionQueue$1:
    3112:3126:void <init>(com.google.common.collect.MapMakerInternalMap$EvictionQueue) -> <init>
    3118:3118:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    3130:3130:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    3123:3123:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    3135:3135:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$EvictionQueue$2 -> com.google.common.collect.MapMakerInternalMap$EvictionQueue$2:
    3218:3218:void <init>(com.google.common.collect.MapMakerInternalMap$EvictionQueue,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    3218:3218:java.lang.Object computeNext(java.lang.Object) -> computeNext
    3221:3222:com.google.common.collect.MapMakerInternalMap$ReferenceEntry computeNext(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> computeNext
com.google.common.collect.MapMakerInternalMap$ExpirationQueue -> com.google.common.collect.MapMakerInternalMap$ExpirationQueue:
    3239:3240:void <init>() -> <init>
    3341:3349:void clear() -> clear
    3321:3322:boolean contains(java.lang.Object) -> contains
    3327:3327:boolean isEmpty() -> isEmpty
    3354:3354:java.util.Iterator iterator() -> iterator
    3239:3239:boolean offer(java.lang.Object) -> offer
    3280:3284:boolean offer(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> offer
    3239:3239:java.lang.Object peek() -> peek
    3291:3292:com.google.common.collect.MapMakerInternalMap$ReferenceEntry peek() -> peek
    3239:3239:java.lang.Object poll() -> poll
    3297:3302:com.google.common.collect.MapMakerInternalMap$ReferenceEntry poll() -> poll
    3309:3315:boolean remove(java.lang.Object) -> remove
    3333:3333:int size() -> size
com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1 -> com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1:
    3240:3262:void <init>(com.google.common.collect.MapMakerInternalMap$ExpirationQueue) -> <init>
    3254:3254:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    3266:3266:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    3259:3259:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    3271:3271:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.MapMakerInternalMap$ExpirationQueue$2 -> com.google.common.collect.MapMakerInternalMap$ExpirationQueue$2:
    3354:3354:void <init>(com.google.common.collect.MapMakerInternalMap$ExpirationQueue,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    3354:3354:java.lang.Object computeNext(java.lang.Object) -> computeNext
    3357:3358:com.google.common.collect.MapMakerInternalMap$ReferenceEntry computeNext(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> computeNext
com.google.common.collect.MapMakerInternalMap$HashIterator -> com.google.common.collect.MapMakerInternalMap$HashIterator:
    3600:3603:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3610:3625:void advance() -> advance
    3666:3676:boolean advanceTo(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> advanceTo
    3682:3682:boolean hasNext() -> hasNext
    3686:3687:com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry() -> nextEntry
    3636:3637:boolean nextInChain() -> nextInChain
    3650:3652:boolean nextInTable() -> nextInTable
    3696:3698:void remove() -> remove
com.google.common.collect.MapMakerInternalMap$KeyIterator -> com.google.common.collect.MapMakerInternalMap$KeyIterator:
    3702:3702:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3706:3706:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$KeySet -> com.google.common.collect.MapMakerInternalMap$KeySet:
    3773:3773:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3802:3802:void clear() -> clear
    3792:3792:boolean contains(java.lang.Object) -> contains
    3787:3787:boolean isEmpty() -> isEmpty
    3777:3777:java.util.Iterator iterator() -> iterator
    3797:3797:boolean remove(java.lang.Object) -> remove
    3782:3782:int size() -> size
com.google.common.collect.MapMakerInternalMap$NullEntry -> com.google.common.collect.MapMakerInternalMap$NullEntry:
    720:719:void <clinit>() -> <clinit>
    719:719:void <init>(java.lang.String,int) -> <init>
    719:719:com.google.common.collect.MapMakerInternalMap$NullEntry valueOf(java.lang.String) -> valueOf
    719:719:com.google.common.collect.MapMakerInternalMap$NullEntry[] values() -> values
com.google.common.collect.MapMakerInternalMap$Segment -> com.google.common.collect.MapMakerInternalMap$Segment:
    2090:2109:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2819:2845:void clear() -> clear
    2235:2235:void clearKeyReferenceQueue() -> clearKeyReferenceQueue
    2226:2230:void clearReferenceQueues() -> clearReferenceQueues
    2239:2239:void clearValueReferenceQueue() -> clearValueReferenceQueue
    2454:2464:boolean containsKey(java.lang.Object,int) -> containsKey
    2138:2151:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyEntry
    2198:2201:void drainKeyReferenceQueue() -> drainKeyReferenceQueue
    2303:2312:void drainRecencyQueue() -> drainRecencyQueue
    2186:2190:void drainReferenceQueues() -> drainReferenceQueues
    2212:2215:void drainValueReferenceQueue() -> drainValueReferenceQueue
    2359:2359:void enqueueNotification(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMaker$RemovalCause) -> enqueueNotification
    2363:2365:void enqueueNotification(java.lang.Object,int,java.lang.Object,com.google.common.collect.MapMaker$RemovalCause) -> enqueueNotification
    2377:2382:boolean evictEntries() -> evictEntries
    2570:2634:void expand() -> expand
    2340:2351:void expireEntries() -> expireEntries
    2435:2448:java.lang.Object get(java.lang.Object,int) -> get
    2401:2402:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object,int) -> getEntry
    2394:2395:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getFirst(int) -> getFirst
    2423:2427:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getLiveEntry(java.lang.Object,int) -> getLiveEntry
    3026:3037:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> getLiveValue
    2119:2124:void initTable(java.util.concurrent.atomic.AtomicReferenceArray) -> initTable
    3015:3018:boolean isCollected(com.google.common.collect.MapMakerInternalMap$ValueReference) -> isCollected
    2129:2129:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> newEntry
    2115:2115:java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    3049:3050:void postReadCleanup() -> postReadCleanup
    3069:3069:void postWriteCleanup() -> postWriteCleanup
    3062:3062:void preWriteCleanup() -> preWriteCleanup
    2498:2561:java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    2892:2915:boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,int) -> reclaimKey
    2923:2952:boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference) -> reclaimValue
    2321:2321:void recordExpirationTime(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long) -> recordExpirationTime
    2267:2270:void recordLockedRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> recordLockedRead
    2252:2255:void recordRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> recordRead
    2281:2290:void recordWrite(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> recordWrite
    2733:2771:java.lang.Object remove(java.lang.Object,int) -> remove
    2776:2814:boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    2883:2885:void removeCollectedEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> removeCollectedEntry
    2990:2995:boolean removeEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,int,com.google.common.collect.MapMaker$RemovalCause) -> removeEntry
    2864:2878:com.google.common.collect.MapMakerInternalMap$ReferenceEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> removeFromChain
    2638:2684:boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    2689:2728:java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    3073:3074:void runCleanup() -> runCleanup
    3078:3084:void runLockedCleanup() -> runLockedCleanup
    3091:3092:void runUnlockedCleanup() -> runUnlockedCleanup
    2160:2162:void setValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> setValue
    2171:2175:void tryDrainReferenceQueues() -> tryDrainReferenceQueues
    2328:2332:void tryExpireEntries() -> tryExpireEntries
com.google.common.collect.MapMakerInternalMap$SoftValueReference -> com.google.common.collect.MapMakerInternalMap$SoftValueReference:
    1730:1731:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1741:1741:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> clear
    1747:1747:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyFor
    1736:1736:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$Strength -> com.google.common.collect.MapMakerInternalMap$Strength:
    295:289:void <clinit>() -> <clinit>
    289:289:void <init>(java.lang.String,int) -> <init>
    289:289:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    289:289:com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String) -> valueOf
    289:289:com.google.common.collect.MapMakerInternalMap$Strength[] values() -> values
com.google.common.collect.MapMakerInternalMap$Strength$1 -> com.google.common.collect.MapMakerInternalMap$Strength$1:
    295:295:void <init>(java.lang.String,int) -> <init>
    304:304:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
    299:299:com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> referenceValue
com.google.common.collect.MapMakerInternalMap$Strength$2 -> com.google.common.collect.MapMakerInternalMap$Strength$2:
    308:308:void <init>(java.lang.String,int) -> <init>
    317:317:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
    312:312:com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> referenceValue
com.google.common.collect.MapMakerInternalMap$Strength$3 -> com.google.common.collect.MapMakerInternalMap$Strength$3:
    321:321:void <init>(java.lang.String,int) -> <init>
    330:330:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
    325:325:com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> referenceValue
com.google.common.collect.MapMakerInternalMap$StrongEntry -> com.google.common.collect.MapMakerInternalMap$StrongEntry:
    917:920:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    932:932:long getExpirationTime() -> getExpirationTime
    1002:1002:int getHash() -> getHash
    925:925:java.lang.Object getKey() -> getKey
    1007:1007:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> getNext
    964:964:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    942:942:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    974:974:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    952:952:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    990:990:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> getValueReference
    937:937:void setExpirationTime(long) -> setExpirationTime
    969:969:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    947:947:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    979:979:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
    957:957:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    995:997:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> setValueReference
com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry -> com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry:
    1061:1080:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1071:1071:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1084:1084:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1076:1076:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1089:1089:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry -> com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry:
    1014:1045:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1023:1023:long getExpirationTime() -> getExpirationTime
    1036:1036:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1049:1049:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1028:1028:void setExpirationTime(long) -> setExpirationTime
    1041:1041:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1054:1054:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry -> com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry:
    1096:1155:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1105:1105:long getExpirationTime() -> getExpirationTime
    1146:1146:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1118:1118:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1159:1159:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1131:1131:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1110:1110:void setExpirationTime(long) -> setExpirationTime
    1151:1151:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1123:1123:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1164:1164:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
    1136:1136:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.MapMakerInternalMap$StrongValueReference -> com.google.common.collect.MapMakerInternalMap$StrongValueReference:
    1767:1768:void <init>(java.lang.Object) -> <init>
    1773:1773:java.lang.Object get() -> get
com.google.common.collect.MapMakerInternalMap$ValueIterator -> com.google.common.collect.MapMakerInternalMap$ValueIterator:
    3710:3710:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3714:3714:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$Values -> com.google.common.collect.MapMakerInternalMap$Values:
    3806:3806:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3830:3830:void clear() -> clear
    3825:3825:boolean contains(java.lang.Object) -> contains
    3820:3820:boolean isEmpty() -> isEmpty
    3810:3810:java.util.Iterator iterator() -> iterator
    3815:3815:int size() -> size
com.google.common.collect.MapMakerInternalMap$WeakEntry -> com.google.common.collect.MapMakerInternalMap$WeakEntry:
    1430:1432:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1444:1444:long getExpirationTime() -> getExpirationTime
    1514:1514:int getHash() -> getHash
    1437:1437:java.lang.Object getKey() -> getKey
    1519:1519:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> getNext
    1476:1476:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1454:1454:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1486:1486:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1464:1464:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1502:1502:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> getValueReference
    1449:1449:void setExpirationTime(long) -> setExpirationTime
    1481:1481:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1459:1459:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1491:1491:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
    1469:1469:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
    1507:1509:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> setValueReference
com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry -> com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry:
    1575:1594:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1585:1585:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1598:1598:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1590:1590:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1603:1603:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry -> com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry:
    1527:1558:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1536:1536:long getExpirationTime() -> getExpirationTime
    1549:1549:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1562:1562:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1541:1541:void setExpirationTime(long) -> setExpirationTime
    1554:1554:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1567:1567:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry -> com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry:
    1611:1670:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1620:1620:long getExpirationTime() -> getExpirationTime
    1661:1661:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    1633:1633:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    1674:1674:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    1646:1646:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    1625:1625:void setExpirationTime(long) -> setExpirationTime
    1666:1666:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextEvictable
    1638:1638:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setNextExpirable
    1679:1679:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousEvictable
    1651:1651:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.MapMakerInternalMap$WeakValueReference -> com.google.common.collect.MapMakerInternalMap$WeakValueReference:
    1691:1692:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1702:1702:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> clear
    1708:1708:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> copyFor
    1697:1697:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$WriteThroughEntry -> com.google.common.collect.MapMakerInternalMap$WriteThroughEntry:
    3726:3728:void <init>(com.google.common.collect.MapMakerInternalMap,java.lang.Object,java.lang.Object) -> <init>
    3744:3746:boolean equals(java.lang.Object) -> equals
    3733:3733:java.lang.Object getKey() -> getKey
    3738:3738:java.lang.Object getValue() -> getValue
    3754:3754:int hashCode() -> hashCode
    3759:3760:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps -> com.google.common.collect.Maps:
    3458:3458:void <clinit>() -> <clinit>
    205:209:int capacity(int) -> capacity
    278:278:java.util.concurrent.ConcurrentMap newConcurrentMap() -> newConcurrentMap
    177:177:java.util.HashMap newHashMap() -> newHashMap
    3351:3353:java.lang.Object safeGet(java.util.Map,java.lang.Object) -> safeGet
com.google.common.collect.Multisets -> com.google.common.collect.Multisets:
    1080:1080:void <clinit>() -> <clinit>
    850:859:boolean addAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> addAllImpl
    1077:1077:com.google.common.collect.Multiset cast(java.lang.Iterable) -> cast
    823:836:boolean equalsImpl(com.google.common.collect.Multiset,java.lang.Object) -> equalsImpl
    212:212:com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int) -> immutableEntry
    1010:1010:java.util.Iterator iteratorImpl(com.google.common.collect.Multiset) -> iteratorImpl
    869:872:boolean removeAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> removeAllImpl
    880:884:boolean retainAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> retainAllImpl
com.google.common.collect.Multisets$5 -> com.google.common.collect.Multisets$5:
    1080:1080:void <init>() -> <init>
    1080:1080:int compare(java.lang.Object,java.lang.Object) -> compare
    1083:1083:int compare(com.google.common.collect.Multiset$Entry,com.google.common.collect.Multiset$Entry) -> compare
com.google.common.collect.Multisets$AbstractEntry -> com.google.common.collect.Multisets$AbstractEntry:
    779:779:void <init>() -> <init>
    785:787:boolean equals(java.lang.Object) -> equals
    798:799:int hashCode() -> hashCode
    810:812:java.lang.String toString() -> toString
com.google.common.collect.Multisets$EntrySet -> com.google.common.collect.Multisets$EntrySet:
    964:964:void <init>() -> <init>
    1002:1002:void clear() -> clear
    968:978:boolean contains(java.lang.Object) -> contains
    987:995:boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multisets$ImmutableEntry -> com.google.common.collect.Multisets$ImmutableEntry:
    220:223:void <init>(java.lang.Object,int) -> <init>
    233:233:int getCount() -> getCount
    228:228:java.lang.Object getElement() -> getElement
com.google.common.collect.Multisets$MultisetIteratorImpl -> com.google.common.collect.Multisets$MultisetIteratorImpl:
    1025:1027:void <init>(com.google.common.collect.Multiset,java.util.Iterator) -> <init>
    1032:1032:boolean hasNext() -> hasNext
    1037:1038:java.lang.Object next() -> next
    1051:1058:void remove() -> remove
com.google.common.collect.ObjectArrays -> com.google.common.collect.ObjectArrays:
    37:37:void <clinit>() -> <clinit>
    112:113:java.lang.Object[] arraysCopyOf(java.lang.Object[],int) -> arraysCopyOf
    240:240:java.lang.Object checkElementNotNull(java.lang.Object,int) -> checkElementNotNull
    226:226:java.lang.Object[] checkElementsNotNull(java.lang.Object[]) -> checkElementsNotNull
    231:231:java.lang.Object[] checkElementsNotNull(java.lang.Object[],int) -> checkElementsNotNull
    50:50:java.lang.Object[] newArray(java.lang.Class,int) -> newArray
    61:61:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
com.google.common.collect.Ordering -> com.google.common.collect.Ordering:
    321:321:void <init>() -> <init>
com.google.common.collect.Platform -> com.google.common.collect.Platform:
    48:53:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
com.google.common.collect.RegularImmutableAsList -> com.google.common.collect.RegularImmutableAsList:
    34:36:void <init>(com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableList) -> <init>
    40:40:void <init>(com.google.common.collect.ImmutableCollection,java.lang.Object[]) -> <init>
    61:61:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    45:45:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
    66:66:java.lang.Object get(int) -> get
    28:28:java.util.ListIterator listIterator(int) -> listIterator
    55:55:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableList -> com.google.common.collect.RegularImmutableList:
    36:39:void <init>(java.lang.Object[],int,int) -> <init>
    43:43:void <init>(java.lang.Object[]) -> <init>
    57:58:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    65:66:java.lang.Object get(int) -> get
    74:75:int indexOf(java.lang.Object) -> indexOf
    52:52:boolean isPartialView() -> isPartialView
    87:88:int lastIndexOf(java.lang.Object) -> lastIndexOf
    29:29:java.util.ListIterator listIterator(int) -> listIterator
    106:106:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    48:48:int size() -> size
    97:97:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
com.google.common.collect.Sets -> com.google.common.collect.Sets:
    164:164:java.util.HashSet newHashSet() -> newHashSet
    182:183:java.util.HashSet newHashSet(java.lang.Object[]) -> newHashSet
    201:201:java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    1540:1541:boolean removeAllImpl(java.util.Set,java.util.Iterator) -> removeAllImpl
    1547:1561:boolean removeAllImpl(java.util.Set,java.util.Collection) -> removeAllImpl
com.google.common.collect.Sets$ImprovedAbstractSet -> com.google.common.collect.Sets$ImprovedAbstractSet:
    71:71:void <init>() -> <init>
    74:74:boolean removeAll(java.util.Collection) -> removeAll
    79:79:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.SingletonImmutableList -> com.google.common.collect.SingletonImmutableList:
    39:40:void <init>(java.lang.Object) -> <init>
    76:76:boolean contains(java.lang.Object) -> contains
    115:115:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    83:85:boolean equals(java.lang.Object) -> equals
    45:46:java.lang.Object get(int) -> get
    93:93:int hashCode() -> hashCode
    50:50:int indexOf(java.lang.Object) -> indexOf
    33:33:java.util.Iterator iterator() -> iterator
    54:54:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    58:58:int lastIndexOf(java.lang.Object) -> lastIndexOf
    33:33:java.util.List subList(int,int) -> subList
    67:68:com.google.common.collect.ImmutableList subList(int,int) -> subList
    97:98:java.lang.String toString() -> toString
com.google.common.collect.UnmodifiableIterator -> com.google.common.collect.UnmodifiableIterator:
    32:32:void <init>() -> <init>
    43:43:void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.google.common.collect.UnmodifiableListIterator:
    34:34:void <init>() -> <init>
    43:43:void add(java.lang.Object) -> add
    53:53:void set(java.lang.Object) -> set
com.google.common.math.IntMath -> com.google.common.math.IntMath:
    169:550:void <clinit>() -> <clinit>
    416:416:int checkedAdd(int,int) -> checkedAdd
com.google.common.math.MathPreconditions -> com.google.common.math.MathPreconditions:
    93:93:void checkNoOverflow(boolean) -> checkNoOverflow
com.google.common.primitives.Ints -> com.google.common.primitives.Ints:
    639:648:void <clinit>() -> <clinit>
=======
    185:185:void <clinit>() -> <clinit>
    174:174:void <init>() -> <init>
    225:225:boolean add(java.lang.Object) -> add
    251:251:boolean addAll(java.util.Collection) -> addAll
    315:317:com.google.common.collect.ImmutableList asList() -> asList
    301:301:void clear() -> clear
    339:340:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    161:161:java.util.Iterator iterator() -> iterator
    238:238:boolean remove(java.lang.Object) -> remove
    264:264:boolean removeAll(java.util.Collection) -> removeAll
    277:277:boolean removeIf(java.util.function.Predicate) -> removeIf
    289:289:boolean retainAll(java.util.Collection) -> retainAll
    182:182:java.util.Spliterator spliterator() -> spliterator
    189:194:java.lang.Object[] toArray() -> toArray
    201:208:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ImmutableList -> com.google.common.collect.ImmutableList:
    378:378:void <init>() -> <init>
    523:523:void add(int,java.lang.Object) -> add
    498:498:boolean addAll(int,java.util.Collection) -> addAll
    357:357:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> asImmutableList
    371:367:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int) -> asImmutableList
    348:348:com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> construct
    423:423:boolean contains(java.lang.Object) -> contains
    581:583:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    255:260:com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> copyOf
    661:661:boolean equals(java.lang.Object) -> equals
    404:407:void forEach(java.util.function.Consumer) -> forEach
    667:669:int hashCode() -> hashCode
    413:413:int indexOf(java.lang.Object) -> indexOf
    59:59:java.util.Iterator iterator() -> iterator
    384:384:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    418:418:int lastIndexOf(java.lang.Object) -> lastIndexOf
    59:59:java.util.ListIterator listIterator() -> listIterator
    59:59:java.util.ListIterator listIterator(int) -> listIterator
    389:389:com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    394:394:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    83:83:com.google.common.collect.ImmutableList of() -> of
    94:94:com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    536:536:java.lang.Object remove(int) -> remove
    548:548:void replaceAll(java.util.function.UnaryOperator) -> replaceAll
    511:511:java.lang.Object set(int,java.lang.Object) -> set
    560:560:void sort(java.util.Comparator) -> sort
    575:575:java.util.Spliterator spliterator() -> spliterator
    59:59:java.util.List subList(int,int) -> subList
    435:444:com.google.common.collect.ImmutableList subList(int,int) -> subList
    453:453:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
com.google.common.collect.ImmutableList$1 -> com.google.common.collect.ImmutableList$1:
    394:394:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    397:397:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableList$SubList -> com.google.common.collect.ImmutableList$SubList:
    460:462:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    472:473:java.lang.Object get(int) -> get
    456:456:java.util.Iterator iterator() -> iterator
    456:456:java.util.ListIterator listIterator() -> listIterator
    456:456:java.util.ListIterator listIterator(int) -> listIterator
    467:467:int size() -> size
    456:456:java.util.List subList(int,int) -> subList
    478:479:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.Iterables -> com.google.common.collect.Iterables:
    304:306:java.util.Collection castOrCopyToCollection(java.lang.Iterable) -> castOrCopyToCollection
    280:280:java.lang.Object[] toArray(java.lang.Iterable,java.lang.Class) -> toArray
    284:285:java.lang.Object[] toArray(java.lang.Iterable,java.lang.Object[]) -> toArray
com.google.common.collect.Iterators -> com.google.common.collect.Iterators:
    354:358:boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    263:273:boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    88:88:com.google.common.collect.UnmodifiableListIterator emptyListIterator() -> emptyListIterator
    1022:1031:com.google.common.collect.UnmodifiableListIterator forArray(java.lang.Object[],int,int,int) -> forArray
    198:202:boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    1058:1058:com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
com.google.common.collect.Iterators$9 -> com.google.common.collect.Iterators$9:
    1058:1058:void <init>(java.lang.Object) -> <init>
    1063:1063:boolean hasNext() -> hasNext
    1068:1069:java.lang.Object next() -> next
com.google.common.collect.Iterators$ArrayItr -> com.google.common.collect.Iterators$ArrayItr:
    1035:1035:void <clinit>() -> <clinit>
    1041:1043:void <init>(java.lang.Object[],int,int,int) -> <init>
    1048:1048:java.lang.Object get(int) -> get
com.google.common.collect.Lists -> com.google.common.collect.Lists:
    153:156:int computeArrayListCapacity(int) -> computeArrayListCapacity
    968:988:boolean equalsImpl(java.util.List,java.lang.Object) -> equalsImpl
    1005:1011:int indexOfImpl(java.util.List,java.lang.Object) -> indexOfImpl
    1019:1028:int indexOfRandomAccess(java.util.List,java.lang.Object) -> indexOfRandomAccess
    1038:1044:int lastIndexOfImpl(java.util.List,java.lang.Object) -> lastIndexOfImpl
    1053:1060:int lastIndexOfRandomAccess(java.util.List,java.lang.Object) -> lastIndexOfRandomAccess
    84:84:java.util.ArrayList newArrayList() -> newArrayList
    105:109:java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    129:133:java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    146:147:java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
    177:178:java.util.ArrayList newArrayListWithCapacity(int) -> newArrayListWithCapacity
    196:196:java.util.ArrayList newArrayListWithExpectedSize(int) -> newArrayListWithExpectedSize
    218:218:java.util.LinkedList newLinkedList() -> newLinkedList
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    110:99:void <init>() -> <init>
    188:188:int getConcurrencyLevel() -> getConcurrencyLevel
    154:154:int getInitialCapacity() -> getInitialCapacity
    129:129:com.google.common.base.Equivalence getKeyEquivalence() -> getKeyEquivalence
    219:219:com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength() -> getKeyStrength
    265:265:com.google.common.collect.MapMakerInternalMap$Strength getValueStrength() -> getValueStrength
    280:283:java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    209:213:com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setKeyStrength
    292:308:java.lang.String toString() -> toString
    205:205:com.google.common.collect.MapMaker weakKeys() -> weakKeys
com.google.common.collect.MapMakerInternalMap -> com.google.common.collect.MapMakerInternalMap:
    1006:1006:void <clinit>() -> <clinit>
    161:193:void <init>(com.google.common.collect.MapMaker,com.google.common.collect.MapMakerInternalMap$InternalEntryHelper) -> <init>
    70:70:java.util.ArrayList access$900(java.util.Collection) -> access$900
    2480:2481:void clear() -> clear
    2370:2371:boolean containsKey(java.lang.Object) -> containsKey
    2385:2402:boolean containsValue(java.lang.Object) -> containsValue
    200:215:com.google.common.collect.MapMakerInternalMap create(com.google.common.collect.MapMaker) -> create
    1116:1116:com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> createSegment
    2505:2506:java.util.Set entrySet() -> entrySet
    2349:2350:java.lang.Object get(java.lang.Object) -> get
    1124:1127:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1080:1081:int hash(java.lang.Object) -> hash
    2312:2325:boolean isEmpty() -> isEmpty
    2489:2490:java.util.Set keySet() -> keySet
    1136:1136:com.google.common.collect.MapMakerInternalMap$Segment[] newSegmentArray(int) -> newSegmentArray
    2415:2418:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    2432:2433:void putAll(java.util.Map) -> putAll
    2424:2427:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    1091:1092:void reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> reclaimKey
    1085:1087:void reclaimValue(com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    2443:2444:java.lang.Object remove(java.lang.Object) -> remove
    2453:2454:boolean remove(java.lang.Object,java.lang.Object) -> remove
    2460:2466:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    2472:2475:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    1112:1112:com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> segmentFor
    2336:2341:int size() -> size
    2832:2833:java.util.ArrayList toArrayList(java.util.Collection) -> toArrayList
    386:386:com.google.common.collect.MapMakerInternalMap$WeakValueReference unsetWeakValueReference() -> unsetWeakValueReference
    2297:2297:com.google.common.base.Equivalence valueEquivalence() -> valueEquivalence
    2497:2498:java.util.Collection values() -> values
com.google.common.collect.MapMakerInternalMap$1 -> com.google.common.collect.MapMakerInternalMap$1:
    1007:1007:void <init>() -> <init>
    1007:1007:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1007:1007:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry:
    345:348:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    358:358:int getHash() -> getHash
    353:353:java.lang.Object getKey() -> getKey
    363:363:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry:
    653:655:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    665:665:int getHash() -> getHash
    660:660:java.lang.Object getKey() -> getKey
    670:670:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$DummyInternalEntry -> com.google.common.collect.MapMakerInternalMap$DummyInternalEntry:
    977:978:void <init>() -> <init>
    988:988:int getHash() -> getHash
    993:993:java.lang.Object getKey() -> getKey
    975:975:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
    983:983:com.google.common.collect.MapMakerInternalMap$DummyInternalEntry getNext() -> getNext
    998:998:java.lang.Object getValue() -> getValue
com.google.common.collect.MapMakerInternalMap$EntryIterator -> com.google.common.collect.MapMakerInternalMap$EntryIterator:
    2682:2682:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2682:2682:java.lang.Object next() -> next
    2686:2686:java.util.Map$Entry next() -> next
com.google.common.collect.MapMakerInternalMap$EntrySet -> com.google.common.collect.MapMakerInternalMap$EntrySet:
    2767:2767:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2811:2811:void clear() -> clear
    2776:2786:boolean contains(java.lang.Object) -> contains
    2806:2806:boolean isEmpty() -> isEmpty
    2771:2771:java.util.Iterator iterator() -> iterator
    2791:2796:boolean remove(java.lang.Object) -> remove
    2801:2801:int size() -> size
com.google.common.collect.MapMakerInternalMap$HashIterator -> com.google.common.collect.MapMakerInternalMap$HashIterator:
    2521:2524:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2531:2546:void advance() -> advance
    2583:2593:boolean advanceTo(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> advanceTo
    2599:2599:boolean hasNext() -> hasNext
    2603:2604:com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry() -> nextEntry
    2555:2556:boolean nextInChain() -> nextInChain
    2567:2569:boolean nextInTable() -> nextInTable
    2613:2615:void remove() -> remove
com.google.common.collect.MapMakerInternalMap$KeyIterator -> com.google.common.collect.MapMakerInternalMap$KeyIterator:
    2619:2619:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2623:2623:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$KeySet -> com.google.common.collect.MapMakerInternalMap$KeySet:
    2691:2691:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2720:2720:void clear() -> clear
    2710:2710:boolean contains(java.lang.Object) -> contains
    2705:2705:boolean isEmpty() -> isEmpty
    2695:2695:java.util.Iterator iterator() -> iterator
    2715:2715:boolean remove(java.lang.Object) -> remove
    2700:2700:int size() -> size
com.google.common.collect.MapMakerInternalMap$SafeToArraySet -> com.google.common.collect.MapMakerInternalMap$SafeToArraySet:
    2815:2815:void <init>() -> <init>
    2815:2815:void <init>(com.google.common.collect.MapMakerInternalMap$1) -> <init>
    2821:2821:java.lang.Object[] toArray() -> toArray
    2826:2826:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$Segment -> com.google.common.collect.MapMakerInternalMap$Segment:
    1212:1215:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    1778:1791:void clear() -> clear
    1384:1384:void clearReferenceQueue(java.lang.ref.ReferenceQueue) -> clearReferenceQueue
    1441:1448:boolean containsKey(java.lang.Object,int) -> containsKey
    1240:1240:com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyEntry
    1359:1362:void drainKeyReferenceQueue(java.lang.ref.ReferenceQueue) -> drainKeyReferenceQueue
    1373:1376:void drainValueReferenceQueue(java.lang.ref.ReferenceQueue) -> drainValueReferenceQueue
    1541:1604:void expand() -> expand
    1424:1435:java.lang.Object get(java.lang.Object,int) -> get
    1397:1398:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry(java.lang.Object,int) -> getEntry
    1390:1391:com.google.common.collect.MapMakerInternalMap$InternalEntry getFirst(int) -> getFirst
    1419:1419:com.google.common.collect.MapMakerInternalMap$InternalEntry getLiveEntry(java.lang.Object,int) -> getLiveEntry
    1954:1960:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1248:1253:void initTable(java.util.concurrent.atomic.AtomicReferenceArray) -> initTable
    1945:1945:boolean isCollected(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> isCollected
    1244:1244:java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    1973:1974:void postReadCleanup() -> postReadCleanup
    1984:1984:void preWriteCleanup() -> preWriteCleanup
    1482:1534:java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    1827:1847:boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry,int) -> reclaimKey
    1854:1881:boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    1697:1732:java.lang.Object remove(java.lang.Object,int) -> remove
    1737:1773:boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    1810:1820:com.google.common.collect.MapMakerInternalMap$InternalEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> removeFromChain
    1608:1650:boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    1655:1691:java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    1988:1988:void runCleanup() -> runCleanup
    1992:1997:void runLockedCleanup() -> runLockedCleanup
    1235:1235:void setValue(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    1346:1350:void tryDrainReferenceQueues() -> tryDrainReferenceQueues
com.google.common.collect.MapMakerInternalMap$Strength -> com.google.common.collect.MapMakerInternalMap$Strength:
    246:245:void <clinit>() -> <clinit>
    245:245:void <init>(java.lang.String,int) -> <init>
    245:245:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    245:245:com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String) -> valueOf
    245:245:com.google.common.collect.MapMakerInternalMap$Strength[] values() -> values
com.google.common.collect.MapMakerInternalMap$Strength$1 -> com.google.common.collect.MapMakerInternalMap$Strength$1:
    246:246:void <init>(java.lang.String,int) -> <init>
    249:249:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$Strength$2 -> com.google.common.collect.MapMakerInternalMap$Strength$2:
    253:253:void <init>(java.lang.String,int) -> <init>
    256:256:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry:
    396:393:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> <init>
    410:412:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    402:402:java.lang.Object getValue() -> getValue
    406:406:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:
    420:420:void <clinit>() -> <clinit>
    417:417:void <init>() -> <init>
    417:417:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    452:452:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    424:424:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper instance() -> instance
    417:417:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    469:469:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> newEntry
    417:417:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    444:444:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    417:417:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    460:460:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,java.lang.Object) -> setValue
    434:434:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment:
    2012:2012:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2004:2004:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry:
    482:479:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> <init>
    503:504:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    487:487:java.lang.Object getValue() -> getValue
    510:510:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    496:498:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:
    517:517:void <clinit>() -> <clinit>
    514:514:void <init>() -> <init>
    514:514:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    548:551:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    521:521:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper instance() -> instance
    514:514:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    566:566:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> newEntry
    514:514:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    540:540:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    514:514:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    557:557:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,java.lang.Object) -> setValue
    531:531:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:
    2037:2030:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2028:2028:java.lang.ref.ReferenceQueue access$100(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment) -> access$100
    2088:2088:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2083:2083:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2028:2028:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$ValueIterator -> com.google.common.collect.MapMakerInternalMap$ValueIterator:
    2627:2627:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2631:2631:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$Values -> com.google.common.collect.MapMakerInternalMap$Values:
    2725:2725:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2749:2749:void clear() -> clear
    2744:2744:boolean contains(java.lang.Object) -> contains
    2739:2739:boolean isEmpty() -> isEmpty
    2729:2729:java.util.Iterator iterator() -> iterator
    2734:2734:int size() -> size
    2757:2757:java.lang.Object[] toArray() -> toArray
    2762:2762:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry:
    765:758:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> <init>
    780:782:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    771:771:java.lang.Object getValue() -> getValue
    775:775:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper:
    790:790:void <clinit>() -> <clinit>
    787:787:void <init>() -> <init>
    787:787:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    821:825:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    794:794:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper instance() -> instance
    787:787:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    840:840:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> newEntry
    787:787:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    813:813:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    787:787:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    831:831:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,java.lang.Object) -> setValue
    804:804:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment:
    2125:2118:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2116:2116:java.lang.ref.ReferenceQueue access$300(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment) -> access$300
    2151:2151:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2146:2146:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2116:2116:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry:
    854:850:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> <init>
    866:868:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    859:859:java.lang.Object getValue() -> getValue
    885:885:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    878:880:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:
    892:892:void <clinit>() -> <clinit>
    889:889:void <init>() -> <init>
    889:889:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    922:929:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    896:896:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper instance() -> instance
    889:889:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    944:944:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> newEntry
    889:889:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    914:914:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    889:889:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    935:935:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,java.lang.Object) -> setValue
    906:906:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:
    2165:2159:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2156:2156:java.lang.ref.ReferenceQueue access$400(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$400
    2156:2156:java.lang.ref.ReferenceQueue access$500(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$500
    2222:2222:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2216:2217:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2156:2156:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl -> com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl:
    1034:1035:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    1045:1045:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1040:1040:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$WriteThroughEntry -> com.google.common.collect.MapMakerInternalMap$WriteThroughEntry:
    2643:2645:void <init>(com.google.common.collect.MapMakerInternalMap,java.lang.Object,java.lang.Object) -> <init>
    2661:2663:boolean equals(java.lang.Object) -> equals
    2650:2650:java.lang.Object getKey() -> getKey
    2655:2655:java.lang.Object getValue() -> getValue
    2671:2671:int hashCode() -> hashCode
    2676:2677:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps -> com.google.common.collect.Maps:
    332:332:int capacity(int) -> capacity
    398:398:java.util.concurrent.ConcurrentMap newConcurrentMap() -> newConcurrentMap
    290:290:java.util.HashMap newHashMap() -> newHashMap
    3582:3584:java.lang.Object safeGet(java.util.Map,java.lang.Object) -> safeGet
com.google.common.collect.Multiset$-CC -> com.google.common.collect.Multiset$-CC:
    459:461:void com.google.common.collect.Multiset.forEach(java.util.function.Consumer) -> $default$forEach
    338:339:void com.google.common.collect.Multiset.forEachEntry(java.util.function.ObjIntConsumer) -> $default$forEachEntry
    473:473:java.util.Spliterator com.google.common.collect.Multiset.spliterator() -> $default$spliterator
    463:466:void com.google.common.collect.Multiset.lambda$forEach$1(java.util.function.Consumer,com.google.common.collect.Multiset$Entry) -> lambda$forEach$1
    339:339:void com.google.common.collect.Multiset.lambda$forEachEntry$0(java.util.function.ObjIntConsumer,com.google.common.collect.Multiset$Entry) -> lambda$forEachEntry$0
com.google.common.collect.Multisets -> com.google.common.collect.Multisets:
    892:899:boolean addAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> addAllImpl
    905:908:boolean addAllImpl(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> addAllImpl
    1129:1129:com.google.common.collect.Multiset cast(java.lang.Iterable) -> cast
    869:881:boolean equalsImpl(com.google.common.collect.Multiset,java.lang.Object) -> equalsImpl
    245:245:com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int) -> immutableEntry
    1054:1054:java.util.Iterator iteratorImpl(com.google.common.collect.Multiset) -> iteratorImpl
    1111:1111:java.util.Spliterator lambda$spliteratorImpl$2(com.google.common.collect.Multiset$Entry) -> lambda$spliteratorImpl$2
    914:919:boolean removeAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> removeAllImpl
    924:930:boolean retainAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> retainAllImpl
    1108:1109:java.util.Spliterator spliteratorImpl(com.google.common.collect.Multiset) -> spliteratorImpl
com.google.common.collect.Multisets$AbstractEntry -> com.google.common.collect.Multisets$AbstractEntry:
    825:825:void <init>() -> <init>
    832:835:boolean equals(java.lang.Object) -> equals
    846:847:int hashCode() -> hashCode
    858:860:java.lang.String toString() -> toString
com.google.common.collect.Multisets$EntrySet -> com.google.common.collect.Multisets$EntrySet:
    1008:1008:void <init>() -> <init>
    1048:1048:void clear() -> clear
    1013:1023:boolean contains(java.lang.Object) -> contains
    1032:1040:boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multisets$ImmutableEntry -> com.google.common.collect.Multisets$ImmutableEntry:
    252:255:void <init>(java.lang.Object,int) -> <init>
    266:266:int getCount() -> getCount
    261:261:java.lang.Object getElement() -> getElement
com.google.common.collect.Multisets$MultisetIteratorImpl -> com.google.common.collect.Multisets$MultisetIteratorImpl:
    1070:1072:void <init>(com.google.common.collect.Multiset,java.util.Iterator) -> <init>
    1077:1077:boolean hasNext() -> hasNext
    1082:1083:java.lang.Object next() -> next
    1096:1103:void remove() -> remove
com.google.common.collect.ObjectArrays -> com.google.common.collect.ObjectArrays:
    225:225:java.lang.Object checkElementNotNull(java.lang.Object,int) -> checkElementNotNull
    209:209:java.lang.Object[] checkElementsNotNull(java.lang.Object[]) -> checkElementsNotNull
    215:215:java.lang.Object[] checkElementsNotNull(java.lang.Object[],int) -> checkElementsNotNull
    49:49:java.lang.Object[] newArray(java.lang.Class,int) -> newArray
    59:59:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
com.google.common.collect.Platform -> com.google.common.collect.Platform:
    80:85:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
com.google.common.collect.RegularImmutableAsList -> com.google.common.collect.RegularImmutableAsList:
    35:37:void <init>(com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableList) -> <init>
    41:41:void <init>(com.google.common.collect.ImmutableCollection,java.lang.Object[]) -> <init>
    68:68:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    46:46:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
    62:62:void forEach(java.util.function.Consumer) -> forEach
    73:73:java.lang.Object get(int) -> get
    29:29:java.util.ListIterator listIterator(int) -> listIterator
    56:56:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableList -> com.google.common.collect.RegularImmutableList:
    32:32:void <clinit>() -> <clinit>
    36:37:void <init>(java.lang.Object[]) -> <init>
    52:53:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    60:60:java.lang.Object get(int) -> get
    29:29:java.util.ListIterator listIterator(int) -> listIterator
    68:68:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    42:42:int size() -> size
    73:73:java.util.Spliterator spliterator() -> spliterator
com.google.common.collect.Sets -> com.google.common.collect.Sets:
    216:216:java.util.HashSet newHashSet() -> newHashSet
    233:234:java.util.HashSet newHashSet(java.lang.Object[]) -> newHashSet
    293:293:java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    1931:1932:boolean removeAllImpl(java.util.Set,java.util.Iterator) -> removeAllImpl
    1938:1952:boolean removeAllImpl(java.util.Set,java.util.Collection) -> removeAllImpl
com.google.common.collect.Sets$ImprovedAbstractSet -> com.google.common.collect.Sets$ImprovedAbstractSet:
    77:77:void <init>() -> <init>
    80:80:boolean removeAll(java.util.Collection) -> removeAll
    85:85:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.SingletonImmutableList -> com.google.common.collect.SingletonImmutableList:
    37:38:void <init>(java.lang.Object) -> <init>
    43:44:java.lang.Object get(int) -> get
    31:31:java.util.Iterator iterator() -> iterator
    49:49:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    54:54:java.util.Spliterator spliterator() -> spliterator
    31:31:java.util.List subList(int,int) -> subList
    64:65:com.google.common.collect.ImmutableList subList(int,int) -> subList
    70:70:java.lang.String toString() -> toString
com.google.common.collect.UnmodifiableIterator -> com.google.common.collect.UnmodifiableIterator:
    35:35:void <init>() -> <init>
    46:46:void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.google.common.collect.UnmodifiableListIterator:
    32:32:void <init>() -> <init>
    43:43:void add(java.lang.Object) -> add
    55:55:void set(java.lang.Object) -> set
com.google.common.math.IntMath -> com.google.common.math.IntMath:
    201:676:void <clinit>() -> <clinit>
    456:456:int checkedAdd(int,int) -> checkedAdd
com.google.common.math.MathPreconditions -> com.google.common.math.MathPreconditions:
    93:93:void checkNoOverflow(boolean,java.lang.String,int,int) -> checkNoOverflow
>>>>>>> rename package name,fix action event info list same time crash
com.joanzapata.iconify.IconDrawable -> com.joanzapata.iconify.IconDrawable:
    43:46:void <init>(android.content.Context,java.lang.String) -> <init>
    56:57:void <init>(android.content.Context,com.joanzapata.iconify.Icon) -> <init>
    83:83:com.joanzapata.iconify.IconDrawable actionBarSize() -> actionBarSize
    144:145:com.joanzapata.iconify.IconDrawable alpha(int) -> alpha
    198:198:void clearColorFilter() -> clearColorFilter
    122:123:com.joanzapata.iconify.IconDrawable color(int) -> color
    133:134:com.joanzapata.iconify.IconDrawable colorRes(int) -> colorRes
    226:224:int convertDpToPx(android.content.Context,float) -> convertDpToPx
    161:169:void draw(android.graphics.Canvas) -> draw
    151:151:int getIntrinsicHeight() -> getIntrinsicHeight
    156:156:int getIntrinsicWidth() -> getIntrinsicWidth
    203:203:int getOpacity() -> getOpacity
    61:67:void init(android.content.Context,com.joanzapata.iconify.Icon) -> init
    216:216:boolean isEnabled(int[]) -> isEnabled
    187:188:void setAlpha(int) -> setAlpha
    193:193:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    179:181:boolean setState(int[]) -> setState
    211:211:void setStyle(android.graphics.Paint$Style) -> setStyle
    101:101:com.joanzapata.iconify.IconDrawable sizeDp(int) -> sizeDp
    110:112:com.joanzapata.iconify.IconDrawable sizePx(int) -> sizePx
    92:92:com.joanzapata.iconify.IconDrawable sizeRes(int) -> sizeRes
com.joanzapata.iconify.Iconify -> com.joanzapata.iconify.Iconify:
    14:14:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    11:11:void access$000(com.joanzapata.iconify.IconFontDescriptor) -> access$000
    42:50:void addIconFontDescriptor(com.joanzapata.iconify.IconFontDescriptor) -> addIconFontDescriptor
    33:35:void addIcons(android.widget.TextView[]) -> addIcons
    55:55:java.lang.CharSequence compute(android.content.Context,java.lang.CharSequence) -> compute
    59:59:java.lang.CharSequence compute(android.content.Context,java.lang.CharSequence,android.widget.TextView) -> compute
    104:106:com.joanzapata.iconify.Icon findIconForKey(java.lang.String) -> findIconForKey
    90:91:com.joanzapata.iconify.internal.IconFontDescriptorWrapper findTypefaceOf(com.joanzapata.iconify.Icon) -> findTypefaceOf
    22:22:com.joanzapata.iconify.Iconify$IconifyInitializer with(com.joanzapata.iconify.IconFontDescriptor) -> with
com.joanzapata.iconify.Iconify$IconifyInitializer -> com.joanzapata.iconify.Iconify$IconifyInitializer:
    67:68:void <init>(com.joanzapata.iconify.IconFontDescriptor) -> <init>
    77:77:com.joanzapata.iconify.Iconify$IconifyInitializer with(com.joanzapata.iconify.IconFontDescriptor) -> with
com.joanzapata.iconify.fonts.MaterialCommunityIcons -> com.joanzapata.iconify.fonts.MaterialCommunityIcons:
    6:5:void <clinit>() -> <clinit>
    1466:1467:void <init>(java.lang.String,int,char) -> <init>
    1477:1477:char character() -> character
    1472:1472:java.lang.String key() -> key
    5:5:com.joanzapata.iconify.fonts.MaterialCommunityIcons valueOf(java.lang.String) -> valueOf
    5:5:com.joanzapata.iconify.fonts.MaterialCommunityIcons[] values() -> values
com.joanzapata.iconify.fonts.MaterialCommunityModule -> com.joanzapata.iconify.fonts.MaterialCommunityModule:
    6:6:void <init>() -> <init>
    15:15:com.joanzapata.iconify.Icon[] characters() -> characters
com.joanzapata.iconify.internal.CustomTypefaceSpan -> com.joanzapata.iconify.internal.CustomTypefaceSpan:
    12:13:void <clinit>() -> <clinit>
    27:35:void <init>(com.joanzapata.iconify.Icon,android.graphics.Typeface,float,float,int,boolean,boolean) -> <init>
    80:86:void applyCustomTypeFace(android.graphics.Paint,android.graphics.Typeface) -> applyCustomTypeFace
    58:72:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    41:51:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    76:76:boolean isAnimated() -> isAnimated
com.joanzapata.iconify.internal.HasOnViewAttachListener$HasOnViewAttachListenerDelegate -> com.joanzapata.iconify.internal.HasOnViewAttachListener$HasOnViewAttachListenerDelegate:
    59:60:void <init>(android.widget.TextView) -> <init>
    73:73:void onAttachedToWindow() -> onAttachedToWindow
    77:77:void onDetachedFromWindow() -> onDetachedFromWindow
    64:68:void setOnViewAttachListener(com.joanzapata.iconify.internal.HasOnViewAttachListener$OnViewAttachListener) -> setOnViewAttachListener
com.joanzapata.iconify.internal.IconFontDescriptorWrapper -> com.joanzapata.iconify.internal.IconFontDescriptorWrapper:
    19:25:void <init>(com.joanzapata.iconify.IconFontDescriptor) -> <init>
    30:30:com.joanzapata.iconify.Icon getIcon(java.lang.String) -> getIcon
    34:34:com.joanzapata.iconify.IconFontDescriptor getIconFontDescriptor() -> getIconFontDescriptor
    38:43:android.graphics.Typeface getTypeface(android.content.Context) -> getTypeface
    47:47:boolean hasIcon(com.joanzapata.iconify.Icon) -> hasIcon
com.joanzapata.iconify.internal.ParsingUtil -> com.joanzapata.iconify.internal.ParsingUtil:
    22:22:void <init>() -> <init>
    208:207:float dpToPx(android.content.Context,float) -> dpToPx
    198:203:int getColorFromResource(android.content.Context,java.lang.String,java.lang.String) -> getColorFromResource
    189:194:float getPxFromDimen(android.content.Context,java.lang.String,java.lang.String) -> getPxFromDimen
    82:84:boolean hasAnimatedSpans(android.text.SpannableStringBuilder) -> hasAnimatedSpans
    29:75:java.lang.CharSequence parse(android.content.Context,java.util.List,java.lang.CharSequence,android.widget.TextView) -> parse
    98:185:void recursivePrepareSpannableIndexes(android.content.Context,java.lang.String,android.text.SpannableStringBuilder,java.util.List,int) -> recursivePrepareSpannableIndexes
    213:212:float spToPx(android.content.Context,float) -> spToPx
com.joanzapata.iconify.internal.ParsingUtil$1 -> com.joanzapata.iconify.internal.ParsingUtil$1:
    51:52:void <init>(android.widget.TextView) -> <init>
    56:57:void onAttach() -> onAttach
    70:70:void onDetach() -> onDetach
com.joanzapata.iconify.internal.ParsingUtil$1$1 -> com.joanzapata.iconify.internal.ParsingUtil$1$1:
    57:57:void <init>(com.joanzapata.iconify.internal.ParsingUtil$1) -> <init>
    60:62:void run() -> run
com.joanzapata.iconify.material.community.BuildConfig -> com.joanzapata.iconify.material.community.BuildConfig:
    6:6:void <init>() -> <init>
com.joanzapata.iconify.material.community.R -> com.joanzapata.iconify.material.community.R:
    10:10:void <init>() -> <init>
com.joanzapata.iconify.widget.IconButton -> com.joanzapata.iconify.widget.IconButton:
    14:15:void <init>(android.content.Context) -> <init>
    19:20:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    24:25:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    29:29:void init() -> init
    46:47:void onAttachedToWindow() -> onAttachedToWindow
    52:53:void onDetachedFromWindow() -> onDetachedFromWindow
    40:41:void setOnViewAttachListener(com.joanzapata.iconify.internal.HasOnViewAttachListener$OnViewAttachListener) -> setOnViewAttachListener
    34:34:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
com.joanzapata.iconify.widget.IconTextView -> com.joanzapata.iconify.widget.IconTextView:
    14:15:void <init>(android.content.Context) -> <init>
    19:20:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    24:25:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    29:29:void init() -> init
    45:46:void onAttachedToWindow() -> onAttachedToWindow
    51:52:void onDetachedFromWindow() -> onDetachedFromWindow
    39:40:void setOnViewAttachListener(com.joanzapata.iconify.internal.HasOnViewAttachListener$OnViewAttachListener) -> setOnViewAttachListener
    34:34:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
com.joanzapata.iconify.widget.IconToggleButton -> com.joanzapata.iconify.widget.IconToggleButton:
    14:15:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    19:20:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    24:25:void <init>(android.content.Context) -> <init>
    29:29:void init() -> init
    45:46:void onAttachedToWindow() -> onAttachedToWindow
    51:52:void onDetachedFromWindow() -> onDetachedFromWindow
    39:40:void setOnViewAttachListener(com.joanzapata.iconify.internal.HasOnViewAttachListener$OnViewAttachListener) -> setOnViewAttachListener
    34:34:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache:
    42:42:void <clinit>() -> <clinit>
    61:61:void <init>(java.io.File) -> <init>
    69:69:void <init>(java.io.File,java.io.File) -> <init>
    78:80:void <init>(java.io.File,java.io.File,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> <init>
    98:98:java.io.File get(java.lang.String) -> get
    168:175:java.io.File getFile(java.lang.String) -> getFile
    103:119:boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    127:139:boolean save(java.lang.String,android.graphics.Bitmap) -> save
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache:
    32:32:void <init>(java.io.File) -> <init>
    50:50:void <init>(java.io.File,java.io.File,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> <init>
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache:
    94:757:void <clinit>() -> <clinit>
    182:190:void <init>(java.io.File,int,int,long,int) -> <init>
    87:87:java.io.Writer access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$000
    87:87:void access$100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$100
    87:87:int access$1900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$1900
    87:87:void access$200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$200
    87:87:java.io.File access$2000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$2000
    87:87:java.io.OutputStream access$2100() -> access$2100
    87:87:void access$2300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> access$2300
    87:87:boolean access$300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$300
    87:87:void access$400(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$400
    87:87:int access$502(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,int) -> access$502
    641:642:void checkNotClosed() -> checkNotClosed
    656:668:void close() -> close
    535:537:void completeEdit(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> completeEdit
    690:691:void delete() -> delete
    393:394:void deleteIfExists(java.io.File) -> deleteIfExists
    462:462:com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String) -> edit
    466:486:com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    413:445:com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot get(java.lang.String) -> get
    596:596:boolean journalRebuildRequired() -> journalRebuildRequired
    216:206:com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache open(java.io.File,int,int,long,int) -> open
    330:344:void processJournal() -> processJournal
    255:282:void readJournal() -> readJournal
    287:289:void readJournalLine(java.lang.String) -> readJournalLine
    354:379:void rebuildJournal() -> rebuildJournal
    607:611:boolean remove(java.lang.String) -> remove
    400:403:void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    678:680:void trimToFileCount() -> trimToFileCount
    671:673:void trimToSize() -> trimToSize
    695:697:void validateKey(java.lang.String) -> validateKey
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1 -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1:
    165:165:void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> <init>
    165:165:java.lang.Object call() -> call
    167:177:java.lang.Void call() -> call
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2 -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2:
    757:757:void <init>() -> <init>
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor:
    765:765:void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1) -> <init>
    771:773:void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> <init>
    868:868:void abort() -> abort
    765:765:com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry access$1500(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$1500
    765:765:boolean[] access$1600(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$1600
    765:765:boolean access$2402(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> access$2402
    854:860:void commit() -> commit
    813:835:java.io.OutputStream newOutputStream(int) -> newOutputStream
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream:
    880:880:void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,java.io.OutputStream,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1) -> <init>
    881:882:void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,java.io.OutputStream) -> <init>
    903:905:void close() -> close
    911:913:void flush() -> flush
    887:889:void write(int) -> write
    895:897:void write(byte[],int,int) -> write
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry:
    919:919:void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,java.lang.String,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1) -> <init>
    934:936:void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,java.lang.String) -> <init>
    919:919:long[] access$1100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1100
    919:919:java.lang.String access$1200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1200
    919:919:long access$1300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1300
    919:919:long access$1302(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,long) -> access$1302
    919:919:boolean access$700(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$700
    919:919:boolean access$702(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,boolean) -> access$702
    919:919:com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$800(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$800
    919:919:com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$802(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$802
    919:919:void access$900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,java.lang.String[]) -> access$900
    967:967:java.io.File getCleanFile(int) -> getCleanFile
    971:971:java.io.File getDirtyFile(int) -> getDirtyFile
    940:944:java.lang.String getLengths() -> getLengths
    963:963:java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    949:950:void setLengths(java.lang.String[]) -> setLengths
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot:
    706:706:void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,java.lang.String,long,java.io.File[],java.io.InputStream[],long[],com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1) -> <init>
    713:718:void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,java.lang.String,long,java.io.File[],java.io.InputStream[],long[]) -> <init>
    751:752:void close() -> close
    732:732:java.io.File getFile(int) -> getFile
com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache:
    43:43:void <clinit>() -> <clinit>
    83:85:void <init>(java.io.File,java.io.File,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,long,int) -> <init>
    133:140:java.io.File get(java.lang.String) -> get
    224:224:java.lang.String getKey(java.lang.String) -> getKey
    112:119:void initCache(java.io.File,java.io.File,long,int) -> initCache
    147:161:boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    169:179:boolean save(java.lang.String,android.graphics.Bitmap) -> save
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader -> com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader:
    71:71:void <init>(java.io.InputStream,java.nio.charset.Charset) -> <init>
    85:87:void <init>(java.io.InputStream,int,java.nio.charset.Charset) -> <init>
    44:44:java.nio.charset.Charset access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader) -> access$000
    108:113:void close() -> close
    183:185:void fillBuf() -> fillBuf
    125:175:java.lang.String readLine() -> readLine
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1 -> com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1:
    147:147:void <init>(com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader,int) -> <init>
    150:154:java.lang.String toString() -> toString
com.nostra13.universalimageloader.cache.disc.impl.ext.Util -> com.nostra13.universalimageloader.cache.disc.impl.ext.Util:
    27:28:void <clinit>() -> <clinit>
    69:71:void closeQuietly(java.io.Closeable) -> closeQuietly
    52:54:void deleteContents(java.io.File) -> deleteContents
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator:
    24:24:void <init>() -> <init>
    27:27:java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator:
    30:30:void <init>() -> <init>
    37:39:java.lang.String generate(java.lang.String) -> generate
    45:49:byte[] getMD5(byte[]) -> getMD5
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache:
    39:41:void <init>(com.nostra13.universalimageloader.cache.memory.MemoryCache,java.util.Comparator) -> <init>
    34:34:java.lang.Object get(java.lang.Object) -> get
    64:64:android.graphics.Bitmap get(java.lang.String) -> get
    79:79:java.util.Collection keys() -> keys
    34:34:boolean put(java.lang.Object,java.lang.Object) -> put
    47:58:boolean put(java.lang.String,android.graphics.Bitmap) -> put
    34:34:java.lang.Object remove(java.lang.Object) -> remove
    69:69:android.graphics.Bitmap remove(java.lang.String) -> remove
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache:
    31:33:void <init>(int) -> <init>
    22:22:java.lang.Object get(java.lang.Object) -> get
    49:46:android.graphics.Bitmap get(java.lang.String) -> get
    121:123:java.util.Collection keys() -> keys
    22:22:boolean put(java.lang.Object,java.lang.Object) -> put
    61:58:boolean put(java.lang.String,android.graphics.Bitmap) -> put
    22:22:java.lang.Object remove(java.lang.Object) -> remove
    110:107:android.graphics.Bitmap remove(java.lang.String) -> remove
    137:137:int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    142:142:java.lang.String toString() -> toString
    82:99:void trimToSize(int) -> trimToSize
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory:
    129:129:com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    81:93:com.nostra13.universalimageloader.cache.disc.DiskCache createDiskCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,long,int) -> createDiskCache
    59:62:java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> createExecutor
    73:73:com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    124:124:com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    119:119:com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    112:114:com.nostra13.universalimageloader.cache.memory.MemoryCache createMemoryCache(int) -> createMemoryCache
    98:100:java.io.File createReserveDiskCacheDir(android.content.Context) -> createReserveDiskCacheDir
    68:68:java.util.concurrent.Executor createTaskDistributor() -> createTaskDistributor
    134:134:java.util.concurrent.ThreadFactory createThreadFactory(int,java.lang.String) -> createThreadFactory
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    139:139:void <clinit>() -> <clinit>
    146:149:void <init>(int,java.lang.String) -> <init>
    154:156:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.DisplayBitmapTask:
    49:57:void <init>(android.graphics.Bitmap,com.nostra13.universalimageloader.core.ImageLoadingInfo,com.nostra13.universalimageloader.core.ImageLoaderEngine,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> <init>
    78:79:boolean isViewWasReused() -> isViewWasReused
    62:72:void run() -> run
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.DisplayImageOptions:
    65:65:void <init>(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder,com.nostra13.universalimageloader.core.DisplayImageOptions$1) -> <init>
    87:106:void <init>(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> <init>
    65:65:int access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1900
    65:65:int access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2000
    65:65:int access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2100
    65:65:android.graphics.drawable.Drawable access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2200
    65:65:android.graphics.drawable.Drawable access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2300
    65:65:android.graphics.drawable.Drawable access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2400
    65:65:boolean access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2500
    65:65:boolean access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2600
    65:65:boolean access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2700
    65:65:com.nostra13.universalimageloader.core.assist.ImageScaleType access$2800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2800
    65:65:android.graphics.BitmapFactory$Options access$2900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2900
    65:65:int access$3000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3000
    65:65:boolean access$3100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3100
    65:65:java.lang.Object access$3200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3200
    65:65:com.nostra13.universalimageloader.core.process.BitmapProcessor access$3300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3300
    65:65:com.nostra13.universalimageloader.core.process.BitmapProcessor access$3400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3400
    65:65:com.nostra13.universalimageloader.core.display.BitmapDisplayer access$3500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3500
    65:65:android.os.Handler access$3600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3600
    65:65:boolean access$3700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3700
    507:507:com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> createSimple
    162:162:android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    166:166:int getDelayBeforeLoading() -> getDelayBeforeLoading
    186:186:com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    174:174:java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    190:190:android.os.Handler getHandler() -> getHandler
    138:138:android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> getImageForEmptyUri
    142:142:android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> getImageOnFail
    134:134:android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> getImageOnLoading
    158:158:com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    182:182:com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    178:178:com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    150:150:boolean isCacheInMemory() -> isCacheInMemory
    154:154:boolean isCacheOnDisk() -> isCacheOnDisk
    170:170:boolean isConsiderExifParams() -> isConsiderExifParams
    146:146:boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    194:194:boolean isSyncLoading() -> isSyncLoading
    130:130:boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    126:126:boolean shouldPostProcess() -> shouldPostProcess
    122:122:boolean shouldPreProcess() -> shouldPreProcess
    114:114:boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    118:118:boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    110:110:boolean shouldShowImageOnLoading() -> shouldShowImageOnLoading
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.DisplayImageOptions$Builder:
    223:225:void <init>() -> <init>
    202:202:int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$000
    202:202:int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$100
    202:202:android.graphics.BitmapFactory$Options access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1000
    202:202:int access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1100
    202:202:boolean access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1200
    202:202:java.lang.Object access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1300
    202:202:com.nostra13.universalimageloader.core.process.BitmapProcessor access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1400
    202:202:com.nostra13.universalimageloader.core.process.BitmapProcessor access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1500
    202:202:com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1600
    202:202:android.os.Handler access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1700
    202:202:boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1800
    202:202:int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$200
    202:202:android.graphics.drawable.Drawable access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$300
    202:202:android.graphics.drawable.Drawable access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$400
    202:202:android.graphics.drawable.Drawable access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$500
    202:202:boolean access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$600
    202:202:boolean access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$700
    202:202:boolean access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$800
    202:202:com.nostra13.universalimageloader.core.assist.ImageScaleType access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$900
    383:382:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    489:489:com.nostra13.universalimageloader.core.DisplayImageOptions build() -> build
    341:341:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> cacheInMemory
    367:367:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisk(boolean) -> cacheOnDisk
    465:483:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> cloneFrom
    415:415:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean) -> considerExifParams
    403:403:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    445:444:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> displayer
    409:409:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    376:376:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> imageScaleType
    315:315:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading() -> resetViewBeforeLoading
    324:324:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading(boolean) -> resetViewBeforeLoading
    270:270:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    293:293:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    248:248:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> showImageOnLoading
    237:237:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> showStubImage
    450:450:com.nostra13.universalimageloader.core.DisplayImageOptions$Builder syncLoading(boolean) -> syncLoading
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.ImageLoader:
    80:64:void <init>() -> <init>
    567:568:void checkConfiguration() -> checkConfiguration
    735:739:android.os.Handler defineHandler(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defineHandler
    208:210:void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    303:303:void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    340:340:void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    365:365:void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    70:77:com.nostra13.universalimageloader.core.ImageLoader getInstance() -> getInstance
    693:693:void handleSlowNetwork(boolean) -> handleSlowNetwork
    95:93:void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> init
    444:444:void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    474:483:void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> loadImage
    514:514:android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    552:558:android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener -> com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener:
    750:750:void <init>() -> <init>
    750:750:void <init>(com.nostra13.universalimageloader.core.ImageLoader$1) -> <init>
    760:760:android.graphics.Bitmap getLoadedBitmap() -> getLoadedBitmap
    756:756:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    50:50:void <init>(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder,com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1) -> <init>
    78:102:void <init>(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> <init>
    131:141:com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> getMaxImageSize
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1:
    618:618:void <clinit>() -> <clinit>
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    162:162:void <clinit>() -> <clinit>
    195:196:void <init>(android.content.Context) -> <init>
    149:149:android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$000
    149:149:int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$100
    149:149:com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1000
    149:149:com.nostra13.universalimageloader.cache.disc.DiskCache access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1100
    149:149:com.nostra13.universalimageloader.cache.memory.MemoryCache access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1200
    149:149:com.nostra13.universalimageloader.core.DisplayImageOptions access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1300
    149:149:com.nostra13.universalimageloader.core.download.ImageDownloader access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1400
    149:149:com.nostra13.universalimageloader.core.decode.ImageDecoder access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1500
    149:149:boolean access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1600
    149:149:boolean access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1700
    149:149:boolean access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1800
    149:149:int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$200
    149:149:int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$300
    149:149:int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$400
    149:149:com.nostra13.universalimageloader.core.process.BitmapProcessor access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$500
    149:149:java.util.concurrent.Executor access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$600
    149:149:java.util.concurrent.Executor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$700
    149:149:int access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$800
    149:149:int access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$900
    559:560:com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> build
    333:333:com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    503:510:com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCache(com.nostra13.universalimageloader.cache.disc.DiskCache) -> diskCache
    474:478:com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> diskCacheFileNameGenerator
    428:426:com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheSize(int) -> diskCacheSize
    521:521:com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> imageDownloader
    564:596:void initEmptyFieldsWithDefaultValues() -> initEmptyFieldsWithDefaultValues
    342:346:com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    308:318:com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    553:553:com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder writeDebugLogs() -> writeDebugLogs
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader:
    612:613:void <init>(com.nostra13.universalimageloader.core.download.ImageDownloader) -> <init>
    618:621:java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader:
    639:640:void <init>(com.nostra13.universalimageloader.core.download.ImageDownloader) -> <init>
    645:649:java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.nostra13.universalimageloader.core.ImageLoaderEngine:
    58:64:void <init>(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> <init>
    40:40:void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$000
    40:40:java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$100
    40:40:java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$200
    128:128:void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTaskFor
    101:101:java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    190:190:void fireCallback(java.lang.Runnable) -> fireCallback
    110:110:java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    194:197:java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    203:203:java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    207:207:java.lang.Object getPauseLock() -> getPauseLock
    151:151:void handleSlowNetwork(boolean) -> handleSlowNetwork
    91:96:void initExecutorsIfNeed() -> initExecutorsIfNeed
    211:211:boolean isNetworkDenied() -> isNetworkDenied
    215:215:boolean isSlowNetwork() -> isSlowNetwork
    118:118:void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> prepareDisplayTaskFor
    69:69:void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> submit
    86:87:void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> submit
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.nostra13.universalimageloader.core.ImageLoaderEngine$1:
    69:69:void <init>(com.nostra13.universalimageloader.core.ImageLoaderEngine,com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> <init>
    72:78:void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.ImageLoadingInfo:
    48:56:void <init>(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize,java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener,java.util.concurrent.locks.ReentrantLock) -> <init>
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask:
    97:114:void <init>(com.nostra13.universalimageloader.core.ImageLoaderEngine,com.nostra13.universalimageloader.core.ImageLoadingInfo,android.os.Handler) -> <init>
    51:51:com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> access$000
    435:436:void checkTaskInterrupted() -> checkTaskInterrupted
    385:386:void checkTaskNotActual() -> checkTaskNotActual
    399:400:void checkViewCollected() -> checkViewCollected
    415:416:void checkViewReused() -> checkViewReused
    261:264:android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    200:205:boolean delayIfNeed() -> delayIfNeed
    290:291:boolean downloadImage() -> downloadImage
    357:364:void fireCancelEvent() -> fireCancelEvent
    343:353:void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireFailEvent
    329:337:boolean fireProgressEvent(int,int) -> fireProgressEvent
    369:374:com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    450:450:java.lang.String getLoadingUri() -> getLoadingUri
    442:443:boolean isTaskInterrupted() -> isTaskInterrupted
    394:394:boolean isTaskNotActual() -> isTaskNotActual
    406:407:boolean isViewCollected() -> isViewCollected
    422:427:boolean isViewReused() -> isViewReused
    324:324:boolean onBytesCopied(int,int) -> onBytesCopied
    298:316:boolean resizeAndSaveImage(int,int) -> resizeAndSaveImage
    119:171:void run() -> run
    455:459:void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine) -> runTask
    269:283:boolean tryCacheImageOnDisk() -> tryCacheImageOnDisk
    216:244:android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    180:195:boolean waitIfPaused() -> waitIfPaused
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1:
    331:331:void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask,int,int) -> <init>
    334:334:void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2:
    344:344:void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask,com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> <init>
    347:350:void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3:
    358:358:void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> <init>
    361:361:void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException:
    470:470:void <init>(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> <init>
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask:
    42:46:void <init>(com.nostra13.universalimageloader.core.ImageLoaderEngine,android.graphics.Bitmap,com.nostra13.universalimageloader.core.ImageLoadingInfo,android.os.Handler) -> <init>
    51:57:void run() -> run
com.nostra13.universalimageloader.core.assist.ContentLengthInputStream -> com.nostra13.universalimageloader.core.assist.ContentLengthInputStream:
    33:35:void <init>(java.io.InputStream,int) -> <init>
    40:40:int available() -> available
    45:45:void close() -> close
    50:50:void mark(int) -> mark
    80:80:boolean markSupported() -> markSupported
    55:55:int read() -> read
    60:60:int read(byte[]) -> read
    65:65:int read(byte[],int,int) -> read
    70:70:void reset() -> reset
    75:75:long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.assist.FailReason:
    30:32:void <init>(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> <init>
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.nostra13.universalimageloader.core.assist.FailReason$FailType:
    48:46:void <clinit>() -> <clinit>
    46:46:void <init>(java.lang.String,int) -> <init>
    46:46:com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
    46:46:com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.assist.FlushedInputStream:
    14:14:void <init>(java.io.InputStream) -> <init>
    21:23:long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.nostra13.universalimageloader.core.assist.ImageScaleType:
    26:24:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    24:24:com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
    24:24:com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.assist.ImageSize:
    32:34:void <init>(int,int) -> <init>
    37:43:void <init>(int,int,int) -> <init>
    52:52:int getHeight() -> getHeight
    48:48:int getWidth() -> getWidth
    62:62:com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> scale
    57:57:com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    67:67:java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> com.nostra13.universalimageloader.core.assist.LoadedFrom:
    9:8:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    8:8:com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
    8:8:com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.nostra13.universalimageloader.core.assist.QueueProcessingType:
    25:24:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    24:24:com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
    24:24:com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.nostra13.universalimageloader.core.assist.ViewScaleType:
    32:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    59:65:com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
    27:27:com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    27:27:com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.nostra13.universalimageloader.core.assist.ViewScaleType$1:
    59:59:void <clinit>() -> <clinit>
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    11:11:void <init>() -> <init>
    32:32:boolean offer(java.lang.Object) -> offer
    45:45:java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque:
    140:140:void <init>() -> <init>
    149:150:void <init>(int) -> <init>
    603:603:boolean add(java.lang.Object) -> add
    303:304:void addLast(java.lang.Object) -> addLast
    957:971:void clear() -> clear
    793:801:boolean contains(java.lang.Object) -> contains
    703:703:int drainTo(java.util.Collection) -> drainTo
    717:714:int drainTo(java.util.Collection,int) -> drainTo
    668:668:java.lang.Object element() -> element
    521:522:java.lang.Object getFirst() -> getFirst
    989:989:java.util.Iterator iterator() -> iterator
    188:198:boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    207:217:boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    628:628:boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    312:311:boolean offerFirst(java.lang.Object) -> offerFirst
    327:326:boolean offerLast(java.lang.Object) -> offerLast
    401:400:boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    672:672:java.lang.Object peek() -> peek
    536:541:java.lang.Object peekFirst() -> peekFirst
    646:646:java.lang.Object poll() -> poll
    654:654:java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    436:441:java.lang.Object pollFirst() -> pollFirst
    483:495:java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    619:619:void put(java.lang.Object) -> put
    360:359:void putLast(java.lang.Object) -> putLast
    687:692:int remainingCapacity() -> remainingCapacity
    765:765:boolean remove(java.lang.Object) -> remove
    421:422:java.lang.Object removeFirst() -> removeFirst
    557:568:boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    774:779:int size() -> size
    650:650:java.lang.Object take() -> take
    456:464:java.lang.Object takeFirst() -> takeFirst
    860:869:java.lang.Object[] toArray() -> toArray
    911:925:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    930:948:java.lang.String toString() -> toString
    270:283:void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    226:239:java.lang.Object unlinkFirst() -> unlinkFirst
    248:261:java.lang.Object unlinkLast() -> unlinkLast
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    1036:1044:void <init>(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque) -> <init>
    1072:1079:void advance() -> advance
    1084:1084:boolean hasNext() -> hasNext
    1088:1089:java.lang.Object next() -> next
    1097:1099:void remove() -> remove
    1056:1062:com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    1113:1113:void <init>(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque) -> <init>
    1113:1113:void <init>(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque,com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1) -> <init>
    1114:1114:com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    1115:1115:com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    101:102:void <init>(java.lang.Object) -> <init>
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder:
    55:56:void <init>(boolean) -> <init>
    113:113:boolean canDefineExifParams(java.lang.String,java.lang.String) -> canDefineExifParams
    183:214:android.graphics.Bitmap considerExactScaleAndOrientatiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientatiton
    73:80:android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
    120:147:com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> defineExifOrientation
    98:109:com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> defineImageSizeAndRotation
    93:93:java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    151:167:android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    173:176:java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> resetStream
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo:
    224:226:void <init>() -> <init>
    229:231:void <init>(int,boolean) -> <init>
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    240:242:void <init>(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo) -> <init>
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.nostra13.universalimageloader.core.decode.ImageDecodingInfo:
    51:65:void <init>(java.lang.String,java.lang.String,java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,com.nostra13.universalimageloader.core.download.ImageDownloader,com.nostra13.universalimageloader.core.DisplayImageOptions) -> <init>
    69:81:void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    86:86:void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    91:92:void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    148:148:android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    133:133:com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    138:138:java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    97:97:java.lang.String getImageKey() -> getImageKey
    123:123:com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    102:102:java.lang.String getImageUri() -> getImageUri
    115:115:com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    128:128:com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    143:143:boolean shouldConsiderExifParams() -> shouldConsiderExifParams
com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer:
    80:83:void animate(android.view.View,int) -> animate
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer:
    47:47:void <init>(int) -> <init>
    50:52:void <init>(int,int) -> <init>
    57:58:void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable:
    74:83:void <init>(android.graphics.Bitmap,int,int) -> <init>
    100:100:void draw(android.graphics.Canvas) -> draw
    88:94:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    110:110:void setAlpha(int) -> setAlpha
    115:115:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer:
    28:28:void <init>() -> <init>
    31:31:void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.nostra13.universalimageloader.core.download.BaseImageDownloader:
    69:72:void <init>(android.content.Context) -> <init>
    75:78:void <init>(android.content.Context,int,int) -> <init>
    142:145:java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> createConnection
<<<<<<< HEAD
    83:97:java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
=======
    83:86:java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
>>>>>>> rename package name,fix action event info list same time crash
    203:204:java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> getStreamFromAssets
    174:190:java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> getStreamFromContent
    216:218:java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> getStreamFromDrawable
    159:160:java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> getStreamFromFile
    112:126:java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
    235:235:java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> getStreamFromOtherSource
    239:245:boolean isVideoUri(android.net.Uri) -> isVideoUri
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$1:
    83:83:void <clinit>() -> <clinit>
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme:
    46:45:void <clinit>() -> <clinit>
    51:53:void <init>(java.lang.String,int,java.lang.String) -> <init>
    74:74:boolean belongsTo(java.lang.String) -> belongsTo
    84:85:java.lang.String crop(java.lang.String) -> crop
    64:70:com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    45:45:com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    45:45:com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    79:79:java.lang.String wrap(java.lang.String) -> wrap
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageViewAware:
    44:44:void <init>(android.widget.ImageView) -> <init>
    92:96:int getHeight() -> getHeight
    132:139:int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
    104:108:com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    75:79:int getWidth() -> getWidth
    35:35:android.view.View getWrappedView() -> getWrappedView
    113:113:android.widget.ImageView getWrappedView() -> getWrappedView
    126:126:void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> setImageBitmapInto
    118:120:void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
com.nostra13.universalimageloader.core.imageaware.NonViewAware -> com.nostra13.universalimageloader.core.imageaware.NonViewAware:
    44:45:void <init>(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType) -> <init>
    60:60:int getHeight() -> getHeight
    80:80:int getId() -> getId
    65:65:com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    55:55:int getWidth() -> getWidth
com.nostra13.universalimageloader.core.imageaware.ViewAware -> com.nostra13.universalimageloader.core.imageaware.ViewAware:
    50:50:void <init>(android.view.View) -> <init>
    69:70:void <init>(android.view.View,boolean) -> <init>
    111:118:int getHeight() -> getHeight
    141:142:int getId() -> getId
    126:126:com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    87:94:int getWidth() -> getWidth
    131:131:android.view.View getWrappedView() -> getWrappedView
    136:136:boolean isCollected() -> isCollected
    161:168:boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    147:154:boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener:
    30:30:void <init>() -> <init>
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.nostra13.universalimageloader.utils.ImageSizeUtils:
    39:42:void <clinit>() -> <clinit>
    92:127:int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageSampleSize
    190:200:float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageScale
    155:163:int computeMinImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize) -> computeMinImageSampleSize
    133:135:int considerMaxTextureSize(int,int,int,boolean) -> considerMaxTextureSize
    54:60:com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> defineTargetSizeForView
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> com.nostra13.universalimageloader.utils.ImageSizeUtils$1:
    99:99:void <clinit>() -> <clinit>
com.nostra13.universalimageloader.utils.IoUtils -> com.nostra13.universalimageloader.utils.IoUtils:
    117:117:void closeSilently(java.io.Closeable) -> closeSilently
    69:82:boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int) -> copyStream
    104:111:void readAndCloseStream(java.io.InputStream) -> readAndCloseStream
    88:90:boolean shouldStopLoading(com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int,int) -> shouldStopLoading
com.nostra13.universalimageloader.utils.L -> com.nostra13.universalimageloader.utils.L:
    72:73:void d(java.lang.String,java.lang.Object[]) -> d
    86:86:void e(java.lang.Throwable) -> e
    90:90:void e(java.lang.String,java.lang.Object[]) -> e
    78:78:void i(java.lang.String,java.lang.Object[]) -> i
    98:111:void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
    82:82:void w(java.lang.String,java.lang.Object[]) -> w
    63:63:void writeDebugLogs(boolean) -> writeDebugLogs
com.nostra13.universalimageloader.utils.MemoryCacheUtils -> com.nostra13.universalimageloader.utils.MemoryCacheUtils:
    51:51:java.util.Comparator createFuzzyKeyComparator() -> createFuzzyKeyComparator
    47:47:java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> generateKey
com.nostra13.universalimageloader.utils.MemoryCacheUtils$1 -> com.nostra13.universalimageloader.utils.MemoryCacheUtils$1:
    51:51:void <init>() -> <init>
    51:51:int compare(java.lang.Object,java.lang.Object) -> compare
    54:56:int compare(java.lang.String,java.lang.String) -> compare
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.utils.StorageUtils:
    52:52:java.io.File getCacheDirectory(android.content.Context) -> getCacheDirectory
    70:83:java.io.File getCacheDirectory(android.content.Context,boolean) -> getCacheDirectory
    127:137:java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    97:100:java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
    144:144:boolean hasExternalStoragePermission(android.content.Context) -> hasExternalStoragePermission
com.orhanobut.logger.AndroidLogAdapter -> com.orhanobut.logger.AndroidLogAdapter:
    5:5:void <init>() -> <init>
    7:7:void d(java.lang.String,java.lang.String) -> d
    11:11:void e(java.lang.String,java.lang.String) -> e
    19:19:void i(java.lang.String,java.lang.String) -> i
    23:23:void v(java.lang.String,java.lang.String) -> v
    15:15:void w(java.lang.String,java.lang.String) -> w
    27:27:void wtf(java.lang.String,java.lang.String) -> wtf
com.orhanobut.logger.Helper -> com.orhanobut.logger.Helper:
    62:68:boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> equals
    92:102:java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
    43:43:boolean isEmpty(java.lang.CharSequence) -> isEmpty
com.orhanobut.logger.LogLevel -> com.orhanobut.logger.LogLevel:
    8:3:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.orhanobut.logger.LogLevel valueOf(java.lang.String) -> valueOf
    3:3:com.orhanobut.logger.LogLevel[] values() -> values
com.orhanobut.logger.Logger -> com.orhanobut.logger.Logger:
    17:17:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    63:63:void d(java.lang.String,java.lang.Object[]) -> d
    67:67:void d(java.lang.Object) -> d
    71:71:void e(java.lang.String,java.lang.Object[]) -> e
com.orhanobut.logger.LoggerPrinter -> com.orhanobut.logger.LoggerPrinter:
    77:78:void <init>() -> <init>
    367:367:java.lang.String createMessage(java.lang.String,java.lang.Object[]) -> createMessage
    110:110:void d(java.lang.String,java.lang.Object[]) -> d
    115:120:void d(java.lang.Object) -> d
    128:128:void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    348:351:java.lang.String formatTag(java.lang.String) -> formatTag
    371:378:int getMethodCount() -> getMethodCount
    343:344:java.lang.String getSimpleClassName(java.lang.String) -> getSimpleClassName
    391:394:int getStackOffset(java.lang.StackTraceElement[]) -> getStackOffset
    358:363:java.lang.String getTag() -> getTag
    90:88:com.orhanobut.logger.Settings init(java.lang.String) -> init
    201:241:void log(int,java.lang.String,java.lang.String,java.lang.Throwable) -> log
    251:257:void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
    302:302:void logBottomBorder(int,java.lang.String) -> logBottomBorder
    317:326:void logChunk(int,java.lang.String,java.lang.String) -> logChunk
    310:312:void logContent(int,java.lang.String,java.lang.String) -> logContent
    306:306:void logDivider(int,java.lang.String) -> logDivider
    265:297:void logHeaderContent(int,java.lang.String,int) -> logHeaderContent
    260:260:void logTopBorder(int,java.lang.String) -> logTopBorder
com.orhanobut.logger.Settings -> com.orhanobut.logger.Settings:
    3:13:void <init>() -> <init>
    60:63:com.orhanobut.logger.LogAdapter getLogAdapter() -> getLogAdapter
    52:52:com.orhanobut.logger.LogLevel getLogLevel() -> getLogLevel
    44:44:int getMethodCount() -> getMethodCount
    56:56:int getMethodOffset() -> getMethodOffset
    48:48:boolean isShowThreadInfo() -> isShowThreadInfo
<<<<<<< HEAD
=======
com.seafile.seadroid2.BootAutostart -> com.seafile.seadroid2.BootAutostart:
    19:19:void <init>() -> <init>
    30:40:void onReceive(android.content.Context,android.content.Intent) -> onReceive
>>>>>>> rename package name,fix action event info list same time crash
com.seafile.seadroid2.BuildConfig -> com.seafile.seadroid2.BuildConfig:
    6:6:void <init>() -> <init>
com.seafile.seadroid2.Manifest -> com.seafile.seadroid2.Manifest:
    10:10:void <init>() -> <init>
com.seafile.seadroid2.Manifest$permission -> com.seafile.seadroid2.Manifest$permission:
    11:11:void <init>() -> <init>
com.seafile.seadroid2.R -> com.seafile.seadroid2.R:
    10:10:void <init>() -> <init>
com.seafile.seadroid2.R$anim -> com.seafile.seadroid2.R$anim:
    11:11:void <init>() -> <init>
com.seafile.seadroid2.R$animator -> com.seafile.seadroid2.R$animator:
    41:41:void <init>() -> <init>
com.seafile.seadroid2.R$array -> com.seafile.seadroid2.R$array:
    53:53:void <init>() -> <init>
com.seafile.seadroid2.R$attr -> com.seafile.seadroid2.R$attr:
    66:66:void <init>() -> <init>
com.seafile.seadroid2.R$bool -> com.seafile.seadroid2.R$bool:
    4569:4569:void <init>() -> <init>
com.seafile.seadroid2.R$color -> com.seafile.seadroid2.R$color:
    4581:4581:void <init>() -> <init>
com.seafile.seadroid2.R$dimen -> com.seafile.seadroid2.R$dimen:
    4759:4759:void <init>() -> <init>
com.seafile.seadroid2.R$drawable -> com.seafile.seadroid2.R$drawable:
    5132:5132:void <init>() -> <init>
com.seafile.seadroid2.R$id -> com.seafile.seadroid2.R$id:
    5467:5467:void <init>() -> <init>
com.seafile.seadroid2.R$integer -> com.seafile.seadroid2.R$integer:
    6028:6028:void <init>() -> <init>
com.seafile.seadroid2.R$interpolator -> com.seafile.seadroid2.R$interpolator:
    6052:6052:void <init>() -> <init>
com.seafile.seadroid2.R$layout -> com.seafile.seadroid2.R$layout:
    6058:6058:void <init>() -> <init>
com.seafile.seadroid2.R$menu -> com.seafile.seadroid2.R$menu:
    6225:6225:void <init>() -> <init>
com.seafile.seadroid2.R$mipmap -> com.seafile.seadroid2.R$mipmap:
    6240:6240:void <init>() -> <init>
com.seafile.seadroid2.R$plurals -> com.seafile.seadroid2.R$plurals:
    6244:6244:void <init>() -> <init>
com.seafile.seadroid2.R$string -> com.seafile.seadroid2.R$string:
    6255:6255:void <init>() -> <init>
com.seafile.seadroid2.R$style -> com.seafile.seadroid2.R$style:
    6741:6741:void <init>() -> <init>
com.seafile.seadroid2.R$styleable -> com.seafile.seadroid2.R$styleable:
    7347:21051:void <clinit>() -> <clinit>
    7275:7275:void <init>() -> <init>
com.seafile.seadroid2.R$xml -> com.seafile.seadroid2.R$xml:
    21095:21095:void <init>() -> <init>
<<<<<<< HEAD
com.seafile.vmoo.BootAutostart -> com.seafile.vmoo.BootAutostart:
    19:19:void <init>() -> <init>
    30:40:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.seafile.vmoo.SeadroidApplication -> com.seafile.vmoo.SeadroidApplication:
    25:25:void <init>() -> <init>
    43:44:void attachBaseContext(android.content.Context) -> attachBaseContext
    86:94:void createNotificationChannel(java.lang.String,java.lang.String,int,boolean,boolean) -> createNotificationChannel
    48:48:android.content.Context getAppContext() -> getAppContext
    53:69:void initImageLoader(android.content.Context) -> initImageLoader
    73:80:void initNotificationChannel() -> initNotificationChannel
    29:37:void onCreate() -> onCreate
com.seafile.vmoo.SeafConnection -> com.seafile.vmoo.SeafConnection:
    64:65:void <init>(com.seafile.vmoo.account.Account) -> <init>
=======
com.seafile.seadroid2.SeadroidApplication -> com.seafile.seadroid2.SeadroidApplication:
    24:24:void <init>() -> <init>
    42:43:void attachBaseContext(android.content.Context) -> attachBaseContext
    85:93:void createNotificationChannel(java.lang.String,java.lang.String,int,boolean,boolean) -> createNotificationChannel
    47:47:android.content.Context getAppContext() -> getAppContext
    52:68:void initImageLoader(android.content.Context) -> initImageLoader
    72:79:void initNotificationChannel() -> initNotificationChannel
    28:36:void onCreate() -> onCreate
com.seafile.seadroid2.SeafConnection -> com.seafile.seadroid2.SeafConnection:
    64:65:void <init>(com.seafile.seadroid2.account.Account) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    1496:1500:void checkRequestResponseStatus(com.github.kevinsawicki.http.HttpRequest,int) -> checkRequestResponseStatus
    1517:1521:void checkRequestResponseStatus(com.github.kevinsawicki.http.HttpRequest,int,boolean) -> checkRequestResponseStatus
    831:833:java.lang.String commitUpload(java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean) -> commitUpload
    1280:1284:void completeRemoteWipe(java.lang.String) -> completeRemoteWipe
    1400:1412:void copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> copy
    971:996:android.util.Pair createNewDir(java.lang.String,java.lang.String,java.lang.String) -> createNewDir
    1009:1033:android.util.Pair createNewFile(java.lang.String,java.lang.String,java.lang.String) -> createNewFile
<<<<<<< HEAD
    1359:1379:android.util.Pair delete(java.lang.String,java.lang.String,boolean) -> delete
    1209:1219:boolean deleteShareLink(java.lang.String) -> deleteShareLink
    274:277:boolean doLogin(java.lang.String,java.lang.String,boolean) -> doLogin
    392:392:java.lang.String encodeUriComponent(java.lang.String) -> encodeUriComponent
    241:245:java.lang.String getAccountInfo() -> getAccountInfo
    353:360:java.lang.String getAvatar(java.lang.String,int) -> getAvatar
    540:546:android.util.Pair getBlock(java.lang.String,com.seafile.vmoo.data.FileBlocks,java.lang.String,java.lang.String,long,com.seafile.vmoo.data.ProgressMonitor) -> getBlock
    512:518:java.lang.String getBlockDownloadLink(java.lang.String,java.lang.String,java.lang.String) -> getBlockDownloadLink
    484:494:java.lang.String getBlockDownloadList(java.lang.String,java.lang.String) -> getBlockDownloadList
    648:673:java.io.File getBlockFromLink(java.lang.String,com.seafile.vmoo.data.FileBlocks,java.lang.String,java.lang.String,long,com.seafile.vmoo.data.ProgressMonitor) -> getBlockFromLink
=======
    951:962:void createNewRepo(java.lang.String,java.lang.String,java.lang.String) -> createNewRepo
    1359:1379:android.util.Pair delete(java.lang.String,java.lang.String,boolean) -> delete
    1199:1202:void deleteRepo(java.lang.String) -> deleteRepo
    1209:1219:boolean deleteShareLink(java.lang.String) -> deleteShareLink
    274:277:boolean doLogin(java.lang.String,java.lang.String,boolean) -> doLogin
    392:392:java.lang.String encodeUriComponent(java.lang.String) -> encodeUriComponent
    69:69:com.seafile.seadroid2.account.Account getAccount() -> getAccount
    241:245:java.lang.String getAccountInfo() -> getAccountInfo
    353:360:java.lang.String getAvatar(java.lang.String,int) -> getAvatar
    540:546:android.util.Pair getBlock(java.lang.String,com.seafile.seadroid2.data.FileBlocks,java.lang.String,java.lang.String,long,com.seafile.seadroid2.data.ProgressMonitor) -> getBlock
    512:518:java.lang.String getBlockDownloadLink(java.lang.String,java.lang.String,java.lang.String) -> getBlockDownloadLink
    484:494:java.lang.String getBlockDownloadList(java.lang.String,java.lang.String) -> getBlockDownloadList
    648:673:java.io.File getBlockFromLink(java.lang.String,com.seafile.seadroid2.data.FileBlocks,java.lang.String,java.lang.String,long,com.seafile.seadroid2.data.ProgressMonitor) -> getBlockFromLink
>>>>>>> rename package name,fix action event info list same time crash
    806:814:java.lang.String getBlockUploadLink(java.lang.String,java.util.List) -> getBlockUploadLink
    406:439:android.util.Pair getDirents(java.lang.String,java.lang.String,java.lang.String) -> getDirents
    451:472:android.util.Pair getDownloadLink(java.lang.String,java.lang.String,boolean) -> getDownloadLink
    735:747:java.lang.String getEncryptRepo(java.lang.String) -> getEncryptRepo
    300:309:java.lang.String getEvents(int) -> getEvents
<<<<<<< HEAD
    709:726:android.util.Pair getFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.data.ProgressMonitor) -> getFile
    575:625:java.io.File getFileFromLink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.data.ProgressMonitor) -> getFileFromLink
    319:329:java.lang.String getHistoryChanges(java.lang.String,java.lang.String) -> getHistoryChanges
    691:692:java.lang.String getReUsedFileLink(java.lang.String,java.lang.String) -> getReUsedFileLink
    284:290:java.lang.String getRepos() -> getRepos
    1536:1539:com.seafile.vmoo.SeafException getSeafExceptionFromHttpRequestException(com.github.kevinsawicki.http.HttpRequest$HttpRequestException) -> getSeafExceptionFromHttpRequestException
=======
    709:726:android.util.Pair getFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.ProgressMonitor) -> getFile
    575:625:java.io.File getFileFromLink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.ProgressMonitor) -> getFileFromLink
    319:329:java.lang.String getHistoryChanges(java.lang.String,java.lang.String) -> getHistoryChanges
    691:692:java.lang.String getReUsedFileLink(java.lang.String,java.lang.String) -> getReUsedFileLink
    284:290:java.lang.String getRepos() -> getRepos
    1536:1539:com.seafile.seadroid2.SeafException getSeafExceptionFromHttpRequestException(com.github.kevinsawicki.http.HttpRequest$HttpRequestException) -> getSeafExceptionFromHttpRequestException
>>>>>>> rename package name,fix action event info list same time crash
    259:263:java.lang.String getServerInfo() -> getServerInfo
    1229:1237:java.lang.String getShareLink(java.lang.String,java.lang.String) -> getShareLink
    1247:1267:java.lang.String getShareLink(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getShareLink
    339:344:java.lang.String getStarredFiles() -> getStarredFiles
    774:791:java.lang.String getUploadLink(java.lang.String,boolean) -> getUploadLink
    1433:1445:void move(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> move
    1463:1487:android.util.Pair move(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> move
    151:157:com.github.kevinsawicki.http.HttpRequest prepareApiDeleteRequest(java.lang.String,java.util.Map) -> prepareApiDeleteRequest
    113:115:com.github.kevinsawicki.http.HttpRequest prepareApiFileGetRequest(java.lang.String) -> prepareApiFileGetRequest
    73:74:com.github.kevinsawicki.http.HttpRequest prepareApiGetRequest(java.lang.String,java.util.Map) -> prepareApiGetRequest
    109:109:com.github.kevinsawicki.http.HttpRequest prepareApiGetRequest(java.lang.String) -> prepareApiGetRequest
    126:126:com.github.kevinsawicki.http.HttpRequest prepareApiPostRequest(java.lang.String,boolean,java.util.Map) -> prepareApiPostRequest
    138:146:com.github.kevinsawicki.http.HttpRequest prepareApiPostRequest(java.lang.String,boolean,java.util.Map,boolean) -> prepareApiPostRequest
<<<<<<< HEAD
    94:102:com.github.kevinsawicki.http.HttpRequest prepareHttpsCheck(com.github.kevinsawicki.http.HttpRequest) -> prepareHttpsCheck
    169:217:boolean realLogin(java.lang.String,java.lang.String,boolean) -> realLogin
    1325:1348:android.util.Pair rename(java.lang.String,java.lang.String,java.lang.String,boolean) -> rename
=======
    79:80:com.github.kevinsawicki.http.HttpRequest prepareApiPutRequest(java.lang.String,java.util.Map) -> prepareApiPutRequest
    94:102:com.github.kevinsawicki.http.HttpRequest prepareHttpsCheck(com.github.kevinsawicki.http.HttpRequest) -> prepareHttpsCheck
    169:217:boolean realLogin(java.lang.String,java.lang.String,boolean) -> realLogin
    1325:1348:android.util.Pair rename(java.lang.String,java.lang.String,java.lang.String,boolean) -> rename
    1188:1194:void renameRepo(java.lang.String,java.lang.String) -> renameRepo
>>>>>>> rename package name,fix action event info list same time crash
    371:382:java.lang.String searchLibraries(java.lang.String,int) -> searchLibraries
    755:762:boolean setPassword(java.lang.String,java.lang.String) -> setPassword
    85:90:void setRequestCommon(com.github.kevinsawicki.http.HttpRequest) -> setRequestCommon
    1292:1300:void star(java.lang.String,java.lang.String) -> star
<<<<<<< HEAD
    921:923:java.lang.String uploadBlocksCommon(java.lang.String,java.util.List,java.lang.String,java.lang.String,java.util.List,com.seafile.vmoo.data.ProgressMonitor,boolean) -> uploadBlocksCommon
    553:564:java.lang.String uploadByBlocks(java.lang.String,java.lang.String,java.lang.String,java.util.List,boolean,com.seafile.vmoo.data.ProgressMonitor) -> uploadByBlocks
    873:874:java.lang.String uploadFile(java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.data.ProgressMonitor,boolean) -> uploadFile
    884:886:java.lang.String uploadFileCommon(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.data.ProgressMonitor,boolean) -> uploadFileCommon
com.seafile.vmoo.SeafConnection$MonitorCancelledException -> com.seafile.vmoo.SeafConnection$MonitorCancelledException:
    1178:1178:void <init>(com.seafile.vmoo.SeafConnection) -> <init>
    1178:1178:void <init>(com.seafile.vmoo.SeafConnection,com.seafile.vmoo.SeafConnection$1) -> <init>
com.seafile.vmoo.SeafConnection$MonitoredFileOutputStream -> com.seafile.vmoo.SeafConnection$MonitoredFileOutputStream:
    1118:1120:void <init>(com.seafile.vmoo.SeafConnection,java.io.File,com.seafile.vmoo.data.ProgressMonitor) -> <init>
    1123:1128:void <init>(com.seafile.vmoo.SeafConnection,com.seafile.vmoo.data.FileBlocks,java.lang.String,java.io.File,com.seafile.vmoo.data.ProgressMonitor) -> <init>
=======
    1308:1316:void unstar(java.lang.String,java.lang.String) -> unstar
    921:923:java.lang.String uploadBlocksCommon(java.lang.String,java.util.List,java.lang.String,java.lang.String,java.util.List,com.seafile.seadroid2.data.ProgressMonitor,boolean) -> uploadBlocksCommon
    553:564:java.lang.String uploadByBlocks(java.lang.String,java.lang.String,java.lang.String,java.util.List,boolean,com.seafile.seadroid2.data.ProgressMonitor) -> uploadByBlocks
    873:874:java.lang.String uploadFile(java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.ProgressMonitor,boolean) -> uploadFile
    884:886:java.lang.String uploadFileCommon(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.ProgressMonitor,boolean) -> uploadFileCommon
com.seafile.seadroid2.SeafConnection$MonitorCancelledException -> com.seafile.seadroid2.SeafConnection$MonitorCancelledException:
    1178:1178:void <init>(com.seafile.seadroid2.SeafConnection) -> <init>
    1178:1178:void <init>(com.seafile.seadroid2.SeafConnection,com.seafile.seadroid2.SeafConnection$1) -> <init>
com.seafile.seadroid2.SeafConnection$MonitoredFileInputStream -> com.seafile.seadroid2.SeafConnection$MonitoredFileInputStream:
    1055:1057:void <init>(com.seafile.seadroid2.SeafConnection,java.io.File,com.seafile.seadroid2.data.ProgressMonitor) -> <init>
    1091:1093:void checkMonitor() -> checkMonitor
    1087:1087:void close() -> close
    1062:1067:int read(byte[]) -> read
    1074:1078:int read() -> read
com.seafile.seadroid2.SeafConnection$MonitoredFileOutputStream -> com.seafile.seadroid2.SeafConnection$MonitoredFileOutputStream:
    1118:1120:void <init>(com.seafile.seadroid2.SeafConnection,java.io.File,com.seafile.seadroid2.data.ProgressMonitor) -> <init>
    1123:1128:void <init>(com.seafile.seadroid2.SeafConnection,com.seafile.seadroid2.data.FileBlocks,java.lang.String,java.io.File,com.seafile.seadroid2.data.ProgressMonitor) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    1161:1163:void checkMonitor() -> checkMonitor
    1157:1157:void close() -> close
    1134:1136:void write(byte[],int,int) -> write
    1141:1143:void write(byte[]) -> write
    1148:1151:void write(int) -> write
<<<<<<< HEAD
com.seafile.vmoo.SeafException -> com.seafile.vmoo.SeafException:
=======
com.seafile.seadroid2.SeafException -> com.seafile.seadroid2.SeafException:
>>>>>>> rename package name,fix action event info list same time crash
    12:25:void <clinit>() -> <clinit>
    28:29:void <init>(int,java.lang.String) -> <init>
    33:33:int getCode() -> getCode
    37:40:java.lang.String toString() -> toString
<<<<<<< HEAD
com.seafile.vmoo.SettingsManager -> com.seafile.vmoo.SettingsManager:
=======
com.seafile.seadroid2.SettingsManager -> com.seafile.seadroid2.SettingsManager:
>>>>>>> rename package name,fix action event info list same time crash
    26:30:void <init>() -> <init>
    212:216:boolean checkCameraUploadNetworkAvailable() -> checkCameraUploadNetworkAvailable
    253:254:java.util.List getCameraUploadBucketList() -> getCameraUploadBucketList
    266:266:java.lang.String getCameraUploadRepoId() -> getCameraUploadRepoId
    198:198:java.lang.String getCameraUploadRepoName() -> getCameraUploadRepoName
<<<<<<< HEAD
    262:262:int getSortFilesOrderPref() -> getSortFilesOrderPref
    258:258:int getSortFilesTypePref() -> getSortFilesTypePref
    274:274:int getStorageDir() -> getStorageDir
    101:116:com.seafile.vmoo.SettingsManager instance() -> instance
=======
    270:270:java.lang.String getContactsUploadRepoId() -> getContactsUploadRepoId
    202:202:java.lang.String getContactsUploadRepoName() -> getContactsUploadRepoName
    262:262:int getSortFilesOrderPref() -> getSortFilesOrderPref
    258:258:int getSortFilesTypePref() -> getSortFilesTypePref
    274:274:int getStorageDir() -> getStorageDir
    101:116:com.seafile.seadroid2.SettingsManager instance() -> instance
>>>>>>> rename package name,fix action event info list same time crash
    224:224:boolean isDataPlanAllowed() -> isDataPlanAllowed
    142:142:boolean isEncryptEnabled() -> isEncryptEnabled
    170:170:boolean isGestureLockEnabled() -> isGestureLockEnabled
    178:186:boolean isGestureLockRequired() -> isGestureLockRequired
<<<<<<< HEAD
    228:228:boolean isVideosUploadAllowed() -> isVideosUploadAllowed
    121:122:void registerSharedPreferencesListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerSharedPreferencesListener
    206:208:void saveCameraUploadRepoInfo(java.lang.String,java.lang.String) -> saveCameraUploadRepoInfo
=======
    157:157:boolean isPasswordAutoClearEnabled() -> isPasswordAutoClearEnabled
    228:228:boolean isVideosUploadAllowed() -> isVideosUploadAllowed
    121:122:void registerSharedPreferencesListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerSharedPreferencesListener
    206:208:void saveCameraUploadRepoInfo(java.lang.String,java.lang.String) -> saveCameraUploadRepoInfo
    282:284:void saveContactsUploadRepoInfo(java.lang.String,java.lang.String) -> saveContactsUploadRepoInfo
>>>>>>> rename package name,fix action event info list same time crash
    232:232:void saveDataPlanAllowed(boolean) -> saveDataPlanAllowed
    194:194:void saveGestureLockTimeStamp() -> saveGestureLockTimeStamp
    240:241:void saveSortFilesPref(int,int) -> saveSortFilesPref
    236:236:void saveVideosAllowed(boolean) -> saveVideosAllowed
    245:246:void setCameraUploadBucketList(java.util.List) -> setCameraUploadBucketList
    278:278:void setStorageDir(int) -> setStorageDir
<<<<<<< HEAD
    161:163:void setupGestureLock() -> setupGestureLock
    126:127:void unregisterSharedPreferencesListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterSharedPreferencesListener
com.seafile.vmoo.account.Account -> com.seafile.vmoo.account.Account:
=======
    134:135:void setupEncrypt(boolean) -> setupEncrypt
    161:163:void setupGestureLock() -> setupGestureLock
    149:150:void setupPasswordAutoClear(boolean) -> setupPasswordAutoClear
    126:127:void unregisterSharedPreferencesListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterSharedPreferencesListener
com.seafile.seadroid2.account.Account -> com.seafile.seadroid2.account.Account:
>>>>>>> rename package name,fix action event info list same time crash
    161:161:void <clinit>() -> <clinit>
    31:36:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean) -> <init>
    39:45:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String) -> <init>
    48:54:void <init>(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String) -> <init>
    173:179:void <init>(android.os.Parcel) -> <init>
    12:12:int compareTo(java.lang.Object) -> compareTo
<<<<<<< HEAD
    196:196:int compareTo(com.seafile.vmoo.account.Account) -> compareTo
=======
    196:196:int compareTo(com.seafile.seadroid2.account.Account) -> compareTo
>>>>>>> rename package name,fix action event info list same time crash
    119:126:boolean equals(java.lang.Object) -> equals
    139:139:android.accounts.Account getAndroidAccount() -> getAndroidAccount
    134:135:java.lang.String getDisplayName() -> getDisplayName
    73:73:java.lang.String getEmail() -> getEmail
    77:77:java.lang.String getName() -> getName
    80:80:java.lang.String getServer() -> getServer
    65:68:java.lang.String getServerDomainName() -> getServerDomainName
    60:61:java.lang.String getServerHost() -> getServerHost
    84:86:java.lang.String getServerNoProtocol() -> getServerNoProtocol
    103:103:java.lang.String getSessionKey() -> getSessionKey
    130:130:java.lang.String getSignature() -> getSignature
    91:91:java.lang.String getToken() -> getToken
    143:143:boolean hasValidToken() -> hasValidToken
    112:112:int hashCode() -> hashCode
<<<<<<< HEAD
    99:99:boolean isShib() -> isShib
    186:191:java.lang.String toString() -> toString
    153:158:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.seafile.vmoo.account.Account$1 -> com.seafile.vmoo.account.Account$1:
    161:161:void <init>() -> <init>
    161:161:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    164:164:com.seafile.vmoo.account.Account createFromParcel(android.os.Parcel) -> createFromParcel
    161:161:java.lang.Object[] newArray(int) -> newArray
    169:169:com.seafile.vmoo.account.Account[] newArray(int) -> newArray
com.seafile.vmoo.account.AccountDBHelper -> com.seafile.vmoo.account.AccountDBHelper:
    83:85:void <init>(android.content.Context) -> <init>
    224:224:com.seafile.vmoo.account.Account cursorToAccount(android.database.Cursor) -> cursorToAccount
    250:253:com.seafile.vmoo.data.ServerInfo cursorToServerInfo(android.database.Cursor) -> cursorToServerInfo
    194:219:java.util.List getAccountList(android.database.sqlite.SQLiteDatabase) -> getAccountList
    228:245:com.seafile.vmoo.data.ServerInfo getServerInfo(android.database.sqlite.SQLiteDatabase,java.lang.String) -> getServerInfo
=======
    95:95:boolean isHttps() -> isHttps
    99:99:boolean isShib() -> isShib
    107:107:void setSessionKey(java.lang.String) -> setSessionKey
    186:191:java.lang.String toString() -> toString
    153:158:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.seafile.seadroid2.account.Account$1 -> com.seafile.seadroid2.account.Account$1:
    161:161:void <init>() -> <init>
    161:161:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    164:164:com.seafile.seadroid2.account.Account createFromParcel(android.os.Parcel) -> createFromParcel
    161:161:java.lang.Object[] newArray(int) -> newArray
    169:169:com.seafile.seadroid2.account.Account[] newArray(int) -> newArray
com.seafile.seadroid2.account.AccountDBHelper -> com.seafile.seadroid2.account.AccountDBHelper:
    83:85:void <init>(android.content.Context) -> <init>
    224:224:com.seafile.seadroid2.account.Account cursorToAccount(android.database.Cursor) -> cursorToAccount
    250:253:com.seafile.seadroid2.data.ServerInfo cursorToServerInfo(android.database.Cursor) -> cursorToServerInfo
    194:219:java.util.List getAccountList(android.database.sqlite.SQLiteDatabase) -> getAccountList
    228:245:com.seafile.seadroid2.data.ServerInfo getServerInfo(android.database.sqlite.SQLiteDatabase,java.lang.String) -> getServerInfo
>>>>>>> rename package name,fix action event info list same time crash
    75:78:void migrateAccounts(android.content.Context) -> migrateAccounts
    143:190:void migrateToAndroidAccount(android.database.sqlite.SQLiteDatabase) -> migrateToAndroidAccount
    89:90:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    138:138:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    94:132:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
<<<<<<< HEAD
com.seafile.vmoo.account.AccountInfo -> com.seafile.vmoo.account.AccountInfo:
    21:21:void <init>() -> <init>
    24:29:com.seafile.vmoo.account.AccountInfo fromJson(org.json.JSONObject,java.lang.String) -> fromJson
    43:43:java.lang.String getEmail() -> getEmail
    51:51:java.lang.String getName() -> getName
com.seafile.vmoo.account.AccountManager -> com.seafile.vmoo.account.AccountManager:
    34:42:void <init>(android.content.Context) -> <init>
    151:158:java.util.ArrayList getAccountAutoCompleteTexts() -> getAccountAutoCompleteTexts
    46:50:java.util.List getAccountList() -> getAccountList
    67:72:com.seafile.vmoo.account.Account getCurrentAccount() -> getCurrentAccount
    83:89:com.seafile.vmoo.account.Account getSeafileAccount(android.accounts.Account) -> getSeafileAccount
    105:108:com.seafile.vmoo.data.ServerInfo getServerInfo(com.seafile.vmoo.account.Account) -> getServerInfo
    56:61:java.util.List getSignedInAccountList() -> getSignedInAccountList
    120:121:void saveCurrentAccount(java.lang.String) -> saveCurrentAccount
    93:95:void setServerInfo(com.seafile.vmoo.account.Account,com.seafile.vmoo.data.ServerInfo) -> setServerInfo
    130:141:void signOutAccount(com.seafile.vmoo.account.Account) -> signOutAccount
com.seafile.vmoo.account.Authenticator -> com.seafile.vmoo.account.Authenticator:
=======
com.seafile.seadroid2.account.AccountInfo -> com.seafile.seadroid2.account.AccountInfo:
    21:21:void <init>() -> <init>
    24:29:com.seafile.seadroid2.account.AccountInfo fromJson(org.json.JSONObject,java.lang.String) -> fromJson
    43:43:java.lang.String getEmail() -> getEmail
    51:51:java.lang.String getName() -> getName
    47:47:java.lang.String getServer() -> getServer
    55:57:java.lang.String getSpaceUsed() -> getSpaceUsed
    39:39:long getTotal() -> getTotal
    35:35:long getUsage() -> getUsage
com.seafile.seadroid2.account.AccountManager -> com.seafile.seadroid2.account.AccountManager:
    34:42:void <init>(android.content.Context) -> <init>
    151:158:java.util.ArrayList getAccountAutoCompleteTexts() -> getAccountAutoCompleteTexts
    46:50:java.util.List getAccountList() -> getAccountList
    67:72:com.seafile.seadroid2.account.Account getCurrentAccount() -> getCurrentAccount
    83:89:com.seafile.seadroid2.account.Account getSeafileAccount(android.accounts.Account) -> getSeafileAccount
    105:108:com.seafile.seadroid2.data.ServerInfo getServerInfo(com.seafile.seadroid2.account.Account) -> getServerInfo
    56:61:java.util.List getSignedInAccountList() -> getSignedInAccountList
    120:121:void saveCurrentAccount(java.lang.String) -> saveCurrentAccount
    93:95:void setServerInfo(com.seafile.seadroid2.account.Account,com.seafile.seadroid2.data.ServerInfo) -> setServerInfo
    130:141:void signOutAccount(com.seafile.seadroid2.account.Account) -> signOutAccount
com.seafile.seadroid2.account.Authenticator -> com.seafile.seadroid2.account.Authenticator:
>>>>>>> rename package name,fix action event info list same time crash
    69:72:void <init>(android.content.Context) -> <init>
    93:108:android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle) -> addAccount
    117:135:android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle) -> confirmCredentials
    81:83:android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String) -> editProperties
    152:177:android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle) -> getAuthToken
    216:219:android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[]) -> hasFeatures
    190:209:android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle) -> updateCredentials
<<<<<<< HEAD
com.seafile.vmoo.account.AuthenticatorService -> com.seafile.vmoo.account.AuthenticatorService:
    11:11:void <init>() -> <init>
    26:26:android.os.IBinder onBind(android.content.Intent) -> onBind
    18:18:void onCreate() -> onCreate
com.seafile.vmoo.account.ui.AccountDetailActivity -> com.seafile.vmoo.account.ui.AccountDetailActivity:
    33:33:void <init>() -> <init>
    33:33:android.app.ProgressDialog access$000(com.seafile.vmoo.account.ui.AccountDetailActivity) -> access$000
=======
com.seafile.seadroid2.account.AuthenticatorService -> com.seafile.seadroid2.account.AuthenticatorService:
    11:11:void <init>() -> <init>
    26:26:android.os.IBinder onBind(android.content.Intent) -> onBind
    18:18:void onCreate() -> onCreate
com.seafile.seadroid2.account.ui.AccountDetailActivity -> com.seafile.seadroid2.account.ui.AccountDetailActivity:
    33:33:void <init>() -> <init>
    33:33:android.app.ProgressDialog access$000(com.seafile.seadroid2.account.ui.AccountDetailActivity) -> access$000
>>>>>>> rename package name,fix action event info list same time crash
    363:414:void login(android.view.View) -> login
    64:132:void onCreate(android.os.Bundle) -> onCreate
    234:236:void onDestroy() -> onDestroy
    263:282:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
<<<<<<< HEAD
com.seafile.vmoo.account.ui.AccountDetailActivity$LoginTask -> com.seafile.vmoo.account.ui.AccountDetailActivity$LoginTask:
    428:432:void <init>(com.seafile.vmoo.account.ui.AccountDetailActivity,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,boolean) -> <init>
    421:421:void access$100(com.seafile.vmoo.account.ui.AccountDetailActivity$LoginTask) -> access$100
=======
com.seafile.seadroid2.account.ui.AccountDetailActivity$LoginTask -> com.seafile.seadroid2.account.ui.AccountDetailActivity$LoginTask:
    428:432:void <init>(com.seafile.seadroid2.account.ui.AccountDetailActivity,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,boolean) -> <init>
    421:421:void access$100(com.seafile.seadroid2.account.ui.AccountDetailActivity$LoginTask) -> access$100
>>>>>>> rename package name,fix action event info list same time crash
    421:421:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    443:446:java.lang.String doInBackground(java.lang.Void[]) -> doInBackground
    513:546:java.lang.String doLogin() -> doLogin
    421:421:void onPostExecute(java.lang.Object) -> onPostExecute
    455:505:void onPostExecute(java.lang.String) -> onPostExecute
    437:438:void onPreExecute() -> onPreExecute
    450:450:void resend() -> resend
<<<<<<< HEAD
com.seafile.vmoo.account.ui.AccountDetailActivity$LoginTask$1 -> com.seafile.vmoo.account.ui.AccountDetailActivity$LoginTask$1:
    460:460:void <init>(com.seafile.vmoo.account.ui.AccountDetailActivity$LoginTask) -> <init>
    463:464:void onAccepted(boolean) -> onAccepted
com.seafile.vmoo.account.ui.SeafileAuthenticatorActivity -> com.seafile.vmoo.account.ui.SeafileAuthenticatorActivity:
=======
com.seafile.seadroid2.account.ui.AccountDetailActivity$LoginTask$1 -> com.seafile.seadroid2.account.ui.AccountDetailActivity$LoginTask$1:
    460:460:void <init>(com.seafile.seadroid2.account.ui.AccountDetailActivity$LoginTask) -> <init>
    463:464:void onAccepted(boolean) -> onAccepted
com.seafile.seadroid2.account.ui.SeafileAuthenticatorActivity -> com.seafile.seadroid2.account.ui.SeafileAuthenticatorActivity:
>>>>>>> rename package name,fix action event info list same time crash
    25:43:void <init>() -> <init>
    131:196:void finishLogin(android.content.Intent) -> finishLogin
    120:126:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    52:115:void onCreate(android.os.Bundle) -> onCreate
<<<<<<< HEAD
com.seafile.vmoo.account.ui.SeafileAuthenticatorActivity$1 -> com.seafile.vmoo.account.ui.SeafileAuthenticatorActivity$1:
    106:106:void <init>(com.seafile.vmoo.account.ui.SeafileAuthenticatorActivity) -> <init>
    109:109:void onClick(android.view.View) -> onClick
com.seafile.vmoo.account.ui.SingleSignOnActivity -> com.seafile.vmoo.account.ui.SingleSignOnActivity:
    19:19:void <init>() -> <init>
    19:19:java.lang.String access$000(com.seafile.vmoo.account.ui.SingleSignOnActivity) -> access$000
    19:19:boolean access$100(com.seafile.vmoo.account.ui.SingleSignOnActivity,java.lang.String) -> access$100
    19:19:void access$200(com.seafile.vmoo.account.ui.SingleSignOnActivity,java.lang.String) -> access$200
=======
com.seafile.seadroid2.account.ui.SeafileAuthenticatorActivity$1 -> com.seafile.seadroid2.account.ui.SeafileAuthenticatorActivity$1:
    106:106:void <init>(com.seafile.seadroid2.account.ui.SeafileAuthenticatorActivity) -> <init>
    109:109:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.account.ui.SingleSignOnActivity -> com.seafile.seadroid2.account.ui.SingleSignOnActivity:
    19:19:void <init>() -> <init>
    19:19:java.lang.String access$000(com.seafile.seadroid2.account.ui.SingleSignOnActivity) -> access$000
    19:19:boolean access$100(com.seafile.seadroid2.account.ui.SingleSignOnActivity,java.lang.String) -> access$100
    19:19:void access$200(com.seafile.seadroid2.account.ui.SingleSignOnActivity,java.lang.String) -> access$200
>>>>>>> rename package name,fix action event info list same time crash
    88:88:java.lang.String getServerUrl() -> getServerUrl
    74:75:boolean isServerUrlValid(java.lang.String) -> isServerUrlValid
    101:106:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    32:55:void onCreate(android.os.Bundle) -> onCreate
    60:60:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    65:67:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    93:96:void openAuthorizePage(java.lang.String) -> openAuthorizePage
<<<<<<< HEAD
com.seafile.vmoo.account.ui.SingleSignOnActivity$1 -> com.seafile.vmoo.account.ui.SingleSignOnActivity$1:
    42:42:void <init>(com.seafile.vmoo.account.ui.SingleSignOnActivity) -> <init>
    45:47:void onClick(android.view.View) -> onClick
com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity -> com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity:
    42:42:void <init>() -> <init>
    42:42:void access$000(com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity,boolean) -> access$000
    42:42:void access$100(com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity) -> access$100
    42:42:com.seafile.vmoo.account.Account access$200(com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity,java.lang.String,java.lang.String) -> access$200
    42:42:void access$300(com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity,com.seafile.vmoo.account.Account) -> access$300
=======
com.seafile.seadroid2.account.ui.SingleSignOnActivity$1 -> com.seafile.seadroid2.account.ui.SingleSignOnActivity$1:
    42:42:void <init>(com.seafile.seadroid2.account.ui.SingleSignOnActivity) -> <init>
    45:47:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity -> com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity:
    42:42:void <init>() -> <init>
    42:42:void access$000(com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity,boolean) -> access$000
    42:42:void access$100(com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity) -> access$100
    42:42:com.seafile.seadroid2.account.Account access$200(com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity,java.lang.String,java.lang.String) -> access$200
    42:42:void access$300(com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity,com.seafile.seadroid2.account.Account) -> access$300
>>>>>>> rename package name,fix action event info list same time crash
    159:160:void displaySSLError() -> displaySSLError
    277:291:java.lang.String getCookie(java.lang.String,java.lang.String) -> getCookie
    52:72:void onCreate(android.os.Bundle) -> onCreate
    146:150:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    77:120:void openAuthorizePage(java.lang.String) -> openAuthorizePage
<<<<<<< HEAD
    254:270:com.seafile.vmoo.account.Account parseAccount(java.lang.String,java.lang.String) -> parseAccount
    233:245:void returnAccount(com.seafile.vmoo.account.Account) -> returnAccount
    127:140:void showPageLoading(boolean) -> showPageLoading
com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity$CustomWebviewClient -> com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity$CustomWebviewClient:
    163:163:void <init>(com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity) -> <init>
    211:224:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    167:170:void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    176:202:void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity$CustomWebviewClient$1 -> com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity$CustomWebviewClient$1:
    188:188:void <init>(com.seafile.vmoo.account.ui.SingleSignOnAuthorizeActivity$CustomWebviewClient,com.seafile.vmoo.account.Account,android.webkit.SslErrorHandler) -> <init>
    191:193:void onAccepted(boolean) -> onAccepted
    198:199:void onRejected() -> onRejected
com.seafile.vmoo.avatar.AuthImageDownloader -> com.seafile.vmoo.avatar.AuthImageDownloader:
    23:23:void <init>(android.content.Context,int,int) -> <init>
    29:48:java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
com.seafile.vmoo.avatar.Avatar -> com.seafile.vmoo.avatar.Avatar:
    11:11:void <init>() -> <init>
    20:28:com.seafile.vmoo.avatar.Avatar fromJson(org.json.JSONObject) -> fromJson
=======
    254:270:com.seafile.seadroid2.account.Account parseAccount(java.lang.String,java.lang.String) -> parseAccount
    233:245:void returnAccount(com.seafile.seadroid2.account.Account) -> returnAccount
    127:140:void showPageLoading(boolean) -> showPageLoading
com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity$CustomWebviewClient -> com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity$CustomWebviewClient:
    163:163:void <init>(com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity) -> <init>
    211:224:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    167:170:void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    176:202:void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity$CustomWebviewClient$1 -> com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity$CustomWebviewClient$1:
    188:188:void <init>(com.seafile.seadroid2.account.ui.SingleSignOnAuthorizeActivity$CustomWebviewClient,com.seafile.seadroid2.account.Account,android.webkit.SslErrorHandler) -> <init>
    191:193:void onAccepted(boolean) -> onAccepted
    198:199:void onRejected() -> onRejected
com.seafile.seadroid2.avatar.AuthImageDownloader -> com.seafile.seadroid2.avatar.AuthImageDownloader:
    23:23:void <init>(android.content.Context,int,int) -> <init>
    29:48:java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
com.seafile.seadroid2.avatar.Avatar -> com.seafile.seadroid2.avatar.Avatar:
    11:11:void <init>() -> <init>
    20:28:com.seafile.seadroid2.avatar.Avatar fromJson(org.json.JSONObject) -> fromJson
>>>>>>> rename package name,fix action event info list same time crash
    47:47:long getMtime() -> getMtime
    63:63:java.lang.String getSignature() -> getSignature
    39:39:java.lang.String getUrl() -> getUrl
    35:35:int hashCode() -> hashCode
    51:51:void setMtime(long) -> setMtime
    67:67:void setSignature(java.lang.String) -> setSignature
    43:43:void setUrl(java.lang.String) -> setUrl
    72:77:java.lang.String toString() -> toString
<<<<<<< HEAD
com.seafile.vmoo.avatar.AvatarDBHelper -> com.seafile.vmoo.avatar.AvatarDBHelper:
    37:51:void <clinit>() -> <clinit>
    63:52:void <init>(android.content.Context) -> <init>
    164:167:void createAvatarTable(android.database.sqlite.SQLiteDatabase) -> createAvatarTable
    55:59:com.seafile.vmoo.avatar.AvatarDBHelper getAvatarDbHelper() -> getAvatarDbHelper
    96:120:java.util.List getAvatarList() -> getAvatarList
    70:90:boolean hasAvatar(com.seafile.vmoo.account.Account) -> hasAvatar
    148:148:boolean isRowDuplicate(com.seafile.vmoo.avatar.Avatar) -> isRowDuplicate
=======
com.seafile.seadroid2.avatar.AvatarDBHelper -> com.seafile.seadroid2.avatar.AvatarDBHelper:
    37:51:void <clinit>() -> <clinit>
    63:52:void <init>(android.content.Context) -> <init>
    164:167:void createAvatarTable(android.database.sqlite.SQLiteDatabase) -> createAvatarTable
    55:59:com.seafile.seadroid2.avatar.AvatarDBHelper getAvatarDbHelper() -> getAvatarDbHelper
    96:120:java.util.List getAvatarList() -> getAvatarList
    70:90:boolean hasAvatar(com.seafile.seadroid2.account.Account) -> hasAvatar
    148:148:boolean isRowDuplicate(com.seafile.seadroid2.avatar.Avatar) -> isRowDuplicate
>>>>>>> rename package name,fix action event info list same time crash
    160:160:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    179:179:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    173:174:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    126:141:void saveAvatars(java.util.List) -> saveAvatars
<<<<<<< HEAD
com.seafile.vmoo.avatar.AvatarManager -> com.seafile.vmoo.avatar.AvatarManager:
    24:26:void <init>() -> <init>
    35:43:java.util.ArrayList getAccountsWithoutAvatars() -> getAccountsWithoutAvatars
    62:62:java.util.List getAvatarList() -> getAvatarList
    51:51:boolean hasAvatar(com.seafile.vmoo.account.Account) -> hasAvatar
    55:56:boolean isNeedToLoadNewAvatars() -> isNeedToLoadNewAvatars
    72:75:com.seafile.vmoo.avatar.Avatar parseAvatar(java.lang.String) -> parseAvatar
    66:66:void saveAvatarList(java.util.List) -> saveAvatarList
com.seafile.vmoo.cameraupload.BucketsFragment -> com.seafile.vmoo.cameraupload.BucketsFragment:
    23:150:void <init>() -> <init>
    23:23:com.seafile.vmoo.cameraupload.CameraUploadConfigActivity access$000(com.seafile.vmoo.cameraupload.BucketsFragment) -> access$000
    23:23:android.view.animation.TranslateAnimation access$100(com.seafile.vmoo.cameraupload.BucketsFragment) -> access$100
    23:23:android.widget.RelativeLayout access$200(com.seafile.vmoo.cameraupload.BucketsFragment) -> access$200
    23:23:android.view.animation.TranslateAnimation access$300(com.seafile.vmoo.cameraupload.BucketsFragment) -> access$300
    172:176:com.seafile.vmoo.cameraupload.BucketsSelectionFragment getSelectionFragment() -> getSelectionFragment
    116:116:boolean isAutoScanSelected() -> isAutoScanSelected
    37:85:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.vmoo.cameraupload.BucketsFragment$1 -> com.seafile.vmoo.cameraupload.BucketsFragment$1:
    93:93:void <init>(com.seafile.vmoo.cameraupload.BucketsFragment) -> <init>
    105:102:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.seafile.vmoo.cameraupload.BucketsFragment$2 -> com.seafile.vmoo.cameraupload.BucketsFragment$2:
    119:119:void <init>(com.seafile.vmoo.cameraupload.BucketsFragment) -> <init>
    122:123:void onClick(android.view.View) -> onClick
com.seafile.vmoo.cameraupload.BucketsFragment$3 -> com.seafile.vmoo.cameraupload.BucketsFragment$3:
    130:130:void <init>(com.seafile.vmoo.cameraupload.BucketsFragment) -> <init>
    134:134:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    142:142:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.seafile.vmoo.cameraupload.BucketsFragment$4 -> com.seafile.vmoo.cameraupload.BucketsFragment$4:
    150:150:void <init>(com.seafile.vmoo.cameraupload.BucketsFragment) -> <init>
    154:154:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    162:162:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.seafile.vmoo.cameraupload.BucketsSelectionFragment -> com.seafile.vmoo.cameraupload.BucketsSelectionFragment:
    22:22:void <init>() -> <init>
    22:22:java.util.List access$000(com.seafile.vmoo.cameraupload.BucketsSelectionFragment) -> access$000
    22:22:boolean[] access$100(com.seafile.vmoo.cameraupload.BucketsSelectionFragment) -> access$100
    22:22:android.graphics.Bitmap[] access$200(com.seafile.vmoo.cameraupload.BucketsSelectionFragment) -> access$200
=======
com.seafile.seadroid2.avatar.AvatarManager -> com.seafile.seadroid2.avatar.AvatarManager:
    24:26:void <init>() -> <init>
    35:43:java.util.ArrayList getAccountsWithoutAvatars() -> getAccountsWithoutAvatars
    62:62:java.util.List getAvatarList() -> getAvatarList
    51:51:boolean hasAvatar(com.seafile.seadroid2.account.Account) -> hasAvatar
    55:56:boolean isNeedToLoadNewAvatars() -> isNeedToLoadNewAvatars
    72:75:com.seafile.seadroid2.avatar.Avatar parseAvatar(java.lang.String) -> parseAvatar
    66:66:void saveAvatarList(java.util.List) -> saveAvatarList
com.seafile.seadroid2.cameraupload.BucketsFragment -> com.seafile.seadroid2.cameraupload.BucketsFragment:
    23:150:void <init>() -> <init>
    23:23:com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity access$000(com.seafile.seadroid2.cameraupload.BucketsFragment) -> access$000
    23:23:android.view.animation.TranslateAnimation access$100(com.seafile.seadroid2.cameraupload.BucketsFragment) -> access$100
    23:23:android.widget.RelativeLayout access$200(com.seafile.seadroid2.cameraupload.BucketsFragment) -> access$200
    23:23:android.view.animation.TranslateAnimation access$300(com.seafile.seadroid2.cameraupload.BucketsFragment) -> access$300
    172:176:com.seafile.seadroid2.cameraupload.BucketsSelectionFragment getSelectionFragment() -> getSelectionFragment
    116:116:boolean isAutoScanSelected() -> isAutoScanSelected
    37:85:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.seadroid2.cameraupload.BucketsFragment$1 -> com.seafile.seadroid2.cameraupload.BucketsFragment$1:
    93:93:void <init>(com.seafile.seadroid2.cameraupload.BucketsFragment) -> <init>
    105:102:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.seafile.seadroid2.cameraupload.BucketsFragment$2 -> com.seafile.seadroid2.cameraupload.BucketsFragment$2:
    119:119:void <init>(com.seafile.seadroid2.cameraupload.BucketsFragment) -> <init>
    122:123:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.cameraupload.BucketsFragment$3 -> com.seafile.seadroid2.cameraupload.BucketsFragment$3:
    130:130:void <init>(com.seafile.seadroid2.cameraupload.BucketsFragment) -> <init>
    134:134:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    142:142:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.seafile.seadroid2.cameraupload.BucketsFragment$4 -> com.seafile.seadroid2.cameraupload.BucketsFragment$4:
    150:150:void <init>(com.seafile.seadroid2.cameraupload.BucketsFragment) -> <init>
    154:154:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    162:162:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.seafile.seadroid2.cameraupload.BucketsSelectionFragment -> com.seafile.seadroid2.cameraupload.BucketsSelectionFragment:
    22:22:void <init>() -> <init>
    22:22:java.util.List access$000(com.seafile.seadroid2.cameraupload.BucketsSelectionFragment) -> access$000
    22:22:boolean[] access$100(com.seafile.seadroid2.cameraupload.BucketsSelectionFragment) -> access$100
    22:22:android.graphics.Bitmap[] access$200(com.seafile.seadroid2.cameraupload.BucketsSelectionFragment) -> access$200
>>>>>>> rename package name,fix action event info list same time crash
    76:79:java.util.List getSelectedBuckets() -> getSelectedBuckets
    32:58:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    65:66:void onDestroy() -> onDestroy
    71:72:void onPause() -> onPause
<<<<<<< HEAD
com.seafile.vmoo.cameraupload.BucketsSelectionFragment$ImageAdapter -> com.seafile.vmoo.cameraupload.BucketsSelectionFragment$ImageAdapter:
    89:90:void <init>(com.seafile.vmoo.cameraupload.BucketsSelectionFragment) -> <init>
    94:94:int getCount() -> getCount
    98:98:java.lang.Object getItem(int) -> getItem
    108:137:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.seafile.vmoo.cameraupload.BucketsSelectionFragment$ImageAdapter$1 -> com.seafile.vmoo.cameraupload.BucketsSelectionFragment$ImageAdapter$1:
    121:121:void <init>(com.seafile.vmoo.cameraupload.BucketsSelectionFragment$ImageAdapter,com.seafile.vmoo.cameraupload.BucketsSelectionFragment$ViewHolder) -> <init>
    124:129:void onClick(android.view.View) -> onClick
com.seafile.vmoo.cameraupload.BucketsSelectionFragment$ViewHolder -> com.seafile.vmoo.cameraupload.BucketsSelectionFragment$ViewHolder:
    142:142:void <init>() -> <init>
com.seafile.vmoo.cameraupload.CameraSyncAdapter -> com.seafile.vmoo.cameraupload.CameraSyncAdapter:
    111:117:void <init>(android.content.Context) -> <init>
    560:563:void checkUploadResult(android.content.SyncResult) -> checkUploadResult
    168:187:void createDirectories(com.seafile.vmoo.data.DataManager) -> createDirectories
    201:216:void forceCreateDirectory(com.seafile.vmoo.data.DataManager,java.lang.String,java.lang.String) -> forceCreateDirectory
    138:140:boolean isCancelled() -> isCancelled
    495:534:void iterateCursor(android.content.SyncResult,com.seafile.vmoo.data.DataManager,android.database.Cursor) -> iterateCursor
=======
com.seafile.seadroid2.cameraupload.BucketsSelectionFragment$ImageAdapter -> com.seafile.seadroid2.cameraupload.BucketsSelectionFragment$ImageAdapter:
    89:90:void <init>(com.seafile.seadroid2.cameraupload.BucketsSelectionFragment) -> <init>
    94:94:int getCount() -> getCount
    98:98:java.lang.Object getItem(int) -> getItem
    108:137:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.seafile.seadroid2.cameraupload.BucketsSelectionFragment$ImageAdapter$1 -> com.seafile.seadroid2.cameraupload.BucketsSelectionFragment$ImageAdapter$1:
    121:121:void <init>(com.seafile.seadroid2.cameraupload.BucketsSelectionFragment$ImageAdapter,com.seafile.seadroid2.cameraupload.BucketsSelectionFragment$ViewHolder) -> <init>
    124:129:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.cameraupload.BucketsSelectionFragment$ViewHolder -> com.seafile.seadroid2.cameraupload.BucketsSelectionFragment$ViewHolder:
    142:142:void <init>() -> <init>
com.seafile.seadroid2.cameraupload.CameraSyncAdapter -> com.seafile.seadroid2.cameraupload.CameraSyncAdapter:
    111:117:void <init>(android.content.Context) -> <init>
    560:563:void checkUploadResult(android.content.SyncResult) -> checkUploadResult
    168:187:void createDirectories(com.seafile.seadroid2.data.DataManager) -> createDirectories
    201:216:void forceCreateDirectory(com.seafile.seadroid2.data.DataManager,java.lang.String,java.lang.String) -> forceCreateDirectory
    138:140:boolean isCancelled() -> isCancelled
    495:534:void iterateCursor(android.content.SyncResult,com.seafile.seadroid2.data.DataManager,android.database.Cursor) -> iterateCursor
>>>>>>> rename package name,fix action event info list same time crash
    225:227:void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult) -> onPerformSync
    130:134:void onSyncCanceled() -> onSyncCanceled
    625:650:void showNotificationAuthError() -> showNotificationAuthError
    658:678:void showNotificationRepoError() -> showNotificationRepoError
    121:126:void startTransferService() -> startTransferService
<<<<<<< HEAD
    585:592:void uploadFile(com.seafile.vmoo.data.DataManager,java.io.File,java.lang.String) -> uploadFile
    366:416:void uploadImages(android.content.SyncResult,com.seafile.vmoo.data.DataManager) -> uploadImages
    424:474:void uploadVideos(android.content.SyncResult,com.seafile.vmoo.data.DataManager) -> uploadVideos
    151:154:boolean validateRepository(com.seafile.vmoo.data.DataManager) -> validateRepository
    480:482:java.lang.String varArgs(int) -> varArgs
    539:544:void waitForUploads() -> waitForUploads
com.seafile.vmoo.cameraupload.CameraSyncAdapter$1 -> com.seafile.vmoo.cameraupload.CameraSyncAdapter$1:
    79:79:void <init>(com.seafile.vmoo.cameraupload.CameraSyncAdapter) -> <init>
    84:87:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    96:99:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.vmoo.cameraupload.CameraSyncService -> com.seafile.vmoo.cameraupload.CameraSyncService:
=======
    585:592:void uploadFile(com.seafile.seadroid2.data.DataManager,java.io.File,java.lang.String) -> uploadFile
    366:416:void uploadImages(android.content.SyncResult,com.seafile.seadroid2.data.DataManager) -> uploadImages
    424:474:void uploadVideos(android.content.SyncResult,com.seafile.seadroid2.data.DataManager) -> uploadVideos
    151:154:boolean validateRepository(com.seafile.seadroid2.data.DataManager) -> validateRepository
    480:482:java.lang.String varArgs(int) -> varArgs
    539:544:void waitForUploads() -> waitForUploads
com.seafile.seadroid2.cameraupload.CameraSyncAdapter$1 -> com.seafile.seadroid2.cameraupload.CameraSyncAdapter$1:
    79:79:void <init>(com.seafile.seadroid2.cameraupload.CameraSyncAdapter) -> <init>
    84:87:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    96:99:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.seadroid2.cameraupload.CameraSyncService -> com.seafile.seadroid2.cameraupload.CameraSyncService:
>>>>>>> rename package name,fix action event info list same time crash
    15:15:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    28:28:android.os.IBinder onBind(android.content.Intent) -> onBind
    19:23:void onCreate() -> onCreate
<<<<<<< HEAD
com.seafile.vmoo.cameraupload.CameraUploadConfigActivity -> com.seafile.vmoo.cameraupload.CameraUploadConfigActivity:
    26:78:void <init>() -> <init>
    26:26:int access$002(com.seafile.vmoo.cameraupload.CameraUploadConfigActivity,int) -> access$002
    26:26:boolean access$100(com.seafile.vmoo.cameraupload.CameraUploadConfigActivity) -> access$100
    26:26:boolean access$200(com.seafile.vmoo.cameraupload.CameraUploadConfigActivity) -> access$200
    26:26:com.seafile.vmoo.cameraupload.BucketsFragment access$300(com.seafile.vmoo.cameraupload.CameraUploadConfigActivity) -> access$300
    26:26:com.seafile.vmoo.cameraupload.BucketsFragment access$302(com.seafile.vmoo.cameraupload.CameraUploadConfigActivity,com.seafile.vmoo.cameraupload.BucketsFragment) -> access$302
    26:26:com.seafile.vmoo.cameraupload.CloudLibraryFragment access$400(com.seafile.vmoo.cameraupload.CameraUploadConfigActivity) -> access$400
    26:26:com.seafile.vmoo.cameraupload.CloudLibraryFragment access$402(com.seafile.vmoo.cameraupload.CameraUploadConfigActivity,com.seafile.vmoo.cameraupload.CloudLibraryFragment) -> access$402
=======
com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity -> com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity:
    26:78:void <init>() -> <init>
    26:26:int access$002(com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity,int) -> access$002
    26:26:boolean access$100(com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity) -> access$100
    26:26:boolean access$200(com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity) -> access$200
    26:26:com.seafile.seadroid2.cameraupload.BucketsFragment access$300(com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity) -> access$300
    26:26:com.seafile.seadroid2.cameraupload.BucketsFragment access$302(com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity,com.seafile.seadroid2.cameraupload.BucketsFragment) -> access$302
    26:26:com.seafile.seadroid2.cameraupload.CloudLibraryFragment access$400(com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity) -> access$400
    26:26:com.seafile.seadroid2.cameraupload.CloudLibraryFragment access$402(com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity,com.seafile.seadroid2.cameraupload.CloudLibraryFragment) -> access$402
>>>>>>> rename package name,fix action event info list same time crash
    139:139:boolean isChooseDirPage() -> isChooseDirPage
    135:135:boolean isChooseLibPage() -> isChooseLibPage
    124:130:void onBackPressed() -> onBackPressed
    46:71:void onCreate(android.os.Bundle) -> onCreate
<<<<<<< HEAD
    93:94:void saveCameraUploadInfo(com.seafile.vmoo.account.Account,com.seafile.vmoo.data.SeafRepo) -> saveCameraUploadInfo
    143:143:void saveDataPlanAllowed(boolean) -> saveDataPlanAllowed
    99:119:void saveSettings() -> saveSettings
    147:147:void saveVideosAllowed(boolean) -> saveVideosAllowed
com.seafile.vmoo.cameraupload.CameraUploadConfigActivity$1 -> com.seafile.vmoo.cameraupload.CameraUploadConfigActivity$1:
    78:78:void <init>(com.seafile.vmoo.cameraupload.CameraUploadConfigActivity) -> <init>
    85:85:void onPageScrolled(int,float,int) -> onPageScrolled
com.seafile.vmoo.cameraupload.CameraUploadConfigActivity$CameraUploadConfigAdapter -> com.seafile.vmoo.cameraupload.CameraUploadConfigActivity$CameraUploadConfigAdapter:
    152:153:void <init>(com.seafile.vmoo.cameraupload.CameraUploadConfigActivity,androidx.fragment.app.FragmentManager) -> <init>
    198:198:int getCount() -> getCount
    160:178:androidx.fragment.app.Fragment getItem(int) -> getItem
com.seafile.vmoo.cameraupload.CameraUploadDBHelper -> com.seafile.vmoo.cameraupload.CameraUploadDBHelper:
=======
    93:94:void saveCameraUploadInfo(com.seafile.seadroid2.account.Account,com.seafile.seadroid2.data.SeafRepo) -> saveCameraUploadInfo
    143:143:void saveDataPlanAllowed(boolean) -> saveDataPlanAllowed
    99:119:void saveSettings() -> saveSettings
    147:147:void saveVideosAllowed(boolean) -> saveVideosAllowed
com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity$1 -> com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity$1:
    78:78:void <init>(com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity) -> <init>
    85:85:void onPageScrolled(int,float,int) -> onPageScrolled
com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity$CameraUploadConfigAdapter -> com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity$CameraUploadConfigAdapter:
    152:153:void <init>(com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity,androidx.fragment.app.FragmentManager) -> <init>
    198:198:int getCount() -> getCount
    160:178:androidx.fragment.app.Fragment getItem(int) -> getItem
com.seafile.seadroid2.cameraupload.CameraUploadDBHelper -> com.seafile.seadroid2.cameraupload.CameraUploadDBHelper:
>>>>>>> rename package name,fix action event info list same time crash
    35:35:void <clinit>() -> <clinit>
    51:51:void <init>(android.content.Context) -> <init>
    109:109:void cleanPhotoCache() -> cleanPhotoCache
    60:63:void createPhotoCacheTable(android.database.sqlite.SQLiteDatabase) -> createPhotoCacheTable
<<<<<<< HEAD
    42:47:com.seafile.vmoo.cameraupload.CameraUploadDBHelper getInstance() -> getInstance
=======
    42:47:com.seafile.seadroid2.cameraupload.CameraUploadDBHelper getInstance() -> getInstance
>>>>>>> rename package name,fix action event info list same time crash
    79:93:boolean isUploaded(java.io.File) -> isUploaded
    98:105:void markAsUploaded(java.io.File) -> markAsUploaded
    56:56:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    75:75:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    69:70:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
<<<<<<< HEAD
com.seafile.vmoo.cameraupload.CameraUploadManager -> com.seafile.vmoo.cameraupload.CameraUploadManager:
    27:28:void <init>(android.content.Context) -> <init>
    100:102:void disableCameraUpload() -> disableCameraUpload
    47:48:com.seafile.vmoo.account.Account getCameraAccount() -> getCameraAccount
    37:37:boolean isCameraUploadEnabled() -> isCameraUploadEnabled
    68:73:void performFullSync() -> performFullSync
    59:61:void performSync() -> performSync
    82:90:void setCameraAccount(com.seafile.vmoo.account.Account) -> setCameraAccount
com.seafile.vmoo.cameraupload.CloudLibraryAccountAdapter -> com.seafile.vmoo.cameraupload.CloudLibraryAccountAdapter:
    13:13:void <init>(android.content.Context) -> <init>
com.seafile.vmoo.cameraupload.CloudLibraryAdapter -> com.seafile.vmoo.cameraupload.CloudLibraryAdapter:
    18:18:void <init>(boolean,java.lang.String) -> <init>
    48:48:com.seafile.vmoo.data.SeafRepo getChildSeafRepo(int) -> getChildSeafRepo
    77:77:int getCount() -> getCount
    12:12:java.lang.Object getItem(int) -> getItem
    87:87:com.seafile.vmoo.data.SeafRepo getItem(int) -> getItem
    82:82:boolean isEmpty() -> isEmpty
    55:55:boolean isEnabled(int) -> isEnabled
    72:72:void setSelectedRepo(com.seafile.vmoo.data.SeafRepo) -> setSelectedRepo
    60:68:void showRepoSelectedIcon(int,android.widget.ImageView) -> showRepoSelectedIcon
com.seafile.vmoo.cameraupload.CloudLibraryFragment -> com.seafile.vmoo.cameraupload.CloudLibraryFragment:
    14:40:void <init>() -> <init>
    14:14:com.seafile.vmoo.cameraupload.CameraUploadConfigActivity access$000(com.seafile.vmoo.cameraupload.CloudLibraryFragment) -> access$000
    53:57:com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment getAccountOrReposSelectionFragment() -> getAccountOrReposSelectionFragment
    24:35:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.vmoo.cameraupload.CloudLibraryFragment$1 -> com.seafile.vmoo.cameraupload.CloudLibraryFragment$1:
    40:40:void <init>(com.seafile.vmoo.cameraupload.CloudLibraryFragment) -> <init>
    43:44:void onClick(android.view.View) -> onClick
com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment -> com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment:
    46:62:void <init>() -> <init>
    46:46:void access$000(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,boolean) -> access$000
    46:46:void access$100(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> access$100
    46:46:int access$1000(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> access$1000
    46:46:void access$1100(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,java.util.List) -> access$1100
    46:46:com.seafile.vmoo.ui.adapter.DirentsAdapter access$1200(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> access$1200
    46:46:void access$1300(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> access$1300
    46:46:com.seafile.vmoo.cameraupload.CameraUploadConfigActivity access$1400(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> access$1400
    46:46:void access$1500(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,java.util.List) -> access$1500
    46:46:com.seafile.vmoo.avatar.AvatarManager access$1600(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> access$1600
    46:46:com.seafile.vmoo.cameraupload.CloudLibraryAccountAdapter access$1700(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> access$1700
    46:46:void access$200(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,boolean) -> access$200
    46:46:void access$300(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> access$300
    46:46:void access$400(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,boolean) -> access$400
    46:46:void access$500(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,int) -> access$500
    46:46:void access$600(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,com.seafile.vmoo.account.Account) -> access$600
    46:46:void access$700(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> access$700
    46:46:com.seafile.vmoo.cameraupload.CloudLibraryAccountAdapter access$800(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> access$800
    46:46:void access$900(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,int) -> access$900
=======
com.seafile.seadroid2.cameraupload.CameraUploadManager -> com.seafile.seadroid2.cameraupload.CameraUploadManager:
    27:28:void <init>(android.content.Context) -> <init>
    100:102:void disableCameraUpload() -> disableCameraUpload
    47:48:com.seafile.seadroid2.account.Account getCameraAccount() -> getCameraAccount
    37:37:boolean isCameraUploadEnabled() -> isCameraUploadEnabled
    68:73:void performFullSync() -> performFullSync
    59:61:void performSync() -> performSync
    82:90:void setCameraAccount(com.seafile.seadroid2.account.Account) -> setCameraAccount
com.seafile.seadroid2.cameraupload.CloudLibraryAccountAdapter -> com.seafile.seadroid2.cameraupload.CloudLibraryAccountAdapter:
    13:13:void <init>(android.content.Context) -> <init>
com.seafile.seadroid2.cameraupload.CloudLibraryAdapter -> com.seafile.seadroid2.cameraupload.CloudLibraryAdapter:
    18:18:void <init>(boolean,java.lang.String) -> <init>
    48:48:com.seafile.seadroid2.data.SeafRepo getChildSeafRepo(int) -> getChildSeafRepo
    77:77:int getCount() -> getCount
    12:12:java.lang.Object getItem(int) -> getItem
    87:87:com.seafile.seadroid2.data.SeafRepo getItem(int) -> getItem
    82:82:boolean isEmpty() -> isEmpty
    55:55:boolean isEnabled(int) -> isEnabled
    72:72:void setSelectedRepo(com.seafile.seadroid2.data.SeafRepo) -> setSelectedRepo
    60:68:void showRepoSelectedIcon(int,android.widget.ImageView) -> showRepoSelectedIcon
com.seafile.seadroid2.cameraupload.CloudLibraryFragment -> com.seafile.seadroid2.cameraupload.CloudLibraryFragment:
    14:40:void <init>() -> <init>
    14:14:com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity access$000(com.seafile.seadroid2.cameraupload.CloudLibraryFragment) -> access$000
    53:57:com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment getAccountOrReposSelectionFragment() -> getAccountOrReposSelectionFragment
    24:35:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.seadroid2.cameraupload.CloudLibraryFragment$1 -> com.seafile.seadroid2.cameraupload.CloudLibraryFragment$1:
    40:40:void <init>(com.seafile.seadroid2.cameraupload.CloudLibraryFragment) -> <init>
    43:44:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment -> com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment:
    46:62:void <init>() -> <init>
    46:46:void access$000(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,boolean) -> access$000
    46:46:void access$100(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> access$100
    46:46:int access$1000(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> access$1000
    46:46:void access$1100(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,java.util.List) -> access$1100
    46:46:com.seafile.seadroid2.ui.adapter.DirentsAdapter access$1200(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> access$1200
    46:46:void access$1300(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> access$1300
    46:46:com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity access$1400(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> access$1400
    46:46:void access$1500(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,java.util.List) -> access$1500
    46:46:com.seafile.seadroid2.avatar.AvatarManager access$1600(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> access$1600
    46:46:com.seafile.seadroid2.cameraupload.CloudLibraryAccountAdapter access$1700(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> access$1700
    46:46:void access$200(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,boolean) -> access$200
    46:46:void access$300(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> access$300
    46:46:void access$400(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,boolean) -> access$400
    46:46:void access$500(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,int) -> access$500
    46:46:void access$600(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,com.seafile.seadroid2.account.Account) -> access$600
    46:46:void access$700(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> access$700
    46:46:com.seafile.seadroid2.cameraupload.CloudLibraryAccountAdapter access$800(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> access$800
    46:46:void access$900(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,int) -> access$900
>>>>>>> rename package name,fix action event info list same time crash
    339:339:void chooseAccount() -> chooseAccount
    346:355:void chooseAccount(boolean) -> chooseAccount
    326:326:void chooseDir() -> chooseDir
    330:335:void chooseDir(boolean) -> chooseDir
    362:362:void chooseRepo() -> chooseRepo
    366:384:void chooseRepo(boolean) -> chooseRepo
    784:784:void clearError() -> clearError
<<<<<<< HEAD
    425:429:com.seafile.vmoo.cameraupload.CloudLibraryAccountAdapter getAccountAdapter() -> getAccountAdapter
    476:480:com.seafile.vmoo.account.AccountManager getAccountManager() -> getAccountManager
    463:467:com.seafile.vmoo.data.DataManager getDataManager() -> getDataManager
    441:445:com.seafile.vmoo.ui.adapter.DirentsAdapter getDirentsAdapter() -> getDirentsAdapter
    484:488:com.seafile.vmoo.ui.NavContext getNavContext() -> getNavContext
    433:437:com.seafile.vmoo.cameraupload.CloudLibraryAdapter getReposAdapter() -> getReposAdapter
=======
    425:429:com.seafile.seadroid2.cameraupload.CloudLibraryAccountAdapter getAccountAdapter() -> getAccountAdapter
    476:480:com.seafile.seadroid2.account.AccountManager getAccountManager() -> getAccountManager
    463:467:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    441:445:com.seafile.seadroid2.ui.adapter.DirentsAdapter getDirentsAdapter() -> getDirentsAdapter
    484:488:com.seafile.seadroid2.ui.NavContext getNavContext() -> getNavContext
    433:437:com.seafile.seadroid2.cameraupload.CloudLibraryAdapter getReposAdapter() -> getReposAdapter
>>>>>>> rename package name,fix action event info list same time crash
    687:701:void loadAvatarUrls(int) -> loadAvatarUrls
    95:149:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    500:501:void onDestroy() -> onDestroy
    512:516:void onDestroyView() -> onDestroyView
    199:229:void onListItemClick(android.view.View,int,long) -> onListItemClick
    506:507:void onPause() -> onPause
<<<<<<< HEAD
    259:261:void onRepoSelected(com.seafile.vmoo.account.Account,com.seafile.vmoo.data.SeafRepo) -> onRepoSelected
=======
    259:261:void onRepoSelected(com.seafile.seadroid2.account.Account,com.seafile.seadroid2.data.SeafRepo) -> onRepoSelected
>>>>>>> rename package name,fix action event info list same time crash
    157:158:void onResume() -> onResume
    388:388:void refreshDir() -> refreshDir
    392:405:void refreshDir(boolean) -> refreshDir
    162:167:void refreshList(boolean) -> refreshList
<<<<<<< HEAD
    471:472:void setAccount(com.seafile.vmoo.account.Account) -> setAccount
=======
    471:472:void setAccount(com.seafile.seadroid2.account.Account) -> setAccount
>>>>>>> rename package name,fix action event info list same time crash
    495:495:void setCurrentDirText(java.lang.String) -> setCurrentDirText
    779:780:void setErrorMessage(int) -> setErrorMessage
    459:459:void setListAdapter(android.widget.BaseAdapter) -> setListAdapter
    450:454:void showListOrEmptyText(int) -> showListOrEmptyText
    789:805:void showLoading(boolean) -> showLoading
    302:306:void showPasswordDialog() -> showPasswordDialog
<<<<<<< HEAD
    316:322:void showPasswordDialog(java.lang.String,java.lang.String,com.seafile.vmoo.ui.dialog.TaskDialog$TaskDialogListener,java.lang.String) -> showPasswordDialog
=======
    316:322:void showPasswordDialog(java.lang.String,java.lang.String,com.seafile.seadroid2.ui.dialog.TaskDialog$TaskDialogListener,java.lang.String) -> showPasswordDialog
>>>>>>> rename package name,fix action event info list same time crash
    265:265:void stepBack() -> stepBack
    269:274:void stepBack(boolean) -> stepBack
    409:410:void updateAdapterWithDirents(java.util.List) -> updateAdapterWithDirents
    415:421:void updateAdapterWithRepos(java.util.List) -> updateAdapterWithRepos
<<<<<<< HEAD
com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$1 -> com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$1:
    118:118:void <init>(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> <init>
    121:121:void onClick(android.view.View) -> onClick
com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$2 -> com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$2:
    125:125:void <init>(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> <init>
    130:132:void onClick(android.view.View) -> onClick
com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$3 -> com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$3:
    139:139:void <init>(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> <init>
    142:142:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$4 -> com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$4:
    185:185:void <init>(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,boolean) -> <init>
    188:188:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$5 -> com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$5:
    213:213:void <init>(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,android.view.View,int,long) -> <init>
    216:216:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$6 -> com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$6:
    306:306:void <init>(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment) -> <init>
    309:309:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$LoadAccountsTask -> com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$LoadAccountsTask:
    527:529:void <init>(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,com.seafile.vmoo.account.AccountManager,boolean) -> <init>
=======
com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$1 -> com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$1:
    118:118:void <init>(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> <init>
    121:121:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$2 -> com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$2:
    125:125:void <init>(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> <init>
    130:132:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$3 -> com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$3:
    139:139:void <init>(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> <init>
    142:142:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$4 -> com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$4:
    185:185:void <init>(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,boolean) -> <init>
    188:188:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$5 -> com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$5:
    213:213:void <init>(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,android.view.View,int,long) -> <init>
    216:216:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$6 -> com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$6:
    306:306:void <init>(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment) -> <init>
    309:309:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$LoadAccountsTask -> com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$LoadAccountsTask:
    527:529:void <init>(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,com.seafile.seadroid2.account.AccountManager,boolean) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    521:521:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    540:542:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    521:521:void onPostExecute(java.lang.Object) -> onPostExecute
    550:554:void onPostExecute(java.lang.Void) -> onPostExecute
    534:534:void onPreExecute() -> onPreExecute
<<<<<<< HEAD
com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$LoadAvatarUrlsTask -> com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$LoadAvatarUrlsTask:
    718:720:void <init>(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,int) -> <init>
=======
com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$LoadAvatarUrlsTask -> com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$LoadAvatarUrlsTask:
    718:720:void <init>(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,int) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    712:712:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    726:760:java.util.List doInBackground(java.lang.Void[]) -> doInBackground
    712:712:void onPostExecute(java.lang.Object) -> onPostExecute
    770:773:void onPostExecute(java.util.List) -> onPostExecute
<<<<<<< HEAD
com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$LoadDirTask -> com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$LoadDirTask:
    624:627:void <init>(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,java.lang.String,java.lang.String,com.seafile.vmoo.data.DataManager) -> <init>
=======
com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$LoadDirTask -> com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$LoadDirTask:
    624:627:void <init>(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,java.lang.String,java.lang.String,com.seafile.seadroid2.data.DataManager) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    618:618:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    638:640:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    618:618:void onPostExecute(java.lang.Object) -> onPostExecute
    648:675:void onPostExecute(java.lang.Void) -> onPostExecute
    632:632:void onPreExecute() -> onPreExecute
<<<<<<< HEAD
com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$LoadReposTask -> com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment$LoadReposTask:
    581:582:void <init>(com.seafile.vmoo.cameraupload.CloudLibrarySelectionFragment,com.seafile.vmoo.data.DataManager) -> <init>
=======
com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$LoadReposTask -> com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment$LoadReposTask:
    581:582:void <init>(com.seafile.seadroid2.cameraupload.CloudLibrarySelectionFragment,com.seafile.seadroid2.data.DataManager) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    576:576:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    588:590:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    576:576:void onPostExecute(java.lang.Object) -> onPostExecute
    603:610:void onPostExecute(java.lang.Void) -> onPostExecute
    598:598:void onPreExecute() -> onPreExecute
<<<<<<< HEAD
com.seafile.vmoo.cameraupload.ConfigWelcomeFragment -> com.seafile.vmoo.cameraupload.ConfigWelcomeFragment:
    13:13:void <init>() -> <init>
    18:18:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.vmoo.cameraupload.GalleryBucketUtils -> com.seafile.vmoo.cameraupload.GalleryBucketUtils:
    26:26:void <clinit>() -> <clinit>
    108:153:java.util.List getImageBuckets(android.content.Context) -> getImageBuckets
    44:54:java.util.List getMediaBuckets(android.content.Context) -> getMediaBuckets
    60:102:java.util.List getVideoBuckets(android.content.Context) -> getVideoBuckets
com.seafile.vmoo.cameraupload.GalleryBucketUtils$Bucket -> com.seafile.vmoo.cameraupload.GalleryBucketUtils$Bucket:
    28:31:void <init>() -> <init>
com.seafile.vmoo.cameraupload.HowToUploadFragment -> com.seafile.vmoo.cameraupload.HowToUploadFragment:
    17:17:void <init>() -> <init>
    17:17:com.seafile.vmoo.cameraupload.CameraUploadConfigActivity access$000(com.seafile.vmoo.cameraupload.HowToUploadFragment) -> access$000
    27:37:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.vmoo.cameraupload.HowToUploadFragment$1 -> com.seafile.vmoo.cameraupload.HowToUploadFragment$1:
    37:37:void <init>(com.seafile.vmoo.cameraupload.HowToUploadFragment) -> <init>
    48:44:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.seafile.vmoo.cameraupload.MediaObserverService -> com.seafile.vmoo.cameraupload.MediaObserverService:
    21:32:void <init>() -> <init>
    21:21:com.seafile.vmoo.SettingsManager access$000(com.seafile.vmoo.cameraupload.MediaObserverService) -> access$000
    21:21:com.seafile.vmoo.cameraupload.CameraUploadManager access$100(com.seafile.vmoo.cameraupload.MediaObserverService) -> access$100
=======
com.seafile.seadroid2.cameraupload.ConfigWelcomeFragment -> com.seafile.seadroid2.cameraupload.ConfigWelcomeFragment:
    13:13:void <init>() -> <init>
    18:18:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.seadroid2.cameraupload.GalleryBucketUtils -> com.seafile.seadroid2.cameraupload.GalleryBucketUtils:
    26:26:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    108:153:java.util.List getImageBuckets(android.content.Context) -> getImageBuckets
    44:54:java.util.List getMediaBuckets(android.content.Context) -> getMediaBuckets
    60:102:java.util.List getVideoBuckets(android.content.Context) -> getVideoBuckets
com.seafile.seadroid2.cameraupload.GalleryBucketUtils$Bucket -> com.seafile.seadroid2.cameraupload.GalleryBucketUtils$Bucket:
    28:31:void <init>() -> <init>
com.seafile.seadroid2.cameraupload.HowToUploadFragment -> com.seafile.seadroid2.cameraupload.HowToUploadFragment:
    17:17:void <init>() -> <init>
    17:17:com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity access$000(com.seafile.seadroid2.cameraupload.HowToUploadFragment) -> access$000
    27:37:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.seadroid2.cameraupload.HowToUploadFragment$1 -> com.seafile.seadroid2.cameraupload.HowToUploadFragment$1:
    37:37:void <init>(com.seafile.seadroid2.cameraupload.HowToUploadFragment) -> <init>
    48:44:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.seafile.seadroid2.cameraupload.MediaObserverService -> com.seafile.seadroid2.cameraupload.MediaObserverService:
    21:32:void <init>() -> <init>
    21:21:com.seafile.seadroid2.SettingsManager access$000(com.seafile.seadroid2.cameraupload.MediaObserverService) -> access$000
    21:21:com.seafile.seadroid2.cameraupload.CameraUploadManager access$100(com.seafile.seadroid2.cameraupload.MediaObserverService) -> access$100
>>>>>>> rename package name,fix action event info list same time crash
    73:80:void onCreate() -> onCreate
    87:88:void onDestroy() -> onDestroy
    102:104:void registerContentObservers() -> registerContentObservers
    114:115:void unregisterContentObservers() -> unregisterContentObservers
<<<<<<< HEAD
com.seafile.vmoo.cameraupload.MediaObserverService$1 -> com.seafile.vmoo.cameraupload.MediaObserverService$1:
    33:33:void <init>(com.seafile.vmoo.cameraupload.MediaObserverService) -> <init>
    43:65:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.seafile.vmoo.cameraupload.MediaObserverService$MediaObserver -> com.seafile.vmoo.cameraupload.MediaObserverService$MediaObserver:
    121:122:void <init>(com.seafile.vmoo.cameraupload.MediaObserverService) -> <init>
    127:127:void onChange(boolean) -> onChange
    133:135:void onChange(boolean,android.net.Uri) -> onChange
com.seafile.vmoo.cameraupload.MediaSchedulerService -> com.seafile.vmoo.cameraupload.MediaSchedulerService:
    17:47:void <init>() -> <init>
    17:17:com.seafile.vmoo.SettingsManager access$000(com.seafile.vmoo.cameraupload.MediaSchedulerService) -> access$000
    17:17:com.seafile.vmoo.cameraupload.CameraUploadManager access$100(com.seafile.vmoo.cameraupload.MediaSchedulerService) -> access$100
    24:30:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    36:37:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
com.seafile.vmoo.cameraupload.MediaSchedulerService$1 -> com.seafile.vmoo.cameraupload.MediaSchedulerService$1:
    48:48:void <init>(com.seafile.vmoo.cameraupload.MediaSchedulerService) -> <init>
    58:80:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.seafile.vmoo.cameraupload.ReadyToScanFragment -> com.seafile.vmoo.cameraupload.ReadyToScanFragment:
    11:11:void <init>() -> <init>
    11:11:com.seafile.vmoo.cameraupload.CameraUploadConfigActivity access$000(com.seafile.vmoo.cameraupload.ReadyToScanFragment) -> access$000
    19:23:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.vmoo.cameraupload.ReadyToScanFragment$1 -> com.seafile.vmoo.cameraupload.ReadyToScanFragment$1:
    23:23:void <init>(com.seafile.vmoo.cameraupload.ReadyToScanFragment) -> <init>
    26:27:void onClick(android.view.View) -> onClick
com.seafile.vmoo.cameraupload.StubContentProvider -> com.seafile.vmoo.cameraupload.StubContentProvider:
    12:12:void <init>() -> <init>
com.seafile.vmoo.cameraupload.WhatToUploadFragment -> com.seafile.vmoo.cameraupload.WhatToUploadFragment:
    17:17:void <init>() -> <init>
    17:17:com.seafile.vmoo.cameraupload.CameraUploadConfigActivity access$000(com.seafile.vmoo.cameraupload.WhatToUploadFragment) -> access$000
    26:35:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.vmoo.cameraupload.WhatToUploadFragment$1 -> com.seafile.vmoo.cameraupload.WhatToUploadFragment$1:
    35:35:void <init>(com.seafile.vmoo.cameraupload.WhatToUploadFragment) -> <init>
    42:46:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.seafile.vmoo.crypto.Crypto -> com.seafile.vmoo.crypto.Crypto:
    55:59:void <clinit>() -> <clinit>
=======
com.seafile.seadroid2.cameraupload.MediaObserverService$1 -> com.seafile.seadroid2.cameraupload.MediaObserverService$1:
    33:33:void <init>(com.seafile.seadroid2.cameraupload.MediaObserverService) -> <init>
    43:65:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.seafile.seadroid2.cameraupload.MediaObserverService$MediaObserver -> com.seafile.seadroid2.cameraupload.MediaObserverService$MediaObserver:
    121:122:void <init>(com.seafile.seadroid2.cameraupload.MediaObserverService) -> <init>
    127:127:void onChange(boolean) -> onChange
    133:135:void onChange(boolean,android.net.Uri) -> onChange
com.seafile.seadroid2.cameraupload.MediaSchedulerService -> com.seafile.seadroid2.cameraupload.MediaSchedulerService:
    17:47:void <init>() -> <init>
    17:17:com.seafile.seadroid2.SettingsManager access$000(com.seafile.seadroid2.cameraupload.MediaSchedulerService) -> access$000
    17:17:com.seafile.seadroid2.cameraupload.CameraUploadManager access$100(com.seafile.seadroid2.cameraupload.MediaSchedulerService) -> access$100
    24:30:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    36:37:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
com.seafile.seadroid2.cameraupload.MediaSchedulerService$1 -> com.seafile.seadroid2.cameraupload.MediaSchedulerService$1:
    48:48:void <init>(com.seafile.seadroid2.cameraupload.MediaSchedulerService) -> <init>
    58:80:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.seafile.seadroid2.cameraupload.ReadyToScanFragment -> com.seafile.seadroid2.cameraupload.ReadyToScanFragment:
    11:11:void <init>() -> <init>
    11:11:com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity access$000(com.seafile.seadroid2.cameraupload.ReadyToScanFragment) -> access$000
    19:23:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.seadroid2.cameraupload.ReadyToScanFragment$1 -> com.seafile.seadroid2.cameraupload.ReadyToScanFragment$1:
    23:23:void <init>(com.seafile.seadroid2.cameraupload.ReadyToScanFragment) -> <init>
    26:27:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.cameraupload.StubContentProvider -> com.seafile.seadroid2.cameraupload.StubContentProvider:
    12:12:void <init>() -> <init>
com.seafile.seadroid2.cameraupload.WhatToUploadFragment -> com.seafile.seadroid2.cameraupload.WhatToUploadFragment:
    17:17:void <init>() -> <init>
    17:17:com.seafile.seadroid2.cameraupload.CameraUploadConfigActivity access$000(com.seafile.seadroid2.cameraupload.WhatToUploadFragment) -> access$000
    26:35:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.seafile.seadroid2.cameraupload.WhatToUploadFragment$1 -> com.seafile.seadroid2.cameraupload.WhatToUploadFragment$1:
    35:35:void <init>(com.seafile.seadroid2.cameraupload.WhatToUploadFragment) -> <init>
    42:46:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.seafile.seadroid2.crypto.Crypto -> com.seafile.seadroid2.crypto.Crypto:
    55:59:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    311:312:byte[] decrypt(byte[],java.lang.String,java.lang.String) -> decrypt
    181:183:byte[] deriveIv(byte[]) -> deriveIv
    147:149:byte[] deriveKey(java.lang.String,int) -> deriveKey
    163:169:java.lang.String deriveKey(byte[],int) -> deriveKey
    281:281:byte[] encrypt(byte[],java.lang.String,java.lang.String) -> encrypt
    296:297:byte[] encrypt(byte[],int,java.lang.String,java.lang.String) -> encrypt
<<<<<<< HEAD
=======
    354:354:byte[] fromBase64(java.lang.String) -> fromBase64
>>>>>>> rename package name,fix action event info list same time crash
    342:344:byte[] fromHex(java.lang.String) -> fromHex
    126:134:android.util.Pair generateKey(java.lang.String,java.lang.String,int) -> generateKey
    82:85:byte[] generateMagic(java.lang.String,java.lang.String,int) -> generateMagic
    196:202:byte[] seafileDecrypt(byte[],javax.crypto.SecretKey,byte[]) -> seafileDecrypt
    239:245:byte[] seafileEncrypt(byte[],int,javax.crypto.SecretKey,byte[]) -> seafileEncrypt
    358:360:java.lang.String sha1(byte[]) -> sha1
<<<<<<< HEAD
    326:331:java.lang.String toHex(byte[]) -> toHex
    101:109:void verifyRepoPassword(java.lang.String,java.lang.String,int,java.lang.String) -> verifyRepoPassword
com.seafile.vmoo.data.Block -> com.seafile.vmoo.data.Block:
    15:19:void <init>(java.lang.String,java.lang.String,long,long) -> <init>
    58:65:boolean equals(java.lang.Object) -> equals
    48:48:java.lang.String getBlockId() -> getBlockId
    71:74:int hashCode() -> hashCode
com.seafile.vmoo.data.BlockInfoBean -> com.seafile.vmoo.data.BlockInfoBean:
    31:31:void <init>() -> <init>
    19:26:com.seafile.vmoo.data.BlockInfoBean fromJson(java.lang.String) -> fromJson
com.seafile.vmoo.data.CertificateInfo -> com.seafile.vmoo.data.CertificateInfo:
=======
    350:350:java.lang.String toBase64(byte[]) -> toBase64
    326:331:java.lang.String toHex(byte[]) -> toHex
    101:109:void verifyRepoPassword(java.lang.String,java.lang.String,int,java.lang.String) -> verifyRepoPassword
com.seafile.seadroid2.data.Block -> com.seafile.seadroid2.data.Block:
    16:20:void <init>(java.lang.String,java.lang.String,long,long) -> <init>
    59:66:boolean equals(java.lang.Object) -> equals
    49:49:java.lang.String getBlockId() -> getBlockId
    40:40:float getFinished() -> getFinished
    24:24:java.lang.String getPath() -> getPath
    32:32:float getSize() -> getSize
    72:75:int hashCode() -> hashCode
    53:53:void setBlockId(java.lang.String) -> setBlockId
    44:44:void setFinished(long) -> setFinished
    28:28:void setPath(java.lang.String) -> setPath
    36:36:void setSize(long) -> setSize
com.seafile.seadroid2.data.BlockInfoBean -> com.seafile.seadroid2.data.BlockInfoBean:
    31:31:void <init>() -> <init>
    19:26:com.seafile.seadroid2.data.BlockInfoBean fromJson(java.lang.String) -> fromJson
com.seafile.seadroid2.data.CertificateInfo -> com.seafile.seadroid2.data.CertificateInfo:
>>>>>>> rename package name,fix action event info list same time crash
    33:34:void <init>(java.security.cert.X509Certificate) -> <init>
    88:88:java.util.Date getNotAfter() -> getNotAfter
    84:84:java.util.Date getNotBefore() -> getNotBefore
    66:66:java.lang.String getSerialNumber() -> getSerialNumber
    71:79:java.lang.String getSignature(java.lang.String) -> getSignature
<<<<<<< HEAD
    40:40:java.lang.String getSubjectName() -> getSubjectName
com.seafile.vmoo.data.CommitDetails -> com.seafile.vmoo.data.CommitDetails:
    23:29:void <init>() -> <init>
    33:47:com.seafile.vmoo.data.CommitDetails fromJson(java.lang.String) -> fromJson
    55:56:void processFileList(java.util.List,org.json.JSONArray) -> processFileList
com.seafile.vmoo.data.DataManager -> com.seafile.vmoo.data.DataManager:
    49:61:void <clinit>() -> <clinit>
    65:68:void <init>(com.seafile.vmoo.account.Account) -> <init>
    658:667:void addCachedFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File) -> addCachedFile
    1153:1195:com.seafile.vmoo.data.FileBlocks chunkFile(java.lang.String,java.lang.String,java.lang.String) -> chunkFile
=======
    45:60:java.lang.String[] getSubjectAltNames() -> getSubjectAltNames
    40:40:java.lang.String getSubjectName() -> getSubjectName
    93:93:boolean isCurrentlyValid() -> isCurrentlyValid
com.seafile.seadroid2.data.CommitDetails -> com.seafile.seadroid2.data.CommitDetails:
    23:29:void <init>() -> <init>
    33:47:com.seafile.seadroid2.data.CommitDetails fromJson(java.lang.String) -> fromJson
    101:101:java.util.List getAddedDirs() -> getAddedDirs
    85:85:java.util.List getAddedFiles() -> getAddedFiles
    61:61:java.util.List getDeletedDirs() -> getDeletedDirs
    93:93:java.util.List getDeletedFiles() -> getDeletedFiles
    77:77:java.util.List getModifiedFiles() -> getModifiedFiles
    69:69:java.util.List getRenamedFiles() -> getRenamedFiles
    55:56:void processFileList(java.util.List,org.json.JSONArray) -> processFileList
    105:105:void setAddedDirs(java.util.List) -> setAddedDirs
    89:89:void setAddedFiles(java.util.List) -> setAddedFiles
    65:65:void setDeletedDirs(java.util.List) -> setDeletedDirs
    97:97:void setDeletedFiles(java.util.List) -> setDeletedFiles
    81:81:void setModifiedFiles(java.util.List) -> setModifiedFiles
    73:73:void setRenamedFiles(java.util.List) -> setRenamedFiles
com.seafile.seadroid2.data.DataManager -> com.seafile.seadroid2.data.DataManager:
    49:61:void <clinit>() -> <clinit>
    65:68:void <init>(com.seafile.seadroid2.account.Account) -> <init>
    658:667:void addCachedFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File) -> addCachedFile
    1153:1195:com.seafile.seadroid2.data.FileBlocks chunkFile(java.lang.String,java.lang.String,java.lang.String) -> chunkFile
    946:946:void clearPassword() -> clearPassword
>>>>>>> rename package name,fix action event info list same time crash
    950:950:void completeRemoteWipe() -> completeRemoteWipe
    864:867:void copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> copy
    726:736:void createNewDir(java.lang.String,java.lang.String,java.lang.String) -> createNewDir
    740:750:void createNewFile(java.lang.String,java.lang.String,java.lang.String) -> createNewFile
<<<<<<< HEAD
=======
    722:722:void createNewRepo(java.lang.String,java.lang.String) -> createNewRepo
>>>>>>> rename package name,fix action event info list same time crash
    90:95:java.io.File createTempDir() -> createTempDir
    79:79:java.io.File createTempFile() -> createTempFile
    840:850:void delete(java.lang.String,java.lang.String,boolean) -> delete
    429:438:void deleteOldDirentContent(java.lang.String,java.lang.String) -> deleteOldDirentContent
<<<<<<< HEAD
    811:813:boolean deleteShareLink(java.lang.String) -> deleteShareLink
    162:162:com.seafile.vmoo.account.Account getAccount() -> getAccount
    210:217:java.lang.String getAccountDir() -> getAccountDir
    136:137:com.seafile.vmoo.account.AccountInfo getAccountInfo() -> getAccountInfo
    564:579:java.util.List getCachedDirents(java.lang.String,java.lang.String) -> getCachedDirents
    643:643:com.seafile.vmoo.data.SeafCachedFile getCachedFile(java.lang.String,java.lang.String,java.lang.String) -> getCachedFile
    648:648:java.util.List getCachedFiles() -> getCachedFiles
    332:338:com.seafile.vmoo.data.SeafRepo getCachedRepoByID(java.lang.String) -> getCachedRepoByID
    347:351:com.seafile.vmoo.data.SeafRepoEncrypt getCachedRepoEncryptByID(java.lang.String) -> getCachedRepoEncryptByID
    633:638:java.util.List getCachedStarredFiles() -> getCachedStarredFiles
    595:619:java.util.List getDirentsFromServer(java.lang.String,java.lang.String) -> getDirentsFromServer
    398:405:void getEncryptRepo(java.lang.String) -> getEncryptRepo
    900:901:com.seafile.vmoo.data.SeafActivities getEvents(int) -> getEvents
    445:463:java.io.File getFile(java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.data.ProgressMonitor) -> getFile
    166:167:java.io.File getFile4RepoCache(java.lang.String) -> getFile4RepoCache
    471:492:java.io.File getFileByBlocks(java.lang.String,java.lang.String,java.lang.String,long,com.seafile.vmoo.data.ProgressMonitor) -> getFileByBlocks
=======
    776:776:void deleteRepo(java.lang.String) -> deleteRepo
    811:813:boolean deleteShareLink(java.lang.String) -> deleteShareLink
    162:162:com.seafile.seadroid2.account.Account getAccount() -> getAccount
    210:217:java.lang.String getAccountDir() -> getAccountDir
    136:137:com.seafile.seadroid2.account.AccountInfo getAccountInfo() -> getAccountInfo
    327:328:java.lang.String getBlockPathById(java.lang.String) -> getBlockPathById
    564:579:java.util.List getCachedDirents(java.lang.String,java.lang.String) -> getCachedDirents
    643:643:com.seafile.seadroid2.data.SeafCachedFile getCachedFile(java.lang.String,java.lang.String,java.lang.String) -> getCachedFile
    648:648:java.util.List getCachedFiles() -> getCachedFiles
    332:338:com.seafile.seadroid2.data.SeafRepo getCachedRepoByID(java.lang.String) -> getCachedRepoByID
    347:351:com.seafile.seadroid2.data.SeafRepoEncrypt getCachedRepoEncryptByID(java.lang.String) -> getCachedRepoEncryptByID
    633:638:java.util.List getCachedStarredFiles() -> getCachedStarredFiles
    595:619:java.util.List getDirentsFromServer(java.lang.String,java.lang.String) -> getDirentsFromServer
    398:405:void getEncryptRepo(java.lang.String) -> getEncryptRepo
    900:901:com.seafile.seadroid2.data.SeafActivities getEvents(int) -> getEvents
    445:463:java.io.File getFile(java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.ProgressMonitor) -> getFile
    166:167:java.io.File getFile4RepoCache(java.lang.String) -> getFile4RepoCache
    471:492:java.io.File getFileByBlocks(java.lang.String,java.lang.String,java.lang.String,long,com.seafile.seadroid2.data.ProgressMonitor) -> getFileByBlocks
    181:182:java.io.File getFileForBlockCache(java.lang.String) -> getFileForBlockCache
>>>>>>> rename package name,fix action event info list same time crash
    176:177:java.io.File getFileForDirentCache(java.lang.String) -> getFileForDirentCache
    171:172:java.io.File getFileForReposCache() -> getFileForReposCache
    917:917:java.lang.String getHistoryChanges(java.lang.String,java.lang.String) -> getHistoryChanges
    1075:1112:java.lang.String getLastPullToRefreshTime(java.lang.String) -> getLastPullToRefreshTime
    754:764:java.io.File getLocalCachedFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getLocalCachedFile
    276:283:java.io.File getLocalRepoFile(java.lang.String,java.lang.String,java.lang.String) -> getLocalRepoFile
    230:258:java.lang.String getRepoDir(java.lang.String,java.lang.String) -> getRepoDir
    1023:1023:android.util.Pair getRepoEncKey(java.lang.String) -> getRepoEncKey
    1001:1015:java.lang.String getRepoPassword(java.lang.String) -> getRepoPassword
    964:977:boolean getRepoPasswordSet(java.lang.String) -> getRepoPasswordSet
    359:369:java.util.List getReposFromCache() -> getReposFromCache
    376:377:java.util.List getReposFromServer() -> getReposFromServer
<<<<<<< HEAD
    149:150:com.seafile.vmoo.data.ServerInfo getServerInfo() -> getServerInfo
=======
    149:150:com.seafile.seadroid2.data.ServerInfo getServerInfo() -> getServerInfo
>>>>>>> rename package name,fix action event info list same time crash
    820:833:java.util.ArrayList getShareLink(java.lang.String,java.lang.String) -> getShareLink
    623:629:java.util.List getStarredFiles() -> getStarredFiles
    102:104:java.lang.String getThumbnailLink(java.lang.String,java.lang.String,java.lang.String,int) -> getThumbnailLink
    128:130:java.lang.String getThumbnailLink(java.lang.String,java.lang.String,int) -> getThumbnailLink
    1038:1043:boolean isDirentsRefreshTimeout(java.lang.String,java.lang.String) -> isDirentsRefreshTimeout
    1030:1030:boolean isReposRefreshTimeout() -> isReposRefreshTimeout
    1050:1055:boolean isStarredFilesRefreshTimeout() -> isStarredFilesRefreshTimeout
    874:895:void move(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> move
<<<<<<< HEAD
    141:145:com.seafile.vmoo.account.AccountInfo parseAccountInfo(java.lang.String) -> parseAccountInfo
    525:538:java.util.List parseDirents(java.lang.String) -> parseDirents
    923:936:java.util.List parseEvents(java.lang.String) -> parseEvents
    313:316:com.seafile.vmoo.data.SeafRepoEncrypt parseRepoEncrypt(java.lang.String) -> parseRepoEncrypt
    289:302:java.util.List parseRepos(java.lang.String) -> parseRepos
    1135:1144:java.util.ArrayList parseSearchResult(java.lang.String) -> parseSearchResult
    154:158:com.seafile.vmoo.data.ServerInfo parseServerInfo(java.lang.String) -> parseServerInfo
    545:558:java.util.List parseStarredFiles(java.lang.String) -> parseStarredFiles
    788:798:void rename(java.lang.String,java.lang.String,java.lang.String,boolean) -> rename
=======
    141:145:com.seafile.seadroid2.account.AccountInfo parseAccountInfo(java.lang.String) -> parseAccountInfo
    525:538:java.util.List parseDirents(java.lang.String) -> parseDirents
    923:936:java.util.List parseEvents(java.lang.String) -> parseEvents
    313:316:com.seafile.seadroid2.data.SeafRepoEncrypt parseRepoEncrypt(java.lang.String) -> parseRepoEncrypt
    289:302:java.util.List parseRepos(java.lang.String) -> parseRepos
    1135:1144:java.util.ArrayList parseSearchResult(java.lang.String) -> parseSearchResult
    154:158:com.seafile.seadroid2.data.ServerInfo parseServerInfo(java.lang.String) -> parseServerInfo
    545:558:java.util.List parseStarredFiles(java.lang.String) -> parseStarredFiles
    672:673:void removeCachedFile(com.seafile.seadroid2.data.SeafCachedFile) -> removeCachedFile
    788:798:void rename(java.lang.String,java.lang.String,java.lang.String,boolean) -> rename
    772:772:void renameRepo(java.lang.String,java.lang.String) -> renameRepo
>>>>>>> rename package name,fix action event info list same time crash
    411:418:void saveDirentContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> saveDirentContent
    1070:1070:void saveLastPullToRefreshTime(long,java.lang.String) -> saveLastPullToRefreshTime
    1126:1126:java.lang.String search(java.lang.String,int) -> search
    1062:1062:void setDirsRefreshTimeStamp(java.lang.String,java.lang.String) -> setDirsRefreshTimeStamp
    677:680:void setPassword(java.lang.String,java.lang.String) -> setPassword
    985:988:void setRepoPasswordSet(java.lang.String,java.lang.String,java.lang.String) -> setRepoPasswordSet
    993:993:void setRepoPasswordSet(java.lang.String,java.lang.String) -> setRepoPasswordSet
    1066:1066:void setReposRefreshTimeStamp() -> setReposRefreshTimeStamp
    780:780:void star(java.lang.String,java.lang.String) -> star
<<<<<<< HEAD
    1202:1202:void uploadByBlocks(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.data.ProgressMonitor,boolean,boolean) -> uploadByBlocks
    1209:1215:void uploadByBlocksCommon(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.data.ProgressMonitor,boolean,boolean) -> uploadByBlocksCommon
    686:686:void uploadFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.data.ProgressMonitor,boolean,boolean) -> uploadFile
    692:718:void uploadFileCommon(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.data.ProgressMonitor,boolean,boolean) -> uploadFileCommon
com.seafile.vmoo.data.DataManager$PasswordInfo -> com.seafile.vmoo.data.DataManager$PasswordInfo:
    957:959:void <init>(java.lang.String,long) -> <init>
com.seafile.vmoo.data.DatabaseHelper -> com.seafile.vmoo.data.DatabaseHelper:
    121:110:void <init>(android.content.Context) -> <init>
=======
    784:784:void unstar(java.lang.String,java.lang.String) -> unstar
    1202:1202:void uploadByBlocks(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.ProgressMonitor,boolean,boolean) -> uploadByBlocks
    1209:1215:void uploadByBlocksCommon(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.ProgressMonitor,boolean,boolean) -> uploadByBlocksCommon
    686:686:void uploadFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.ProgressMonitor,boolean,boolean) -> uploadFile
    692:718:void uploadFileCommon(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.ProgressMonitor,boolean,boolean) -> uploadFileCommon
com.seafile.seadroid2.data.DataManager$PasswordInfo -> com.seafile.seadroid2.data.DataManager$PasswordInfo:
    957:959:void <init>(java.lang.String,long) -> <init>
com.seafile.seadroid2.data.DatabaseHelper -> com.seafile.seadroid2.data.DatabaseHelper:
    121:110:void <init>(android.content.Context) -> <init>
    608:608:void clearEnckeys() -> clearEnckeys
>>>>>>> rename package name,fix action event info list same time crash
    163:170:void createDirentsCacheTable(android.database.sqlite.SQLiteDatabase) -> createDirentsCacheTable
    185:192:void createEnckeyTable(android.database.sqlite.SQLiteDatabase) -> createEnckeyTable
    134:139:void createFileCacheTable(android.database.sqlite.SQLiteDatabase) -> createFileCacheTable
    144:159:void createRepoDirTable(android.database.sqlite.SQLiteDatabase) -> createRepoDirTable
    174:181:void createStarredFilesCacheTable(android.database.sqlite.SQLiteDatabase) -> createStarredFilesCacheTable
<<<<<<< HEAD
    321:328:com.seafile.vmoo.data.SeafCachedFile cursorToFileCacheItem(android.database.Cursor,com.seafile.vmoo.data.DataManager) -> cursorToFileCacheItem
    281:284:void delCaches() -> delCaches
    603:603:void delEnckey(java.lang.String) -> delEnckey
    272:276:void deleteFileCacheItem(com.seafile.vmoo.data.SeafCachedFile) -> deleteFileCacheItem
    523:545:int getCachedDirentUsage(java.lang.String) -> getCachedDirentUsage
    485:510:java.lang.String getCachedDirents(java.lang.String,java.lang.String) -> getCachedDirents
    368:393:java.lang.String getCachedStarredFiles(com.seafile.vmoo.account.Account) -> getCachedStarredFiles
    113:117:com.seafile.vmoo.data.DatabaseHelper getDatabaseHelper() -> getDatabaseHelper
    551:579:android.util.Pair getEnckey(java.lang.String) -> getEnckey
    222:248:com.seafile.vmoo.data.SeafCachedFile getFileCacheItem(java.lang.String,java.lang.String,com.seafile.vmoo.data.DataManager) -> getFileCacheItem
    288:316:java.util.List getFileCacheItems(com.seafile.vmoo.data.DataManager) -> getFileCacheItems
    336:362:java.lang.String getRepoDir(com.seafile.vmoo.account.Account,java.lang.String) -> getRepoDir
=======
    321:328:com.seafile.seadroid2.data.SeafCachedFile cursorToFileCacheItem(android.database.Cursor,com.seafile.seadroid2.data.DataManager) -> cursorToFileCacheItem
    281:284:void delCaches() -> delCaches
    603:603:void delEnckey(java.lang.String) -> delEnckey
    272:276:void deleteFileCacheItem(com.seafile.seadroid2.data.SeafCachedFile) -> deleteFileCacheItem
    523:545:int getCachedDirentUsage(java.lang.String) -> getCachedDirentUsage
    485:510:java.lang.String getCachedDirents(java.lang.String,java.lang.String) -> getCachedDirents
    368:393:java.lang.String getCachedStarredFiles(com.seafile.seadroid2.account.Account) -> getCachedStarredFiles
    113:117:com.seafile.seadroid2.data.DatabaseHelper getDatabaseHelper() -> getDatabaseHelper
    551:579:android.util.Pair getEnckey(java.lang.String) -> getEnckey
    222:248:com.seafile.seadroid2.data.SeafCachedFile getFileCacheItem(java.lang.String,java.lang.String,com.seafile.seadroid2.data.DataManager) -> getFileCacheItem
    288:316:java.util.List getFileCacheItems(com.seafile.seadroid2.data.DataManager) -> getFileCacheItems
    336:362:java.lang.String getRepoDir(com.seafile.seadroid2.account.Account,java.lang.String) -> getRepoDir
>>>>>>> rename package name,fix action event info list same time crash
    126:130:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    217:217:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    200:212:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    471:474:void removeCachedDirents(java.lang.String,java.lang.String) -> removeCachedDirents
<<<<<<< HEAD
    478:481:void removeStarredFiles(com.seafile.vmoo.account.Account) -> removeStarredFiles
    402:424:boolean repoDirExists(com.seafile.vmoo.account.Account,java.lang.String) -> repoDirExists
    449:456:void saveCachedStarredFiles(com.seafile.vmoo.account.Account,java.lang.String) -> saveCachedStarredFiles
    461:467:void saveDirents(java.lang.String,java.lang.String,java.lang.String) -> saveDirents
    583:599:void saveEncKey(java.lang.String,java.lang.String,java.lang.String) -> saveEncKey
    254:268:void saveFileCacheItem(com.seafile.vmoo.data.SeafCachedFile,com.seafile.vmoo.data.DataManager) -> saveFileCacheItem
    431:445:void saveRepoDirMapping(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String) -> saveRepoDirMapping
com.seafile.vmoo.data.EventDetailsFileItem -> com.seafile.vmoo.data.EventDetailsFileItem:
    18:21:void <init>(com.seafile.vmoo.data.SeafEvent,java.lang.String,com.seafile.vmoo.data.EventDetailsFileItem$EType) -> <init>
    37:37:com.seafile.vmoo.data.SeafEvent getEvent() -> getEvent
    25:25:java.lang.String getPath() -> getPath
    33:33:com.seafile.vmoo.data.EventDetailsFileItem$EType geteType() -> geteType
    52:52:boolean isDir() -> isDir
    45:45:boolean isFileOpenable() -> isFileOpenable
com.seafile.vmoo.data.EventDetailsFileItem$EType -> com.seafile.vmoo.data.EventDetailsFileItem$EType:
    6:5:void <clinit>() -> <clinit>
    5:5:void <init>(java.lang.String,int) -> <init>
    5:5:com.seafile.vmoo.data.EventDetailsFileItem$EType valueOf(java.lang.String) -> valueOf
    5:5:com.seafile.vmoo.data.EventDetailsFileItem$EType[] values() -> values
com.seafile.vmoo.data.EventDetailsTree -> com.seafile.vmoo.data.EventDetailsTree:
    15:17:void <init>(com.seafile.vmoo.data.SeafEvent) -> <init>
    43:49:void processEventCategory(java.util.List,java.lang.String,com.seafile.vmoo.data.EventDetailsFileItem$EType) -> processEventCategory
    22:39:java.util.List setCommitDetails(com.seafile.vmoo.data.CommitDetails) -> setCommitDetails
com.seafile.vmoo.data.FileBlocks -> com.seafile.vmoo.data.FileBlocks:
    28:29:void <init>() -> <init>
    58:62:com.seafile.vmoo.data.FileBlocks fromJson(org.json.JSONObject) -> fromJson
    49:50:com.seafile.vmoo.data.Block getBlock(java.lang.String) -> getBlock
    67:76:java.util.ArrayList getBlockIds(java.lang.String) -> getBlockIds
    42:43:long getFinished() -> getFinished
com.seafile.vmoo.data.SeafActivities -> com.seafile.vmoo.data.SeafActivities:
=======
    478:481:void removeStarredFiles(com.seafile.seadroid2.account.Account) -> removeStarredFiles
    402:424:boolean repoDirExists(com.seafile.seadroid2.account.Account,java.lang.String) -> repoDirExists
    449:456:void saveCachedStarredFiles(com.seafile.seadroid2.account.Account,java.lang.String) -> saveCachedStarredFiles
    461:467:void saveDirents(java.lang.String,java.lang.String,java.lang.String) -> saveDirents
    583:599:void saveEncKey(java.lang.String,java.lang.String,java.lang.String) -> saveEncKey
    254:268:void saveFileCacheItem(com.seafile.seadroid2.data.SeafCachedFile,com.seafile.seadroid2.data.DataManager) -> saveFileCacheItem
    431:445:void saveRepoDirMapping(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String) -> saveRepoDirMapping
com.seafile.seadroid2.data.EventDetailsFileItem -> com.seafile.seadroid2.data.EventDetailsFileItem:
    18:21:void <init>(com.seafile.seadroid2.data.SeafEvent,java.lang.String,com.seafile.seadroid2.data.EventDetailsFileItem$EType) -> <init>
    37:37:com.seafile.seadroid2.data.SeafEvent getEvent() -> getEvent
    25:25:java.lang.String getPath() -> getPath
    33:33:com.seafile.seadroid2.data.EventDetailsFileItem$EType geteType() -> geteType
    52:52:boolean isDir() -> isDir
    45:45:boolean isFileOpenable() -> isFileOpenable
    41:41:void setEvent(com.seafile.seadroid2.data.SeafEvent) -> setEvent
    29:29:void setPath(java.lang.String) -> setPath
com.seafile.seadroid2.data.EventDetailsFileItem$EType -> com.seafile.seadroid2.data.EventDetailsFileItem$EType:
    6:5:void <clinit>() -> <clinit>
    5:5:void <init>(java.lang.String,int) -> <init>
    5:5:com.seafile.seadroid2.data.EventDetailsFileItem$EType valueOf(java.lang.String) -> valueOf
    5:5:com.seafile.seadroid2.data.EventDetailsFileItem$EType[] values() -> values
com.seafile.seadroid2.data.EventDetailsTree -> com.seafile.seadroid2.data.EventDetailsTree:
    15:17:void <init>(com.seafile.seadroid2.data.SeafEvent) -> <init>
    43:49:void processEventCategory(java.util.List,java.lang.String,com.seafile.seadroid2.data.EventDetailsFileItem$EType) -> processEventCategory
    22:39:java.util.List setCommitDetails(com.seafile.seadroid2.data.CommitDetails) -> setCommitDetails
com.seafile.seadroid2.data.FileBlocks -> com.seafile.seadroid2.data.FileBlocks:
    28:29:void <init>() -> <init>
    58:62:com.seafile.seadroid2.data.FileBlocks fromJson(org.json.JSONObject) -> fromJson
    49:50:com.seafile.seadroid2.data.Block getBlock(java.lang.String) -> getBlock
    67:76:java.util.ArrayList getBlockIds(java.lang.String) -> getBlockIds
    42:43:long getFinished() -> getFinished
    34:35:long getSize() -> getSize
com.seafile.seadroid2.data.SeafActivities -> com.seafile.seadroid2.data.SeafActivities:
>>>>>>> rename package name,fix action event info list same time crash
    40:43:void <init>(java.util.List,int,boolean) -> <init>
    17:17:java.util.List getEvents() -> getEvents
    33:33:int getOffset() -> getOffset
    25:25:boolean isMore() -> isMore
<<<<<<< HEAD
com.seafile.vmoo.data.SeafCachedFile -> com.seafile.vmoo.data.SeafCachedFile:
    17:18:void <init>() -> <init>
    33:33:int getIcon() -> getIcon
    28:28:java.lang.String getSubtitle() -> getSubtitle
    23:23:java.lang.String getTitle() -> getTitle
com.seafile.vmoo.data.SeafDirent -> com.seafile.vmoo.data.SeafDirent:
    16:16:void <init>() -> <init>
    28:42:com.seafile.vmoo.data.SeafDirent fromJson(org.json.JSONObject) -> fromJson
=======
    21:21:void setEvents(java.util.List) -> setEvents
    29:29:void setMore(boolean) -> setMore
    37:37:void setOffset(int) -> setOffset
com.seafile.seadroid2.data.SeafCachedFile -> com.seafile.seadroid2.data.SeafCachedFile:
    17:18:void <init>() -> <init>
    49:49:java.lang.String getAccountSignature() -> getAccountSignature
    53:53:long getFileOriginalSize() -> getFileOriginalSize
    33:33:int getIcon() -> getIcon
    41:41:long getLastModified() -> getLastModified
    37:37:long getSize() -> getSize
    28:28:java.lang.String getSubtitle() -> getSubtitle
    23:23:java.lang.String getTitle() -> getTitle
    45:45:boolean isDirectory() -> isDirectory
    57:57:void setFileOriginalSize(long) -> setFileOriginalSize
com.seafile.seadroid2.data.SeafDirent -> com.seafile.seadroid2.data.SeafDirent:
    16:16:void <init>() -> <init>
    28:42:com.seafile.seadroid2.data.SeafDirent fromJson(org.json.JSONObject) -> fromJson
>>>>>>> rename package name,fix action event info list same time crash
    67:74:int getIcon() -> getIcon
    58:61:java.lang.String getSubtitle() -> getSubtitle
    53:53:java.lang.String getTitle() -> getTitle
    78:78:boolean hasWritePermission() -> hasWritePermission
    48:48:boolean isDir() -> isDir
<<<<<<< HEAD
com.seafile.vmoo.data.SeafDirent$DirentLastMTimeComparator -> com.seafile.vmoo.data.SeafDirent$DirentLastMTimeComparator:
    84:84:void <init>() -> <init>
    84:84:int compare(java.lang.Object,java.lang.Object) -> compare
    88:88:int compare(com.seafile.vmoo.data.SeafDirent,com.seafile.vmoo.data.SeafDirent) -> compare
com.seafile.vmoo.data.SeafDirent$DirentNameComparator -> com.seafile.vmoo.data.SeafDirent$DirentNameComparator:
    95:95:void <init>() -> <init>
    95:95:int compare(java.lang.Object,java.lang.Object) -> compare
    100:121:int compare(com.seafile.vmoo.data.SeafDirent,com.seafile.vmoo.data.SeafDirent) -> compare
com.seafile.vmoo.data.SeafDirent$DirentType -> com.seafile.vmoo.data.SeafDirent$DirentType:
    19:19:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int) -> <init>
    19:19:com.seafile.vmoo.data.SeafDirent$DirentType valueOf(java.lang.String) -> valueOf
    19:19:com.seafile.vmoo.data.SeafDirent$DirentType[] values() -> values
com.seafile.vmoo.data.SeafEvent -> com.seafile.vmoo.data.SeafEvent:
    18:168:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    43:81:com.seafile.vmoo.data.SeafEvent fromJson(org.json.JSONObject) -> fromJson
    87:88:java.util.regex.Matcher fullMatch(java.util.regex.Pattern,java.lang.String) -> fullMatch
    316:316:java.lang.String getAvatar() -> getAvatar
    276:276:java.lang.String getCommit_id() -> getCommit_id
    253:253:java.lang.String getDesc() -> getDesc
    237:237:java.lang.String getNick() -> getNick
    229:229:java.lang.String getRepo_id() -> getRepo_id
    249:249:java.lang.String getRepo_name() -> getRepo_name
    263:263:java.lang.String getSubtitle() -> getSubtitle
    300:300:java.lang.String getTime_relative() -> getTime_relative
    258:258:java.lang.String getTitle() -> getTitle
    171:185:java.util.HashMap getVerbsMap() -> getVerbsMap
    324:324:boolean isRepo_encrypted() -> isRepo_encrypted
    92:128:java.lang.String translateCommitDesc(java.lang.String) -> translateCommitDesc
    134:162:java.lang.String translateLine(java.lang.String) -> translateLine
com.seafile.vmoo.data.SeafGroup -> com.seafile.vmoo.data.SeafGroup:
    13:14:void <init>(java.lang.String) -> <init>
    37:38:void addIfAbsent(com.seafile.vmoo.data.SeafRepo) -> addIfAbsent
    33:33:java.util.List getRepos() -> getRepos
    19:19:java.lang.String getTitle() -> getTitle
    46:53:void sortByType(int,int) -> sortByType
com.seafile.vmoo.data.SeafLink -> com.seafile.vmoo.data.SeafLink:
    8:8:void <init>() -> <init>
    28:40:com.seafile.vmoo.data.SeafLink fromJson(org.json.JSONObject) -> fromJson
    77:77:java.lang.String getToken() -> getToken
    142:142:java.lang.String toString() -> toString
com.seafile.vmoo.data.SeafPhoto -> com.seafile.vmoo.data.SeafPhoto:
    22:27:void <init>(java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.data.SeafDirent) -> <init>
    35:35:java.lang.String getDirPath() -> getDirPath
    31:31:java.lang.String getName() -> getName
    39:39:java.lang.String getRepoID() -> getRepoID
    43:43:java.lang.String getRepoName() -> getRepoName
com.seafile.vmoo.data.SeafRepo -> com.seafile.vmoo.data.SeafRepo:
    52:52:void <init>() -> <init>
    88:88:boolean canLocalDecrypt() -> canLocalDecrypt
    35:48:com.seafile.vmoo.data.SeafRepo fromJson(org.json.JSONObject) -> fromJson
=======
com.seafile.seadroid2.data.SeafDirent$DirentLastMTimeComparator -> com.seafile.seadroid2.data.SeafDirent$DirentLastMTimeComparator:
    84:84:void <init>() -> <init>
    84:84:int compare(java.lang.Object,java.lang.Object) -> compare
    88:88:int compare(com.seafile.seadroid2.data.SeafDirent,com.seafile.seadroid2.data.SeafDirent) -> compare
com.seafile.seadroid2.data.SeafDirent$DirentNameComparator -> com.seafile.seadroid2.data.SeafDirent$DirentNameComparator:
    95:95:void <init>() -> <init>
    95:95:int compare(java.lang.Object,java.lang.Object) -> compare
    100:121:int compare(com.seafile.seadroid2.data.SeafDirent,com.seafile.seadroid2.data.SeafDirent) -> compare
com.seafile.seadroid2.data.SeafDirent$DirentType -> com.seafile.seadroid2.data.SeafDirent$DirentType:
    19:19:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int) -> <init>
    19:19:com.seafile.seadroid2.data.SeafDirent$DirentType valueOf(java.lang.String) -> valueOf
    19:19:com.seafile.seadroid2.data.SeafDirent$DirentType[] values() -> values
com.seafile.seadroid2.data.SeafEvent -> com.seafile.seadroid2.data.SeafEvent:
    18:166:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    43:81:com.seafile.seadroid2.data.SeafEvent fromJson(org.json.JSONObject) -> fromJson
    87:88:java.util.regex.Matcher fullMatch(java.util.regex.Pattern,java.lang.String) -> fullMatch
    230:230:java.lang.String getAuthor() -> getAuthor
    313:313:java.lang.String getAvatar() -> getAvatar
    273:273:java.lang.String getCommit_id() -> getCommit_id
    305:305:java.lang.String getConverted_cmmt_desc() -> getConverted_cmmt_desc
    281:281:java.lang.String getDate() -> getDate
    250:250:java.lang.String getDesc() -> getDesc
    242:242:java.lang.String getEtype() -> getEtype
    289:289:java.lang.String getName() -> getName
    234:234:java.lang.String getNick() -> getNick
    226:226:java.lang.String getRepo_id() -> getRepo_id
    246:246:java.lang.String getRepo_name() -> getRepo_name
    260:260:java.lang.String getSubtitle() -> getSubtitle
    238:238:long getTime() -> getTime
    297:297:java.lang.String getTime_relative() -> getTime_relative
    255:255:java.lang.String getTitle() -> getTitle
    168:182:java.util.HashMap getVerbsMap() -> getVerbsMap
    190:190:boolean isAnonymous() -> isAnonymous
    329:329:boolean isMore_files() -> isMore_files
    321:321:boolean isRepo_encrypted() -> isRepo_encrypted
    194:194:void setAnonymous(boolean) -> setAnonymous
    202:202:void setAuthor(java.lang.String) -> setAuthor
    317:317:void setAvatar(java.lang.String) -> setAvatar
    277:277:void setCommit_id(java.lang.String) -> setCommit_id
    309:309:void setConverted_cmmt_desc(java.lang.String) -> setConverted_cmmt_desc
    285:285:void setDate(java.lang.String) -> setDate
    222:222:void setDesc(java.lang.String) -> setDesc
    214:214:void setEtype(java.lang.String) -> setEtype
    333:333:void setMore_files(boolean) -> setMore_files
    293:293:void setName(java.lang.String) -> setName
    206:206:void setNick(java.lang.String) -> setNick
    325:325:void setRepo_encrypted(boolean) -> setRepo_encrypted
    198:198:void setRepo_id(java.lang.String) -> setRepo_id
    218:218:void setRepo_name(java.lang.String) -> setRepo_name
    210:210:void setTime(int) -> setTime
    269:269:void setTime(long) -> setTime
    301:301:void setTime_relative(java.lang.String) -> setTime_relative
    92:126:java.lang.String translateCommitDesc(java.lang.String) -> translateCommitDesc
    132:160:java.lang.String translateLine(java.lang.String) -> translateLine
com.seafile.seadroid2.data.SeafGroup -> com.seafile.seadroid2.data.SeafGroup:
    14:15:void <init>(java.lang.String) -> <init>
    38:39:void addIfAbsent(com.seafile.seadroid2.data.SeafRepo) -> addIfAbsent
    34:34:java.util.List getRepos() -> getRepos
    20:20:java.lang.String getTitle() -> getTitle
    47:54:void sortByType(int,int) -> sortByType
com.seafile.seadroid2.data.SeafLink -> com.seafile.seadroid2.data.SeafLink:
    8:8:void <init>() -> <init>
    28:40:com.seafile.seadroid2.data.SeafLink fromJson(org.json.JSONObject) -> fromJson
    85:85:java.lang.String getCount() -> getCount
    61:61:java.lang.String getCtime() -> getCtime
    69:69:java.lang.String getExpire() -> getExpire
    117:117:java.lang.String getIsDir() -> getIsDir
    125:125:java.lang.String getIsExpired() -> getIsExpired
    93:93:java.lang.String getLink() -> getLink
    101:101:java.lang.String getName() -> getName
    109:109:java.lang.String getPath() -> getPath
    133:133:java.lang.String getRepoName() -> getRepoName
    53:53:java.lang.String getRepo_id() -> getRepo_id
    77:77:java.lang.String getToken() -> getToken
    45:45:java.lang.String getUsername() -> getUsername
    89:89:void setCount(java.lang.String) -> setCount
    65:65:void setCtime(java.lang.String) -> setCtime
    73:73:void setExpire(java.lang.String) -> setExpire
    121:121:void setIsDir(java.lang.String) -> setIsDir
    129:129:void setIsExpired(java.lang.String) -> setIsExpired
    97:97:void setLink(java.lang.String) -> setLink
    105:105:void setName(java.lang.String) -> setName
    113:113:void setPath(java.lang.String) -> setPath
    137:137:void setRepoName(java.lang.String) -> setRepoName
    57:57:void setRepo_id(java.lang.String) -> setRepo_id
    81:81:void setToken(java.lang.String) -> setToken
    49:49:void setUsername(java.lang.String) -> setUsername
    142:142:java.lang.String toString() -> toString
com.seafile.seadroid2.data.SeafPhoto -> com.seafile.seadroid2.data.SeafPhoto:
    22:27:void <init>(java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.SeafDirent) -> <init>
    35:35:java.lang.String getDirPath() -> getDirPath
    47:47:com.seafile.seadroid2.data.SeafDirent getDirent() -> getDirent
    31:31:java.lang.String getName() -> getName
    39:39:java.lang.String getRepoID() -> getRepoID
    43:43:java.lang.String getRepoName() -> getRepoName
com.seafile.seadroid2.data.SeafRepo -> com.seafile.seadroid2.data.SeafRepo:
    52:52:void <init>() -> <init>
    88:88:boolean canLocalDecrypt() -> canLocalDecrypt
    35:48:com.seafile.seadroid2.data.SeafRepo fromJson(org.json.JSONObject) -> fromJson
>>>>>>> rename package name,fix action event info list same time crash
    56:56:java.lang.String getID() -> getID
    79:81:int getIcon() -> getIcon
    60:60:java.lang.String getName() -> getName
    64:64:java.lang.String getRootDirID() -> getRootDirID
    74:74:java.lang.String getSubtitle() -> getSubtitle
    69:69:java.lang.String getTitle() -> getTitle
    92:92:boolean hasWritePermission() -> hasWritePermission
<<<<<<< HEAD
com.seafile.vmoo.data.SeafRepo$RepoLastMTimeComparator -> com.seafile.vmoo.data.SeafRepo$RepoLastMTimeComparator:
    98:98:void <init>() -> <init>
    98:98:int compare(java.lang.Object,java.lang.Object) -> compare
    102:102:int compare(com.seafile.vmoo.data.SeafRepo,com.seafile.vmoo.data.SeafRepo) -> compare
com.seafile.vmoo.data.SeafRepo$RepoNameComparator -> com.seafile.vmoo.data.SeafRepo$RepoNameComparator:
    109:109:void <init>() -> <init>
    109:109:int compare(java.lang.Object,java.lang.Object) -> compare
    114:135:int compare(com.seafile.vmoo.data.SeafRepo,com.seafile.vmoo.data.SeafRepo) -> compare
com.seafile.vmoo.data.SeafRepoEncrypt -> com.seafile.vmoo.data.SeafRepoEncrypt:
    46:46:void <init>() -> <init>
    50:53:boolean canLocalDecrypt() -> canLocalDecrypt
    28:42:com.seafile.vmoo.data.SeafRepoEncrypt fromJson(org.json.JSONObject) -> fromJson
com.seafile.vmoo.data.SeafStarredFile -> com.seafile.vmoo.data.SeafStarredFile:
    11:11:void <init>() -> <init>
    22:35:com.seafile.vmoo.data.SeafStarredFile fromJson(org.json.JSONObject) -> fromJson
=======
com.seafile.seadroid2.data.SeafRepo$RepoLastMTimeComparator -> com.seafile.seadroid2.data.SeafRepo$RepoLastMTimeComparator:
    98:98:void <init>() -> <init>
    98:98:int compare(java.lang.Object,java.lang.Object) -> compare
    102:102:int compare(com.seafile.seadroid2.data.SeafRepo,com.seafile.seadroid2.data.SeafRepo) -> compare
com.seafile.seadroid2.data.SeafRepo$RepoNameComparator -> com.seafile.seadroid2.data.SeafRepo$RepoNameComparator:
    109:109:void <init>() -> <init>
    109:109:int compare(java.lang.Object,java.lang.Object) -> compare
    114:135:int compare(com.seafile.seadroid2.data.SeafRepo,com.seafile.seadroid2.data.SeafRepo) -> compare
com.seafile.seadroid2.data.SeafRepoEncrypt -> com.seafile.seadroid2.data.SeafRepoEncrypt:
    46:46:void <init>() -> <init>
    50:53:boolean canLocalDecrypt() -> canLocalDecrypt
    28:42:com.seafile.seadroid2.data.SeafRepoEncrypt fromJson(org.json.JSONObject) -> fromJson
com.seafile.seadroid2.data.SeafStarredFile -> com.seafile.seadroid2.data.SeafStarredFile:
    11:11:void <init>() -> <init>
    22:35:com.seafile.seadroid2.data.SeafStarredFile fromJson(org.json.JSONObject) -> fromJson
>>>>>>> rename package name,fix action event info list same time crash
    75:77:int getIcon() -> getIcon
    45:45:long getMtime() -> getMtime
    57:57:java.lang.String getPath() -> getPath
    53:53:java.lang.String getRepoID() -> getRepoID
    41:41:long getSize() -> getSize
    67:70:java.lang.String getSubtitle() -> getSubtitle
    62:62:java.lang.String getTitle() -> getTitle
    49:49:boolean isDir() -> isDir
<<<<<<< HEAD
com.seafile.vmoo.data.SeafStarredFile$FileType -> com.seafile.vmoo.data.SeafStarredFile$FileType:
    12:12:void <clinit>() -> <clinit>
    12:12:void <init>(java.lang.String,int) -> <init>
    12:12:com.seafile.vmoo.data.SeafStarredFile$FileType valueOf(java.lang.String) -> valueOf
    12:12:com.seafile.vmoo.data.SeafStarredFile$FileType[] values() -> values
com.seafile.vmoo.data.SearchedFile -> com.seafile.vmoo.data.SearchedFile:
    13:13:void <init>() -> <init>
    26:39:com.seafile.vmoo.data.SearchedFile fromJson(org.json.JSONObject) -> fromJson
    71:73:int getIcon() -> getIcon
    53:53:java.lang.String getPath() -> getPath
    49:49:java.lang.String getRepoID() -> getRepoID
    63:66:java.lang.String getSubtitle() -> getSubtitle
    58:58:java.lang.String getTitle() -> getTitle
    45:45:boolean isDir() -> isDir
com.seafile.vmoo.data.SearchedFile$FileType -> com.seafile.vmoo.data.SearchedFile$FileType:
    16:16:void <clinit>() -> <clinit>
    16:16:void <init>(java.lang.String,int) -> <init>
    16:16:com.seafile.vmoo.data.SearchedFile$FileType valueOf(java.lang.String) -> valueOf
    16:16:com.seafile.vmoo.data.SearchedFile$FileType[] values() -> values
com.seafile.vmoo.data.ServerInfo -> com.seafile.vmoo.data.ServerInfo:
    34:34:void <clinit>() -> <clinit>
    22:25:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    28:31:void <init>(android.os.Parcel) -> <init>
    102:109:boolean equals(java.lang.Object) -> equals
    86:88:com.seafile.vmoo.data.ServerInfo fromJson(org.json.JSONObject,java.lang.String) -> fromJson
=======
com.seafile.seadroid2.data.SeafStarredFile$FileType -> com.seafile.seadroid2.data.SeafStarredFile$FileType:
    12:12:void <clinit>() -> <clinit>
    12:12:void <init>(java.lang.String,int) -> <init>
    12:12:com.seafile.seadroid2.data.SeafStarredFile$FileType valueOf(java.lang.String) -> valueOf
    12:12:com.seafile.seadroid2.data.SeafStarredFile$FileType[] values() -> values
com.seafile.seadroid2.data.SearchedFile -> com.seafile.seadroid2.data.SearchedFile:
    12:12:void <init>() -> <init>
    25:38:com.seafile.seadroid2.data.SearchedFile fromJson(org.json.JSONObject) -> fromJson
    70:72:int getIcon() -> getIcon
    52:52:java.lang.String getPath() -> getPath
    48:48:java.lang.String getRepoID() -> getRepoID
    62:65:java.lang.String getSubtitle() -> getSubtitle
    57:57:java.lang.String getTitle() -> getTitle
    44:44:boolean isDir() -> isDir
com.seafile.seadroid2.data.SearchedFile$FileType -> com.seafile.seadroid2.data.SearchedFile$FileType:
    15:15:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
    15:15:com.seafile.seadroid2.data.SearchedFile$FileType valueOf(java.lang.String) -> valueOf
    15:15:com.seafile.seadroid2.data.SearchedFile$FileType[] values() -> values
com.seafile.seadroid2.data.ServerInfo -> com.seafile.seadroid2.data.ServerInfo:
    34:34:void <clinit>() -> <clinit>
    22:25:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    28:31:void <init>(android.os.Parcel) -> <init>
    71:76:boolean canLocalDecrypt() -> canLocalDecrypt
    102:109:boolean equals(java.lang.Object) -> equals
    86:88:com.seafile.seadroid2.data.ServerInfo fromJson(org.json.JSONObject,java.lang.String) -> fromJson
>>>>>>> rename package name,fix action event info list same time crash
    59:59:java.lang.String getFeatures() -> getFeatures
    82:82:java.lang.String getUrl() -> getUrl
    51:51:java.lang.String getVersion() -> getVersion
    95:95:int hashCode() -> hashCode
    63:63:boolean isProEdition() -> isProEdition
    67:67:boolean isSearchEnabled() -> isSearchEnabled
    114:118:java.lang.String toString() -> toString
    128:130:void writeToParcel(android.os.Parcel,int) -> writeToParcel
<<<<<<< HEAD
com.seafile.vmoo.data.ServerInfo$1 -> com.seafile.vmoo.data.ServerInfo$1:
    34:34:void <init>() -> <init>
    34:34:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    37:37:com.seafile.vmoo.data.ServerInfo createFromParcel(android.os.Parcel) -> createFromParcel
    34:34:java.lang.Object[] newArray(int) -> newArray
    42:42:com.seafile.vmoo.data.ServerInfo[] newArray(int) -> newArray
com.seafile.vmoo.data.StorageManager -> com.seafile.vmoo.data.StorageManager:
    73:74:void <init>() -> <init>
    95:99:com.seafile.vmoo.data.StorageManager$Location buildClassicLocation() -> buildClassicLocation
    448:455:void clearCache() -> clearCache
    104:119:void fillLocationInfo(com.seafile.vmoo.data.StorageManager$Location) -> fillLocationInfo
    372:372:android.content.Context getContext() -> getContext
    363:366:java.io.File getDirectoryCreateIfNeeded(java.io.File) -> getDirectoryCreateIfNeeded
    82:91:com.seafile.vmoo.data.StorageManager getInstance() -> getInstance
    399:400:java.io.File getJsonCacheDir() -> getJsonCacheDir
    315:315:java.io.File getMediaDir() -> getMediaDir
    282:300:com.seafile.vmoo.data.StorageManager$Location getPreferredStorage() -> getPreferredStorage
    335:355:com.seafile.vmoo.data.StorageManager$Location getStorageLocation() -> getStorageLocation
=======
com.seafile.seadroid2.data.ServerInfo$1 -> com.seafile.seadroid2.data.ServerInfo$1:
    34:34:void <init>() -> <init>
    34:34:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    37:37:com.seafile.seadroid2.data.ServerInfo createFromParcel(android.os.Parcel) -> createFromParcel
    34:34:java.lang.Object[] newArray(int) -> newArray
    42:42:com.seafile.seadroid2.data.ServerInfo[] newArray(int) -> newArray
com.seafile.seadroid2.data.StorageManager -> com.seafile.seadroid2.data.StorageManager:
    73:74:void <init>() -> <init>
    95:99:com.seafile.seadroid2.data.StorageManager$Location buildClassicLocation() -> buildClassicLocation
    463:470:void clearAccount(com.seafile.seadroid2.account.Account) -> clearAccount
    448:455:void clearCache() -> clearCache
    104:119:void fillLocationInfo(com.seafile.seadroid2.data.StorageManager$Location) -> fillLocationInfo
    372:372:android.content.Context getContext() -> getContext
    363:366:java.io.File getDirectoryCreateIfNeeded(java.io.File) -> getDirectoryCreateIfNeeded
    82:91:com.seafile.seadroid2.data.StorageManager getInstance() -> getInstance
    399:400:java.io.File getJsonCacheDir() -> getJsonCacheDir
    315:315:java.io.File getMediaDir() -> getMediaDir
    282:300:com.seafile.seadroid2.data.StorageManager$Location getPreferredStorage() -> getPreferredStorage
    335:355:com.seafile.seadroid2.data.StorageManager$Location getStorageLocation() -> getStorageLocation
>>>>>>> rename package name,fix action event info list same time crash
    170:202:java.util.ArrayList getStorageLocations() -> getStorageLocations
    384:386:java.io.File getTempDir() -> getTempDir
    409:411:java.io.File getThumbnailsDir() -> getThumbnailsDir
    479:484:long getUsedSpace() -> getUsedSpace
<<<<<<< HEAD
    319:320:com.seafile.vmoo.data.StorageManager$Location lookupStorageLocation(int) -> lookupStorageLocation
    434:439:void notifyAndroidGalleryDirectoryChange(java.util.Collection) -> notifyAndroidGalleryDirectoryChange
    420:420:void notifyAndroidGalleryFileChange(java.io.File) -> notifyAndroidGalleryFileChange
    218:228:void setStorageDir(int) -> setStorageDir
com.seafile.vmoo.data.StorageManager$Location -> com.seafile.vmoo.data.StorageManager$Location:
    487:487:void <init>() -> <init>
com.seafile.vmoo.data.StorageManagerGingerbread -> com.seafile.vmoo.data.StorageManagerGingerbread:
=======
    319:320:com.seafile.seadroid2.data.StorageManager$Location lookupStorageLocation(int) -> lookupStorageLocation
    434:439:void notifyAndroidGalleryDirectoryChange(java.util.Collection) -> notifyAndroidGalleryDirectoryChange
    420:420:void notifyAndroidGalleryFileChange(java.io.File) -> notifyAndroidGalleryFileChange
    218:228:void setStorageDir(int) -> setStorageDir
com.seafile.seadroid2.data.StorageManager$Location -> com.seafile.seadroid2.data.StorageManager$Location:
    487:487:void <init>() -> <init>
com.seafile.seadroid2.data.StorageManagerGingerbread -> com.seafile.seadroid2.data.StorageManagerGingerbread:
>>>>>>> rename package name,fix action event info list same time crash
    10:10:void <init>() -> <init>
    30:31:long getStorageFreeSpace(java.io.File) -> getStorageFreeSpace
    24:25:long getStorageSize(java.io.File) -> getStorageSize
    19:19:java.io.File[] getSystemCacheDirs() -> getSystemCacheDirs
    14:14:java.io.File[] getSystemMediaDirs() -> getSystemMediaDirs
<<<<<<< HEAD
com.seafile.vmoo.data.StorageManagerKitKat -> com.seafile.vmoo.data.StorageManagerKitKat:
=======
com.seafile.seadroid2.data.StorageManagerKitKat -> com.seafile.seadroid2.data.StorageManagerKitKat:
>>>>>>> rename package name,fix action event info list same time crash
    22:22:void <init>() -> <init>
    50:51:long getStorageFreeSpace(java.io.File) -> getStorageFreeSpace
    44:45:long getStorageSize(java.io.File) -> getStorageSize
    39:39:java.io.File[] getSystemCacheDirs() -> getSystemCacheDirs
    34:34:java.io.File[] getSystemMediaDirs() -> getSystemMediaDirs
    61:92:void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
<<<<<<< HEAD
com.seafile.vmoo.data.StorageManagerLollipop -> com.seafile.vmoo.data.StorageManagerLollipop:
=======
com.seafile.seadroid2.data.StorageManagerLollipop -> com.seafile.seadroid2.data.StorageManagerLollipop:
>>>>>>> rename package name,fix action event info list same time crash
    13:13:void <init>() -> <init>
    38:41:long getStorageFreeSpace(java.io.File) -> getStorageFreeSpace
    31:32:long getStorageSize(java.io.File) -> getStorageSize
    26:26:java.io.File[] getSystemCacheDirs() -> getSystemCacheDirs
    21:21:java.io.File[] getSystemMediaDirs() -> getSystemMediaDirs
<<<<<<< HEAD
com.seafile.vmoo.editor.EditorActivity -> com.seafile.vmoo.editor.EditorActivity:
    30:37:void <init>() -> <init>
    30:30:boolean access$002(com.seafile.vmoo.editor.EditorActivity,boolean) -> access$002
=======
com.seafile.seadroid2.data.TwoTuple -> com.seafile.seadroid2.data.TwoTuple:
    7:9:void <init>(java.lang.Object,java.lang.Object) -> <init>
    13:13:java.lang.Object getFirst() -> getFirst
    17:17:java.lang.Object getSecond() -> getSecond
    21:21:com.seafile.seadroid2.data.TwoTuple newInstance(java.lang.Object,java.lang.Object) -> newInstance
com.seafile.seadroid2.editor.EditorActivity -> com.seafile.seadroid2.editor.EditorActivity:
    30:37:void <init>() -> <init>
    30:30:boolean access$002(com.seafile.seadroid2.editor.EditorActivity,boolean) -> access$002
>>>>>>> rename package name,fix action event info list same time crash
    77:99:void markdown() -> markdown
    162:165:void onBackPressed() -> onBackPressed
    41:57:void onCreate(android.os.Bundle) -> onCreate
    131:131:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    125:126:void onDetachedFromWindow() -> onDetachedFromWindow
    157:157:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    138:152:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    105:118:java.lang.String readToString(java.io.File) -> readToString
    171:187:void showSaveDialog() -> showSaveDialog
<<<<<<< HEAD
com.seafile.vmoo.editor.EditorActivity$1 -> com.seafile.vmoo.editor.EditorActivity$1:
    57:57:void <init>(com.seafile.vmoo.editor.EditorActivity) -> <init>
    70:70:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.seafile.vmoo.editor.EditorActivity$2 -> com.seafile.vmoo.editor.EditorActivity$2:
    173:173:void <init>(com.seafile.vmoo.editor.EditorActivity) -> <init>
    184:184:void onTaskFailed(com.seafile.vmoo.SeafException) -> onTaskFailed
    177:179:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.editor.LinkDialogView -> com.seafile.vmoo.editor.LinkDialogView:
=======
com.seafile.seadroid2.editor.EditorActivity$1 -> com.seafile.seadroid2.editor.EditorActivity$1:
    57:57:void <init>(com.seafile.seadroid2.editor.EditorActivity) -> <init>
    70:70:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.seafile.seadroid2.editor.EditorActivity$2 -> com.seafile.seadroid2.editor.EditorActivity$2:
    173:173:void <init>(com.seafile.seadroid2.editor.EditorActivity) -> <init>
    184:184:void onTaskFailed(com.seafile.seadroid2.SeafException) -> onTaskFailed
    177:179:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.editor.LinkDialogView -> com.seafile.seadroid2.editor.LinkDialogView:
>>>>>>> rename package name,fix action event info list same time crash
    19:20:void <init>(android.content.Context) -> <init>
    24:25:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    30:31:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    41:42:void clear() -> clear
    46:46:java.lang.String getDescription() -> getDescription
    50:50:java.lang.String getLink() -> getLink
    35:37:void init(android.content.Context) -> init
<<<<<<< HEAD
com.seafile.vmoo.editor.Utils -> com.seafile.vmoo.editor.Utils:
=======
com.seafile.seadroid2.editor.Utils -> com.seafile.seadroid2.editor.Utils:
    7:7:void <init>() -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    33:33:int findBeforeNewLineChar(java.lang.CharSequence,int) -> findBeforeNewLineChar
    16:17:int findNextNewLineChar(java.lang.CharSequence,int) -> findNextNewLineChar
    42:44:java.lang.Object getSpans(android.widget.EditText,int,int,java.lang.Class) -> getSpans
    50:50:boolean hasCenterSpan(android.widget.EditText,int,int) -> hasCenterSpan
    60:60:int safePosition(int,java.lang.CharSequence) -> safePosition
<<<<<<< HEAD
com.seafile.vmoo.editor.controller.BlockQuotesController -> com.seafile.vmoo.editor.controller.BlockQuotesController:
    13:14:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    69:107:void addNestedBlockQuotes() -> addNestedBlockQuotes
    18:62:void doBlockQuotes() -> doBlockQuotes
com.seafile.vmoo.editor.controller.CodeController -> com.seafile.vmoo.editor.controller.CodeController:
    13:14:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    52:97:void doCode() -> doCode
    19:47:void doInlineCode() -> doInlineCode
com.seafile.vmoo.editor.controller.HeaderController -> com.seafile.vmoo.editor.controller.HeaderController:
=======
com.seafile.seadroid2.editor.controller.BlockQuotesController -> com.seafile.seadroid2.editor.controller.BlockQuotesController:
    13:14:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    69:107:void addNestedBlockQuotes() -> addNestedBlockQuotes
    18:62:void doBlockQuotes() -> doBlockQuotes
com.seafile.seadroid2.editor.controller.CodeController -> com.seafile.seadroid2.editor.controller.CodeController:
    13:14:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    52:97:void doCode() -> doCode
    19:47:void doInlineCode() -> doInlineCode
com.seafile.seadroid2.editor.controller.HeaderController -> com.seafile.seadroid2.editor.controller.HeaderController:
>>>>>>> rename package name,fix action event info list same time crash
    16:18:void <init>(com.yydcdut.markdown.MarkdownEditText,com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    125:110:void addHeaderKey(int,int) -> addHeaderKey
    102:87:void deleteHeaderKey(int,int) -> deleteHeaderKey
    23:39:void doHeader(int) -> doHeader
    44:78:void replace(int,int,int,android.text.style.RelativeSizeSpan) -> replace
<<<<<<< HEAD
com.seafile.vmoo.editor.controller.HorizontalRulesController -> com.seafile.vmoo.editor.controller.HorizontalRulesController:
    14:15:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    19:45:void doHorizontalRules() -> doHorizontalRules
com.seafile.vmoo.editor.controller.LinkController -> com.seafile.vmoo.editor.controller.LinkController:
    20:23:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    14:14:com.seafile.vmoo.editor.LinkDialogView access$000(com.seafile.vmoo.editor.controller.LinkController) -> access$000
    14:14:void access$100(com.seafile.vmoo.editor.controller.LinkController,java.lang.String,java.lang.String) -> access$100
    30:34:void doImage() -> doImage
    61:66:void doRealLink(java.lang.String,java.lang.String) -> doRealLink
    38:57:void initDialog() -> initDialog
com.seafile.vmoo.editor.controller.LinkController$1 -> com.seafile.vmoo.editor.controller.LinkController$1:
    49:49:void <init>(com.seafile.vmoo.editor.controller.LinkController) -> <init>
    52:52:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.editor.controller.LinkController$2 -> com.seafile.vmoo.editor.controller.LinkController$2:
    40:40:void <init>(com.seafile.vmoo.editor.controller.LinkController) -> <init>
    43:46:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.editor.controller.ListController -> com.seafile.vmoo.editor.controller.ListController:
    14:15:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    61:122:void doOrderList() -> doOrderList
    19:55:void doUnOrderList() -> doUnOrderList
com.seafile.vmoo.editor.controller.StrikeThroughController -> com.seafile.vmoo.editor.controller.StrikeThroughController:
    14:15:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    20:46:void doStrikeThrough() -> doStrikeThrough
com.seafile.vmoo.editor.controller.StyleController -> com.seafile.vmoo.editor.controller.StyleController:
    14:15:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    20:53:void doBold() -> doBold
    59:91:void doItalic() -> doItalic
com.seafile.vmoo.editor.controller.TodoController -> com.seafile.vmoo.editor.controller.TodoController:
    14:15:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    19:36:void doTodo() -> doTodo
    41:58:void doTodoDone() -> doTodoDone
com.seafile.vmoo.editor.widget.EditScrollView -> com.seafile.vmoo.editor.widget.EditScrollView:
=======
com.seafile.seadroid2.editor.controller.HorizontalRulesController -> com.seafile.seadroid2.editor.controller.HorizontalRulesController:
    14:15:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    19:45:void doHorizontalRules() -> doHorizontalRules
com.seafile.seadroid2.editor.controller.LinkController -> com.seafile.seadroid2.editor.controller.LinkController:
    20:23:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    14:14:com.seafile.seadroid2.editor.LinkDialogView access$000(com.seafile.seadroid2.editor.controller.LinkController) -> access$000
    14:14:void access$100(com.seafile.seadroid2.editor.controller.LinkController,java.lang.String,java.lang.String) -> access$100
    30:34:void doImage() -> doImage
    61:66:void doRealLink(java.lang.String,java.lang.String) -> doRealLink
    38:57:void initDialog() -> initDialog
com.seafile.seadroid2.editor.controller.LinkController$1 -> com.seafile.seadroid2.editor.controller.LinkController$1:
    49:49:void <init>(com.seafile.seadroid2.editor.controller.LinkController) -> <init>
    52:52:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.editor.controller.LinkController$2 -> com.seafile.seadroid2.editor.controller.LinkController$2:
    40:40:void <init>(com.seafile.seadroid2.editor.controller.LinkController) -> <init>
    43:46:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.editor.controller.ListController -> com.seafile.seadroid2.editor.controller.ListController:
    14:15:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    61:122:void doOrderList() -> doOrderList
    19:55:void doUnOrderList() -> doUnOrderList
com.seafile.seadroid2.editor.controller.StrikeThroughController -> com.seafile.seadroid2.editor.controller.StrikeThroughController:
    14:15:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    20:46:void doStrikeThrough() -> doStrikeThrough
com.seafile.seadroid2.editor.controller.StyleController -> com.seafile.seadroid2.editor.controller.StyleController:
    14:15:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    20:53:void doBold() -> doBold
    59:91:void doItalic() -> doItalic
com.seafile.seadroid2.editor.controller.TodoController -> com.seafile.seadroid2.editor.controller.TodoController:
    14:15:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    19:36:void doTodo() -> doTodo
    41:58:void doTodoDone() -> doTodoDone
com.seafile.seadroid2.editor.widget.EditScrollView -> com.seafile.seadroid2.editor.widget.EditScrollView:
>>>>>>> rename package name,fix action event info list same time crash
    9:9:void <init>(android.content.Context) -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    17:17:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    22:24:void onScrollChanged(int,int,int,int) -> onScrollChanged
<<<<<<< HEAD
    31:31:void setOnScrollChangedListener(com.seafile.vmoo.editor.widget.EditScrollView$OnScrollChangedListener) -> setOnScrollChangedListener
com.seafile.vmoo.editor.widget.HorizontalEditScrollView -> com.seafile.vmoo.editor.widget.HorizontalEditScrollView:
=======
    31:31:void setOnScrollChangedListener(com.seafile.seadroid2.editor.widget.EditScrollView$OnScrollChangedListener) -> setOnScrollChangedListener
com.seafile.seadroid2.editor.widget.HorizontalEditScrollView -> com.seafile.seadroid2.editor.widget.HorizontalEditScrollView:
>>>>>>> rename package name,fix action event info list same time crash
    38:38:void <init>(android.content.Context) -> <init>
    42:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    83:112:void onClick(android.view.View) -> onClick
    65:78:void onFinishInflate() -> onFinishInflate
    128:130:boolean onLongClick(android.view.View) -> onLongClick
    51:60:void setEditTextAndConfig(com.yydcdut.markdown.MarkdownEditText,com.yydcdut.markdown.MarkdownConfiguration) -> setEditTextAndConfig
<<<<<<< HEAD
com.seafile.vmoo.fileschooser.FileFooterFragment -> com.seafile.vmoo.fileschooser.FileFooterFragment:
=======
com.seafile.seadroid2.fileschooser.FileFooterFragment -> com.seafile.seadroid2.fileschooser.FileFooterFragment:
>>>>>>> rename package name,fix action event info list same time crash
    14:14:void <init>() -> <init>
    60:60:android.widget.Button getConfirmButton() -> getConfirmButton
    56:56:android.widget.TextView getStatusView() -> getStatusView
    22:22:void onCreate(android.os.Bundle) -> onCreate
    28:43:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    65:65:void onPause() -> onPause
<<<<<<< HEAD
com.seafile.vmoo.fileschooser.FileFooterFragment$1 -> com.seafile.vmoo.fileschooser.FileFooterFragment$1:
    34:34:void <init>(com.seafile.vmoo.fileschooser.FileFooterFragment) -> <init>
    38:38:void onClick(android.view.View) -> onClick
com.seafile.vmoo.fileschooser.FileFooterFragment$2 -> com.seafile.vmoo.fileschooser.FileFooterFragment$2:
    43:43:void <init>(com.seafile.vmoo.fileschooser.FileFooterFragment) -> <init>
    47:47:void onClick(android.view.View) -> onClick
com.seafile.vmoo.fileschooser.FileListAdapter -> com.seafile.vmoo.fileschooser.FileListAdapter:
    22:24:void <init>(android.app.Activity) -> <init>
    17:17:android.app.Activity access$000(com.seafile.vmoo.fileschooser.FileListAdapter) -> access$000
    42:42:void clear() -> clear
    29:29:int getCount() -> getCount
    17:17:java.lang.Object getItem(int) -> getItem
    34:34:com.seafile.vmoo.fileschooser.SelectableFile getItem(int) -> getItem
    61:106:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    51:52:void setListItems(java.util.List) -> setListItems
com.seafile.vmoo.fileschooser.FileListAdapter$1 -> com.seafile.vmoo.fileschooser.FileListAdapter$1:
    78:78:void <init>(com.seafile.vmoo.fileschooser.FileListAdapter) -> <init>
    82:85:void onClick(android.view.View) -> onClick
com.seafile.vmoo.fileschooser.FileListAdapter$Viewholder -> com.seafile.vmoo.fileschooser.FileListAdapter$Viewholder:
    117:122:void <init>(com.seafile.vmoo.fileschooser.FileListAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.CheckBox) -> <init>
com.seafile.vmoo.fileschooser.FileListFragment -> com.seafile.vmoo.fileschooser.FileListFragment:
    16:16:void <init>() -> <init>
    26:29:com.seafile.vmoo.fileschooser.FileListFragment newInstance(java.lang.String) -> newInstance
=======
com.seafile.seadroid2.fileschooser.FileFooterFragment$1 -> com.seafile.seadroid2.fileschooser.FileFooterFragment$1:
    34:34:void <init>(com.seafile.seadroid2.fileschooser.FileFooterFragment) -> <init>
    38:38:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.fileschooser.FileFooterFragment$2 -> com.seafile.seadroid2.fileschooser.FileFooterFragment$2:
    43:43:void <init>(com.seafile.seadroid2.fileschooser.FileFooterFragment) -> <init>
    47:47:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.fileschooser.FileListAdapter -> com.seafile.seadroid2.fileschooser.FileListAdapter:
    22:24:void <init>(android.app.Activity) -> <init>
    17:17:android.app.Activity access$000(com.seafile.seadroid2.fileschooser.FileListAdapter) -> access$000
    38:38:void addItem(com.seafile.seadroid2.fileschooser.SelectableFile) -> addItem
    42:42:void clear() -> clear
    29:29:int getCount() -> getCount
    17:17:java.lang.Object getItem(int) -> getItem
    34:34:com.seafile.seadroid2.fileschooser.SelectableFile getItem(int) -> getItem
    56:56:java.util.List getListItems() -> getListItems
    61:106:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    51:52:void setListItems(java.util.List) -> setListItems
com.seafile.seadroid2.fileschooser.FileListAdapter$1 -> com.seafile.seadroid2.fileschooser.FileListAdapter$1:
    78:78:void <init>(com.seafile.seadroid2.fileschooser.FileListAdapter) -> <init>
    82:85:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.fileschooser.FileListAdapter$Viewholder -> com.seafile.seadroid2.fileschooser.FileListAdapter$Viewholder:
    117:122:void <init>(com.seafile.seadroid2.fileschooser.FileListAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.CheckBox) -> <init>
com.seafile.seadroid2.fileschooser.FileListFragment -> com.seafile.seadroid2.fileschooser.FileListFragment:
    16:16:void <init>() -> <init>
    26:29:com.seafile.seadroid2.fileschooser.FileListFragment newInstance(java.lang.String) -> newInstance
>>>>>>> rename package name,fix action event info list same time crash
    47:51:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    36:41:void onCreate(android.os.Bundle) -> onCreate
    77:77:androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    56:65:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    16:16:void onLoadFinished(androidx.loader.content.Loader,java.lang.Object) -> onLoadFinished
    82:87:void onLoadFinished(androidx.loader.content.Loader,java.util.List) -> onLoadFinished
    94:94:void onLoaderReset(androidx.loader.content.Loader) -> onLoaderReset
    71:72:void onPause() -> onPause
<<<<<<< HEAD
com.seafile.vmoo.fileschooser.FileLoader -> com.seafile.vmoo.fileschooser.FileLoader:
=======
com.seafile.seadroid2.fileschooser.FileLoader -> com.seafile.seadroid2.fileschooser.FileLoader:
>>>>>>> rename package name,fix action event info list same time crash
    27:29:void <init>(android.content.Context,java.lang.String,java.util.List) -> <init>
    13:13:void deliverResult(java.lang.Object) -> deliverResult
    39:51:void deliverResult(java.util.List) -> deliverResult
    13:13:java.lang.Object loadInBackground() -> loadInBackground
    34:34:java.util.List loadInBackground() -> loadInBackground
    13:13:void onCanceled(java.lang.Object) -> onCanceled
    90:92:void onCanceled(java.util.List) -> onCanceled
    97:99:void onReleaseResources(java.util.List) -> onReleaseResources
    80:84:void onReset() -> onReset
    56:70:void onStartLoading() -> onStartLoading
    75:75:void onStopLoading() -> onStopLoading
<<<<<<< HEAD
com.seafile.vmoo.fileschooser.FileLoader$1 -> com.seafile.vmoo.fileschooser.FileLoader$1:
    60:60:void <init>(com.seafile.vmoo.fileschooser.FileLoader,java.lang.String,int) -> <init>
    63:63:void onEvent(int,java.lang.String) -> onEvent
com.seafile.vmoo.fileschooser.MultiFileChooserActivity -> com.seafile.vmoo.fileschooser.MultiFileChooserActivity:
    29:29:void <clinit>() -> <clinit>
    25:38:void <init>() -> <init>
    88:90:void addFragment(java.lang.String) -> addFragment
=======
com.seafile.seadroid2.fileschooser.FileLoader$1 -> com.seafile.seadroid2.fileschooser.FileLoader$1:
    60:60:void <init>(com.seafile.seadroid2.fileschooser.FileLoader,java.lang.String,int) -> <init>
    63:63:void onEvent(int,java.lang.String) -> onEvent
com.seafile.seadroid2.fileschooser.MultiFileChooserActivity -> com.seafile.seadroid2.fileschooser.MultiFileChooserActivity:
    29:29:void <clinit>() -> <clinit>
    25:38:void <init>() -> <init>
    88:90:void addFragment(java.lang.String) -> addFragment
    197:202:void finishWithResult(com.seafile.seadroid2.fileschooser.SelectableFile) -> finishWithResult
>>>>>>> rename package name,fix action event info list same time crash
    172:172:java.util.List getSelectedFiles() -> getSelectedFiles
    95:104:void onBackStackChanged() -> onBackStackChanged
    109:110:void onCancelButtonClicked() -> onCancelButtonClicked
    117:135:void onConfirmButtonClicked() -> onConfirmButtonClicked
    47:65:void onCreate(android.os.Bundle) -> onCreate
<<<<<<< HEAD
    213:224:void onFileChecked(com.seafile.vmoo.fileschooser.SelectableFile) -> onFileChecked
=======
    213:224:void onFileChecked(com.seafile.seadroid2.fileschooser.SelectableFile) -> onFileChecked
>>>>>>> rename package name,fix action event info list same time crash
    70:71:void onPause() -> onPause
    76:77:void onResume() -> onResume
    82:84:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    232:234:void registerStorageListener() -> registerStorageListener
    182:186:void replaceFragment(java.lang.String) -> replaceFragment
    241:241:void unregisterStorageListener() -> unregisterStorageListener
<<<<<<< HEAD
    159:165:void updateSelectedFileList(com.seafile.vmoo.fileschooser.SelectableFile) -> updateSelectedFileList
    139:146:void updateSelectionStatus() -> updateSelectionStatus
    150:154:void updateUploadButtonStatus() -> updateUploadButtonStatus
com.seafile.vmoo.fileschooser.MultiFileChooserActivity$1 -> com.seafile.vmoo.fileschooser.MultiFileChooserActivity$1:
    38:38:void <init>(com.seafile.vmoo.fileschooser.MultiFileChooserActivity) -> <init>
    41:41:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.seafile.vmoo.fileschooser.SelectableFile -> com.seafile.vmoo.fileschooser.SelectableFile:
=======
    159:165:void updateSelectedFileList(com.seafile.seadroid2.fileschooser.SelectableFile) -> updateSelectedFileList
    139:146:void updateSelectionStatus() -> updateSelectionStatus
    150:154:void updateUploadButtonStatus() -> updateUploadButtonStatus
com.seafile.seadroid2.fileschooser.MultiFileChooserActivity$1 -> com.seafile.seadroid2.fileschooser.MultiFileChooserActivity$1:
    38:38:void <init>(com.seafile.seadroid2.fileschooser.MultiFileChooserActivity) -> <init>
    41:41:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.seafile.seadroid2.fileschooser.SelectableFile -> com.seafile.seadroid2.fileschooser.SelectableFile:
>>>>>>> rename package name,fix action event info list same time crash
    15:17:void <init>(java.lang.String) -> <init>
    20:22:void <init>(java.io.File,boolean) -> <init>
    52:58:boolean equals(java.lang.Object) -> equals
    75:75:java.lang.String getAbsolutePath() -> getAbsolutePath
    79:79:java.io.File getFile() -> getFile
    101:103:int getIcon() -> getIcon
    42:42:java.lang.String getName() -> getName
    93:96:java.lang.String getSubtitle() -> getSubtitle
    88:88:java.lang.String getTitle() -> getTitle
    34:34:boolean isDirectory() -> isDirectory
    38:38:boolean isFile() -> isFile
    30:30:boolean isSelected() -> isSelected
<<<<<<< HEAD
    62:65:com.seafile.vmoo.fileschooser.SelectableFile[] listFiles(java.io.FileFilter) -> listFiles
    26:26:void setSelected(boolean) -> setSelected
    83:83:void toggleSelected() -> toggleSelected
com.seafile.vmoo.gallery.BaseImage -> com.seafile.vmoo.gallery.BaseImage:
    41:50:void <init>(com.seafile.vmoo.gallery.BaseImageList,android.content.ContentResolver,long,int,android.net.Uri,java.lang.String,java.lang.String,long,java.lang.String) -> <init>
    59:60:boolean equals(java.lang.Object) -> equals
    90:90:java.io.InputStream fullSizeImageData() -> fullSizeImageData
    98:98:android.net.Uri fullSizeImageUri() -> fullSizeImageUri
    102:102:com.seafile.vmoo.gallery.IImageList getContainer() -> getContainer
    54:54:java.lang.String getDataPath() -> getDataPath
    106:106:long getDateTaken() -> getDateTaken
    114:114:java.lang.String getMimeType() -> getMimeType
    65:65:int hashCode() -> hashCode
    152:156:android.graphics.Bitmap miniThumbBitmap() -> miniThumbBitmap
    170:170:java.lang.String toString() -> toString
com.seafile.vmoo.gallery.BaseImageList -> com.seafile.vmoo.gallery.BaseImageList:
=======
    71:71:long length() -> length
    62:65:com.seafile.seadroid2.fileschooser.SelectableFile[] listFiles(java.io.FileFilter) -> listFiles
    26:26:void setSelected(boolean) -> setSelected
    83:83:void toggleSelected() -> toggleSelected
com.seafile.seadroid2.gallery.BaseImage -> com.seafile.seadroid2.gallery.BaseImage:
    41:50:void <init>(com.seafile.seadroid2.gallery.BaseImageList,android.content.ContentResolver,long,int,android.net.Uri,java.lang.String,java.lang.String,long,java.lang.String) -> <init>
    59:60:boolean equals(java.lang.Object) -> equals
    69:69:android.graphics.Bitmap fullSizeBitmap(int,int) -> fullSizeBitmap
    75:82:android.graphics.Bitmap fullSizeBitmap(int,int,boolean,boolean) -> fullSizeBitmap
    90:90:java.io.InputStream fullSizeImageData() -> fullSizeImageData
    98:98:android.net.Uri fullSizeImageUri() -> fullSizeImageUri
    102:102:com.seafile.seadroid2.gallery.IImageList getContainer() -> getContainer
    54:54:java.lang.String getDataPath() -> getDataPath
    106:106:long getDateTaken() -> getDateTaken
    145:146:int getHeight() -> getHeight
    114:114:java.lang.String getMimeType() -> getMimeType
    118:118:java.lang.String getTitle() -> getTitle
    140:141:int getWidth() -> getWidth
    65:65:int hashCode() -> hashCode
    152:156:android.graphics.Bitmap miniThumbBitmap() -> miniThumbBitmap
    124:135:void setupDimension() -> setupDimension
    170:170:java.lang.String toString() -> toString
com.seafile.seadroid2.gallery.BaseImageList -> com.seafile.seadroid2.gallery.BaseImageList:
>>>>>>> rename package name,fix action event info list same time crash
    147:147:void <clinit>() -> <clinit>
    30:44:void <init>(android.content.ContentResolver,android.net.Uri,int,java.lang.String) -> <init>
    49:57:void close() -> close
    67:72:android.net.Uri contentUri(long) -> contentUri
    77:81:int getCount() -> getCount
    89:96:android.database.Cursor getCursor() -> getCursor
<<<<<<< HEAD
    100:109:com.seafile.vmoo.gallery.IImage getImageAt(int) -> getImageAt
    168:174:com.seafile.vmoo.gallery.IImage getImageForUri(android.net.Uri) -> getImageForUri
    197:197:int getImageIndex(com.seafile.vmoo.gallery.IImage) -> getImageIndex
    150:152:java.lang.String getPathWithoutId(android.net.Uri) -> getPathWithoutId
    138:140:void invalidateCursor() -> invalidateCursor
    160:164:boolean isChildImageUri(android.net.Uri) -> isChildImageUri
    85:85:boolean isEmpty() -> isEmpty
    206:221:java.lang.String sortOrder() -> sortOrder
com.seafile.vmoo.gallery.BitmapManager -> com.seafile.vmoo.gallery.BitmapManager:
    49:44:void <init>() -> <init>
    83:90:boolean canThreadDecoding(java.lang.Thread) -> canThreadDecoding
    98:120:void cancelThreadDecoding(java.lang.Thread,android.content.ContentResolver) -> cancelThreadDecoding
    163:176:android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.BitmapFactory$Options) -> decodeFileDescriptor
    56:61:com.seafile.vmoo.gallery.BitmapManager$ThreadStatus getOrCreateThreadStatus(java.lang.Thread) -> getOrCreateThreadStatus
    124:147:android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options,boolean) -> getThumbnail
    152:155:com.seafile.vmoo.gallery.BitmapManager instance() -> instance
    74:76:void removeDecodingOptions(java.lang.Thread) -> removeDecodingOptions
    70:71:void setDecodingOptions(java.lang.Thread,android.graphics.BitmapFactory$Options) -> setDecodingOptions
com.seafile.vmoo.gallery.BitmapManager$State -> com.seafile.vmoo.gallery.BitmapManager$State:
    24:24:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    24:24:com.seafile.vmoo.gallery.BitmapManager$State valueOf(java.lang.String) -> valueOf
    24:24:com.seafile.vmoo.gallery.BitmapManager$State[] values() -> values
com.seafile.vmoo.gallery.BitmapManager$ThreadStatus -> com.seafile.vmoo.gallery.BitmapManager$ThreadStatus:
    25:26:void <init>() -> <init>
    25:25:void <init>(com.seafile.vmoo.gallery.BitmapManager$1) -> <init>
    32:39:java.lang.String toString() -> toString
com.seafile.vmoo.gallery.GridViewSpecial -> com.seafile.vmoo.gallery.GridViewSpecial:
    125:126:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    29:29:int access$000(int,android.util.DisplayMetrics) -> access$000
    29:29:boolean access$200(com.seafile.vmoo.gallery.GridViewSpecial) -> access$200
    29:29:android.widget.Scroller access$300(com.seafile.vmoo.gallery.GridViewSpecial) -> access$300
    29:29:android.widget.Scroller access$302(com.seafile.vmoo.gallery.GridViewSpecial,android.widget.Scroller) -> access$302
    29:29:int access$400(com.seafile.vmoo.gallery.GridViewSpecial) -> access$400
    29:29:int access$500(com.seafile.vmoo.gallery.GridViewSpecial) -> access$500
    29:29:com.seafile.vmoo.gallery.GridViewSpecial$Listener access$600(com.seafile.vmoo.gallery.GridViewSpecial) -> access$600
    29:29:int access$700(com.seafile.vmoo.gallery.GridViewSpecial) -> access$700
    29:29:int access$702(com.seafile.vmoo.gallery.GridViewSpecial,int) -> access$702
    560:560:boolean canHandleEvent() -> canHandleEvent
    480:489:void computeScroll() -> computeScroll
    512:518:int computeSelectedIndex(float,float) -> computeSelectedIndex
    239:239:int computeVerticalScrollRange() -> computeVerticalScrollRange
    87:87:int dpToPx(int,android.util.DisplayMetrics) -> dpToPx
    422:434:void ensureVisible(int) -> ensureVisible
    251:275:void generateOutlineBitmap() -> generateOutlineBitmap
    371:371:int getCurrentSelection() -> getCurrentSelection
    495:502:android.graphics.Rect getRectForPosition(int) -> getRectForPosition
    130:136:void init(android.content.Context) -> init
    76:79:void initCellSize() -> initCellSize
    280:288:void moveDataWindow() -> moveDataWindow
    470:475:void onDraw(android.graphics.Canvas) -> onDraw
    572:624:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    630:645:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    175:234:void onLayout(boolean,int,int,int,int) -> onLayout
    523:536:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    650:678:void paintDecoration(android.graphics.Canvas) -> paintDecoration
    684:696:void paintSelection(android.graphics.Canvas) -> paintSelection
    543:543:void scrollBy(int,int) -> scrollBy
    547:547:void scrollTo(float) -> scrollTo
    552:556:void scrollTo(int,int) -> scrollTo
    406:407:void scrollToImage(int) -> scrollToImage
    411:417:void scrollToVisible(int) -> scrollToVisible
    156:157:void setDrawAdapter(com.seafile.vmoo.gallery.GridViewSpecial$DrawAdapter) -> setDrawAdapter
    161:163:void setImageList(com.seafile.vmoo.gallery.IImageList) -> setImageList
    151:152:void setListener(com.seafile.vmoo.gallery.GridViewSpecial$Listener) -> setListener
    146:147:void setLoader(com.seafile.vmoo.gallery.ImageLoader) -> setLoader
    393:402:void setSelectedIndex(int) -> setSelectedIndex
    167:169:void setSizeChoice(int) -> setSizeChoice
    440:444:void start() -> start
    458:465:void stop() -> stop
com.seafile.vmoo.gallery.GridViewSpecial$1 -> com.seafile.vmoo.gallery.GridViewSpecial$1:
    139:139:void <init>(com.seafile.vmoo.gallery.GridViewSpecial) -> <init>
    141:141:void run() -> run
com.seafile.vmoo.gallery.GridViewSpecial$2 -> com.seafile.vmoo.gallery.GridViewSpecial$2:
    563:563:void <init>(com.seafile.vmoo.gallery.GridViewSpecial) -> <init>
    565:566:void run() -> run
com.seafile.vmoo.gallery.GridViewSpecial$LayoutSpec -> com.seafile.vmoo.gallery.GridViewSpecial$LayoutSpec:
    62:66:void <init>(int,int,int,int,android.util.DisplayMetrics) -> <init>
com.seafile.vmoo.gallery.GridViewSpecial$MyGestureDetector -> com.seafile.vmoo.gallery.GridViewSpecial$MyGestureDetector:
    294:294:void <init>(com.seafile.vmoo.gallery.GridViewSpecial) -> <init>
    294:294:void <init>(com.seafile.vmoo.gallery.GridViewSpecial,com.seafile.vmoo.gallery.GridViewSpecial$1) -> <init>
    299:308:boolean onDown(android.view.MotionEvent) -> onDown
    316:327:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    334:335:void onLongPress(android.view.MotionEvent) -> onLongPress
    342:345:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    351:363:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.seafile.vmoo.gallery.Image -> com.seafile.vmoo.gallery.Image:
    128:128:void <clinit>() -> <clinit>
    30:32:void <init>(com.seafile.vmoo.gallery.BaseImageList,android.content.ContentResolver,long,int,android.net.Uri,java.lang.String,java.lang.String,long,java.lang.String,int) -> <init>
    37:37:int getDegreesRotated() -> getDegreesRotated
com.seafile.vmoo.gallery.ImageBlockManager -> com.seafile.vmoo.gallery.ImageBlockManager:
    736:751:void <init>(android.os.Handler,java.lang.Runnable,com.seafile.vmoo.gallery.IImageList,com.seafile.vmoo.gallery.ImageLoader,com.seafile.vmoo.gallery.GridViewSpecial$DrawAdapter,com.seafile.vmoo.gallery.GridViewSpecial$LayoutSpec,int,int,android.graphics.Bitmap) -> <init>
    700:700:int access$100(com.seafile.vmoo.gallery.ImageBlockManager) -> access$100
    700:700:com.seafile.vmoo.gallery.ImageLoader access$1000(com.seafile.vmoo.gallery.ImageBlockManager) -> access$1000
    700:700:com.seafile.vmoo.gallery.GridViewSpecial$LayoutSpec access$1100(com.seafile.vmoo.gallery.ImageBlockManager) -> access$1100
    700:700:java.lang.Runnable access$1200(com.seafile.vmoo.gallery.ImageBlockManager) -> access$1200
    700:700:void access$1300(com.seafile.vmoo.gallery.ImageBlockManager) -> access$1300
    700:700:com.seafile.vmoo.gallery.GridViewSpecial$DrawAdapter access$1400(com.seafile.vmoo.gallery.ImageBlockManager) -> access$1400
    700:700:android.graphics.Bitmap access$1500(com.seafile.vmoo.gallery.ImageBlockManager) -> access$1500
    700:700:android.graphics.Bitmap access$1600(com.seafile.vmoo.gallery.ImageBlockManager) -> access$1600
    700:700:int access$200(com.seafile.vmoo.gallery.ImageBlockManager) -> access$200
    700:700:int access$300(com.seafile.vmoo.gallery.ImageBlockManager) -> access$300
    700:700:int access$400(com.seafile.vmoo.gallery.ImageBlockManager) -> access$400
    700:700:int access$500(com.seafile.vmoo.gallery.ImageBlockManager,int) -> access$500
    700:700:int access$600(com.seafile.vmoo.gallery.ImageBlockManager) -> access$600
    700:700:com.seafile.vmoo.gallery.IImageList access$700(com.seafile.vmoo.gallery.ImageBlockManager) -> access$700
    700:700:android.os.Handler access$900(com.seafile.vmoo.gallery.ImageBlockManager) -> access$900
    780:787:void clearLoaderQueue() -> clearLoaderQueue
    794:811:void continueLoading() -> continueLoading
    890:907:void doDraw(android.graphics.Canvas,int,int,int) -> doDraw
    923:933:void drawEmptyBlock(android.graphics.Canvas,int,int,int) -> drawEmptyBlock
    838:864:com.seafile.vmoo.gallery.ImageBlockManager$ImageBlock getEmptyBlock() -> getEmptyBlock
    945:952:void initGraphics() -> initGraphics
    917:917:int numColumns(int) -> numColumns
    880:884:void recycle() -> recycle
    817:818:boolean scanOne(int) -> scanOne
    757:760:void setVisibleRows(int,int) -> setVisibleRows
    775:776:void startLoading() -> startLoading
    823:832:int tryToLoad(int) -> tryToLoad
com.seafile.vmoo.gallery.ImageBlockManager$ImageBlock -> com.seafile.vmoo.gallery.ImageBlockManager$ImageBlock:
    970:974:void <init>(com.seafile.vmoo.gallery.ImageBlockManager) -> <init>
    957:957:void access$800(com.seafile.vmoo.gallery.ImageBlockManager$ImageBlock,com.seafile.vmoo.gallery.IImage,android.graphics.Bitmap,int) -> access$800
    1147:1153:void cancelAllRequests() -> cancelAllRequests
    1137:1139:void cancelRequest(int) -> cancelRequest
    1098:1128:void doDraw(android.graphics.Canvas,int,int) -> doDraw
    1091:1093:void drawBitmap(com.seafile.vmoo.gallery.IImage,android.graphics.Bitmap,int,int) -> drawBitmap
    1053:1053:boolean hasPendingRequests() -> hasPendingRequests
    985:985:void invalidate() -> invalidate
    996:996:boolean isVisible() -> isVisible
    1059:1085:void loadImageDone(com.seafile.vmoo.gallery.IImage,android.graphics.Bitmap,int) -> loadImageDone
    1001:1043:int loadImages() -> loadImages
    990:992:void recycle() -> recycle
    978:978:void setRow(int) -> setRow
com.seafile.vmoo.gallery.ImageBlockManager$ImageBlock$1 -> com.seafile.vmoo.gallery.ImageBlockManager$ImageBlock$1:
    1031:1031:void <init>(com.seafile.vmoo.gallery.ImageBlockManager$ImageBlock,com.seafile.vmoo.gallery.IImage,int) -> <init>
    1033:1033:void run(android.graphics.Bitmap) -> run
com.seafile.vmoo.gallery.ImageBlockManager$ImageBlock$1$1 -> com.seafile.vmoo.gallery.ImageBlockManager$ImageBlock$1$1:
    1033:1033:void <init>(com.seafile.vmoo.gallery.ImageBlockManager$ImageBlock$1,android.graphics.Bitmap) -> <init>
    1035:1035:void run() -> run
com.seafile.vmoo.gallery.ImageList -> com.seafile.vmoo.gallery.ImageList:
    24:91:void <clinit>() -> <clinit>
    52:52:void <init>(android.content.ContentResolver,android.net.Uri,int,java.lang.String) -> <init>
    85:85:android.database.Cursor createCursor() -> createCursor
    112:112:long getImageId(android.database.Cursor) -> getImageId
    117:131:com.seafile.vmoo.gallery.BaseImage loadImageFromCursor(android.database.Cursor) -> loadImageFromCursor
    59:66:java.lang.String whereClause() -> whereClause
    72:78:java.lang.String[] whereClauseArgs() -> whereClauseArgs
com.seafile.vmoo.gallery.ImageListUber -> com.seafile.vmoo.gallery.ImageListUber:
    37:51:void <init>(com.seafile.vmoo.gallery.IImageList[],int) -> <init>
    277:278:void close() -> close
    65:66:int getCount() -> getCount
    84:86:com.seafile.vmoo.gallery.IImage getImageAt(int) -> getImageAt
    146:147:com.seafile.vmoo.gallery.IImage getImageForUri(android.net.Uri) -> getImageForUri
    192:195:int getImageIndex(com.seafile.vmoo.gallery.IImage) -> getImageIndex
    128:140:com.seafile.vmoo.gallery.ImageListUber$MergeSlot nextMergeSlot() -> nextMergeSlot
com.seafile.vmoo.gallery.ImageListUber$AscendingComparator -> com.seafile.vmoo.gallery.ImageListUber$AscendingComparator:
    236:236:void <init>() -> <init>
    236:236:void <init>(com.seafile.vmoo.gallery.ImageListUber$1) -> <init>
    236:236:int compare(java.lang.Object,java.lang.Object) -> compare
    240:243:int compare(com.seafile.vmoo.gallery.ImageListUber$MergeSlot,com.seafile.vmoo.gallery.ImageListUber$MergeSlot) -> compare
com.seafile.vmoo.gallery.ImageListUber$DescendingComparator -> com.seafile.vmoo.gallery.ImageListUber$DescendingComparator:
    225:225:void <init>() -> <init>
    225:225:void <init>(com.seafile.vmoo.gallery.ImageListUber$1) -> <init>
    225:225:int compare(java.lang.Object,java.lang.Object) -> compare
    229:232:int compare(com.seafile.vmoo.gallery.ImageListUber$MergeSlot,com.seafile.vmoo.gallery.ImageListUber$MergeSlot) -> compare
com.seafile.vmoo.gallery.ImageListUber$MergeSlot -> com.seafile.vmoo.gallery.ImageListUber$MergeSlot:
    263:265:void <init>(com.seafile.vmoo.gallery.IImageList,int) -> <init>
    269:271:boolean next() -> next
com.seafile.vmoo.gallery.ImageLoader -> com.seafile.vmoo.gallery.ImageLoader:
    91:93:void <init>(android.content.ContentResolver,android.os.Handler) -> <init>
    15:15:java.util.ArrayList access$000(com.seafile.vmoo.gallery.ImageLoader) -> access$000
    15:15:boolean access$100(com.seafile.vmoo.gallery.ImageLoader) -> access$100
    45:53:boolean cancel(com.seafile.vmoo.gallery.IImage) -> cancel
    68:76:int[] clearQueue() -> clearQueue
    58:59:int findItem(com.seafile.vmoo.gallery.IImage) -> findItem
    34:41:void getBitmap(com.seafile.vmoo.gallery.IImage,com.seafile.vmoo.gallery.ImageLoader$LoadedCallback,int) -> getBitmap
    130:144:void start() -> start
    148:151:void stop() -> stop
com.seafile.vmoo.gallery.ImageLoader$1 -> com.seafile.vmoo.gallery.ImageLoader$1:
    137:137:void <init>(com.seafile.vmoo.gallery.ImageLoader) -> <init>
    140:140:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.seafile.vmoo.gallery.ImageLoader$WorkItem -> com.seafile.vmoo.gallery.ImageLoader$WorkItem:
    84:87:void <init>(com.seafile.vmoo.gallery.IImage,com.seafile.vmoo.gallery.ImageLoader$LoadedCallback,int) -> <init>
com.seafile.vmoo.gallery.ImageLoader$WorkerThread -> com.seafile.vmoo.gallery.ImageLoader$WorkerThread:
    96:96:void <init>(com.seafile.vmoo.gallery.ImageLoader) -> <init>
    96:96:void <init>(com.seafile.vmoo.gallery.ImageLoader,com.seafile.vmoo.gallery.ImageLoader$1) -> <init>
    104:118:void run() -> run
com.seafile.vmoo.gallery.ImageManager -> com.seafile.vmoo.gallery.ImageManager:
    31:107:void <clinit>() -> <clinit>
    321:338:boolean checkFsWritable() -> checkFsWritable
    139:159:java.util.List getAllBucketIds() -> getAllBucketIds
    114:114:java.lang.String getBucketId(java.lang.String) -> getBucketId
    308:309:com.seafile.vmoo.gallery.ImageManager$ImageListParam getEmptyImageListParam() -> getEmptyImageListParam
    293:297:com.seafile.vmoo.gallery.ImageManager$ImageListParam getImageListParam(com.seafile.vmoo.gallery.ImageManager$DataLocation,int,int,java.lang.String) -> getImageListParam
    346:356:boolean hasStorage(boolean) -> hasStorage
    182:182:boolean isImage(com.seafile.vmoo.gallery.IImage) -> isImage
    166:166:boolean isImageMimeType(java.lang.String) -> isImageMimeType
    379:387:boolean isMediaScannerScanning(android.content.ContentResolver) -> isMediaScannerScanning
    191:191:boolean isVideo(com.seafile.vmoo.gallery.IImage) -> isVideo
    314:314:com.seafile.vmoo.gallery.IImageList makeEmptyImageList() -> makeEmptyImageList
    197:205:com.seafile.vmoo.gallery.IImageList makeImageList(android.content.ContentResolver,com.seafile.vmoo.gallery.ImageManager$ImageListParam) -> makeImageList
    369:369:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
com.seafile.vmoo.gallery.ImageManager$DataLocation -> com.seafile.vmoo.gallery.ImageManager$DataLocation:
    91:91:void <clinit>() -> <clinit>
    91:91:void <init>(java.lang.String,int) -> <init>
    91:91:com.seafile.vmoo.gallery.ImageManager$DataLocation valueOf(java.lang.String) -> valueOf
    91:91:com.seafile.vmoo.gallery.ImageManager$DataLocation[] values() -> values
com.seafile.vmoo.gallery.ImageManager$EmptyImageList -> com.seafile.vmoo.gallery.ImageManager$EmptyImageList:
    254:254:void <init>() -> <init>
    254:254:void <init>(com.seafile.vmoo.gallery.ImageManager$1) -> <init>
    287:287:int getImageIndex(com.seafile.vmoo.gallery.IImage) -> getImageIndex
com.seafile.vmoo.gallery.ImageManager$ImageListParam -> com.seafile.vmoo.gallery.ImageManager$ImageListParam:
    74:74:void <clinit>() -> <clinit>
    36:36:void <init>(android.os.Parcel,com.seafile.vmoo.gallery.ImageManager$1) -> <init>
=======
    100:109:com.seafile.seadroid2.gallery.IImage getImageAt(int) -> getImageAt
    168:174:com.seafile.seadroid2.gallery.IImage getImageForUri(android.net.Uri) -> getImageForUri
    197:197:int getImageIndex(com.seafile.seadroid2.gallery.IImage) -> getImageIndex
    150:152:java.lang.String getPathWithoutId(android.net.Uri) -> getPathWithoutId
    144:144:void invalidateCache() -> invalidateCache
    138:140:void invalidateCursor() -> invalidateCursor
    160:164:boolean isChildImageUri(android.net.Uri) -> isChildImageUri
    85:85:boolean isEmpty() -> isEmpty
    116:119:boolean removeImage(com.seafile.seadroid2.gallery.IImage) -> removeImage
    128:128:boolean removeImageAt(int) -> removeImageAt
    206:221:java.lang.String sortOrder() -> sortOrder
com.seafile.seadroid2.gallery.BitmapManager -> com.seafile.seadroid2.gallery.BitmapManager:
    49:44:void <init>() -> <init>
    94:95:void allowThreadDecoding(java.lang.Thread) -> allowThreadDecoding
    83:90:boolean canThreadDecoding(java.lang.Thread) -> canThreadDecoding
    98:120:void cancelThreadDecoding(java.lang.Thread,android.content.ContentResolver) -> cancelThreadDecoding
    163:176:android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.BitmapFactory$Options) -> decodeFileDescriptor
    56:61:com.seafile.seadroid2.gallery.BitmapManager$ThreadStatus getOrCreateThreadStatus(java.lang.Thread) -> getOrCreateThreadStatus
    124:147:android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options,boolean) -> getThumbnail
    152:155:com.seafile.seadroid2.gallery.BitmapManager instance() -> instance
    74:76:void removeDecodingOptions(java.lang.Thread) -> removeDecodingOptions
    70:71:void setDecodingOptions(java.lang.Thread,android.graphics.BitmapFactory$Options) -> setDecodingOptions
com.seafile.seadroid2.gallery.BitmapManager$State -> com.seafile.seadroid2.gallery.BitmapManager$State:
    24:24:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    24:24:com.seafile.seadroid2.gallery.BitmapManager$State valueOf(java.lang.String) -> valueOf
    24:24:com.seafile.seadroid2.gallery.BitmapManager$State[] values() -> values
com.seafile.seadroid2.gallery.BitmapManager$ThreadStatus -> com.seafile.seadroid2.gallery.BitmapManager$ThreadStatus:
    25:26:void <init>() -> <init>
    25:25:void <init>(com.seafile.seadroid2.gallery.BitmapManager$1) -> <init>
    32:39:java.lang.String toString() -> toString
com.seafile.seadroid2.gallery.GridViewSpecial -> com.seafile.seadroid2.gallery.GridViewSpecial:
    126:127:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    30:30:int access$000(int,android.util.DisplayMetrics) -> access$000
    30:30:boolean access$200(com.seafile.seadroid2.gallery.GridViewSpecial) -> access$200
    30:30:android.widget.Scroller access$300(com.seafile.seadroid2.gallery.GridViewSpecial) -> access$300
    30:30:android.widget.Scroller access$302(com.seafile.seadroid2.gallery.GridViewSpecial,android.widget.Scroller) -> access$302
    30:30:int access$400(com.seafile.seadroid2.gallery.GridViewSpecial) -> access$400
    30:30:int access$500(com.seafile.seadroid2.gallery.GridViewSpecial) -> access$500
    30:30:com.seafile.seadroid2.gallery.GridViewSpecial$Listener access$600(com.seafile.seadroid2.gallery.GridViewSpecial) -> access$600
    30:30:int access$700(com.seafile.seadroid2.gallery.GridViewSpecial) -> access$700
    30:30:int access$702(com.seafile.seadroid2.gallery.GridViewSpecial,int) -> access$702
    561:561:boolean canHandleEvent() -> canHandleEvent
    481:490:void computeScroll() -> computeScroll
    513:519:int computeSelectedIndex(float,float) -> computeSelectedIndex
    240:240:int computeVerticalScrollRange() -> computeVerticalScrollRange
    88:88:int dpToPx(int,android.util.DisplayMetrics) -> dpToPx
    423:435:void ensureVisible(int) -> ensureVisible
    252:276:void generateOutlineBitmap() -> generateOutlineBitmap
    372:372:int getCurrentSelection() -> getCurrentSelection
    496:503:android.graphics.Rect getRectForPosition(int) -> getRectForPosition
    131:137:void init(android.content.Context) -> init
    77:80:void initCellSize() -> initCellSize
    377:377:void invalidateImage(int) -> invalidateImage
    281:289:void moveDataWindow() -> moveDataWindow
    471:476:void onDraw(android.graphics.Canvas) -> onDraw
    573:625:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    631:646:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    176:235:void onLayout(boolean,int,int,int,int) -> onLayout
    524:537:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    651:679:void paintDecoration(android.graphics.Canvas) -> paintDecoration
    685:697:void paintSelection(android.graphics.Canvas) -> paintSelection
    544:544:void scrollBy(int,int) -> scrollBy
    548:548:void scrollTo(float) -> scrollTo
    553:557:void scrollTo(int,int) -> scrollTo
    407:408:void scrollToImage(int) -> scrollToImage
    412:418:void scrollToVisible(int) -> scrollToVisible
    157:158:void setDrawAdapter(com.seafile.seadroid2.gallery.GridViewSpecial$DrawAdapter) -> setDrawAdapter
    162:164:void setImageList(com.seafile.seadroid2.gallery.IImageList) -> setImageList
    152:153:void setListener(com.seafile.seadroid2.gallery.GridViewSpecial$Listener) -> setListener
    147:148:void setLoader(com.seafile.seadroid2.gallery.ImageLoader) -> setLoader
    394:403:void setSelectedIndex(int) -> setSelectedIndex
    168:170:void setSizeChoice(int) -> setSizeChoice
    441:445:void start() -> start
    459:466:void stop() -> stop
com.seafile.seadroid2.gallery.GridViewSpecial$1 -> com.seafile.seadroid2.gallery.GridViewSpecial$1:
    140:140:void <init>(com.seafile.seadroid2.gallery.GridViewSpecial) -> <init>
    142:142:void run() -> run
com.seafile.seadroid2.gallery.GridViewSpecial$2 -> com.seafile.seadroid2.gallery.GridViewSpecial$2:
    564:564:void <init>(com.seafile.seadroid2.gallery.GridViewSpecial) -> <init>
    566:567:void run() -> run
com.seafile.seadroid2.gallery.GridViewSpecial$LayoutSpec -> com.seafile.seadroid2.gallery.GridViewSpecial$LayoutSpec:
    63:67:void <init>(int,int,int,int,android.util.DisplayMetrics) -> <init>
com.seafile.seadroid2.gallery.GridViewSpecial$MyGestureDetector -> com.seafile.seadroid2.gallery.GridViewSpecial$MyGestureDetector:
    295:295:void <init>(com.seafile.seadroid2.gallery.GridViewSpecial) -> <init>
    295:295:void <init>(com.seafile.seadroid2.gallery.GridViewSpecial,com.seafile.seadroid2.gallery.GridViewSpecial$1) -> <init>
    300:309:boolean onDown(android.view.MotionEvent) -> onDown
    317:328:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    335:336:void onLongPress(android.view.MotionEvent) -> onLongPress
    343:346:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    352:364:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.seafile.seadroid2.gallery.Image -> com.seafile.seadroid2.gallery.Image:
    128:128:void <clinit>() -> <clinit>
    30:32:void <init>(com.seafile.seadroid2.gallery.BaseImageList,android.content.ContentResolver,long,int,android.net.Uri,java.lang.String,java.lang.String,long,java.lang.String,int) -> <init>
    37:37:int getDegreesRotated() -> getDegreesRotated
    52:53:boolean isReadonly() -> isReadonly
    74:76:void loadExifData() -> loadExifData
    66:69:void replaceExifTag(java.lang.String,java.lang.String) -> replaceExifTag
    121:123:boolean rotateImageBy(int) -> rotateImageBy
    81:82:void saveExifData() -> saveExifData
    41:45:void setDegreesRotated(int) -> setDegreesRotated
    88:111:void setExifRotation(int) -> setExifRotation
    134:141:android.graphics.Bitmap thumbBitmap(boolean) -> thumbBitmap
com.seafile.seadroid2.gallery.ImageBlockManager -> com.seafile.seadroid2.gallery.ImageBlockManager:
    737:752:void <init>(android.os.Handler,java.lang.Runnable,com.seafile.seadroid2.gallery.IImageList,com.seafile.seadroid2.gallery.ImageLoader,com.seafile.seadroid2.gallery.GridViewSpecial$DrawAdapter,com.seafile.seadroid2.gallery.GridViewSpecial$LayoutSpec,int,int,android.graphics.Bitmap) -> <init>
    701:701:int access$100(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$100
    701:701:com.seafile.seadroid2.gallery.ImageLoader access$1000(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$1000
    701:701:com.seafile.seadroid2.gallery.GridViewSpecial$LayoutSpec access$1100(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$1100
    701:701:java.lang.Runnable access$1200(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$1200
    701:701:void access$1300(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$1300
    701:701:com.seafile.seadroid2.gallery.GridViewSpecial$DrawAdapter access$1400(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$1400
    701:701:android.graphics.Bitmap access$1500(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$1500
    701:701:android.graphics.Bitmap access$1600(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$1600
    701:701:int access$200(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$200
    701:701:int access$300(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$300
    701:701:int access$400(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$400
    701:701:int access$500(com.seafile.seadroid2.gallery.ImageBlockManager,int) -> access$500
    701:701:int access$600(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$600
    701:701:com.seafile.seadroid2.gallery.IImageList access$700(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$700
    701:701:android.os.Handler access$900(com.seafile.seadroid2.gallery.ImageBlockManager) -> access$900
    781:788:void clearLoaderQueue() -> clearLoaderQueue
    795:812:void continueLoading() -> continueLoading
    891:908:void doDraw(android.graphics.Canvas,int,int,int) -> doDraw
    924:934:void drawEmptyBlock(android.graphics.Canvas,int,int,int) -> drawEmptyBlock
    839:865:com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock getEmptyBlock() -> getEmptyBlock
    946:953:void initGraphics() -> initGraphics
    869:876:void invalidateImage(int) -> invalidateImage
    918:918:int numColumns(int) -> numColumns
    881:885:void recycle() -> recycle
    818:819:boolean scanOne(int) -> scanOne
    758:761:void setVisibleRows(int,int) -> setVisibleRows
    776:777:void startLoading() -> startLoading
    824:833:int tryToLoad(int) -> tryToLoad
com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock -> com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock:
    971:975:void <init>(com.seafile.seadroid2.gallery.ImageBlockManager) -> <init>
    958:958:int access$000(com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock) -> access$000
    958:958:int access$002(com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock,int) -> access$002
    958:958:void access$800(com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock,com.seafile.seadroid2.gallery.IImage,android.graphics.Bitmap,int) -> access$800
    1148:1154:void cancelAllRequests() -> cancelAllRequests
    1138:1140:void cancelRequest(int) -> cancelRequest
    1099:1129:void doDraw(android.graphics.Canvas,int,int) -> doDraw
    1092:1094:void drawBitmap(com.seafile.seadroid2.gallery.IImage,android.graphics.Bitmap,int,int) -> drawBitmap
    1054:1054:boolean hasPendingRequests() -> hasPendingRequests
    986:986:void invalidate() -> invalidate
    997:997:boolean isVisible() -> isVisible
    1060:1086:void loadImageDone(com.seafile.seadroid2.gallery.IImage,android.graphics.Bitmap,int) -> loadImageDone
    1002:1044:int loadImages() -> loadImages
    991:993:void recycle() -> recycle
    979:979:void setRow(int) -> setRow
com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock$1 -> com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock$1:
    1032:1032:void <init>(com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock,com.seafile.seadroid2.gallery.IImage,int) -> <init>
    1034:1034:void run(android.graphics.Bitmap) -> run
com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock$1$1 -> com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock$1$1:
    1034:1034:void <init>(com.seafile.seadroid2.gallery.ImageBlockManager$ImageBlock$1,android.graphics.Bitmap) -> <init>
    1036:1036:void run() -> run
com.seafile.seadroid2.gallery.ImageList -> com.seafile.seadroid2.gallery.ImageList:
    24:91:void <clinit>() -> <clinit>
    52:52:void <init>(android.content.ContentResolver,android.net.Uri,int,java.lang.String) -> <init>
    85:85:android.database.Cursor createCursor() -> createCursor
    28:43:java.util.HashMap getBucketIds() -> getBucketIds
    112:112:long getImageId(android.database.Cursor) -> getImageId
    117:131:com.seafile.seadroid2.gallery.BaseImage loadImageFromCursor(android.database.Cursor) -> loadImageFromCursor
    59:66:java.lang.String whereClause() -> whereClause
    72:78:java.lang.String[] whereClauseArgs() -> whereClauseArgs
com.seafile.seadroid2.gallery.ImageListUber -> com.seafile.seadroid2.gallery.ImageListUber:
    37:51:void <init>(com.seafile.seadroid2.gallery.IImageList[],int) -> <init>
    277:278:void close() -> close
    56:58:java.util.HashMap getBucketIds() -> getBucketIds
    65:66:int getCount() -> getCount
    84:86:com.seafile.seadroid2.gallery.IImage getImageAt(int) -> getImageAt
    146:147:com.seafile.seadroid2.gallery.IImage getImageForUri(android.net.Uri) -> getImageForUri
    192:195:int getImageIndex(com.seafile.seadroid2.gallery.IImage) -> getImageIndex
    72:73:boolean isEmpty() -> isEmpty
    161:165:void modifySkipCountForDeletedImage(int) -> modifySkipCountForDeletedImage
    128:140:com.seafile.seadroid2.gallery.ImageListUber$MergeSlot nextMergeSlot() -> nextMergeSlot
    173:175:boolean removeImage(com.seafile.seadroid2.gallery.IImage,int) -> removeImage
    182:182:boolean removeImage(com.seafile.seadroid2.gallery.IImage) -> removeImage
    186:188:boolean removeImageAt(int) -> removeImageAt
com.seafile.seadroid2.gallery.ImageListUber$AscendingComparator -> com.seafile.seadroid2.gallery.ImageListUber$AscendingComparator:
    236:236:void <init>() -> <init>
    236:236:void <init>(com.seafile.seadroid2.gallery.ImageListUber$1) -> <init>
    236:236:int compare(java.lang.Object,java.lang.Object) -> compare
    240:243:int compare(com.seafile.seadroid2.gallery.ImageListUber$MergeSlot,com.seafile.seadroid2.gallery.ImageListUber$MergeSlot) -> compare
com.seafile.seadroid2.gallery.ImageListUber$DescendingComparator -> com.seafile.seadroid2.gallery.ImageListUber$DescendingComparator:
    225:225:void <init>() -> <init>
    225:225:void <init>(com.seafile.seadroid2.gallery.ImageListUber$1) -> <init>
    225:225:int compare(java.lang.Object,java.lang.Object) -> compare
    229:232:int compare(com.seafile.seadroid2.gallery.ImageListUber$MergeSlot,com.seafile.seadroid2.gallery.ImageListUber$MergeSlot) -> compare
com.seafile.seadroid2.gallery.ImageListUber$MergeSlot -> com.seafile.seadroid2.gallery.ImageListUber$MergeSlot:
    263:265:void <init>(com.seafile.seadroid2.gallery.IImageList,int) -> <init>
    269:271:boolean next() -> next
com.seafile.seadroid2.gallery.ImageLoader -> com.seafile.seadroid2.gallery.ImageLoader:
    91:93:void <init>(android.content.ContentResolver,android.os.Handler) -> <init>
    15:15:java.util.ArrayList access$000(com.seafile.seadroid2.gallery.ImageLoader) -> access$000
    15:15:boolean access$100(com.seafile.seadroid2.gallery.ImageLoader) -> access$100
    45:53:boolean cancel(com.seafile.seadroid2.gallery.IImage) -> cancel
    68:76:int[] clearQueue() -> clearQueue
    58:59:int findItem(com.seafile.seadroid2.gallery.IImage) -> findItem
    34:41:void getBitmap(com.seafile.seadroid2.gallery.IImage,com.seafile.seadroid2.gallery.ImageLoader$LoadedCallback,int) -> getBitmap
    130:144:void start() -> start
    148:151:void stop() -> stop
com.seafile.seadroid2.gallery.ImageLoader$1 -> com.seafile.seadroid2.gallery.ImageLoader$1:
    137:137:void <init>(com.seafile.seadroid2.gallery.ImageLoader) -> <init>
    140:140:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.seafile.seadroid2.gallery.ImageLoader$WorkItem -> com.seafile.seadroid2.gallery.ImageLoader$WorkItem:
    84:87:void <init>(com.seafile.seadroid2.gallery.IImage,com.seafile.seadroid2.gallery.ImageLoader$LoadedCallback,int) -> <init>
com.seafile.seadroid2.gallery.ImageLoader$WorkerThread -> com.seafile.seadroid2.gallery.ImageLoader$WorkerThread:
    96:96:void <init>(com.seafile.seadroid2.gallery.ImageLoader) -> <init>
    96:96:void <init>(com.seafile.seadroid2.gallery.ImageLoader,com.seafile.seadroid2.gallery.ImageLoader$1) -> <init>
    104:118:void run() -> run
com.seafile.seadroid2.gallery.ImageManager -> com.seafile.seadroid2.gallery.ImageManager:
    31:107:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    321:338:boolean checkFsWritable() -> checkFsWritable
    139:159:java.util.List getAllBucketIds() -> getAllBucketIds
    120:133:java.util.List getAutoScannedPathList() -> getAutoScannedPathList
    114:114:java.lang.String getBucketId(java.lang.String) -> getBucketId
    308:309:com.seafile.seadroid2.gallery.ImageManager$ImageListParam getEmptyImageListParam() -> getEmptyImageListParam
    293:297:com.seafile.seadroid2.gallery.ImageManager$ImageListParam getImageListParam(com.seafile.seadroid2.gallery.ImageManager$DataLocation,int,int,java.lang.String) -> getImageListParam
    302:303:com.seafile.seadroid2.gallery.ImageManager$ImageListParam getSingleImageListParam(android.net.Uri) -> getSingleImageListParam
    346:356:boolean hasStorage(boolean) -> hasStorage
    182:182:boolean isImage(com.seafile.seadroid2.gallery.IImage) -> isImage
    166:166:boolean isImageMimeType(java.lang.String) -> isImageMimeType
    379:387:boolean isMediaScannerScanning(android.content.ContentResolver) -> isMediaScannerScanning
    191:191:boolean isVideo(com.seafile.seadroid2.gallery.IImage) -> isVideo
    314:314:com.seafile.seadroid2.gallery.IImageList makeEmptyImageList() -> makeEmptyImageList
    197:205:com.seafile.seadroid2.gallery.IImageList makeImageList(android.content.ContentResolver,com.seafile.seadroid2.gallery.ImageManager$ImageListParam) -> makeImageList
    369:369:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
com.seafile.seadroid2.gallery.ImageManager$DataLocation -> com.seafile.seadroid2.gallery.ImageManager$DataLocation:
    91:91:void <clinit>() -> <clinit>
    91:91:void <init>(java.lang.String,int) -> <init>
    91:91:com.seafile.seadroid2.gallery.ImageManager$DataLocation valueOf(java.lang.String) -> valueOf
    91:91:com.seafile.seadroid2.gallery.ImageManager$DataLocation[] values() -> values
com.seafile.seadroid2.gallery.ImageManager$EmptyImageList -> com.seafile.seadroid2.gallery.ImageManager$EmptyImageList:
    254:254:void <init>() -> <init>
    254:254:void <init>(com.seafile.seadroid2.gallery.ImageManager$1) -> <init>
    259:259:java.util.HashMap getBucketIds() -> getBucketIds
    287:287:int getImageIndex(com.seafile.seadroid2.gallery.IImage) -> getImageIndex
com.seafile.seadroid2.gallery.ImageManager$ImageListParam -> com.seafile.seadroid2.gallery.ImageManager$ImageListParam:
    74:74:void <clinit>() -> <clinit>
    36:36:void <init>(android.os.Parcel,com.seafile.seadroid2.gallery.ImageManager$1) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    48:48:void <init>() -> <init>
    59:65:void <init>(android.os.Parcel) -> <init>
    69:69:java.lang.String toString() -> toString
    51:56:void writeToParcel(android.os.Parcel,int) -> writeToParcel
<<<<<<< HEAD
com.seafile.vmoo.gallery.ImageManager$ImageListParam$1 -> com.seafile.vmoo.gallery.ImageManager$ImageListParam$1:
    75:75:void <init>() -> <init>
    75:75:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    77:77:com.seafile.vmoo.gallery.ImageManager$ImageListParam createFromParcel(android.os.Parcel) -> createFromParcel
    75:75:java.lang.Object[] newArray(int) -> newArray
    81:81:com.seafile.vmoo.gallery.ImageManager$ImageListParam[] newArray(int) -> newArray
com.seafile.vmoo.gallery.LruCache -> com.seafile.vmoo.gallery.LruCache:
=======
com.seafile.seadroid2.gallery.ImageManager$ImageListParam$1 -> com.seafile.seadroid2.gallery.ImageManager$ImageListParam$1:
    75:75:void <init>() -> <init>
    75:75:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    77:77:com.seafile.seadroid2.gallery.ImageManager$ImageListParam createFromParcel(android.os.Parcel) -> createFromParcel
    75:75:java.lang.Object[] newArray(int) -> newArray
    81:81:com.seafile.seadroid2.gallery.ImageManager$ImageListParam[] newArray(int) -> newArray
com.seafile.seadroid2.gallery.LruCache -> com.seafile.seadroid2.gallery.LruCache:
>>>>>>> rename package name,fix action event info list same time crash
    19:20:void <init>(int) -> <init>
    39:42:void cleanUpWeakMap() -> cleanUpWeakMap
    63:66:void clear() -> clear
    55:59:java.lang.Object get(java.lang.Object) -> get
    47:51:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
<<<<<<< HEAD
com.seafile.vmoo.gallery.LruCache$1 -> com.seafile.vmoo.gallery.LruCache$1:
    20:20:void <init>(com.seafile.vmoo.gallery.LruCache,int,float,boolean,int) -> <init>
    23:23:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.seafile.vmoo.gallery.LruCache$Entry -> com.seafile.vmoo.gallery.LruCache$Entry:
    32:33:void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
com.seafile.vmoo.gallery.MonitoredActivity -> com.seafile.vmoo.gallery.MonitoredActivity:
    9:12:void <init>() -> <init>
=======
com.seafile.seadroid2.gallery.LruCache$1 -> com.seafile.seadroid2.gallery.LruCache$1:
    20:20:void <init>(com.seafile.seadroid2.gallery.LruCache,int,float,boolean,int) -> <init>
    23:23:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.seafile.seadroid2.gallery.LruCache$Entry -> com.seafile.seadroid2.gallery.LruCache$Entry:
    32:33:void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
com.seafile.seadroid2.gallery.MonitoredActivity -> com.seafile.seadroid2.gallery.MonitoredActivity:
    9:12:void <init>() -> <init>
    36:37:void addLifeCycleListener(com.seafile.seadroid2.gallery.MonitoredActivity$LifeCycleListener) -> addLifeCycleListener
>>>>>>> rename package name,fix action event info list same time crash
    46:48:void onCreate(android.os.Bundle) -> onCreate
    54:56:void onDestroy() -> onDestroy
    62:64:void onStart() -> onStart
    70:72:void onStop() -> onStop
<<<<<<< HEAD
com.seafile.vmoo.gallery.MultipleImageSelectionActivity -> com.seafile.vmoo.gallery.MultipleImageSelectionActivity:
    42:752:void <init>() -> <init>
    42:42:void access$000(com.seafile.vmoo.gallery.MultipleImageSelectionActivity) -> access$000
    42:42:void access$100(com.seafile.vmoo.gallery.MultipleImageSelectionActivity,boolean,boolean) -> access$100
    569:571:com.seafile.vmoo.gallery.ImageManager$ImageListParam allImages(boolean) -> allImages
    825:835:void drawDecoration(android.graphics.Canvas,com.seafile.vmoo.gallery.IImage,int,int,int,int) -> drawDecoration
    761:818:void drawImage(android.graphics.Canvas,com.seafile.vmoo.gallery.IImage,android.graphics.Bitmap,int,int,int,int) -> drawImage
    856:868:android.graphics.Bitmap getErrorBitmap(com.seafile.vmoo.gallery.IImage) -> getErrorBitmap
=======
    41:41:void removeLifeCycleListener(com.seafile.seadroid2.gallery.MonitoredActivity$LifeCycleListener) -> removeLifeCycleListener
com.seafile.seadroid2.gallery.MonitoredActivity$LifeCycleAdapter -> com.seafile.seadroid2.gallery.MonitoredActivity$LifeCycleAdapter:
    21:21:void <init>() -> <init>
com.seafile.seadroid2.gallery.MultipleImageSelectionActivity -> com.seafile.seadroid2.gallery.MultipleImageSelectionActivity:
    42:752:void <init>() -> <init>
    42:42:void access$000(com.seafile.seadroid2.gallery.MultipleImageSelectionActivity) -> access$000
    42:42:void access$100(com.seafile.seadroid2.gallery.MultipleImageSelectionActivity,boolean,boolean) -> access$100
    569:571:com.seafile.seadroid2.gallery.ImageManager$ImageListParam allImages(boolean) -> allImages
    255:255:boolean canHandleEvent() -> canHandleEvent
    825:835:void drawDecoration(android.graphics.Canvas,com.seafile.seadroid2.gallery.IImage,int,int,int,int) -> drawDecoration
    761:818:void drawImage(android.graphics.Canvas,com.seafile.seadroid2.gallery.IImage,android.graphics.Bitmap,int,int,int,int) -> drawImage
    856:868:android.graphics.Bitmap getErrorBitmap(com.seafile.seadroid2.gallery.IImage) -> getErrorBitmap
>>>>>>> rename package name,fix action event info list same time crash
    118:126:void initializeButtons() -> initializeButtons
    840:846:void initializeMultiSelectDrawables() -> initializeMultiSelectDrawables
    249:250:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    82:114:void onCreate(android.os.Bundle) -> onCreate
    647:648:void onImageTapped(int) -> onImageTapped
    711:733:void onLayoutComplete(boolean) -> onLayoutComplete
    361:376:void onPause() -> onPause
    428:431:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    436:480:void onResume() -> onResume
    421:423:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    738:738:void onScroll(float) -> onScroll
    380:415:void rebake(boolean,boolean) -> rebake
    134:142:void setResultAndFinish() -> setResultAndFinish
    559:562:void setupTitle() -> setupTitle
<<<<<<< HEAD
    594:601:void toggleMultiSelected(com.seafile.vmoo.gallery.IImage) -> toggleMultiSelected
    583:590:void updateSelectionStatus() -> updateSelectionStatus
com.seafile.vmoo.gallery.MultipleImageSelectionActivity$1 -> com.seafile.vmoo.gallery.MultipleImageSelectionActivity$1:
    119:119:void <init>(com.seafile.vmoo.gallery.MultipleImageSelectionActivity) -> <init>
    121:121:void onClick(android.view.View) -> onClick
com.seafile.vmoo.gallery.MultipleImageSelectionActivity$2 -> com.seafile.vmoo.gallery.MultipleImageSelectionActivity$2:
    126:126:void <init>(com.seafile.vmoo.gallery.MultipleImageSelectionActivity) -> <init>
    128:128:void onClick(android.view.View) -> onClick
com.seafile.vmoo.gallery.MultipleImageSelectionActivity$3 -> com.seafile.vmoo.gallery.MultipleImageSelectionActivity$3:
    458:458:void <init>(com.seafile.vmoo.gallery.MultipleImageSelectionActivity) -> <init>
    461:475:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.seafile.vmoo.gallery.NoSearchActivity -> com.seafile.vmoo.gallery.NoSearchActivity:
    5:5:void <init>() -> <init>
com.seafile.vmoo.gallery.SingleImageList -> com.seafile.vmoo.gallery.SingleImageList:
    20:22:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    58:59:void close() -> close
    42:42:com.seafile.vmoo.gallery.IImage getImageAt(int) -> getImageAt
    54:54:com.seafile.vmoo.gallery.IImage getImageForUri(android.net.Uri) -> getImageForUri
    38:38:int getImageIndex(com.seafile.vmoo.gallery.IImage) -> getImageIndex
com.seafile.vmoo.gallery.UriImage -> com.seafile.vmoo.gallery.UriImage:
    20:23:void <init>(com.seafile.vmoo.gallery.IImageList,android.content.ContentResolver,android.net.Uri) -> <init>
    67:67:android.graphics.Bitmap fullSizeBitmap(int,int,boolean) -> fullSizeBitmap
    74:79:android.graphics.Bitmap fullSizeBitmap(int,int,boolean,boolean) -> fullSizeBitmap
    89:89:java.io.InputStream fullSizeImageData() -> fullSizeImageData
    137:137:com.seafile.vmoo.gallery.IImageList getContainer() -> getContainer
    31:31:java.lang.String getDataPath() -> getDataPath
    36:39:java.io.InputStream getInputStream() -> getInputStream
    120:121:java.lang.String getMimeType() -> getMimeType
    48:53:android.os.ParcelFileDescriptor getPFD() -> getPFD
    93:93:android.graphics.Bitmap miniThumbBitmap() -> miniThumbBitmap
    106:115:android.graphics.BitmapFactory$Options snifBitmapOptions() -> snifBitmapOptions
    101:101:android.graphics.Bitmap thumbBitmap(boolean) -> thumbBitmap
com.seafile.vmoo.gallery.Util -> com.seafile.vmoo.gallery.Util:
=======
    594:601:void toggleMultiSelected(com.seafile.seadroid2.gallery.IImage) -> toggleMultiSelected
    583:590:void updateSelectionStatus() -> updateSelectionStatus
com.seafile.seadroid2.gallery.MultipleImageSelectionActivity$1 -> com.seafile.seadroid2.gallery.MultipleImageSelectionActivity$1:
    119:119:void <init>(com.seafile.seadroid2.gallery.MultipleImageSelectionActivity) -> <init>
    121:121:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.gallery.MultipleImageSelectionActivity$2 -> com.seafile.seadroid2.gallery.MultipleImageSelectionActivity$2:
    126:126:void <init>(com.seafile.seadroid2.gallery.MultipleImageSelectionActivity) -> <init>
    128:128:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.gallery.MultipleImageSelectionActivity$3 -> com.seafile.seadroid2.gallery.MultipleImageSelectionActivity$3:
    458:458:void <init>(com.seafile.seadroid2.gallery.MultipleImageSelectionActivity) -> <init>
    461:475:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.seafile.seadroid2.gallery.NoSearchActivity -> com.seafile.seadroid2.gallery.NoSearchActivity:
    5:5:void <init>() -> <init>
com.seafile.seadroid2.gallery.SingleImageList -> com.seafile.seadroid2.gallery.SingleImageList:
    20:22:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    58:59:void close() -> close
    26:26:java.util.HashMap getBucketIds() -> getBucketIds
    42:42:com.seafile.seadroid2.gallery.IImage getImageAt(int) -> getImageAt
    54:54:com.seafile.seadroid2.gallery.IImage getImageForUri(android.net.Uri) -> getImageForUri
    38:38:int getImageIndex(com.seafile.seadroid2.gallery.IImage) -> getImageIndex
com.seafile.seadroid2.gallery.UriImage -> com.seafile.seadroid2.gallery.UriImage:
    20:23:void <init>(com.seafile.seadroid2.gallery.IImageList,android.content.ContentResolver,android.net.Uri) -> <init>
    61:61:android.graphics.Bitmap fullSizeBitmap(int,int) -> fullSizeBitmap
    67:67:android.graphics.Bitmap fullSizeBitmap(int,int,boolean) -> fullSizeBitmap
    74:79:android.graphics.Bitmap fullSizeBitmap(int,int,boolean,boolean) -> fullSizeBitmap
    89:89:java.io.InputStream fullSizeImageData() -> fullSizeImageData
    85:85:android.net.Uri fullSizeImageUri() -> fullSizeImageUri
    137:137:com.seafile.seadroid2.gallery.IImageList getContainer() -> getContainer
    31:31:java.lang.String getDataPath() -> getDataPath
    127:128:int getHeight() -> getHeight
    36:39:java.io.InputStream getInputStream() -> getInputStream
    120:121:java.lang.String getMimeType() -> getMimeType
    48:53:android.os.ParcelFileDescriptor getPFD() -> getPFD
    97:97:java.lang.String getTitle() -> getTitle
    132:133:int getWidth() -> getWidth
    93:93:android.graphics.Bitmap miniThumbBitmap() -> miniThumbBitmap
    106:115:android.graphics.BitmapFactory$Options snifBitmapOptions() -> snifBitmapOptions
    101:101:android.graphics.Bitmap thumbBitmap(boolean) -> thumbBitmap
com.seafile.seadroid2.gallery.Util -> com.seafile.seadroid2.gallery.Util:
    34:34:void <init>() -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    329:329:void assertTrue(boolean) -> assertTrue
    230:230:void closeSilently(java.io.Closeable) -> closeSilently
    239:239:void closeSilently(android.os.ParcelFileDescriptor) -> closeSilently
    97:103:int computeInitialSampleSize(android.graphics.BitmapFactory$Options,int,int) -> computeInitialSampleSize
    79:89:int computeSampleSize(android.graphics.BitmapFactory$Options,int,int) -> computeSampleSize
    409:409:android.graphics.BitmapFactory$Options createNativeAllocOptions() -> createNativeAllocOptions
<<<<<<< HEAD
    335:335:boolean equals(java.lang.String,java.lang.String) -> equals
    413:420:long getImageFileSize(com.seafile.vmoo.gallery.IImage) -> getImageFileSize
    219:220:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
=======
    400:403:android.content.Intent createSetAsIntent(com.seafile.seadroid2.gallery.IImage) -> createSetAsIntent
    335:335:boolean equals(java.lang.String,java.lang.String) -> equals
    413:420:long getImageFileSize(com.seafile.seadroid2.gallery.IImage) -> getImageFileSize
    318:324:android.view.View$OnClickListener getNullOnClickListener() -> getNullOnClickListener
    219:220:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    254:264:android.graphics.Bitmap makeBitmap(int,int,android.net.Uri,android.content.ContentResolver,boolean) -> makeBitmap
>>>>>>> rename package name,fix action event info list same time crash
    272:274:android.graphics.Bitmap makeBitmap(int,int,android.os.ParcelFileDescriptor,boolean) -> makeBitmap
    282:304:android.graphics.Bitmap makeBitmap(int,int,android.net.Uri,android.content.ContentResolver,android.os.ParcelFileDescriptor,android.graphics.BitmapFactory$Options) -> makeBitmap
    311:311:android.os.ParcelFileDescriptor makeInputStream(android.net.Uri,android.content.ContentResolver) -> makeInputStream
    41:48:android.graphics.Bitmap rotate(android.graphics.Bitmap,int) -> rotate
<<<<<<< HEAD
com.seafile.vmoo.gallery.VideoList -> com.seafile.vmoo.gallery.VideoList:
    25:25:void <clinit>() -> <clinit>
    68:68:void <init>(android.content.ContentResolver,android.net.Uri,int,java.lang.String) -> <init>
    110:110:android.database.Cursor createCursor() -> createCursor
    44:44:long getImageId(android.database.Cursor) -> getImageId
    49:62:com.seafile.vmoo.gallery.BaseImage loadImageFromCursor(android.database.Cursor) -> loadImageFromCursor
    93:99:java.lang.String whereClause() -> whereClause
    105:105:java.lang.String[] whereClauseArgs() -> whereClauseArgs
com.seafile.vmoo.gallery.VideoObject -> com.seafile.vmoo.gallery.VideoObject:
    30:30:void <init>(com.seafile.vmoo.gallery.BaseImageList,android.content.ContentResolver,long,int,android.net.Uri,java.lang.String,java.lang.String,long,java.lang.String) -> <init>
    36:37:boolean equals(java.lang.Object) -> equals
    56:56:java.io.InputStream fullSizeImageData() -> fullSizeImageData
    43:43:int hashCode() -> hashCode
    93:97:android.graphics.Bitmap miniThumbBitmap() -> miniThumbBitmap
    104:104:java.lang.String toString() -> toString
com.seafile.vmoo.gesturelock.AbstractAppLock -> com.seafile.vmoo.gesturelock.AbstractAppLock:
    13:13:void <init>() -> <init>
com.seafile.vmoo.gesturelock.AppLockManager -> com.seafile.vmoo.gesturelock.AppLockManager:
    13:13:void <init>() -> <init>
    26:28:void enableDefaultAppLockIfAvailable(android.app.Application) -> enableDefaultAppLockIfAvailable
    19:22:com.seafile.vmoo.gesturelock.AppLockManager getInstance() -> getInstance
com.seafile.vmoo.gesturelock.DefaultAppLock -> com.seafile.vmoo.gesturelock.DefaultAppLock:
    30:32:void <clinit>() -> <clinit>
    35:37:void <init>(android.app.Application) -> <init>
    41:44:void enable() -> enable
    69:73:boolean isActiviyBeingChecked(android.app.Activity) -> isActiviyBeingChecked
    57:63:void onActivityPaused(android.app.Activity) -> onActivityPaused
    78:89:void onActivityResumed(android.app.Activity) -> onActivityResumed
com.seafile.vmoo.gesturelock.LockPatternUtils -> com.seafile.vmoo.gesturelock.LockPatternUtils:
=======
    393:395:void startBackgroundJob(com.seafile.seadroid2.gallery.MonitoredActivity,java.lang.String,java.lang.String,java.lang.Runnable,android.os.Handler) -> startBackgroundJob
    131:211:android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,boolean,boolean) -> transform
com.seafile.seadroid2.gallery.Util$1 -> com.seafile.seadroid2.gallery.Util$1:
    319:319:void <init>() -> <init>
com.seafile.seadroid2.gallery.Util$BackgroundJob -> com.seafile.seadroid2.gallery.Util$BackgroundJob:
    353:358:void <init>(com.seafile.seadroid2.gallery.MonitoredActivity,java.lang.Runnable,android.app.ProgressDialog,android.os.Handler) -> <init>
    338:338:com.seafile.seadroid2.gallery.MonitoredActivity access$000(com.seafile.seadroid2.gallery.Util$BackgroundJob) -> access$000
    338:338:android.app.ProgressDialog access$100(com.seafile.seadroid2.gallery.Util$BackgroundJob) -> access$100
    374:375:void onActivityDestroyed(com.seafile.seadroid2.gallery.MonitoredActivity) -> onActivityDestroyed
    385:385:void onActivityStarted(com.seafile.seadroid2.gallery.MonitoredActivity) -> onActivityStarted
    380:380:void onActivityStopped(com.seafile.seadroid2.gallery.MonitoredActivity) -> onActivityStopped
    363:365:void run() -> run
com.seafile.seadroid2.gallery.Util$BackgroundJob$1 -> com.seafile.seadroid2.gallery.Util$BackgroundJob$1:
    345:345:void <init>(com.seafile.seadroid2.gallery.Util$BackgroundJob) -> <init>
    347:348:void run() -> run
com.seafile.seadroid2.gallery.VideoList -> com.seafile.seadroid2.gallery.VideoList:
    25:25:void <clinit>() -> <clinit>
    68:68:void <init>(android.content.ContentResolver,android.net.Uri,int,java.lang.String) -> <init>
    110:110:android.database.Cursor createCursor() -> createCursor
    72:88:java.util.HashMap getBucketIds() -> getBucketIds
    44:44:long getImageId(android.database.Cursor) -> getImageId
    49:62:com.seafile.seadroid2.gallery.BaseImage loadImageFromCursor(android.database.Cursor) -> loadImageFromCursor
    93:99:java.lang.String whereClause() -> whereClause
    105:105:java.lang.String[] whereClauseArgs() -> whereClauseArgs
com.seafile.seadroid2.gallery.VideoObject -> com.seafile.seadroid2.gallery.VideoObject:
    30:30:void <init>(com.seafile.seadroid2.gallery.BaseImageList,android.content.ContentResolver,long,int,android.net.Uri,java.lang.String,java.lang.String,long,java.lang.String) -> <init>
    36:37:boolean equals(java.lang.Object) -> equals
    49:49:android.graphics.Bitmap fullSizeBitmap(int,int,boolean,boolean) -> fullSizeBitmap
    56:56:java.io.InputStream fullSizeImageData() -> fullSizeImageData
    43:43:int hashCode() -> hashCode
    93:97:android.graphics.Bitmap miniThumbBitmap() -> miniThumbBitmap
    87:87:android.graphics.Bitmap thumbBitmap(boolean) -> thumbBitmap
    104:104:java.lang.String toString() -> toString
com.seafile.seadroid2.gesturelock.AbstractAppLock -> com.seafile.seadroid2.gesturelock.AbstractAppLock:
    13:13:void <init>() -> <init>
com.seafile.seadroid2.gesturelock.AppLockManager -> com.seafile.seadroid2.gesturelock.AppLockManager:
    13:13:void <init>() -> <init>
    26:28:void enableDefaultAppLockIfAvailable(android.app.Application) -> enableDefaultAppLockIfAvailable
    19:22:com.seafile.seadroid2.gesturelock.AppLockManager getInstance() -> getInstance
com.seafile.seadroid2.gesturelock.DefaultAppLock -> com.seafile.seadroid2.gesturelock.DefaultAppLock:
    34:36:void <clinit>() -> <clinit>
    39:41:void <init>(android.app.Application) -> <init>
    53:56:void disable() -> disable
    45:48:void enable() -> enable
    73:77:boolean isActiviyBeingChecked(android.app.Activity) -> isActiviyBeingChecked
    61:67:void onActivityPaused(android.app.Activity) -> onActivityPaused
    82:93:void onActivityResumed(android.app.Activity) -> onActivityResumed
com.seafile.seadroid2.gesturelock.LockPasswordUtils -> com.seafile.seadroid2.gesturelock.LockPasswordUtils:
    28:28:void <clinit>() -> <clinit>
    47:62:void <init>(android.content.Context) -> <init>
    20:20:java.io.File access$000() -> access$000
    20:20:java.util.concurrent.atomic.AtomicBoolean access$100() -> access$100
    157:166:boolean checkPassword(java.lang.String) -> checkPassword
    81:83:int computePasswordQuality(java.lang.String) -> computePasswordQuality
    232:232:long getLong(java.lang.String,long) -> getLong
    205:218:java.lang.String getSalt() -> getSalt
    191:198:byte[] passwordToHash(java.lang.String) -> passwordToHash
    118:137:void saveLockPassword(java.lang.String,int,boolean) -> saveLockPassword
    72:72:boolean savedPasswordExists() -> savedPasswordExists
    236:237:void setLong(java.lang.String,long) -> setLong
    224:226:java.lang.String toHex(byte[]) -> toHex
com.seafile.seadroid2.gesturelock.LockPasswordUtils$PasswordFileObserver -> com.seafile.seadroid2.gesturelock.LockPasswordUtils$PasswordFileObserver:
    34:34:void <init>(java.lang.String,int) -> <init>
    39:42:void onEvent(int,java.lang.String) -> onEvent
com.seafile.seadroid2.gesturelock.LockPatternUtils -> com.seafile.seadroid2.gesturelock.LockPatternUtils:
>>>>>>> rename package name,fix action event info list same time crash
    50:50:void <clinit>() -> <clinit>
    69:81:void <init>(android.content.Context) -> <init>
    24:24:java.io.File access$000() -> access$000
    24:24:java.util.concurrent.atomic.AtomicBoolean access$100() -> access$100
    209:218:boolean checkPattern(java.util.List) -> checkPattern
<<<<<<< HEAD
=======
    95:95:void clearLock() -> clearLock
>>>>>>> rename package name,fix action event info list same time crash
    183:191:byte[] patternToHash(java.util.List) -> patternToHash
    127:134:java.lang.String patternToString(java.util.List) -> patternToString
    147:162:void saveLockPattern(java.util.List) -> saveLockPattern
    91:91:boolean savedPatternExists() -> savedPatternExists
    106:111:java.util.List stringToPattern(java.lang.String) -> stringToPattern
<<<<<<< HEAD
com.seafile.vmoo.gesturelock.LockPatternUtils$LockPatternFileObserver -> com.seafile.vmoo.gesturelock.LockPatternUtils$LockPatternFileObserver:
    56:56:void <init>(java.lang.String,int) -> <init>
    61:64:void onEvent(int,java.lang.String) -> onEvent
com.seafile.vmoo.gesturelock.LockPatternView -> com.seafile.vmoo.gesturelock.LockPatternView:
    243:243:void <init>(android.content.Context) -> <init>
    247:284:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    568:570:void addCellToPattern(com.seafile.vmoo.gesturelock.LockPatternView$Cell) -> addCellToPattern
    576:588:com.seafile.vmoo.gesturelock.LockPatternView$Cell checkForNewHit(float,float) -> checkForNewHit
    415:415:void clearPattern() -> clearPattern
    434:434:void clearPatternDrawLookup() -> clearPatternDrawLookup
    526:557:com.seafile.vmoo.gesturelock.LockPatternView$Cell detectAndAddHit(float,float) -> detectAndAddHit
    444:444:void disableInput() -> disableInput
    1001:1044:void drawCircle(android.graphics.Canvas,int,int,boolean) -> drawCircle
    451:451:void enableInput() -> enableInput
    289:289:android.graphics.Bitmap getBitmapFor(int) -> getBitmapFor
    860:860:float getCenterXForColumn(int) -> getCenterXForColumn
    864:864:float getCenterYForRow(int) -> getCenterYForRow
    622:625:int getColumnHit(float) -> getColumnHit
    600:603:int getRowHit(float) -> getRowHit
    489:489:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    483:483:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    826:850:void handleActionDown(android.view.MotionEvent) -> handleActionDown
    671:798:void handleActionMove(android.view.MotionEvent) -> handleActionMove
    812:815:void handleActionUp(android.view.MotionEvent) -> handleActionUp
    384:387:void notifyCellAdded() -> notifyCellAdded
    405:408:void notifyPatternCleared() -> notifyPatternCleared
    398:401:void notifyPatternDetected() -> notifyPatternDetected
    391:394:void notifyPatternStarted() -> notifyPatternStarted
    869:986:void onDraw(android.graphics.Canvas) -> onDraw
    494:512:void onMeasure(int,int) -> onMeasure
    1058:1065:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1049:1052:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    456:460:void onSizeChanged(int,int,int,int) -> onSizeChanged
    638:644:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    422:425:void resetPattern() -> resetPattern
    465:471:int resolveMeasured(int,int) -> resolveMeasured
    805:807:void sendAccessEvent(int) -> sendAccessEvent
    367:380:void setDisplayMode(com.seafile.vmoo.gesturelock.LockPatternView$DisplayMode) -> setDisplayMode
    314:314:void setInStealthMode(boolean) -> setInStealthMode
    335:335:void setOnPatternListener(com.seafile.vmoo.gesturelock.LockPatternView$OnPatternListener) -> setOnPatternListener
    348:355:void setPattern(com.seafile.vmoo.gesturelock.LockPatternView$DisplayMode,java.util.List) -> setPattern
    325:325:void setTactileFeedbackEnabled(boolean) -> setTactileFeedbackEnabled
com.seafile.vmoo.gesturelock.LockPatternView$Cell -> com.seafile.vmoo.gesturelock.LockPatternView$Cell:
    134:138:void <clinit>() -> <clinit>
    149:152:void <init>(int,int) -> <init>
    179:176:void checkRange(int,int) -> checkRange
    160:160:int getColumn() -> getColumn
    156:156:int getRow() -> getRow
    170:171:com.seafile.vmoo.gesturelock.LockPatternView$Cell of(int,int) -> of
    185:185:java.lang.String toString() -> toString
com.seafile.vmoo.gesturelock.LockPatternView$DisplayMode -> com.seafile.vmoo.gesturelock.LockPatternView$DisplayMode:
    197:192:void <clinit>() -> <clinit>
    192:192:void <init>(java.lang.String,int) -> <init>
    192:192:com.seafile.vmoo.gesturelock.LockPatternView$DisplayMode valueOf(java.lang.String) -> valueOf
    192:192:com.seafile.vmoo.gesturelock.LockPatternView$DisplayMode[] values() -> values
com.seafile.vmoo.gesturelock.LockPatternView$SavedState -> com.seafile.vmoo.gesturelock.LockPatternView$SavedState:
    1135:1135:void <clinit>() -> <clinit>
    1071:1071:void <init>(android.os.Parcel,com.seafile.vmoo.gesturelock.LockPatternView$1) -> <init>
    1071:1071:void <init>(android.os.Parcelable,java.lang.String,int,boolean,boolean,boolean,com.seafile.vmoo.gesturelock.LockPatternView$1) -> <init>
    1085:1090:void <init>(android.os.Parcelable,java.lang.String,int,boolean,boolean,boolean) -> <init>
    1097:1102:void <init>(android.os.Parcel) -> <init>
    1110:1110:int getDisplayMode() -> getDisplayMode
    1106:1106:java.lang.String getSerializedPattern() -> getSerializedPattern
    1118:1118:boolean isInStealthMode() -> isInStealthMode
    1114:1114:boolean isInputEnabled() -> isInputEnabled
    1122:1122:boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    1127:1132:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.seafile.vmoo.gesturelock.LockPatternView$SavedState$1 -> com.seafile.vmoo.gesturelock.LockPatternView$SavedState$1:
    1135:1135:void <init>() -> <init>
    1135:1135:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1137:1137:com.seafile.vmoo.gesturelock.LockPatternView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1135:1135:java.lang.Object[] newArray(int) -> newArray
    1141:1141:com.seafile.vmoo.gesturelock.LockPatternView$SavedState[] newArray(int) -> newArray
com.seafile.vmoo.httputils.RequestManager -> com.seafile.vmoo.httputils.RequestManager:
    33:44:void <init>(com.seafile.vmoo.account.Account) -> <init>
    90:90:okhttp3.RequestBody createProgressRequestBody(com.seafile.vmoo.data.ProgressMonitor,java.io.File) -> createProgressRequestBody
    48:48:okhttp3.OkHttpClient getClient() -> getClient
    53:60:com.seafile.vmoo.httputils.RequestManager getInstance(com.seafile.vmoo.account.Account) -> getInstance
com.seafile.vmoo.httputils.RequestManager$1 -> com.seafile.vmoo.httputils.RequestManager$1:
    90:92:void <init>(com.seafile.vmoo.httputils.RequestManager,java.io.File,com.seafile.vmoo.data.ProgressMonitor) -> <init>
    101:101:long contentLength() -> contentLength
    96:96:okhttp3.MediaType contentType() -> contentType
    108:123:void writeTo(okio.BufferedSink) -> writeTo
com.seafile.vmoo.httputils.RequestManager$LoggingInterceptor -> com.seafile.vmoo.httputils.RequestManager$LoggingInterceptor:
    67:67:void <init>(com.seafile.vmoo.httputils.RequestManager) -> <init>
    67:67:void <init>(com.seafile.vmoo.httputils.RequestManager,com.seafile.vmoo.httputils.RequestManager$1) -> <init>
    71:76:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
com.seafile.vmoo.monitor.AutoUpdateInfo -> com.seafile.vmoo.monitor.AutoUpdateInfo:
    15:21:void <init>(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    25:25:boolean canLocalDecrypt() -> canLocalDecrypt
    32:42:boolean equals(java.lang.Object) -> equals
    49:53:int hashCode() -> hashCode
com.seafile.vmoo.monitor.AutoUpdateManager -> com.seafile.vmoo.monitor.AutoUpdateManager:
    24:120:void <init>() -> <init>
    24:24:com.seafile.vmoo.transfer.TransferService access$000(com.seafile.vmoo.monitor.AutoUpdateManager) -> access$000
    24:24:com.seafile.vmoo.monitor.MonitorDBHelper access$100(com.seafile.vmoo.monitor.AutoUpdateManager) -> access$100
    92:92:void addAllUploadTasks(java.util.List) -> addAllUploadTasks
    70:78:void addTask(com.seafile.vmoo.account.Account,com.seafile.vmoo.data.SeafCachedFile,java.io.File) -> addTask
    124:130:boolean maxFailureReached(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> maxFailureReached
    58:58:void onCachedBlocksChanged(com.seafile.vmoo.account.Account,com.seafile.vmoo.data.SeafCachedFile,java.io.File) -> onCachedBlocksChanged
    66:66:void onCachedFileChanged(com.seafile.vmoo.account.Account,com.seafile.vmoo.data.SeafCachedFile,java.io.File) -> onCachedFileChanged
    142:162:void onFileUpdateFailure(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.SeafException,int) -> onFileUpdateFailure
    114:115:void onFileUpdateSuccess(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> onFileUpdateSuccess
    37:46:void onTransferServiceConnected(com.seafile.vmoo.transfer.TransferService) -> onTransferServiceConnected
    167:172:boolean removeAutoUpdateInfo(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> removeAutoUpdateInfo
    213:215:void run() -> run
    189:207:void scheduleUpdateTasks() -> scheduleUpdateTasks
    50:50:void stop() -> stop
com.seafile.vmoo.monitor.AutoUpdateManager$1 -> com.seafile.vmoo.monitor.AutoUpdateManager$1:
    40:40:void <init>(com.seafile.vmoo.monitor.AutoUpdateManager) -> <init>
    43:43:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.seafile.vmoo.monitor.AutoUpdateManager$2 -> com.seafile.vmoo.monitor.AutoUpdateManager$2:
    92:92:void <init>(com.seafile.vmoo.monitor.AutoUpdateManager,java.util.List) -> <init>
    95:100:void run() -> run
com.seafile.vmoo.monitor.AutoUpdateManager$3 -> com.seafile.vmoo.monitor.AutoUpdateManager$3:
    175:175:void <init>(com.seafile.vmoo.monitor.AutoUpdateManager,com.seafile.vmoo.monitor.AutoUpdateInfo) -> <init>
    178:178:void run() -> run
com.seafile.vmoo.monitor.FileMonitorService -> com.seafile.vmoo.monitor.FileMonitorService:
    28:121:void <init>() -> <init>
    28:28:com.seafile.vmoo.monitor.SeafileMonitor access$000(com.seafile.vmoo.monitor.FileMonitorService) -> access$000
    28:28:com.seafile.vmoo.transfer.TransferService access$100(com.seafile.vmoo.monitor.FileMonitorService) -> access$100
    28:28:com.seafile.vmoo.transfer.TransferService access$102(com.seafile.vmoo.monitor.FileMonitorService,com.seafile.vmoo.transfer.TransferService) -> access$102
    28:28:com.seafile.vmoo.monitor.AutoUpdateManager access$200(com.seafile.vmoo.monitor.FileMonitorService) -> access$200
    62:63:android.os.IBinder onBind(android.content.Intent) -> onBind
    68:73:void onCreate() -> onCreate
    79:96:void onDestroy() -> onDestroy
    38:44:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    100:102:void removeAccount(com.seafile.vmoo.account.Account) -> removeAccount
com.seafile.vmoo.monitor.FileMonitorService$1 -> com.seafile.vmoo.monitor.FileMonitorService$1:
    44:44:void <init>(com.seafile.vmoo.monitor.FileMonitorService) -> <init>
    47:47:void run() -> run
com.seafile.vmoo.monitor.FileMonitorService$2 -> com.seafile.vmoo.monitor.FileMonitorService$2:
    105:105:void <init>(com.seafile.vmoo.monitor.FileMonitorService) -> <init>
    109:111:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    116:116:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.vmoo.monitor.FileMonitorService$3 -> com.seafile.vmoo.monitor.FileMonitorService$3:
    121:121:void <init>(com.seafile.vmoo.monitor.FileMonitorService) -> <init>
    125:156:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.seafile.vmoo.monitor.FileMonitorService$MonitorBinder -> com.seafile.vmoo.monitor.FileMonitorService$MonitorBinder:
    54:54:void <init>(com.seafile.vmoo.monitor.FileMonitorService) -> <init>
    56:56:com.seafile.vmoo.monitor.FileMonitorService getService() -> getService
com.seafile.vmoo.monitor.MonitorDBHelper -> com.seafile.vmoo.monitor.MonitorDBHelper:
    57:57:void <clinit>() -> <clinit>
    20:20:void <init>(android.content.Context,com.seafile.vmoo.monitor.MonitorDBHelper$1) -> <init>
    80:81:void <init>(android.content.Context) -> <init>
    90:90:void createFileCacheTable(android.database.sqlite.SQLiteDatabase) -> createFileCacheTable
    178:191:com.seafile.vmoo.monitor.AutoUpdateInfo cursorToAutoUpdateInfo(android.database.Cursor,java.util.Map) -> cursorToAutoUpdateInfo
    168:171:java.util.Map getAllAccounts() -> getAllAccounts
    132:163:java.util.List getAutoUploadInfos() -> getAutoUploadInfos
    72:72:com.seafile.vmoo.monitor.MonitorDBHelper getInstance() -> getInstance
    86:86:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    101:101:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    95:96:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    118:128:void removeAutoUpdateInfo(com.seafile.vmoo.monitor.AutoUpdateInfo) -> removeAutoUpdateInfo
    105:114:void saveAutoUpdateInfo(com.seafile.vmoo.monitor.AutoUpdateInfo) -> saveAutoUpdateInfo
com.seafile.vmoo.monitor.MonitorDBHelper$SingletonHolder -> com.seafile.vmoo.monitor.MonitorDBHelper$SingletonHolder:
    76:76:void <clinit>() -> <clinit>
    75:75:com.seafile.vmoo.monitor.MonitorDBHelper access$000() -> access$000
com.seafile.vmoo.monitor.SeafileMonitor -> com.seafile.vmoo.monitor.SeafileMonitor:
    23:24:void <init>(com.seafile.vmoo.monitor.CachedFileChangedListener) -> <init>
    49:49:void addObserver(com.seafile.vmoo.monitor.SeafileObserver) -> addObserver
    28:28:boolean isStarted() -> isStarted
    79:91:void monitorAllAccounts() -> monitorAllAccounts
    32:38:void monitorFilesForAccount(com.seafile.vmoo.account.Account) -> monitorFilesForAccount
    58:62:void onFileDownloaded(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onFileDownloaded
    53:53:void removeObserver(com.seafile.vmoo.monitor.SeafileObserver) -> removeObserver
    65:67:void start() -> start
    72:72:void stop() -> stop
    41:46:void stopMonitorFilesForAccount(com.seafile.vmoo.account.Account) -> stopMonitorFilesForAccount
com.seafile.vmoo.monitor.SeafileObserver -> com.seafile.vmoo.monitor.SeafileObserver:
    31:37:void <init>(com.seafile.vmoo.account.Account,com.seafile.vmoo.monitor.CachedFileChangedListener) -> <init>
=======
com.seafile.seadroid2.gesturelock.LockPatternUtils$LockPatternFileObserver -> com.seafile.seadroid2.gesturelock.LockPatternUtils$LockPatternFileObserver:
    56:56:void <init>(java.lang.String,int) -> <init>
    61:64:void onEvent(int,java.lang.String) -> onEvent
com.seafile.seadroid2.gesturelock.LockPatternView -> com.seafile.seadroid2.gesturelock.LockPatternView:
    244:244:void <init>(android.content.Context) -> <init>
    248:285:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    569:571:void addCellToPattern(com.seafile.seadroid2.gesturelock.LockPatternView$Cell) -> addCellToPattern
    577:589:com.seafile.seadroid2.gesturelock.LockPatternView$Cell checkForNewHit(float,float) -> checkForNewHit
    416:416:void clearPattern() -> clearPattern
    435:435:void clearPatternDrawLookup() -> clearPatternDrawLookup
    527:558:com.seafile.seadroid2.gesturelock.LockPatternView$Cell detectAndAddHit(float,float) -> detectAndAddHit
    445:445:void disableInput() -> disableInput
    1002:1045:void drawCircle(android.graphics.Canvas,int,int,boolean) -> drawCircle
    452:452:void enableInput() -> enableInput
    290:290:android.graphics.Bitmap getBitmapFor(int) -> getBitmapFor
    861:861:float getCenterXForColumn(int) -> getCenterXForColumn
    865:865:float getCenterYForRow(int) -> getCenterYForRow
    623:626:int getColumnHit(float) -> getColumnHit
    601:604:int getRowHit(float) -> getRowHit
    490:490:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    484:484:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    827:851:void handleActionDown(android.view.MotionEvent) -> handleActionDown
    672:799:void handleActionMove(android.view.MotionEvent) -> handleActionMove
    813:816:void handleActionUp(android.view.MotionEvent) -> handleActionUp
    297:297:boolean isInStealthMode() -> isInStealthMode
    304:304:boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    385:388:void notifyCellAdded() -> notifyCellAdded
    406:409:void notifyPatternCleared() -> notifyPatternCleared
    399:402:void notifyPatternDetected() -> notifyPatternDetected
    392:395:void notifyPatternStarted() -> notifyPatternStarted
    870:987:void onDraw(android.graphics.Canvas) -> onDraw
    495:513:void onMeasure(int,int) -> onMeasure
    1059:1066:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1050:1053:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    457:461:void onSizeChanged(int,int,int,int) -> onSizeChanged
    639:645:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    423:426:void resetPattern() -> resetPattern
    466:472:int resolveMeasured(int,int) -> resolveMeasured
    806:808:void sendAccessEvent(int) -> sendAccessEvent
    368:381:void setDisplayMode(com.seafile.seadroid2.gesturelock.LockPatternView$DisplayMode) -> setDisplayMode
    315:315:void setInStealthMode(boolean) -> setInStealthMode
    336:336:void setOnPatternListener(com.seafile.seadroid2.gesturelock.LockPatternView$OnPatternListener) -> setOnPatternListener
    349:356:void setPattern(com.seafile.seadroid2.gesturelock.LockPatternView$DisplayMode,java.util.List) -> setPattern
    326:326:void setTactileFeedbackEnabled(boolean) -> setTactileFeedbackEnabled
com.seafile.seadroid2.gesturelock.LockPatternView$Cell -> com.seafile.seadroid2.gesturelock.LockPatternView$Cell:
    135:139:void <clinit>() -> <clinit>
    150:153:void <init>(int,int) -> <init>
    180:177:void checkRange(int,int) -> checkRange
    161:161:int getColumn() -> getColumn
    157:157:int getRow() -> getRow
    171:172:com.seafile.seadroid2.gesturelock.LockPatternView$Cell of(int,int) -> of
    186:186:java.lang.String toString() -> toString
com.seafile.seadroid2.gesturelock.LockPatternView$DisplayMode -> com.seafile.seadroid2.gesturelock.LockPatternView$DisplayMode:
    198:193:void <clinit>() -> <clinit>
    193:193:void <init>(java.lang.String,int) -> <init>
    193:193:com.seafile.seadroid2.gesturelock.LockPatternView$DisplayMode valueOf(java.lang.String) -> valueOf
    193:193:com.seafile.seadroid2.gesturelock.LockPatternView$DisplayMode[] values() -> values
com.seafile.seadroid2.gesturelock.LockPatternView$SavedState -> com.seafile.seadroid2.gesturelock.LockPatternView$SavedState:
    1136:1136:void <clinit>() -> <clinit>
    1072:1072:void <init>(android.os.Parcel,com.seafile.seadroid2.gesturelock.LockPatternView$1) -> <init>
    1072:1072:void <init>(android.os.Parcelable,java.lang.String,int,boolean,boolean,boolean,com.seafile.seadroid2.gesturelock.LockPatternView$1) -> <init>
    1086:1091:void <init>(android.os.Parcelable,java.lang.String,int,boolean,boolean,boolean) -> <init>
    1098:1103:void <init>(android.os.Parcel) -> <init>
    1111:1111:int getDisplayMode() -> getDisplayMode
    1107:1107:java.lang.String getSerializedPattern() -> getSerializedPattern
    1119:1119:boolean isInStealthMode() -> isInStealthMode
    1115:1115:boolean isInputEnabled() -> isInputEnabled
    1123:1123:boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    1128:1133:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.seafile.seadroid2.gesturelock.LockPatternView$SavedState$1 -> com.seafile.seadroid2.gesturelock.LockPatternView$SavedState$1:
    1136:1136:void <init>() -> <init>
    1136:1136:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1138:1138:com.seafile.seadroid2.gesturelock.LockPatternView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1136:1136:java.lang.Object[] newArray(int) -> newArray
    1142:1142:com.seafile.seadroid2.gesturelock.LockPatternView$SavedState[] newArray(int) -> newArray
com.seafile.seadroid2.httputils.RequestManager -> com.seafile.seadroid2.httputils.RequestManager:
    33:44:void <init>(com.seafile.seadroid2.account.Account) -> <init>
    90:90:okhttp3.RequestBody createProgressRequestBody(com.seafile.seadroid2.data.ProgressMonitor,java.io.File) -> createProgressRequestBody
    48:48:okhttp3.OkHttpClient getClient() -> getClient
    53:60:com.seafile.seadroid2.httputils.RequestManager getInstance(com.seafile.seadroid2.account.Account) -> getInstance
com.seafile.seadroid2.httputils.RequestManager$1 -> com.seafile.seadroid2.httputils.RequestManager$1:
    90:92:void <init>(com.seafile.seadroid2.httputils.RequestManager,java.io.File,com.seafile.seadroid2.data.ProgressMonitor) -> <init>
    101:101:long contentLength() -> contentLength
    96:96:okhttp3.MediaType contentType() -> contentType
    108:123:void writeTo(okio.BufferedSink) -> writeTo
com.seafile.seadroid2.httputils.RequestManager$LoggingInterceptor -> com.seafile.seadroid2.httputils.RequestManager$LoggingInterceptor:
    67:67:void <init>(com.seafile.seadroid2.httputils.RequestManager) -> <init>
    67:67:void <init>(com.seafile.seadroid2.httputils.RequestManager,com.seafile.seadroid2.httputils.RequestManager$1) -> <init>
    71:76:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
com.seafile.seadroid2.monitor.AutoUpdateInfo -> com.seafile.seadroid2.monitor.AutoUpdateInfo:
    15:21:void <init>(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    25:25:boolean canLocalDecrypt() -> canLocalDecrypt
    32:42:boolean equals(java.lang.Object) -> equals
    49:53:int hashCode() -> hashCode
com.seafile.seadroid2.monitor.AutoUpdateManager -> com.seafile.seadroid2.monitor.AutoUpdateManager:
    24:120:void <init>() -> <init>
    24:24:com.seafile.seadroid2.transfer.TransferService access$000(com.seafile.seadroid2.monitor.AutoUpdateManager) -> access$000
    24:24:com.seafile.seadroid2.monitor.MonitorDBHelper access$100(com.seafile.seadroid2.monitor.AutoUpdateManager) -> access$100
    92:92:void addAllUploadTasks(java.util.List) -> addAllUploadTasks
    70:78:void addTask(com.seafile.seadroid2.account.Account,com.seafile.seadroid2.data.SeafCachedFile,java.io.File) -> addTask
    124:130:boolean maxFailureReached(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> maxFailureReached
    58:58:void onCachedBlocksChanged(com.seafile.seadroid2.account.Account,com.seafile.seadroid2.data.SeafCachedFile,java.io.File) -> onCachedBlocksChanged
    66:66:void onCachedFileChanged(com.seafile.seadroid2.account.Account,com.seafile.seadroid2.data.SeafCachedFile,java.io.File) -> onCachedFileChanged
    142:162:void onFileUpdateFailure(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.SeafException,int) -> onFileUpdateFailure
    114:115:void onFileUpdateSuccess(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> onFileUpdateSuccess
    37:46:void onTransferServiceConnected(com.seafile.seadroid2.transfer.TransferService) -> onTransferServiceConnected
    167:172:boolean removeAutoUpdateInfo(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> removeAutoUpdateInfo
    213:215:void run() -> run
    189:207:void scheduleUpdateTasks() -> scheduleUpdateTasks
    50:50:void stop() -> stop
com.seafile.seadroid2.monitor.AutoUpdateManager$1 -> com.seafile.seadroid2.monitor.AutoUpdateManager$1:
    40:40:void <init>(com.seafile.seadroid2.monitor.AutoUpdateManager) -> <init>
    43:43:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.seafile.seadroid2.monitor.AutoUpdateManager$2 -> com.seafile.seadroid2.monitor.AutoUpdateManager$2:
    92:92:void <init>(com.seafile.seadroid2.monitor.AutoUpdateManager,java.util.List) -> <init>
    95:100:void run() -> run
com.seafile.seadroid2.monitor.AutoUpdateManager$3 -> com.seafile.seadroid2.monitor.AutoUpdateManager$3:
    175:175:void <init>(com.seafile.seadroid2.monitor.AutoUpdateManager,com.seafile.seadroid2.monitor.AutoUpdateInfo) -> <init>
    178:178:void run() -> run
com.seafile.seadroid2.monitor.FileMonitorService -> com.seafile.seadroid2.monitor.FileMonitorService:
    22:115:void <init>() -> <init>
    22:22:com.seafile.seadroid2.monitor.SeafileMonitor access$000(com.seafile.seadroid2.monitor.FileMonitorService) -> access$000
    22:22:com.seafile.seadroid2.transfer.TransferService access$100(com.seafile.seadroid2.monitor.FileMonitorService) -> access$100
    22:22:com.seafile.seadroid2.transfer.TransferService access$102(com.seafile.seadroid2.monitor.FileMonitorService,com.seafile.seadroid2.transfer.TransferService) -> access$102
    22:22:com.seafile.seadroid2.monitor.AutoUpdateManager access$200(com.seafile.seadroid2.monitor.FileMonitorService) -> access$200
    56:57:android.os.IBinder onBind(android.content.Intent) -> onBind
    62:67:void onCreate() -> onCreate
    73:90:void onDestroy() -> onDestroy
    32:38:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    94:96:void removeAccount(com.seafile.seadroid2.account.Account) -> removeAccount
com.seafile.seadroid2.monitor.FileMonitorService$1 -> com.seafile.seadroid2.monitor.FileMonitorService$1:
    38:38:void <init>(com.seafile.seadroid2.monitor.FileMonitorService) -> <init>
    41:41:void run() -> run
com.seafile.seadroid2.monitor.FileMonitorService$2 -> com.seafile.seadroid2.monitor.FileMonitorService$2:
    99:99:void <init>(com.seafile.seadroid2.monitor.FileMonitorService) -> <init>
    103:105:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    110:110:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.seadroid2.monitor.FileMonitorService$3 -> com.seafile.seadroid2.monitor.FileMonitorService$3:
    115:115:void <init>(com.seafile.seadroid2.monitor.FileMonitorService) -> <init>
    119:150:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.seafile.seadroid2.monitor.FileMonitorService$MonitorBinder -> com.seafile.seadroid2.monitor.FileMonitorService$MonitorBinder:
    48:48:void <init>(com.seafile.seadroid2.monitor.FileMonitorService) -> <init>
    50:50:com.seafile.seadroid2.monitor.FileMonitorService getService() -> getService
com.seafile.seadroid2.monitor.MonitorDBHelper -> com.seafile.seadroid2.monitor.MonitorDBHelper:
    57:57:void <clinit>() -> <clinit>
    20:20:void <init>(android.content.Context,com.seafile.seadroid2.monitor.MonitorDBHelper$1) -> <init>
    80:81:void <init>(android.content.Context) -> <init>
    90:90:void createFileCacheTable(android.database.sqlite.SQLiteDatabase) -> createFileCacheTable
    178:191:com.seafile.seadroid2.monitor.AutoUpdateInfo cursorToAutoUpdateInfo(android.database.Cursor,java.util.Map) -> cursorToAutoUpdateInfo
    168:171:java.util.Map getAllAccounts() -> getAllAccounts
    132:163:java.util.List getAutoUploadInfos() -> getAutoUploadInfos
    72:72:com.seafile.seadroid2.monitor.MonitorDBHelper getInstance() -> getInstance
    86:86:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    101:101:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    95:96:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    118:128:void removeAutoUpdateInfo(com.seafile.seadroid2.monitor.AutoUpdateInfo) -> removeAutoUpdateInfo
    105:114:void saveAutoUpdateInfo(com.seafile.seadroid2.monitor.AutoUpdateInfo) -> saveAutoUpdateInfo
com.seafile.seadroid2.monitor.MonitorDBHelper$SingletonHolder -> com.seafile.seadroid2.monitor.MonitorDBHelper$SingletonHolder:
    76:76:void <clinit>() -> <clinit>
    75:75:void <init>() -> <init>
    75:75:com.seafile.seadroid2.monitor.MonitorDBHelper access$000() -> access$000
com.seafile.seadroid2.monitor.SeafileMonitor -> com.seafile.seadroid2.monitor.SeafileMonitor:
    23:24:void <init>(com.seafile.seadroid2.monitor.CachedFileChangedListener) -> <init>
    49:49:void addObserver(com.seafile.seadroid2.monitor.SeafileObserver) -> addObserver
    28:28:boolean isStarted() -> isStarted
    79:91:void monitorAllAccounts() -> monitorAllAccounts
    32:38:void monitorFilesForAccount(com.seafile.seadroid2.account.Account) -> monitorFilesForAccount
    58:62:void onFileDownloaded(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onFileDownloaded
    53:53:void removeObserver(com.seafile.seadroid2.monitor.SeafileObserver) -> removeObserver
    65:67:void start() -> start
    72:72:void stop() -> stop
    41:46:void stopMonitorFilesForAccount(com.seafile.seadroid2.account.Account) -> stopMonitorFilesForAccount
com.seafile.seadroid2.monitor.SeafileObserver -> com.seafile.seadroid2.monitor.SeafileObserver:
    31:37:void <init>(com.seafile.seadroid2.account.Account,com.seafile.seadroid2.monitor.CachedFileChangedListener) -> <init>
    79:79:com.seafile.seadroid2.account.Account getAccount() -> getAccount
>>>>>>> rename package name,fix action event info list same time crash
    41:41:java.lang.String getAccountDir() -> getAccountDir
    45:45:org.apache.commons.io.monitor.FileAlterationObserver getAlterationObserver() -> getAlterationObserver
    101:101:void onDirectoryChange(java.io.File) -> onDirectoryChange
    106:106:void onDirectoryCreate(java.io.File) -> onDirectoryCreate
    111:111:void onDirectoryDelete(java.io.File) -> onDirectoryDelete
    116:140:void onFileChange(java.io.File) -> onFileChange
    147:147:void onFileCreate(java.io.File) -> onFileCreate
    152:156:void onFileDelete(java.io.File) -> onFileDelete
    161:161:void onStart(org.apache.commons.io.monitor.FileAlterationObserver) -> onStart
    166:166:void onStop(org.apache.commons.io.monitor.FileAlterationObserver) -> onStop
<<<<<<< HEAD
    49:58:void watchAllCachedFiles() -> watchAllCachedFiles
    63:71:void watchDownloadedFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> watchDownloadedFile
com.seafile.vmoo.monitor.SeafileObserver$RecentDownloadedFilesWorkAround -> com.seafile.vmoo.monitor.SeafileObserver$RecentDownloadedFilesWorkAround:
    174:175:void <init>() -> <init>
    174:174:void <init>(com.seafile.vmoo.monitor.SeafileObserver$1) -> <init>
    192:192:void addRecentDownloadedFile(java.lang.String) -> addRecentDownloadedFile
    178:181:boolean isRecentDownloadedFiles(java.lang.String) -> isRecentDownloadedFiles
    196:197:void removeRecentDownloadedFile(java.lang.String) -> removeRecentDownloadedFile
com.seafile.vmoo.notification.BaseNotificationProvider -> com.seafile.vmoo.notification.BaseNotificationProvider:
    41:43:void <init>(com.seafile.vmoo.transfer.TransferManager,com.seafile.vmoo.transfer.TransferService) -> <init>
    209:211:void cancelNotification() -> cancelNotification
    153:153:void cancelWithDelay(com.seafile.vmoo.transfer.TransferService,long) -> cancelWithDelay
=======
    75:75:void setAccount(com.seafile.seadroid2.account.Account) -> setAccount
    84:88:void startWatching() -> startWatching
    93:93:void stopWatching() -> stopWatching
    49:58:void watchAllCachedFiles() -> watchAllCachedFiles
    63:71:void watchDownloadedFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> watchDownloadedFile
com.seafile.seadroid2.monitor.SeafileObserver$RecentDownloadedFilesWorkAround -> com.seafile.seadroid2.monitor.SeafileObserver$RecentDownloadedFilesWorkAround:
    174:175:void <init>() -> <init>
    174:174:void <init>(com.seafile.seadroid2.monitor.SeafileObserver$1) -> <init>
    192:192:void addRecentDownloadedFile(java.lang.String) -> addRecentDownloadedFile
    178:181:boolean isRecentDownloadedFiles(java.lang.String) -> isRecentDownloadedFiles
    196:197:void removeRecentDownloadedFile(java.lang.String) -> removeRecentDownloadedFile
com.seafile.seadroid2.notification.BaseNotificationProvider -> com.seafile.seadroid2.notification.BaseNotificationProvider:
    41:43:void <init>(com.seafile.seadroid2.transfer.TransferManager,com.seafile.seadroid2.transfer.TransferService) -> <init>
    209:211:void cancelNotification() -> cancelNotification
    153:153:void cancelWithDelay(com.seafile.seadroid2.transfer.TransferService,long) -> cancelWithDelay
>>>>>>> rename package name,fix action event info list same time crash
    134:142:void notifyCompleted(int,java.lang.String,java.lang.String) -> notifyCompleted
    178:186:void notifyCompletedWithErrors(int,java.lang.String,java.lang.String,int) -> notifyCompletedWithErrors
    117:121:void notifyProgress(int,java.lang.String,java.lang.String,int) -> notifyProgress
    77:90:void updateNotification() -> updateNotification
<<<<<<< HEAD
com.seafile.vmoo.notification.BaseNotificationProvider$1 -> com.seafile.vmoo.notification.BaseNotificationProvider$1:
    153:153:void <init>(com.seafile.vmoo.transfer.TransferService) -> <init>
    156:157:void run() -> run
com.seafile.vmoo.notification.BaseNotificationProvider$NotificationState -> com.seafile.vmoo.notification.BaseNotificationProvider$NotificationState:
    215:214:void <clinit>() -> <clinit>
    214:214:void <init>(java.lang.String,int) -> <init>
    214:214:com.seafile.vmoo.notification.BaseNotificationProvider$NotificationState valueOf(java.lang.String) -> valueOf
    214:214:com.seafile.vmoo.notification.BaseNotificationProvider$NotificationState[] values() -> values
com.seafile.vmoo.notification.DownloadNotificationProvider -> com.seafile.vmoo.notification.DownloadNotificationProvider:
    26:26:void <init>(com.seafile.vmoo.transfer.DownloadTaskManager,com.seafile.vmoo.transfer.TransferService) -> <init>
    96:96:java.lang.String getNotificationTitle() -> getNotificationTitle
    129:143:int getProgress() -> getProgress
    33:52:java.lang.String getProgressInfo() -> getProgressInfo
    62:86:com.seafile.vmoo.notification.BaseNotificationProvider$NotificationState getState() -> getState
    101:122:void notifyStarted() -> notifyStarted
com.seafile.vmoo.notification.UploadNotificationProvider -> com.seafile.vmoo.notification.UploadNotificationProvider:
    24:24:void <init>(com.seafile.vmoo.transfer.UploadTaskManager,com.seafile.vmoo.transfer.TransferService) -> <init>
    142:142:java.lang.String getNotificationTitle() -> getNotificationTitle
    89:103:int getProgress() -> getProgress
    32:52:java.lang.String getProgressInfo() -> getProgressInfo
    108:132:com.seafile.vmoo.notification.BaseNotificationProvider$NotificationState getState() -> getState
    62:82:void notifyStarted() -> notifyStarted
com.seafile.vmoo.play.OnTransitionListener -> com.seafile.vmoo.play.OnTransitionListener:
    13:13:void <init>() -> <init>
com.seafile.vmoo.play.PlayActivity -> com.seafile.vmoo.play.PlayActivity:
    32:32:void <init>() -> <init>
    32:32:com.shuyu.gsyvideoplayer.utils.OrientationUtils access$000(com.seafile.vmoo.play.PlayActivity) -> access$000
    32:32:com.seafile.vmoo.play.SampleVideo access$100(com.seafile.vmoo.play.PlayActivity) -> access$100
=======
com.seafile.seadroid2.notification.BaseNotificationProvider$1 -> com.seafile.seadroid2.notification.BaseNotificationProvider$1:
    153:153:void <init>(com.seafile.seadroid2.transfer.TransferService) -> <init>
    156:157:void run() -> run
com.seafile.seadroid2.notification.BaseNotificationProvider$NotificationState -> com.seafile.seadroid2.notification.BaseNotificationProvider$NotificationState:
    215:214:void <clinit>() -> <clinit>
    214:214:void <init>(java.lang.String,int) -> <init>
    214:214:com.seafile.seadroid2.notification.BaseNotificationProvider$NotificationState valueOf(java.lang.String) -> valueOf
    214:214:com.seafile.seadroid2.notification.BaseNotificationProvider$NotificationState[] values() -> values
com.seafile.seadroid2.notification.DownloadNotificationProvider -> com.seafile.seadroid2.notification.DownloadNotificationProvider:
    26:26:void <init>(com.seafile.seadroid2.transfer.DownloadTaskManager,com.seafile.seadroid2.transfer.TransferService) -> <init>
    96:96:java.lang.String getNotificationTitle() -> getNotificationTitle
    129:143:int getProgress() -> getProgress
    33:52:java.lang.String getProgressInfo() -> getProgressInfo
    62:86:com.seafile.seadroid2.notification.BaseNotificationProvider$NotificationState getState() -> getState
    101:122:void notifyStarted() -> notifyStarted
com.seafile.seadroid2.notification.UploadNotificationProvider -> com.seafile.seadroid2.notification.UploadNotificationProvider:
    24:24:void <init>(com.seafile.seadroid2.transfer.UploadTaskManager,com.seafile.seadroid2.transfer.TransferService) -> <init>
    142:142:java.lang.String getNotificationTitle() -> getNotificationTitle
    89:103:int getProgress() -> getProgress
    32:52:java.lang.String getProgressInfo() -> getProgressInfo
    108:132:com.seafile.seadroid2.notification.BaseNotificationProvider$NotificationState getState() -> getState
    62:82:void notifyStarted() -> notifyStarted
com.seafile.seadroid2.play.OnTransitionListener -> com.seafile.seadroid2.play.OnTransitionListener:
    13:13:void <init>() -> <init>
com.seafile.seadroid2.play.PlayActivity -> com.seafile.seadroid2.play.PlayActivity:
    32:32:void <init>() -> <init>
    32:32:com.shuyu.gsyvideoplayer.utils.OrientationUtils access$000(com.seafile.seadroid2.play.PlayActivity) -> access$000
    32:32:com.seafile.seadroid2.play.SampleVideo access$100(com.seafile.seadroid2.play.PlayActivity) -> access$100
>>>>>>> rename package name,fix action event info list same time crash
    174:176:boolean addTransitionListener() -> addTransitionListener
    64:99:void init() -> init
    162:168:void initTransition() -> initTransition
    128:138:void onBackPressed() -> onBackPressed
    50:60:void onCreate(android.os.Bundle) -> onCreate
    120:122:void onDestroy() -> onDestroy
    157:157:void onError(java.lang.String) -> onError
    105:106:void onPause() -> onPause
    111:113:void onResume() -> onResume
    151:152:void onSuccess(java.lang.String) -> onSuccess
<<<<<<< HEAD
com.seafile.vmoo.play.PlayActivity$1 -> com.seafile.vmoo.play.PlayActivity$1:
    69:69:void <init>(com.seafile.vmoo.play.PlayActivity) -> <init>
    72:72:void onClick(android.view.View) -> onClick
com.seafile.vmoo.play.PlayActivity$2 -> com.seafile.vmoo.play.PlayActivity$2:
    91:91:void <init>(com.seafile.vmoo.play.PlayActivity) -> <init>
    94:94:void onClick(android.view.View) -> onClick
com.seafile.vmoo.play.PlayActivity$3 -> com.seafile.vmoo.play.PlayActivity$3:
    138:138:void <init>(com.seafile.vmoo.play.PlayActivity) -> <init>
    141:142:void run() -> run
com.seafile.vmoo.play.PlayActivity$4 -> com.seafile.vmoo.play.PlayActivity$4:
    176:176:void <init>(com.seafile.vmoo.play.PlayActivity) -> <init>
    179:181:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
com.seafile.vmoo.play.SampleVideo -> com.seafile.vmoo.play.SampleVideo:
    45:39:void <init>(android.content.Context,java.lang.Boolean) -> <init>
    49:39:void <init>(android.content.Context) -> <init>
    53:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    28:28:boolean access$000(com.seafile.vmoo.play.SampleVideo) -> access$000
    28:28:int access$100(com.seafile.vmoo.play.SampleVideo) -> access$100
    28:28:int access$102(com.seafile.vmoo.play.SampleVideo,int) -> access$102
    28:28:void access$200(com.seafile.vmoo.play.SampleVideo) -> access$200
=======
com.seafile.seadroid2.play.PlayActivity$1 -> com.seafile.seadroid2.play.PlayActivity$1:
    69:69:void <init>(com.seafile.seadroid2.play.PlayActivity) -> <init>
    72:72:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.play.PlayActivity$2 -> com.seafile.seadroid2.play.PlayActivity$2:
    91:91:void <init>(com.seafile.seadroid2.play.PlayActivity) -> <init>
    94:94:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.play.PlayActivity$3 -> com.seafile.seadroid2.play.PlayActivity$3:
    138:138:void <init>(com.seafile.seadroid2.play.PlayActivity) -> <init>
    141:142:void run() -> run
com.seafile.seadroid2.play.PlayActivity$4 -> com.seafile.seadroid2.play.PlayActivity$4:
    176:176:void <init>(com.seafile.seadroid2.play.PlayActivity) -> <init>
    179:181:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
com.seafile.seadroid2.play.SampleVideo -> com.seafile.seadroid2.play.SampleVideo:
    45:39:void <init>(android.content.Context,java.lang.Boolean) -> <init>
    49:39:void <init>(android.content.Context) -> <init>
    53:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    28:28:boolean access$000(com.seafile.seadroid2.play.SampleVideo) -> access$000
    28:28:int access$100(com.seafile.seadroid2.play.SampleVideo) -> access$100
    28:28:int access$102(com.seafile.seadroid2.play.SampleVideo,int) -> access$102
    28:28:void access$200(com.seafile.seadroid2.play.SampleVideo) -> access$200
>>>>>>> rename package name,fix action event info list same time crash
    58:59:void init(android.content.Context) -> init
    63:66:void initView() -> initView
    214:216:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    94:95:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    198:205:void resolveNormalVideoShow(android.view.View,android.view.ViewGroup,com.shuyu.gsyvideoplayer.video.base.GSYVideoPlayer) -> resolveNormalVideoShow
    223:227:void resolveRotateUI() -> resolveRotateUI
    104:123:void resolveTransform() -> resolveTransform
    235:256:void resolveTypeUI() -> resolveTypeUI
<<<<<<< HEAD
    153:154:boolean setUp(java.util.List,boolean,java.io.File,java.lang.String) -> setUp
    173:179:com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer startWindowFullscreen(android.content.Context,boolean,boolean) -> startWindowFullscreen
com.seafile.vmoo.play.SampleVideo$1 -> com.seafile.vmoo.play.SampleVideo$1:
    66:66:void <init>(com.seafile.vmoo.play.SampleVideo) -> <init>
    69:83:void onClick(android.view.View) -> onClick
com.seafile.vmoo.play.SwitchVideoModel -> com.seafile.vmoo.play.SwitchVideoModel:
    17:17:java.lang.String getUrl() -> getUrl
    34:34:java.lang.String toString() -> toString
com.seafile.vmoo.play.VideoLinkTask -> com.seafile.vmoo.play.VideoLinkTask:
    25:29:void <init>(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,com.seafile.vmoo.play.VideoLinkStateListener) -> <init>
=======
    139:140:boolean setUp(java.util.List,boolean,java.lang.String) -> setUp
    153:154:boolean setUp(java.util.List,boolean,java.io.File,java.lang.String) -> setUp
    173:179:com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer startWindowFullscreen(android.content.Context,boolean,boolean) -> startWindowFullscreen
com.seafile.seadroid2.play.SampleVideo$1 -> com.seafile.seadroid2.play.SampleVideo$1:
    66:66:void <init>(com.seafile.seadroid2.play.SampleVideo) -> <init>
    69:83:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.play.SwitchVideoModel -> com.seafile.seadroid2.play.SwitchVideoModel:
    11:13:void <init>(java.lang.String,java.lang.String) -> <init>
    25:25:java.lang.String getName() -> getName
    17:17:java.lang.String getUrl() -> getUrl
    29:29:void setName(java.lang.String) -> setName
    21:21:void setUrl(java.lang.String) -> setUrl
    34:34:java.lang.String toString() -> toString
com.seafile.seadroid2.play.VideoLinkTask -> com.seafile.seadroid2.play.VideoLinkTask:
    25:29:void <init>(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,com.seafile.seadroid2.play.VideoLinkStateListener) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    15:15:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    36:42:java.lang.String doInBackground(java.lang.Void[]) -> doInBackground
    15:15:void onPostExecute(java.lang.Object) -> onPostExecute
    52:59:void onPostExecute(java.lang.String) -> onPostExecute
<<<<<<< HEAD
com.seafile.vmoo.provider.DocumentIdParser -> com.seafile.vmoo.provider.DocumentIdParser:
    49:51:void <init>(android.content.Context) -> <init>
    118:122:java.lang.String buildId(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String) -> buildId
    132:132:java.lang.String buildRootId(com.seafile.vmoo.account.Account) -> buildRootId
    136:136:java.lang.String buildStarredFilesId(com.seafile.vmoo.account.Account) -> buildStarredFilesId
    62:71:com.seafile.vmoo.account.Account getAccountFromId(java.lang.String) -> getAccountFromId
    99:102:java.lang.String getPathFromId(java.lang.String) -> getPathFromId
    81:83:java.lang.String getRepoIdFromId(java.lang.String) -> getRepoIdFromId
    144:144:boolean isStarredFiles(java.lang.String) -> isStarredFiles
com.seafile.vmoo.provider.SeafileProvider -> com.seafile.vmoo.provider.SeafileProvider:
    86:116:void <clinit>() -> <clinit>
    83:118:void <init>() -> <init>
    83:83:com.seafile.vmoo.provider.DocumentIdParser access$000(com.seafile.vmoo.provider.SeafileProvider) -> access$000
    83:83:com.seafile.vmoo.data.DataManager access$100(com.seafile.vmoo.provider.SeafileProvider,java.lang.String) -> access$100
    83:83:java.io.File access$200(android.os.CancellationSignal,com.seafile.vmoo.data.DataManager,com.seafile.vmoo.data.SeafRepo,java.lang.String) -> access$200
    83:83:android.os.ParcelFileDescriptor access$300(com.seafile.vmoo.provider.SeafileProvider,com.seafile.vmoo.data.DataManager,java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String) -> access$300
    83:83:java.util.Set access$400(com.seafile.vmoo.provider.SeafileProvider) -> access$400
    524:524:android.database.MatrixCursor createCursor(java.lang.String[],boolean,boolean) -> createCursor
    940:942:com.seafile.vmoo.data.DataManager createDataManager(java.lang.String) -> createDataManager
    463:466:java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String) -> createDocument
    825:828:void fetchDirentAsync(com.seafile.vmoo.data.DataManager,java.lang.String,java.lang.String,android.database.MatrixCursor) -> fetchDirentAsync
    902:905:void fetchReposAsync(com.seafile.vmoo.data.DataManager,android.database.MatrixCursor) -> fetchReposAsync
    864:867:void fetchStarredAsync(com.seafile.vmoo.data.DataManager,android.database.MatrixCursor) -> fetchStarredAsync
    603:629:java.io.File getFile(android.os.CancellationSignal,com.seafile.vmoo.data.DataManager,com.seafile.vmoo.data.SeafRepo,java.lang.String) -> getFile
    734:770:void includeDirent(android.database.MatrixCursor,com.seafile.vmoo.data.DataManager,java.lang.String,java.lang.String,com.seafile.vmoo.data.SeafDirent) -> includeDirent
    662:671:void includeDocIdRoot(android.database.MatrixCursor,com.seafile.vmoo.account.Account) -> includeDocIdRoot
    682:699:void includeRepo(android.database.MatrixCursor,com.seafile.vmoo.account.Account,com.seafile.vmoo.data.SeafRepo) -> includeRepo
    642:652:void includeRoot(android.database.MatrixCursor,com.seafile.vmoo.account.Account) -> includeRoot
    783:808:void includeStarredFileDirent(android.database.MatrixCursor,com.seafile.vmoo.data.DataManager,com.seafile.vmoo.data.SeafStarredFile) -> includeStarredFileDirent
    706:719:void includeStarredFilesRepo(android.database.MatrixCursor,com.seafile.vmoo.account.Account) -> includeStarredFilesRepo
    326:326:boolean isChildDocument(java.lang.String,java.lang.String) -> isChildDocument
    548:552:android.os.ParcelFileDescriptor makeParcelFileDescriptor(com.seafile.vmoo.data.DataManager,java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String) -> makeParcelFileDescriptor
=======
com.seafile.seadroid2.provider.DocumentIdParser -> com.seafile.seadroid2.provider.DocumentIdParser:
    49:51:void <init>(android.content.Context) -> <init>
    118:122:java.lang.String buildId(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String) -> buildId
    132:132:java.lang.String buildRootId(com.seafile.seadroid2.account.Account) -> buildRootId
    136:136:java.lang.String buildStarredFilesId(com.seafile.seadroid2.account.Account) -> buildStarredFilesId
    62:71:com.seafile.seadroid2.account.Account getAccountFromId(java.lang.String) -> getAccountFromId
    99:102:java.lang.String getPathFromId(java.lang.String) -> getPathFromId
    81:83:java.lang.String getRepoIdFromId(java.lang.String) -> getRepoIdFromId
    140:140:boolean isRoot(java.lang.String) -> isRoot
    144:144:boolean isStarredFiles(java.lang.String) -> isStarredFiles
com.seafile.seadroid2.provider.SeafileProvider -> com.seafile.seadroid2.provider.SeafileProvider:
    86:116:void <clinit>() -> <clinit>
    83:118:void <init>() -> <init>
    83:83:com.seafile.seadroid2.provider.DocumentIdParser access$000(com.seafile.seadroid2.provider.SeafileProvider) -> access$000
    83:83:com.seafile.seadroid2.data.DataManager access$100(com.seafile.seadroid2.provider.SeafileProvider,java.lang.String) -> access$100
    83:83:java.io.File access$200(android.os.CancellationSignal,com.seafile.seadroid2.data.DataManager,com.seafile.seadroid2.data.SeafRepo,java.lang.String) -> access$200
    83:83:android.os.ParcelFileDescriptor access$300(com.seafile.seadroid2.provider.SeafileProvider,com.seafile.seadroid2.data.DataManager,java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String) -> access$300
    83:83:java.util.Set access$400(com.seafile.seadroid2.provider.SeafileProvider) -> access$400
    524:524:android.database.MatrixCursor createCursor(java.lang.String[],boolean,boolean) -> createCursor
    940:942:com.seafile.seadroid2.data.DataManager createDataManager(java.lang.String) -> createDataManager
    463:466:java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String) -> createDocument
    825:828:void fetchDirentAsync(com.seafile.seadroid2.data.DataManager,java.lang.String,java.lang.String,android.database.MatrixCursor) -> fetchDirentAsync
    902:905:void fetchReposAsync(com.seafile.seadroid2.data.DataManager,android.database.MatrixCursor) -> fetchReposAsync
    864:867:void fetchStarredAsync(com.seafile.seadroid2.data.DataManager,android.database.MatrixCursor) -> fetchStarredAsync
    603:629:java.io.File getFile(android.os.CancellationSignal,com.seafile.seadroid2.data.DataManager,com.seafile.seadroid2.data.SeafRepo,java.lang.String) -> getFile
    734:770:void includeDirent(android.database.MatrixCursor,com.seafile.seadroid2.data.DataManager,java.lang.String,java.lang.String,com.seafile.seadroid2.data.SeafDirent) -> includeDirent
    662:671:void includeDocIdRoot(android.database.MatrixCursor,com.seafile.seadroid2.account.Account) -> includeDocIdRoot
    682:699:void includeRepo(android.database.MatrixCursor,com.seafile.seadroid2.account.Account,com.seafile.seadroid2.data.SeafRepo) -> includeRepo
    642:652:void includeRoot(android.database.MatrixCursor,com.seafile.seadroid2.account.Account) -> includeRoot
    783:808:void includeStarredFileDirent(android.database.MatrixCursor,com.seafile.seadroid2.data.DataManager,com.seafile.seadroid2.data.SeafStarredFile) -> includeStarredFileDirent
    706:719:void includeStarredFilesRepo(android.database.MatrixCursor,com.seafile.seadroid2.account.Account) -> includeStarredFilesRepo
    326:326:boolean isChildDocument(java.lang.String,java.lang.String) -> isChildDocument
    548:552:android.os.ParcelFileDescriptor makeParcelFileDescriptor(com.seafile.seadroid2.data.DataManager,java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String) -> makeParcelFileDescriptor
>>>>>>> rename package name,fix action event info list same time crash
    958:969:java.lang.String[] netProjection(java.lang.String[],java.lang.String[]) -> netProjection
    128:133:boolean onCreate() -> onCreate
    335:336:android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal) -> openDocument
    392:396:android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal) -> openDocumentThumbnail
    165:229:android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String) -> queryChildDocuments
    260:279:android.database.Cursor queryDocument(java.lang.String,java.lang.String[]) -> queryDocument
    142:154:android.database.Cursor queryRoots(java.lang.String[]) -> queryRoots
<<<<<<< HEAD
com.seafile.vmoo.provider.SeafileProvider$1 -> com.seafile.vmoo.provider.SeafileProvider$1:
    118:118:void <init>(com.seafile.vmoo.provider.SeafileProvider) -> <init>
    121:122:void onAccountsUpdated(android.accounts.Account[]) -> onAccountsUpdated
com.seafile.vmoo.provider.SeafileProvider$10 -> com.seafile.vmoo.provider.SeafileProvider$10:
    867:867:void <init>(com.seafile.vmoo.provider.SeafileProvider,com.seafile.vmoo.data.DataManager,android.net.Uri) -> <init>
    871:887:void run() -> run
com.seafile.vmoo.provider.SeafileProvider$11 -> com.seafile.vmoo.provider.SeafileProvider$11:
    905:905:void <init>(com.seafile.vmoo.provider.SeafileProvider,com.seafile.vmoo.data.DataManager,android.net.Uri) -> <init>
    910:926:void run() -> run
com.seafile.vmoo.provider.SeafileProvider$2 -> com.seafile.vmoo.provider.SeafileProvider$2:
    340:340:void <init>(com.seafile.vmoo.provider.SeafileProvider,java.lang.String,android.os.CancellationSignal,java.lang.String) -> <init>
    340:340:java.lang.Object call() -> call
    345:352:android.os.ParcelFileDescriptor call() -> call
com.seafile.vmoo.provider.SeafileProvider$3 -> com.seafile.vmoo.provider.SeafileProvider$3:
    363:363:void <init>(com.seafile.vmoo.provider.SeafileProvider,java.util.concurrent.Future) -> <init>
    366:367:void onCancel() -> onCancel
com.seafile.vmoo.provider.SeafileProvider$4 -> com.seafile.vmoo.provider.SeafileProvider$4:
    427:427:void <init>(com.seafile.vmoo.provider.SeafileProvider,android.os.ParcelFileDescriptor[],java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> <init>
    432:442:void run() -> run
com.seafile.vmoo.provider.SeafileProvider$5 -> com.seafile.vmoo.provider.SeafileProvider$5:
    448:448:void <init>(com.seafile.vmoo.provider.SeafileProvider,java.util.concurrent.Future,android.os.ParcelFileDescriptor[]) -> <init>
    451:453:void onCancel() -> onCancel
com.seafile.vmoo.provider.SeafileProvider$6 -> com.seafile.vmoo.provider.SeafileProvider$6:
    524:524:void <init>(java.lang.String[],boolean,boolean) -> <init>
    527:530:android.os.Bundle getExtras() -> getExtras
com.seafile.vmoo.provider.SeafileProvider$7 -> com.seafile.vmoo.provider.SeafileProvider$7:
    553:553:void <init>(com.seafile.vmoo.provider.SeafileProvider,java.lang.String,java.io.File,java.lang.String,java.lang.String,com.seafile.vmoo.data.DataManager,java.lang.String) -> <init>
    556:562:void onClose(java.io.IOException) -> onClose
com.seafile.vmoo.provider.SeafileProvider$7$1 -> com.seafile.vmoo.provider.SeafileProvider$7$1:
    562:562:void <init>(com.seafile.vmoo.provider.SeafileProvider$7) -> <init>
    566:571:void run() -> run
com.seafile.vmoo.provider.SeafileProvider$8 -> com.seafile.vmoo.provider.SeafileProvider$8:
    603:603:void <init>(android.os.CancellationSignal) -> <init>
    611:612:boolean isCancelled() -> isCancelled
com.seafile.vmoo.provider.SeafileProvider$9 -> com.seafile.vmoo.provider.SeafileProvider$9:
    828:828:void <init>(com.seafile.vmoo.provider.SeafileProvider,com.seafile.vmoo.data.DataManager,java.lang.String,java.lang.String,android.net.Uri) -> <init>
    833:849:void run() -> run
com.seafile.vmoo.ssl.CertsDBHelper -> com.seafile.vmoo.ssl.CertsDBHelper:
    44:33:void <init>(android.content.Context) -> <init>
    82:109:java.security.cert.X509Certificate cursorToCert(android.database.Cursor) -> cursorToCert
    59:76:java.security.cert.X509Certificate getCertificate(java.lang.String) -> getCertificate
    36:40:com.seafile.vmoo.ssl.CertsDBHelper getDatabaseHelper() -> getDatabaseHelper
    49:49:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    117:136:void saveCertificate(java.lang.String,java.security.cert.X509Certificate) -> saveCertificate
com.seafile.vmoo.ssl.CertsManager -> com.seafile.vmoo.ssl.CertsManager:
    16:21:void <init>() -> <init>
    16:16:com.seafile.vmoo.ssl.CertsDBHelper access$000(com.seafile.vmoo.ssl.CertsManager) -> access$000
    55:62:java.security.cert.X509Certificate getCertificate(com.seafile.vmoo.account.Account) -> getCertificate
    26:30:com.seafile.vmoo.ssl.CertsManager instance() -> instance
    34:51:void saveCertForAccount(com.seafile.vmoo.account.Account,boolean) -> saveCertForAccount
com.seafile.vmoo.ssl.CertsManager$1 -> com.seafile.vmoo.ssl.CertsManager$1:
    43:43:void <init>(com.seafile.vmoo.ssl.CertsManager,com.seafile.vmoo.account.Account,java.security.cert.X509Certificate) -> <init>
    46:46:void run() -> run
com.seafile.vmoo.ssl.SSLSeafileSocketFactory -> com.seafile.vmoo.ssl.SSLSeafileSocketFactory:
=======
com.seafile.seadroid2.provider.SeafileProvider$1 -> com.seafile.seadroid2.provider.SeafileProvider$1:
    118:118:void <init>(com.seafile.seadroid2.provider.SeafileProvider) -> <init>
    121:122:void onAccountsUpdated(android.accounts.Account[]) -> onAccountsUpdated
com.seafile.seadroid2.provider.SeafileProvider$10 -> com.seafile.seadroid2.provider.SeafileProvider$10:
    867:867:void <init>(com.seafile.seadroid2.provider.SeafileProvider,com.seafile.seadroid2.data.DataManager,android.net.Uri) -> <init>
    871:887:void run() -> run
com.seafile.seadroid2.provider.SeafileProvider$11 -> com.seafile.seadroid2.provider.SeafileProvider$11:
    905:905:void <init>(com.seafile.seadroid2.provider.SeafileProvider,com.seafile.seadroid2.data.DataManager,android.net.Uri) -> <init>
    910:926:void run() -> run
com.seafile.seadroid2.provider.SeafileProvider$2 -> com.seafile.seadroid2.provider.SeafileProvider$2:
    340:340:void <init>(com.seafile.seadroid2.provider.SeafileProvider,java.lang.String,android.os.CancellationSignal,java.lang.String) -> <init>
    340:340:java.lang.Object call() -> call
    345:352:android.os.ParcelFileDescriptor call() -> call
com.seafile.seadroid2.provider.SeafileProvider$3 -> com.seafile.seadroid2.provider.SeafileProvider$3:
    363:363:void <init>(com.seafile.seadroid2.provider.SeafileProvider,java.util.concurrent.Future) -> <init>
    366:367:void onCancel() -> onCancel
com.seafile.seadroid2.provider.SeafileProvider$4 -> com.seafile.seadroid2.provider.SeafileProvider$4:
    427:427:void <init>(com.seafile.seadroid2.provider.SeafileProvider,android.os.ParcelFileDescriptor[],java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> <init>
    432:442:void run() -> run
com.seafile.seadroid2.provider.SeafileProvider$5 -> com.seafile.seadroid2.provider.SeafileProvider$5:
    448:448:void <init>(com.seafile.seadroid2.provider.SeafileProvider,java.util.concurrent.Future,android.os.ParcelFileDescriptor[]) -> <init>
    451:453:void onCancel() -> onCancel
com.seafile.seadroid2.provider.SeafileProvider$6 -> com.seafile.seadroid2.provider.SeafileProvider$6:
    524:524:void <init>(java.lang.String[],boolean,boolean) -> <init>
    527:530:android.os.Bundle getExtras() -> getExtras
com.seafile.seadroid2.provider.SeafileProvider$7 -> com.seafile.seadroid2.provider.SeafileProvider$7:
    553:553:void <init>(com.seafile.seadroid2.provider.SeafileProvider,java.lang.String,java.io.File,java.lang.String,java.lang.String,com.seafile.seadroid2.data.DataManager,java.lang.String) -> <init>
    556:562:void onClose(java.io.IOException) -> onClose
com.seafile.seadroid2.provider.SeafileProvider$7$1 -> com.seafile.seadroid2.provider.SeafileProvider$7$1:
    562:562:void <init>(com.seafile.seadroid2.provider.SeafileProvider$7) -> <init>
    566:571:void run() -> run
com.seafile.seadroid2.provider.SeafileProvider$8 -> com.seafile.seadroid2.provider.SeafileProvider$8:
    603:603:void <init>(android.os.CancellationSignal) -> <init>
    611:612:boolean isCancelled() -> isCancelled
com.seafile.seadroid2.provider.SeafileProvider$9 -> com.seafile.seadroid2.provider.SeafileProvider$9:
    828:828:void <init>(com.seafile.seadroid2.provider.SeafileProvider,com.seafile.seadroid2.data.DataManager,java.lang.String,java.lang.String,android.net.Uri) -> <init>
    833:849:void run() -> run
com.seafile.seadroid2.ssl.CertsDBHelper -> com.seafile.seadroid2.ssl.CertsDBHelper:
    44:33:void <init>(android.content.Context) -> <init>
    82:109:java.security.cert.X509Certificate cursorToCert(android.database.Cursor) -> cursorToCert
    59:76:java.security.cert.X509Certificate getCertificate(java.lang.String) -> getCertificate
    36:40:com.seafile.seadroid2.ssl.CertsDBHelper getDatabaseHelper() -> getDatabaseHelper
    49:49:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    117:136:void saveCertificate(java.lang.String,java.security.cert.X509Certificate) -> saveCertificate
com.seafile.seadroid2.ssl.CertsManager -> com.seafile.seadroid2.ssl.CertsManager:
    16:21:void <init>() -> <init>
    16:16:com.seafile.seadroid2.ssl.CertsDBHelper access$000(com.seafile.seadroid2.ssl.CertsManager) -> access$000
    55:62:java.security.cert.X509Certificate getCertificate(com.seafile.seadroid2.account.Account) -> getCertificate
    26:30:com.seafile.seadroid2.ssl.CertsManager instance() -> instance
    34:51:void saveCertForAccount(com.seafile.seadroid2.account.Account,boolean) -> saveCertForAccount
com.seafile.seadroid2.ssl.CertsManager$1 -> com.seafile.seadroid2.ssl.CertsManager$1:
    43:43:void <init>(com.seafile.seadroid2.ssl.CertsManager,com.seafile.seadroid2.account.Account,java.security.cert.X509Certificate) -> <init>
    46:46:void run() -> run
com.seafile.seadroid2.ssl.SSLSeafileSocketFactory -> com.seafile.seadroid2.ssl.SSLSeafileSocketFactory:
>>>>>>> rename package name,fix action event info list same time crash
    35:40:void <init>(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom) -> <init>
    54:58:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    64:68:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    74:78:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    84:88:java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    94:98:java.net.Socket createSocket(java.lang.String,int) -> createSocket
    119:162:java.lang.String[] getCipherList() -> getCipherList
    45:45:java.lang.String[] getDefaultCipherSuites() -> getDefaultCipherSuites
    105:108:java.lang.String[] getProtocolList() -> getProtocolList
    50:50:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
<<<<<<< HEAD
com.seafile.vmoo.ssl.SSLTrustManager -> com.seafile.vmoo.ssl.SSLTrustManager:
    50:46:void <init>() -> <init>
    32:32:javax.net.ssl.X509TrustManager access$000(com.seafile.vmoo.ssl.SSLTrustManager) -> access$000
    126:130:java.security.cert.X509Certificate getCertificateInfo(com.seafile.vmoo.account.Account) -> getCertificateInfo
    117:122:java.util.List getCertsChainForAccount(com.seafile.vmoo.account.Account) -> getCertsChainForAccount
    305:305:javax.net.ssl.X509TrustManager getDefaultTrustManager() -> getDefaultTrustManager
    135:141:com.seafile.vmoo.ssl.SSLTrustManager$SslFailureReason getFailureReason(com.seafile.vmoo.account.Account) -> getFailureReason
    95:113:javax.net.ssl.SSLSocketFactory getSSLSocketFactory(com.seafile.vmoo.account.Account) -> getSSLSocketFactory
    85:91:javax.net.ssl.TrustManager[] getTrustManagers(com.seafile.vmoo.account.Account) -> getTrustManagers
    66:78:void init() -> init
    54:59:com.seafile.vmoo.ssl.SSLTrustManager instance() -> instance
    150:151:java.util.List orderCerts(java.security.cert.X509Certificate[]) -> orderCerts
com.seafile.vmoo.ssl.SSLTrustManager$SecureX509TrustManager -> com.seafile.vmoo.ssl.SSLTrustManager$SecureX509TrustManager:
    197:199:void <init>(com.seafile.vmoo.ssl.SSLTrustManager,com.seafile.vmoo.account.Account) -> <init>
    213:213:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    219:220:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    261:269:void customCheck(java.util.List,java.lang.String) -> customCheck
    291:291:void finalize() -> finalize
    286:286:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    207:207:com.seafile.vmoo.ssl.SSLTrustManager$SslFailureReason getReason() -> getReason
    203:203:java.util.List getServerCertsChain() -> getServerCertsChain
    247:254:void validateHostName(java.util.List) -> validateHostName
com.seafile.vmoo.ssl.SSLTrustManager$SslFailureReason -> com.seafile.vmoo.ssl.SSLTrustManager$SslFailureReason:
    34:33:void <clinit>() -> <clinit>
    33:33:void <init>(java.lang.String,int) -> <init>
    33:33:com.seafile.vmoo.ssl.SSLTrustManager$SslFailureReason valueOf(java.lang.String) -> valueOf
    33:33:com.seafile.vmoo.ssl.SSLTrustManager$SslFailureReason[] values() -> values
com.seafile.vmoo.transfer.DownloadTask -> com.seafile.vmoo.transfer.DownloadTask:
    28:29:void <init>(int,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.transfer.DownloadStateListener) -> <init>
    19:19:boolean access$002(com.seafile.vmoo.transfer.DownloadTask,boolean) -> access$002
    19:19:void access$100(com.seafile.vmoo.transfer.DownloadTask,java.lang.Object[]) -> access$100
    19:19:void access$200(com.seafile.vmoo.transfer.DownloadTask,java.lang.Object[]) -> access$200
    19:19:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    50:84:java.io.File doInBackground(java.lang.Void[]) -> doInBackground
    19:19:com.seafile.vmoo.transfer.TransferTaskInfo getTaskInfo() -> getTaskInfo
    124:124:com.seafile.vmoo.transfer.DownloadTaskInfo getTaskInfo() -> getTaskInfo
=======
com.seafile.seadroid2.ssl.SSLTrustManager -> com.seafile.seadroid2.ssl.SSLTrustManager:
    51:47:void <init>() -> <init>
    33:33:javax.net.ssl.X509TrustManager access$000(com.seafile.seadroid2.ssl.SSLTrustManager) -> access$000
    297:297:java.util.Map getCachedFactories() -> getCachedFactories
    127:131:java.security.cert.X509Certificate getCertificateInfo(com.seafile.seadroid2.account.Account) -> getCertificateInfo
    118:123:java.util.List getCertsChainForAccount(com.seafile.seadroid2.account.Account) -> getCertsChainForAccount
    306:306:javax.net.ssl.X509TrustManager getDefaultTrustManager() -> getDefaultTrustManager
    136:142:com.seafile.seadroid2.ssl.SSLTrustManager$SslFailureReason getFailureReason(com.seafile.seadroid2.account.Account) -> getFailureReason
    96:114:javax.net.ssl.SSLSocketFactory getSSLSocketFactory(com.seafile.seadroid2.account.Account) -> getSSLSocketFactory
    86:92:javax.net.ssl.TrustManager[] getTrustManagers(com.seafile.seadroid2.account.Account) -> getTrustManagers
    67:79:void init() -> init
    55:60:com.seafile.seadroid2.ssl.SSLTrustManager instance() -> instance
    151:152:java.util.List orderCerts(java.security.cert.X509Certificate[]) -> orderCerts
com.seafile.seadroid2.ssl.SSLTrustManager$SecureX509TrustManager -> com.seafile.seadroid2.ssl.SSLTrustManager$SecureX509TrustManager:
    198:200:void <init>(com.seafile.seadroid2.ssl.SSLTrustManager,com.seafile.seadroid2.account.Account) -> <init>
    214:214:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    220:221:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    262:270:void customCheck(java.util.List,java.lang.String) -> customCheck
    292:292:void finalize() -> finalize
    287:287:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    237:241:java.lang.String getCeritificateInfo() -> getCeritificateInfo
    208:208:com.seafile.seadroid2.ssl.SSLTrustManager$SslFailureReason getReason() -> getReason
    204:204:java.util.List getServerCertsChain() -> getServerCertsChain
    248:255:void validateHostName(java.util.List) -> validateHostName
com.seafile.seadroid2.ssl.SSLTrustManager$SslFailureReason -> com.seafile.seadroid2.ssl.SSLTrustManager$SslFailureReason:
    35:34:void <clinit>() -> <clinit>
    34:34:void <init>(java.lang.String,int) -> <init>
    34:34:com.seafile.seadroid2.ssl.SSLTrustManager$SslFailureReason valueOf(java.lang.String) -> valueOf
    34:34:com.seafile.seadroid2.ssl.SSLTrustManager$SslFailureReason[] values() -> values
com.seafile.seadroid2.transfer.DownloadTask -> com.seafile.seadroid2.transfer.DownloadTask:
    28:29:void <init>(int,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.transfer.DownloadStateListener) -> <init>
    19:19:boolean access$002(com.seafile.seadroid2.transfer.DownloadTask,boolean) -> access$002
    19:19:void access$100(com.seafile.seadroid2.transfer.DownloadTask,java.lang.Object[]) -> access$100
    19:19:void access$200(com.seafile.seadroid2.transfer.DownloadTask,java.lang.Object[]) -> access$200
    19:19:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    50:84:java.io.File doInBackground(java.lang.Void[]) -> doInBackground
    130:130:java.lang.String getLocalPath() -> getLocalPath
    19:19:com.seafile.seadroid2.transfer.TransferTaskInfo getTaskInfo() -> getTaskInfo
    124:124:com.seafile.seadroid2.transfer.DownloadTaskInfo getTaskInfo() -> getTaskInfo
>>>>>>> rename package name,fix action event info list same time crash
    119:119:void onCancelled() -> onCancelled
    19:19:void onPostExecute(java.lang.Object) -> onPostExecute
    103:112:void onPostExecute(java.io.File) -> onPostExecute
    19:19:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    38:40:void onProgressUpdate(java.lang.Long[]) -> onProgressUpdate
<<<<<<< HEAD
com.seafile.vmoo.transfer.DownloadTask$1 -> com.seafile.vmoo.transfer.DownloadTask$1:
    54:54:void <init>(com.seafile.vmoo.transfer.DownloadTask) -> <init>
    64:64:boolean isCancelled() -> isCancelled
    58:59:void onProgressNotify(long,boolean) -> onProgressNotify
com.seafile.vmoo.transfer.DownloadTask$2 -> com.seafile.vmoo.transfer.DownloadTask$2:
    70:70:void <init>(com.seafile.vmoo.transfer.DownloadTask) -> <init>
    79:79:boolean isCancelled() -> isCancelled
    74:74:void onProgressNotify(long,boolean) -> onProgressNotify
com.seafile.vmoo.transfer.DownloadTaskInfo -> com.seafile.vmoo.transfer.DownloadTaskInfo:
    29:33:void <init>(com.seafile.vmoo.account.Account,int,com.seafile.vmoo.transfer.TaskState,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,com.seafile.vmoo.SeafException) -> <init>
    40:50:boolean equals(java.lang.Object) -> equals
com.seafile.vmoo.transfer.DownloadTaskManager -> com.seafile.vmoo.transfer.DownloadTaskManager:
    22:22:void <init>() -> <init>
    36:54:int addTask(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,long) -> addTask
    59:60:void addTaskToQue(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String) -> addTaskToQue
    151:152:void cancelAllDownloadNotification() -> cancelAllDownloadNotification
    82:91:java.util.List getTaskInfoListByPath(java.lang.String,java.lang.String) -> getTaskInfoListByPath
=======
com.seafile.seadroid2.transfer.DownloadTask$1 -> com.seafile.seadroid2.transfer.DownloadTask$1:
    54:54:void <init>(com.seafile.seadroid2.transfer.DownloadTask) -> <init>
    64:64:boolean isCancelled() -> isCancelled
    58:59:void onProgressNotify(long,boolean) -> onProgressNotify
com.seafile.seadroid2.transfer.DownloadTask$2 -> com.seafile.seadroid2.transfer.DownloadTask$2:
    70:70:void <init>(com.seafile.seadroid2.transfer.DownloadTask) -> <init>
    79:79:boolean isCancelled() -> isCancelled
    74:74:void onProgressNotify(long,boolean) -> onProgressNotify
com.seafile.seadroid2.transfer.DownloadTaskInfo -> com.seafile.seadroid2.transfer.DownloadTaskInfo:
    29:33:void <init>(com.seafile.seadroid2.account.Account,int,com.seafile.seadroid2.transfer.TaskState,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long,com.seafile.seadroid2.SeafException) -> <init>
    40:50:boolean equals(java.lang.Object) -> equals
com.seafile.seadroid2.transfer.DownloadTaskManager -> com.seafile.seadroid2.transfer.DownloadTaskManager:
    22:22:void <init>() -> <init>
    36:54:int addTask(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,long) -> addTask
    59:60:void addTaskToQue(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String) -> addTaskToQue
    151:152:void cancelAllDownloadNotification() -> cancelAllDownloadNotification
    64:68:int getDownloadingFileCountByPath(java.lang.String,java.lang.String) -> getDownloadingFileCountByPath
    144:145:com.seafile.seadroid2.notification.DownloadNotificationProvider getNotifProvider() -> getNotifProvider
    82:91:java.util.List getTaskInfoListByPath(java.lang.String,java.lang.String) -> getTaskInfoListByPath
    106:112:java.util.List getTaskInfoListByRepo(java.lang.String) -> getTaskInfoListByRepo
>>>>>>> rename package name,fix action event info list same time crash
    140:140:boolean hasNotifProvider() -> hasNotifProvider
    127:132:void notifyProgress(int) -> notifyProgress
    176:181:void onFileDownloadFailed(int) -> onFileDownloadFailed
    158:161:void onFileDownloadProgress(int) -> onFileDownloadProgress
    166:171:void onFileDownloaded(int) -> onFileDownloaded
    120:123:void retry(int) -> retry
<<<<<<< HEAD
    136:136:void saveNotifProvider(com.seafile.vmoo.notification.DownloadNotificationProvider) -> saveNotifProvider
com.seafile.vmoo.transfer.PendingUploadInfo -> com.seafile.vmoo.transfer.PendingUploadInfo:
    13:19:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> <init>
com.seafile.vmoo.transfer.TaskState -> com.seafile.vmoo.transfer.TaskState:
    7:7:void <clinit>() -> <clinit>
    7:7:void <init>(java.lang.String,int) -> <init>
    7:7:com.seafile.vmoo.transfer.TaskState valueOf(java.lang.String) -> valueOf
    7:7:com.seafile.vmoo.transfer.TaskState[] values() -> values
com.seafile.vmoo.transfer.TransferManager -> com.seafile.vmoo.transfer.TransferManager:
    20:42:void <init>() -> <init>
    71:81:void addTaskToQue(com.seafile.vmoo.transfer.TransferTask) -> addTaskToQue
=======
    136:136:void saveNotifProvider(com.seafile.seadroid2.notification.DownloadNotificationProvider) -> saveNotifProvider
com.seafile.seadroid2.transfer.PendingUploadInfo -> com.seafile.seadroid2.transfer.PendingUploadInfo:
    13:19:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> <init>
com.seafile.seadroid2.transfer.TaskState -> com.seafile.seadroid2.transfer.TaskState:
    7:7:void <clinit>() -> <clinit>
    7:7:void <init>(java.lang.String,int) -> <init>
    7:7:com.seafile.seadroid2.transfer.TaskState valueOf(java.lang.String) -> valueOf
    7:7:com.seafile.seadroid2.transfer.TaskState[] values() -> values
com.seafile.seadroid2.transfer.TransferManager -> com.seafile.seadroid2.transfer.TransferManager:
    20:42:void <init>() -> <init>
    71:81:void addTaskToQue(com.seafile.seadroid2.transfer.TransferTask) -> addTaskToQue
>>>>>>> rename package name,fix action event info list same time crash
    99:105:void cancel(int) -> cancel
    184:186:void cancelAll() -> cancelAll
    191:192:void cancelByIds(java.util.List) -> cancelByIds
    87:96:void doNext() -> doNext
    197:203:java.util.List getAllTaskInfoList() -> getAllTaskInfoList
<<<<<<< HEAD
    45:45:com.seafile.vmoo.transfer.TransferTask getTask(int) -> getTask
    49:51:com.seafile.vmoo.transfer.TransferTaskInfo getTaskInfo(int) -> getTaskInfo
    58:67:boolean hasInQue(com.seafile.vmoo.transfer.TransferTask) -> hasInQue
    175:177:boolean isTransferring() -> isTransferring
    110:121:void remove(int) -> remove
    163:166:void removeByIds(java.util.List) -> removeByIds
    146:154:void removeByState(com.seafile.vmoo.transfer.TaskState) -> removeByState
com.seafile.vmoo.transfer.TransferService -> com.seafile.vmoo.transfer.TransferService:
    14:17:void <init>() -> <init>
    206:206:int addDownloadTask(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String) -> addDownloadTask
    210:210:int addDownloadTask(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,long) -> addDownloadTask
    214:214:void addTaskToDownloadQue(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String) -> addTaskToDownloadQue
    93:93:int addTaskToUploadQue(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> addTaskToUploadQue
    113:113:int addTaskToUploadQueBlock(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> addTaskToUploadQueBlock
    131:131:int addUploadTask(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> addUploadTask
=======
    45:45:com.seafile.seadroid2.transfer.TransferTask getTask(int) -> getTask
    49:51:com.seafile.seadroid2.transfer.TransferTaskInfo getTaskInfo(int) -> getTaskInfo
    128:135:java.util.List getTasksByState(com.seafile.seadroid2.transfer.TaskState) -> getTasksByState
    58:67:boolean hasInQue(com.seafile.seadroid2.transfer.TransferTask) -> hasInQue
    175:177:boolean isTransferring() -> isTransferring
    110:121:void remove(int) -> remove
    163:166:void removeByIds(java.util.List) -> removeByIds
    146:154:void removeByState(com.seafile.seadroid2.transfer.TaskState) -> removeByState
    124:125:void removeInAllTaskList(int) -> removeInAllTaskList
com.seafile.seadroid2.transfer.TransferService -> com.seafile.seadroid2.transfer.TransferService:
    14:17:void <init>() -> <init>
    206:206:int addDownloadTask(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String) -> addDownloadTask
    210:210:int addDownloadTask(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,long) -> addDownloadTask
    214:214:void addTaskToDownloadQue(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String) -> addTaskToDownloadQue
    93:93:int addTaskToUploadQue(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> addTaskToUploadQue
    113:113:int addTaskToUploadQueBlock(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> addTaskToUploadQueBlock
    131:131:int addUploadTask(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> addUploadTask
>>>>>>> rename package name,fix action event info list same time crash
    169:170:void cancelAllUploadTasks() -> cancelAllUploadTasks
    280:280:void cancelDownloadTask(int) -> cancelDownloadTask
    288:289:void cancelDownloadTaskInQue(int) -> cancelDownloadTaskInQue
    284:284:void cancelNotification() -> cancelNotification
<<<<<<< HEAD
=======
    164:165:void cancelUploadTaskInQue(int) -> cancelUploadTaskInQue
>>>>>>> rename package name,fix action event info list same time crash
    174:175:void cancelUploadTasksByIds(java.util.List) -> cancelUploadTasksByIds
    293:294:void cancellAllDownloadTasks() -> cancellAllDownloadTasks
    298:299:void cancellDownloadTasksByIds(java.util.List) -> cancellDownloadTasksByIds
    218:218:java.util.List getAllDownloadTaskInfos() -> getAllDownloadTaskInfos
    139:139:java.util.List getAllUploadTaskInfos() -> getAllUploadTaskInfos
<<<<<<< HEAD
    276:276:com.seafile.vmoo.transfer.DownloadTaskInfo getDownloadTaskInfo(int) -> getDownloadTaskInfo
    226:226:java.util.List getDownloadTaskInfosByPath(java.lang.String,java.lang.String) -> getDownloadTaskInfosByPath
    20:20:com.seafile.vmoo.transfer.DownloadTaskManager getDownloadTaskManager() -> getDownloadTaskManager
    143:143:java.util.List getNoneCameraUploadTaskInfos() -> getNoneCameraUploadTaskInfos
    135:135:com.seafile.vmoo.transfer.UploadTaskInfo getUploadTaskInfo(int) -> getUploadTaskInfo
    24:24:com.seafile.vmoo.transfer.UploadTaskManager getUploadTaskManager() -> getUploadTaskManager
=======
    327:327:com.seafile.seadroid2.notification.DownloadNotificationProvider getDownloadNotifProvider() -> getDownloadNotifProvider
    276:276:com.seafile.seadroid2.transfer.DownloadTaskInfo getDownloadTaskInfo(int) -> getDownloadTaskInfo
    226:226:java.util.List getDownloadTaskInfosByPath(java.lang.String,java.lang.String) -> getDownloadTaskInfosByPath
    230:230:java.util.List getDownloadTaskInfosByRepo(java.lang.String) -> getDownloadTaskInfosByRepo
    20:20:com.seafile.seadroid2.transfer.DownloadTaskManager getDownloadTaskManager() -> getDownloadTaskManager
    222:222:int getDownloadingFileCountByPath(java.lang.String,java.lang.String) -> getDownloadingFileCountByPath
    143:143:java.util.List getNoneCameraUploadTaskInfos() -> getNoneCameraUploadTaskInfos
    313:313:com.seafile.seadroid2.notification.UploadNotificationProvider getUploadNotifProvider() -> getUploadNotifProvider
    135:135:com.seafile.seadroid2.transfer.UploadTaskInfo getUploadTaskInfo(int) -> getUploadTaskInfo
    24:24:com.seafile.seadroid2.transfer.UploadTaskManager getUploadTaskManager() -> getUploadTaskManager
>>>>>>> rename package name,fix action event info list same time crash
    323:323:boolean hasDownloadNotifProvider() -> hasDownloadNotifProvider
    309:309:boolean hasUploadNotifProvider() -> hasUploadNotifProvider
    53:63:boolean isTransferring() -> isTransferring
    73:73:android.os.IBinder onBind(android.content.Intent) -> onBind
    32:33:void onCreate() -> onCreate
    38:38:void onDestroy() -> onDestroy
<<<<<<< HEAD
    250:250:void removeAllDownloadTasksByState(com.seafile.vmoo.transfer.TaskState) -> removeAllDownloadTasksByState
    147:147:void removeAllUploadTasksByState(com.seafile.vmoo.transfer.TaskState) -> removeAllUploadTasksByState
    263:268:void removeDownloadTasksByIds(java.util.List) -> removeDownloadTasksByIds
    196:201:void removeUploadTasksByIds(java.util.List) -> removeUploadTasksByIds
=======
    250:250:void removeAllDownloadTasksByState(com.seafile.seadroid2.transfer.TaskState) -> removeAllDownloadTasksByState
    147:147:void removeAllUploadTasksByState(com.seafile.seadroid2.transfer.TaskState) -> removeAllUploadTasksByState
    234:234:void removeDownloadTask(int) -> removeDownloadTask
    263:268:void removeDownloadTasksByIds(java.util.List) -> removeDownloadTasksByIds
    183:183:void removeUploadTask(int) -> removeUploadTask
    196:201:void removeUploadTasksByIds(java.util.List) -> removeUploadTasksByIds
    238:239:void restartAllDownloadTasksByState(com.seafile.seadroid2.transfer.TaskState) -> restartAllDownloadTasksByState
    152:153:void restartAllUploadTasksByState(com.seafile.seadroid2.transfer.TaskState) -> restartAllUploadTasksByState
>>>>>>> rename package name,fix action event info list same time crash
    244:245:void restartDownloadTasksByIds(java.util.List) -> restartDownloadTasksByIds
    158:159:void restartUploadTasksByIds(java.util.List) -> restartUploadTasksByIds
    272:272:void retryDownloadTask(int) -> retryDownloadTask
    179:179:void retryUploadTask(int) -> retryUploadTask
<<<<<<< HEAD
    319:319:void saveDownloadNotifProvider(com.seafile.vmoo.notification.DownloadNotificationProvider) -> saveDownloadNotifProvider
    305:305:void saveUploadNotifProvider(com.seafile.vmoo.notification.UploadNotificationProvider) -> saveUploadNotifProvider
com.seafile.vmoo.transfer.TransferService$TransferBinder -> com.seafile.vmoo.transfer.TransferService$TransferBinder:
    46:46:void <init>(com.seafile.vmoo.transfer.TransferService) -> <init>
    48:48:com.seafile.vmoo.transfer.TransferService getService() -> getService
com.seafile.vmoo.transfer.TransferTask -> com.seafile.vmoo.transfer.TransferTask:
    26:35:void <init>(int,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String) -> <init>
    47:47:boolean canRetry() -> canRetry
    39:43:void cancel() -> cancel
    88:93:boolean equals(java.lang.Object) -> equals
    61:61:com.seafile.vmoo.account.Account getAccount() -> getAccount
    81:81:java.lang.String getPath() -> getPath
    69:69:java.lang.String getRepoID() -> getRepoID
    65:65:java.lang.String getRepoName() -> getRepoName
    57:57:com.seafile.vmoo.transfer.TaskState getState() -> getState
    53:53:int getTaskID() -> getTaskID
    105:107:int hashCode() -> hashCode
    98:98:java.lang.String toString() -> toString
com.seafile.vmoo.transfer.TransferTaskInfo -> com.seafile.vmoo.transfer.TransferTaskInfo:
    33:40:void <init>(com.seafile.vmoo.account.Account,int,com.seafile.vmoo.transfer.TaskState,java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.SeafException) -> <init>
    47:52:boolean equals(java.lang.Object) -> equals
    64:66:int hashCode() -> hashCode
    57:57:java.lang.String toString() -> toString
com.seafile.vmoo.transfer.UploadTask -> com.seafile.vmoo.transfer.UploadTask:
    32:40:void <init>(int,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,com.seafile.vmoo.transfer.UploadStateListener) -> <init>
    18:18:void access$000(com.seafile.vmoo.transfer.UploadTask,java.lang.Object[]) -> access$000
    18:18:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    74:95:java.io.File doInBackground(java.lang.Void[]) -> doInBackground
    126:126:java.lang.String getDir() -> getDir
    18:18:com.seafile.vmoo.transfer.TransferTaskInfo getTaskInfo() -> getTaskInfo
    44:44:com.seafile.vmoo.transfer.UploadTaskInfo getTaskInfo() -> getTaskInfo
=======
    319:319:void saveDownloadNotifProvider(com.seafile.seadroid2.notification.DownloadNotificationProvider) -> saveDownloadNotifProvider
    305:305:void saveUploadNotifProvider(com.seafile.seadroid2.notification.UploadNotificationProvider) -> saveUploadNotifProvider
com.seafile.seadroid2.transfer.TransferService$TransferBinder -> com.seafile.seadroid2.transfer.TransferService$TransferBinder:
    46:46:void <init>(com.seafile.seadroid2.transfer.TransferService) -> <init>
    48:48:com.seafile.seadroid2.transfer.TransferService getService() -> getService
com.seafile.seadroid2.transfer.TransferTask -> com.seafile.seadroid2.transfer.TransferTask:
    26:35:void <init>(int,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String) -> <init>
    47:47:boolean canRetry() -> canRetry
    39:43:void cancel() -> cancel
    88:93:boolean equals(java.lang.Object) -> equals
    61:61:com.seafile.seadroid2.account.Account getAccount() -> getAccount
    77:77:long getFinished() -> getFinished
    81:81:java.lang.String getPath() -> getPath
    69:69:java.lang.String getRepoID() -> getRepoID
    65:65:java.lang.String getRepoName() -> getRepoName
    57:57:com.seafile.seadroid2.transfer.TaskState getState() -> getState
    53:53:int getTaskID() -> getTaskID
    73:73:long getTotalSize() -> getTotalSize
    105:107:int hashCode() -> hashCode
    98:98:java.lang.String toString() -> toString
com.seafile.seadroid2.transfer.TransferTaskInfo -> com.seafile.seadroid2.transfer.TransferTaskInfo:
    33:40:void <init>(com.seafile.seadroid2.account.Account,int,com.seafile.seadroid2.transfer.TaskState,java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.SeafException) -> <init>
    47:52:boolean equals(java.lang.Object) -> equals
    64:66:int hashCode() -> hashCode
    57:57:java.lang.String toString() -> toString
com.seafile.seadroid2.transfer.UploadTask -> com.seafile.seadroid2.transfer.UploadTask:
    32:40:void <init>(int,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,com.seafile.seadroid2.transfer.UploadStateListener) -> <init>
    18:18:void access$000(com.seafile.seadroid2.transfer.UploadTask,java.lang.Object[]) -> access$000
    51:55:void cancelUpload() -> cancelUpload
    18:18:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    74:95:java.io.File doInBackground(java.lang.Void[]) -> doInBackground
    126:126:java.lang.String getDir() -> getDir
    18:18:com.seafile.seadroid2.transfer.TransferTaskInfo getTaskInfo() -> getTaskInfo
    44:44:com.seafile.seadroid2.transfer.UploadTaskInfo getTaskInfo() -> getTaskInfo
>>>>>>> rename package name,fix action event info list same time crash
    130:130:boolean isCopyToLocal() -> isCopyToLocal
    134:134:boolean isUpdate() -> isUpdate
    120:121:void onCancelled() -> onCancelled
    18:18:void onPostExecute(java.lang.Object) -> onPostExecute
    107:113:void onPostExecute(java.io.File) -> onPostExecute
    60:60:void onPreExecute() -> onPreExecute
    18:18:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    65:68:void onProgressUpdate(java.lang.Long[]) -> onProgressUpdate
<<<<<<< HEAD
com.seafile.vmoo.transfer.UploadTask$1 -> com.seafile.vmoo.transfer.UploadTask$1:
    74:74:void <init>(com.seafile.vmoo.transfer.UploadTask) -> <init>
    82:82:boolean isCancelled() -> isCancelled
    77:77:void onProgressNotify(long,boolean) -> onProgressNotify
com.seafile.vmoo.transfer.UploadTaskInfo -> com.seafile.vmoo.transfer.UploadTaskInfo:
    43:49:void <init>(com.seafile.vmoo.account.Account,int,com.seafile.vmoo.transfer.TaskState,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,long,long,com.seafile.vmoo.SeafException) -> <init>
com.seafile.vmoo.transfer.UploadTaskManager -> com.seafile.vmoo.transfer.UploadTaskManager:
    17:17:void <init>() -> <init>
    33:35:int addTaskToQue(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) -> addTaskToQue
    93:94:void cancelAllUploadNotification() -> cancelAllUploadNotification
    39:47:java.util.List getNoneCameraUploadTaskInfos() -> getNoneCameraUploadTaskInfos
=======
com.seafile.seadroid2.transfer.UploadTask$1 -> com.seafile.seadroid2.transfer.UploadTask$1:
    74:74:void <init>(com.seafile.seadroid2.transfer.UploadTask) -> <init>
    82:82:boolean isCancelled() -> isCancelled
    77:77:void onProgressNotify(long,boolean) -> onProgressNotify
com.seafile.seadroid2.transfer.UploadTaskInfo -> com.seafile.seadroid2.transfer.UploadTaskInfo:
    43:49:void <init>(com.seafile.seadroid2.account.Account,int,com.seafile.seadroid2.transfer.TaskState,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,long,long,com.seafile.seadroid2.SeafException) -> <init>
com.seafile.seadroid2.transfer.UploadTaskManager -> com.seafile.seadroid2.transfer.UploadTaskManager:
    17:17:void <init>() -> <init>
    33:35:int addTaskToQue(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) -> addTaskToQue
    93:94:void cancelAllUploadNotification() -> cancelAllUploadNotification
    39:47:java.util.List getNoneCameraUploadTaskInfos() -> getNoneCameraUploadTaskInfos
    86:87:com.seafile.seadroid2.notification.UploadNotificationProvider getNotifProvider() -> getNotifProvider
>>>>>>> rename package name,fix action event info list same time crash
    82:82:boolean hasNotifProvider() -> hasNotifProvider
    61:72:void notifyProgress(int) -> notifyProgress
    118:121:void onFileUploadCancelled(int) -> onFileUploadCancelled
    126:131:void onFileUploadFailed(int) -> onFileUploadFailed
    100:103:void onFileUploadProgress(int) -> onFileUploadProgress
    108:113:void onFileUploaded(int) -> onFileUploaded
    54:57:void retry(int) -> retry
<<<<<<< HEAD
    78:78:void saveUploadNotifProvider(com.seafile.vmoo.notification.UploadNotificationProvider) -> saveUploadNotifProvider
com.seafile.vmoo.ui.AnimateFirstDisplayListener -> com.seafile.vmoo.ui.AnimateFirstDisplayListener:
    17:17:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    22:26:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.seafile.vmoo.ui.BaseAuthenticatorActivity -> com.seafile.vmoo.ui.BaseAuthenticatorActivity:
=======
    78:78:void saveUploadNotifProvider(com.seafile.seadroid2.notification.UploadNotificationProvider) -> saveUploadNotifProvider
com.seafile.seadroid2.ui.AnimateFirstDisplayListener -> com.seafile.seadroid2.ui.AnimateFirstDisplayListener:
    17:17:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    22:26:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.seafile.seadroid2.ui.BaseAuthenticatorActivity -> com.seafile.seadroid2.ui.BaseAuthenticatorActivity:
>>>>>>> rename package name,fix action event info list same time crash
    23:25:void <init>() -> <init>
    57:67:void finish() -> finish
    43:49:void onCreate(android.os.Bundle) -> onCreate
    34:34:void setAccountAuthenticatorResult(android.os.Bundle) -> setAccountAuthenticatorResult
<<<<<<< HEAD
com.seafile.vmoo.ui.CopyMoveContext -> com.seafile.vmoo.ui.CopyMoveContext:
    56:62:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,com.seafile.vmoo.ui.CopyMoveContext$OP) -> <init>
=======
com.seafile.seadroid2.ui.CopyMoveContext -> com.seafile.seadroid2.ui.CopyMoveContext:
    37:44:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.ui.CopyMoveContext$OP) -> <init>
    56:62:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,com.seafile.seadroid2.ui.CopyMoveContext$OP) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    87:89:boolean checkCopyMoveToSubfolder() -> checkCopyMoveToSubfolder
    71:71:boolean isCopy() -> isCopy
    75:75:boolean isMove() -> isMove
    66:67:void setDest(java.lang.String,java.lang.String) -> setDest
<<<<<<< HEAD
com.seafile.vmoo.ui.CopyMoveContext$OP -> com.seafile.vmoo.ui.CopyMoveContext$OP:
    10:9:void <clinit>() -> <clinit>
    9:9:void <init>(java.lang.String,int) -> <init>
    9:9:com.seafile.vmoo.ui.CopyMoveContext$OP valueOf(java.lang.String) -> valueOf
    9:9:com.seafile.vmoo.ui.CopyMoveContext$OP[] values() -> values
com.seafile.vmoo.ui.CustomClearableEditText -> com.seafile.vmoo.ui.CustomClearableEditText:
=======
com.seafile.seadroid2.ui.CopyMoveContext$OP -> com.seafile.seadroid2.ui.CopyMoveContext$OP:
    10:9:void <clinit>() -> <clinit>
    9:9:void <init>(java.lang.String,int) -> <init>
    9:9:com.seafile.seadroid2.ui.CopyMoveContext$OP valueOf(java.lang.String) -> valueOf
    9:9:com.seafile.seadroid2.ui.CopyMoveContext$OP[] values() -> values
com.seafile.seadroid2.ui.CustomClearableEditText -> com.seafile.seadroid2.ui.CustomClearableEditText:
>>>>>>> rename package name,fix action event info list same time crash
    32:33:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    37:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:44:void <init>(android.content.Context) -> <init>
    58:58:void clearText() -> clearText
    125:125:int getSelectionStart() -> getSelectionStart
    93:93:android.text.Editable getText() -> getText
    48:54:void initViews() -> initViews
    111:111:void setDisplayHintText(java.lang.String) -> setDisplayHintText
    99:99:void setEmailAddressAutoCompleteAdapter(android.widget.ArrayAdapter) -> setEmailAddressAutoCompleteAdapter
    107:107:void setError(java.lang.String) -> setError
    114:120:void setInputType(java.lang.String) -> setInputType
    129:129:void setSelection(int,int) -> setSelection
    103:103:void setText(java.lang.String) -> setText
    68:68:void showHideClearButton() -> showHideClearButton
<<<<<<< HEAD
com.seafile.vmoo.ui.CustomClearableEditText$1 -> com.seafile.vmoo.ui.CustomClearableEditText$1:
    58:58:void <init>(com.seafile.vmoo.ui.CustomClearableEditText) -> <init>
    62:62:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.CustomClearableEditText$2 -> com.seafile.vmoo.ui.CustomClearableEditText$2:
    68:68:void <init>(com.seafile.vmoo.ui.CustomClearableEditText) -> <init>
    72:75:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.seafile.vmoo.ui.CustomNotificationBuilder -> com.seafile.vmoo.ui.CustomNotificationBuilder:
=======
com.seafile.seadroid2.ui.CustomClearableEditText$1 -> com.seafile.seadroid2.ui.CustomClearableEditText$1:
    58:58:void <init>(com.seafile.seadroid2.ui.CustomClearableEditText) -> <init>
    62:62:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.CustomClearableEditText$2 -> com.seafile.seadroid2.ui.CustomClearableEditText$2:
    68:68:void <init>(com.seafile.seadroid2.ui.CustomClearableEditText) -> <init>
    72:75:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.seafile.seadroid2.ui.CustomNotificationBuilder -> com.seafile.seadroid2.ui.CustomNotificationBuilder:
>>>>>>> rename package name,fix action event info list same time crash
    53:55:void <init>(android.content.Context) -> <init>
    109:112:android.app.Notification build() -> build
    38:43:androidx.core.app.NotificationCompat$Builder getNotificationBuilder(android.content.Context,java.lang.String) -> getNotificationBuilder
    97:102:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    87:88:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    63:67:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    77:78:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
<<<<<<< HEAD
com.seafile.vmoo.ui.CustomPreferenceManagerCompat -> com.seafile.vmoo.ui.CustomPreferenceManagerCompat:
    219:223:void dispatchActivityDestroy(android.preference.PreferenceManager) -> dispatchActivityDestroy
    205:209:void dispatchActivityStop(android.preference.PreferenceManager) -> dispatchActivityStop
    175:180:android.preference.PreferenceScreen getPreferenceScreen(android.preference.PreferenceManager) -> getPreferenceScreen
    158:163:android.preference.PreferenceScreen inflateFromResource(android.preference.PreferenceManager,android.app.Activity,int,android.preference.PreferenceScreen) -> inflateFromResource
    67:71:android.preference.PreferenceManager newInstance(android.app.Activity,int) -> newInstance
    93:113:void setOnPreferenceTreeClickListener(android.preference.PreferenceManager,com.seafile.vmoo.ui.CustomPreferenceManagerCompat$OnPreferenceTreeClickListener) -> setOnPreferenceTreeClickListener
    235:239:boolean setPreferences(android.preference.PreferenceManager,android.preference.PreferenceScreen) -> setPreferences
com.seafile.vmoo.ui.CustomPreferenceManagerCompat$1 -> com.seafile.vmoo.ui.CustomPreferenceManagerCompat$1:
    97:97:void <init>(com.seafile.vmoo.ui.CustomPreferenceManagerCompat$OnPreferenceTreeClickListener) -> <init>
    99:100:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.seafile.vmoo.ui.EmailAutoCompleteTextView -> com.seafile.vmoo.ui.EmailAutoCompleteTextView:
=======
com.seafile.seadroid2.ui.CustomPreferenceManagerCompat -> com.seafile.seadroid2.ui.CustomPreferenceManagerCompat:
    43:43:void <init>() -> <init>
    219:223:void dispatchActivityDestroy(android.preference.PreferenceManager) -> dispatchActivityDestroy
    191:195:void dispatchActivityResult(android.preference.PreferenceManager,int,int,android.content.Intent) -> dispatchActivityResult
    205:209:void dispatchActivityStop(android.preference.PreferenceManager) -> dispatchActivityStop
    175:180:android.preference.PreferenceScreen getPreferenceScreen(android.preference.PreferenceManager) -> getPreferenceScreen
    134:139:android.preference.PreferenceScreen inflateFromIntent(android.preference.PreferenceManager,android.content.Intent,android.preference.PreferenceScreen) -> inflateFromIntent
    158:163:android.preference.PreferenceScreen inflateFromResource(android.preference.PreferenceManager,android.app.Activity,int,android.preference.PreferenceScreen) -> inflateFromResource
    67:71:android.preference.PreferenceManager newInstance(android.app.Activity,int) -> newInstance
    93:113:void setOnPreferenceTreeClickListener(android.preference.PreferenceManager,com.seafile.seadroid2.ui.CustomPreferenceManagerCompat$OnPreferenceTreeClickListener) -> setOnPreferenceTreeClickListener
    235:239:boolean setPreferences(android.preference.PreferenceManager,android.preference.PreferenceScreen) -> setPreferences
com.seafile.seadroid2.ui.CustomPreferenceManagerCompat$1 -> com.seafile.seadroid2.ui.CustomPreferenceManagerCompat$1:
    97:97:void <init>(com.seafile.seadroid2.ui.CustomPreferenceManagerCompat$OnPreferenceTreeClickListener) -> <init>
    99:100:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.seafile.seadroid2.ui.EmailAutoCompleteTextView -> com.seafile.seadroid2.ui.EmailAutoCompleteTextView:
>>>>>>> rename package name,fix action event info list same time crash
    25:26:void <init>(android.content.Context) -> <init>
    30:31:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    35:36:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    63:75:java.util.Set getEmailAccounts() -> getEmailAccounts
    40:41:void init() -> init
    49:54:void retrieveAccounts() -> retrieveAccounts
<<<<<<< HEAD
com.seafile.vmoo.ui.HackyViewPager -> com.seafile.vmoo.ui.HackyViewPager:
    33:34:void <init>(android.content.Context) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:48:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    57:57:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    65:65:void setLocked(boolean) -> setLocked
com.seafile.vmoo.ui.NavContext -> com.seafile.vmoo.ui.NavContext:
=======
com.seafile.seadroid2.ui.HackyViewPager -> com.seafile.seadroid2.ui.HackyViewPager:
    33:34:void <init>(android.content.Context) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:69:boolean isLocked() -> isLocked
    44:48:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    57:57:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    65:65:void setLocked(boolean) -> setLocked
    61:61:void toggleLock() -> toggleLock
com.seafile.seadroid2.ui.NavContext -> com.seafile.seadroid2.ui.NavContext:
>>>>>>> rename package name,fix action event info list same time crash
    10:8:void <init>() -> <init>
    51:51:java.lang.String getDirID() -> getDirID
    47:47:java.lang.String getDirPath() -> getDirPath
    55:55:java.lang.String getDirPermission() -> getDirPermission
    35:35:java.lang.String getRepoID() -> getRepoID
    39:39:java.lang.String getRepoName() -> getRepoName
    31:31:boolean inRepo() -> inRepo
    43:43:boolean isRepoRoot() -> isRepoRoot
    22:23:void setDir(java.lang.String,java.lang.String) -> setDir
<<<<<<< HEAD
    59:59:void setDirPermission(java.lang.String) -> setDirPermission
    14:14:void setRepoID(java.lang.String) -> setRepoID
    18:18:void setRepoName(java.lang.String) -> setRepoName
com.seafile.vmoo.ui.WidgetUtils -> com.seafile.vmoo.ui.WidgetUtils:
    279:284:void <clinit>() -> <clinit>
    43:94:void chooseShareApp(com.seafile.vmoo.ui.activity.BaseActivity,java.lang.String,java.lang.String,boolean,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String) -> chooseShareApp
    276:276:int getThumbnailWidth() -> getThumbnailWidth
    102:111:void inputSharePassword(com.seafile.vmoo.ui.activity.BaseActivity,java.lang.String,java.lang.String,boolean,com.seafile.vmoo.account.Account) -> inputSharePassword
    190:190:void showFile(com.seafile.vmoo.ui.activity.BaseActivity,java.io.File) -> showFile
    200:238:void showFile(com.seafile.vmoo.ui.activity.BaseActivity,java.io.File,boolean) -> showFile
    243:248:void showRepo(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> showRepo
    266:272:void startGalleryActivity(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.vmoo.account.Account) -> startGalleryActivity
    252:254:void startMarkdownActivity(android.content.Context,java.lang.String) -> startMarkdownActivity
com.seafile.vmoo.ui.WidgetUtils$1 -> com.seafile.vmoo.ui.WidgetUtils$1:
    55:55:void <init>(java.lang.String,java.lang.String,boolean,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,com.seafile.vmoo.ui.activity.BaseActivity,android.content.Intent) -> <init>
    77:90:void onAppSelected(android.content.pm.ResolveInfo) -> onAppSelected
    58:72:void onCustomActionSelected(com.seafile.vmoo.ui.dialog.AppChoiceDialog$CustomAction) -> onCustomActionSelected
com.seafile.vmoo.ui.WidgetUtils$1$1 -> com.seafile.vmoo.ui.WidgetUtils$1$1:
    60:60:void <init>(com.seafile.vmoo.ui.WidgetUtils$1,com.seafile.vmoo.ui.dialog.GetShareLinkDialog) -> <init>
    64:69:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.WidgetUtils$1$2 -> com.seafile.vmoo.ui.WidgetUtils$1$2:
    83:83:void <init>(com.seafile.vmoo.ui.WidgetUtils$1,com.seafile.vmoo.ui.dialog.GetShareLinkDialog) -> <init>
    86:87:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.WidgetUtils$2 -> com.seafile.vmoo.ui.WidgetUtils$2:
    103:103:void <init>(com.seafile.vmoo.ui.dialog.GetShareLinkEncryptDialog,com.seafile.vmoo.ui.activity.BaseActivity,java.lang.String,java.lang.String,boolean,com.seafile.vmoo.account.Account) -> <init>
    106:108:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.ZoomOutPageTransformer -> com.seafile.vmoo.ui.ZoomOutPageTransformer:
    11:11:void <init>() -> <init>
    16:43:void transformPage(android.view.View,float) -> transformPage
com.seafile.vmoo.ui.activity.AccountsActivity -> com.seafile.vmoo.ui.activity.AccountsActivity:
    44:233:void <init>() -> <init>
    44:44:void access$000(com.seafile.vmoo.ui.activity.AccountsActivity) -> access$000
    44:44:com.seafile.vmoo.monitor.FileMonitorService access$102(com.seafile.vmoo.ui.activity.AccountsActivity,com.seafile.vmoo.monitor.FileMonitorService) -> access$102
    44:44:android.accounts.AccountManager access$200(com.seafile.vmoo.ui.activity.AccountsActivity) -> access$200
    44:44:java.util.List access$300(com.seafile.vmoo.ui.activity.AccountsActivity) -> access$300
    44:44:void access$400(com.seafile.vmoo.ui.activity.AccountsActivity,com.seafile.vmoo.account.Account) -> access$400
    44:44:com.seafile.vmoo.account.AccountManager access$500(com.seafile.vmoo.ui.activity.AccountsActivity) -> access$500
    44:44:void access$600(com.seafile.vmoo.ui.activity.AccountsActivity) -> access$600
    44:44:com.seafile.vmoo.avatar.AvatarManager access$700(com.seafile.vmoo.ui.activity.AccountsActivity) -> access$700
    44:44:com.seafile.vmoo.ui.adapter.AccountAdapter access$800(com.seafile.vmoo.ui.activity.AccountsActivity) -> access$800
    328:342:void loadAvatarUrls(int) -> loadAvatarUrls
    264:264:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    309:317:void onBackPressed() -> onBackPressed
    282:296:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    83:141:void onCreate(android.os.Bundle) -> onCreate
    275:277:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    160:166:void onDestroy() -> onDestroy
    181:181:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    186:198:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    173:176:void onResume() -> onResume
    146:149:void onStart() -> onStart
    154:155:void onStop() -> onStop
    203:222:void refreshView() -> refreshView
    256:256:void startEditAccountActivity(com.seafile.vmoo.account.Account) -> startEditAccountActivity
    226:230:void startFilesActivity() -> startFilesActivity
com.seafile.vmoo.ui.activity.AccountsActivity$1 -> com.seafile.vmoo.ui.activity.AccountsActivity$1:
    59:59:void <init>(com.seafile.vmoo.ui.activity.AccountsActivity) -> <init>
    62:62:void onAccountsUpdated(android.accounts.Account[]) -> onAccountsUpdated
com.seafile.vmoo.ui.activity.AccountsActivity$2 -> com.seafile.vmoo.ui.activity.AccountsActivity$2:
    66:66:void <init>(com.seafile.vmoo.ui.activity.AccountsActivity) -> <init>
    70:71:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    76:76:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.vmoo.ui.activity.AccountsActivity$3 -> com.seafile.vmoo.ui.activity.AccountsActivity$3:
    97:97:void <init>(com.seafile.vmoo.ui.activity.AccountsActivity) -> <init>
    100:100:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.activity.AccountsActivity$4 -> com.seafile.vmoo.ui.activity.AccountsActivity$4:
    109:109:void <init>(com.seafile.vmoo.ui.activity.AccountsActivity) -> <init>
    113:120:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.vmoo.ui.activity.AccountsActivity$5 -> com.seafile.vmoo.ui.activity.AccountsActivity$5:
    233:233:void <init>(com.seafile.vmoo.ui.activity.AccountsActivity) -> <init>
    237:250:void run(android.accounts.AccountManagerFuture) -> run
com.seafile.vmoo.ui.activity.AccountsActivity$LoadAvatarUrlsTask -> com.seafile.vmoo.ui.activity.AccountsActivity$LoadAvatarUrlsTask:
    359:361:void <init>(com.seafile.vmoo.ui.activity.AccountsActivity,int) -> <init>
    353:353:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    367:401:java.util.List doInBackground(java.lang.Void[]) -> doInBackground
    353:353:void onPostExecute(java.lang.Object) -> onPostExecute
    411:414:void onPostExecute(java.util.List) -> onPostExecute
com.seafile.vmoo.ui.activity.BaseActivity -> com.seafile.vmoo.ui.activity.BaseActivity:
    25:39:void <init>() -> <init>
    53:63:androidx.appcompat.widget.Toolbar getActionBarToolbar() -> getActionBarToolbar
    179:208:void navigateUpOrBack(android.app.Activity,java.lang.Class) -> navigateUpOrBack
    45:48:void onCreate(android.os.Bundle) -> onCreate
    68:69:void setContentView(int) -> setContentView
    223:223:void showShortToast(android.app.Activity,java.lang.String) -> showShortToast
    238:238:void showShortToast(android.app.Activity,int) -> showShortToast
com.seafile.vmoo.ui.activity.BrowserActivity -> com.seafile.vmoo.ui.activity.BrowserActivity:
    138:138:void <clinit>() -> <clinit>
    112:780:void <init>() -> <init>
    112:112:int access$000(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$000
    112:112:int access$002(com.seafile.vmoo.ui.activity.BrowserActivity,int) -> access$002
    112:112:androidx.viewpager.widget.ViewPager access$100(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$100
    112:112:com.seafile.vmoo.account.AccountManager access$1000(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$1000
    112:112:int[] access$1100() -> access$1100
    112:112:com.seafile.vmoo.transfer.TransferService access$1200(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$1200
    112:112:com.seafile.vmoo.transfer.TransferService access$1202(com.seafile.vmoo.ui.activity.BrowserActivity,com.seafile.vmoo.transfer.TransferService) -> access$1202
    112:112:java.util.ArrayList access$1300(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$1300
    112:112:int access$1800(com.seafile.vmoo.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> access$1800
    112:112:int access$1900(com.seafile.vmoo.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> access$1900
    112:112:com.seafile.vmoo.ui.NavContext access$200(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$200
    112:112:void access$2000(com.seafile.vmoo.ui.activity.BrowserActivity,java.io.File) -> access$2000
    112:112:void access$2100(com.seafile.vmoo.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String) -> access$2100
    112:112:void access$2200(com.seafile.vmoo.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String,long,boolean) -> access$2200
    112:112:com.seafile.vmoo.ui.CopyMoveContext access$2500(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$2500
    112:112:void access$2600(com.seafile.vmoo.ui.activity.BrowserActivity,int) -> access$2600
    112:112:void access$2700(com.seafile.vmoo.ui.activity.BrowserActivity,int) -> access$2700
    112:112:void access$2800(com.seafile.vmoo.ui.activity.BrowserActivity,int) -> access$2800
    112:112:void access$300(com.seafile.vmoo.ui.activity.BrowserActivity,int) -> access$300
    112:112:com.seafile.vmoo.data.DataManager access$500(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$500
    112:112:com.seafile.vmoo.ui.activity.BrowserActivity$SeafileTabsAdapter access$600(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$600
    112:112:com.google.android.material.tabs.TabLayout access$700(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$700
    112:112:android.view.MenuItem access$800(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$800
    112:112:com.seafile.vmoo.account.Account access$900(com.seafile.vmoo.ui.activity.BrowserActivity) -> access$900
    176:180:void addUpdateBlocksTask(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addUpdateBlocksTask
    167:171:void addUpdateTask(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addUpdateTask
    195:199:int addUploadBlocksTask(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addUploadBlocksTask
    185:189:int addUploadTask(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addUploadTask
    672:677:boolean checkSearchEnabled() -> checkSearchEnabled
    657:662:boolean checkServerProEdition() -> checkServerProEdition
    2244:2253:void chooseCopyMoveDestForMultiFiles(java.lang.String,java.lang.String,java.lang.String,java.util.List,com.seafile.vmoo.ui.CopyMoveContext$OP) -> chooseCopyMoveDestForMultiFiles
    426:426:void completeRemoteWipe() -> completeRemoteWipe
    2218:2218:void copyFiles(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> copyFiles
    2187:2206:void deleteFiles(java.lang.String,java.lang.String,java.util.List) -> deleteFiles
    1155:1155:void disableUpButton() -> disableUpButton
    2055:2093:void doCopyMove() -> doCopyMove
    2266:2272:void downloadFiles(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> downloadFiles
    1149:1150:void enableUpButton() -> enableUpButton
    398:402:void finishAndStartAccountsActivity() -> finishAndStartAccountsActivity
    211:211:com.seafile.vmoo.account.Account getAccount() -> getAccount
    777:777:com.seafile.vmoo.ui.fragment.ActivitiesFragment getActivitiesFragment() -> getActivitiesFragment
    394:394:android.widget.FrameLayout getContainer() -> getContainer
    753:753:int getCurrentPosition() -> getCurrentPosition
    163:163:com.seafile.vmoo.data.DataManager getDataManager() -> getDataManager
    765:765:androidx.fragment.app.Fragment getFragment(int) -> getFragment
    215:215:com.seafile.vmoo.ui.NavContext getNavContext() -> getNavContext
    769:769:com.seafile.vmoo.ui.fragment.ReposFragment getReposFragment() -> getReposFragment
    773:773:com.seafile.vmoo.ui.fragment.StarredFragment getStarredFragment() -> getStarredFragment
    207:207:com.seafile.vmoo.transfer.TransferService getTransferService() -> getTransferService
    1217:1220:boolean hasRepoWritePermission() -> hasRepoWritePermission
    1492:1495:void lambda$showFileExistDialog$1(com.seafile.vmoo.data.SeafRepo,java.io.File,android.content.DialogInterface,int) -> lambda$showFileExistDialog$1$BrowserActivity
    459:470:void logoutWhenTokenExpired() -> logoutWhenTokenExpired
    2230:2230:void moveFiles(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> moveFiles
    1371:1273:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1784:1814:void onBackPressed() -> onBackPressed
    976:976:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    220:252:void onCreate(android.os.Bundle) -> onCreate
    900:903:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    876:881:void onDestroy() -> onDestroy
    2097:2128:void onFileDownloadFailed(int) -> onFileDownloadFailed
    1509:1544:void onFileSelected(com.seafile.vmoo.data.SeafDirent,boolean) -> onFileSelected
    1549:1549:void onFileSelected(com.seafile.vmoo.data.SeafDirent) -> onFileSelected
    2156:2157:void onFileUploadFailed(int) -> onFileUploadFailed
    2132:2149:void onFileUploaded(int) -> onFileUploaded
    1503:1503:void onItemSelected() -> onItemSelected
    2381:2386:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    487:535:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    843:860:void onNewIntent(android.content.Intent) -> onNewIntent
    475:478:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    825:826:void onPause() -> onPause
    955:955:void onPostCreate(android.os.Bundle) -> onPostCreate
    960:970:void onPostResume() -> onPostResume
    909:948:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    831:837:void onRestart() -> onRestart
    886:894:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    997:988:void onSortFileItemClick(androidx.fragment.app.DialogFragment,int) -> onSortFileItemClick
    1738:1774:void onStarredFileSelected(com.seafile.vmoo.data.SeafStarredFile,boolean) -> onStarredFileSelected
    1779:1779:void onStarredFileSelected(com.seafile.vmoo.data.SeafStarredFile) -> onStarredFileSelected
    807:820:void onStart() -> onStart
    866:870:void onStop() -> onStop
    1196:1201:void refreshViewOnSlideTabs(int) -> refreshViewOnSlideTabs
    557:580:void requestReadExternalStoragePermission() -> requestReadExternalStoragePermission
    406:422:void requestServerInfo() -> requestServerInfo
    757:761:void setCurrentPosition(int) -> setCurrentPosition
    1161:1161:void setUpButtonTitle(java.lang.String) -> setUpButtonTitle
    1170:1184:void setUpButtonTitleOnSlideTabs(int) -> setUpButtonTitleOnSlideTabs
    2429:2429:void showDirBottomSheet(java.lang.String,com.seafile.vmoo.data.SeafDirent) -> showDirBottomSheet
    2425:2425:void showFileBottomSheet(java.lang.String,com.seafile.vmoo.data.SeafDirent) -> showFileBottomSheet
    1470:1470:void showFileExistDialog(java.lang.String) -> showFileExistDialog
    1474:1498:void showFileExistDialog(java.io.File) -> showFileExistDialog
    2162:2162:com.seafile.vmoo.ui.dialog.PasswordDialog showPasswordDialog(java.lang.String,java.lang.String,com.seafile.vmoo.ui.dialog.TaskDialog$TaskDialogListener) -> showPasswordDialog
    2167:2173:com.seafile.vmoo.ui.dialog.PasswordDialog showPasswordDialog(java.lang.String,java.lang.String,com.seafile.vmoo.ui.dialog.TaskDialog$TaskDialogListener,java.lang.String) -> showPasswordDialog
    2421:2421:void showRepoBottomSheet(com.seafile.vmoo.data.SeafRepo) -> showRepoBottomSheet
    980:981:void showSortFilesDialog() -> showSortFilesDialog
    1010:1024:void sortFiles(int,int) -> sortFiles
    1712:1723:void startFileActivity(java.lang.String,java.lang.String,java.lang.String,long,boolean) -> startFileActivity
    1727:1733:void startPlayActivity(java.lang.String,java.lang.String,java.lang.String) -> startPlayActivity
    2433:2436:void syncCamera() -> syncCamera
    1120:1120:void unsetRefreshing() -> unsetRefreshing
com.seafile.vmoo.ui.activity.BrowserActivity$1 -> com.seafile.vmoo.ui.activity.BrowserActivity$1:
    269:269:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    272:281:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
com.seafile.vmoo.ui.activity.BrowserActivity$12 -> com.seafile.vmoo.ui.activity.BrowserActivity$12:
    1478:1478:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity,com.seafile.vmoo.data.SeafRepo,java.io.File) -> <init>
    1481:1485:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.activity.BrowserActivity$13 -> com.seafile.vmoo.ui.activity.BrowserActivity$13:
    1533:1533:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,boolean) -> <init>
    1537:1539:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.activity.BrowserActivity$14 -> com.seafile.vmoo.ui.activity.BrowserActivity$14:
    1747:1747:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity,com.seafile.vmoo.data.SeafStarredFile) -> <init>
    1750:1750:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.activity.BrowserActivity$2 -> com.seafile.vmoo.ui.activity.BrowserActivity$2:
    295:295:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    303:312:void onPageSelected(int) -> onPageSelected
com.seafile.vmoo.ui.activity.BrowserActivity$22 -> com.seafile.vmoo.ui.activity.BrowserActivity$22:
    2064:2064:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    2067:2088:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.activity.BrowserActivity$23 -> com.seafile.vmoo.ui.activity.BrowserActivity$23:
    2115:2115:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String) -> <init>
    2118:2118:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.activity.BrowserActivity$24 -> com.seafile.vmoo.ui.activity.BrowserActivity$24:
    2190:2190:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity,java.lang.String) -> <init>
    2193:2202:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.activity.BrowserActivity$3 -> com.seafile.vmoo.ui.activity.BrowserActivity$3:
    426:426:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    426:426:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    430:441:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    426:426:void onPostExecute(java.lang.Object) -> onPostExecute
    449:449:void onPostExecute(java.lang.Void) -> onPostExecute
com.seafile.vmoo.ui.activity.BrowserActivity$4 -> com.seafile.vmoo.ui.activity.BrowserActivity$4:
    524:524:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    527:527:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.activity.BrowserActivity$5 -> com.seafile.vmoo.ui.activity.BrowserActivity$5:
    565:565:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    568:568:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.activity.BrowserActivity$6 -> com.seafile.vmoo.ui.activity.BrowserActivity$6:
    780:780:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    783:796:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    801:801:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.vmoo.ui.activity.BrowserActivity$7 -> com.seafile.vmoo.ui.activity.BrowserActivity$7:
    1016:1016:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity,int,int) -> <init>
    1019:1019:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.activity.BrowserActivity$DownloadFilesTask -> com.seafile.vmoo.ui.activity.BrowserActivity$DownloadFilesTask:
    2285:2289:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    2279:2279:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    2299:2338:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    2279:2279:void onPostExecute(java.lang.Object) -> onPostExecute
    2350:2369:void onPostExecute(java.lang.Void) -> onPostExecute
    2294:2294:void onPreExecute() -> onPreExecute
com.seafile.vmoo.ui.activity.BrowserActivity$RequestServerInfoTask -> com.seafile.vmoo.ui.activity.BrowserActivity$RequestServerInfoTask:
    605:605:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    605:605:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    611:613:com.seafile.vmoo.data.ServerInfo doInBackground(java.lang.Void[]) -> doInBackground
    605:605:void onPostExecute(java.lang.Object) -> onPostExecute
    625:646:void onPostExecute(com.seafile.vmoo.data.ServerInfo) -> onPostExecute
com.seafile.vmoo.ui.activity.BrowserActivity$SAFLoadRemoteFileTask -> com.seafile.vmoo.ui.activity.BrowserActivity$SAFLoadRemoteFileTask:
    1380:1380:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    1380:1380:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1387:1416:java.io.File[] doInBackground(android.net.Uri[]) -> doInBackground
    1380:1380:void onPostExecute(java.lang.Object) -> onPostExecute
    1423:1464:void onPostExecute(java.io.File[]) -> onPostExecute
com.seafile.vmoo.ui.activity.BrowserActivity$SeafileTabsAdapter -> com.seafile.vmoo.ui.activity.BrowserActivity$SeafileTabsAdapter:
    682:688:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity,androidx.fragment.app.FragmentManager) -> <init>
    680:680:void access$400(com.seafile.vmoo.ui.activity.BrowserActivity$SeafileTabsAdapter) -> access$400
    745:746:int getCount() -> getCount
    740:740:int getIconResId(int) -> getIconResId
    719:707:androidx.fragment.app.Fragment getItem(int) -> getItem
    731:727:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    692:692:void hideActivityTab() -> hideActivityTab
    696:696:void unHideActivityTab() -> unHideActivityTab
com.seafile.vmoo.ui.activity.BrowserActivity$TransferReceiver -> com.seafile.vmoo.ui.activity.BrowserActivity$TransferReceiver:
    2390:2390:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity,com.seafile.vmoo.ui.activity.BrowserActivity$1) -> <init>
    2392:2392:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    2397:2401:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity -> com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity:
    22:260:void <init>() -> <init>
    22:22:com.seafile.vmoo.gesturelock.LockPatternView access$000(com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity) -> access$000
    22:22:java.lang.Runnable access$100(com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity) -> access$100
    22:22:com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$Stage access$200(com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity) -> access$200
    22:22:void access$300(com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity,com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$Stage) -> access$300
    22:22:android.widget.Button access$400(com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity) -> access$400
    22:22:android.widget.Button access$500(com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity) -> access$500
    204:213:void initPreviewViews() -> initPreviewViews
    376:387:void onClick(android.view.View) -> onClick
    162:200:void onCreate(android.os.Bundle) -> onCreate
    241:248:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    42:46:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    231:234:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    370:371:void postClearPatternRunnable() -> postClearPatternRunnable
    423:428:void saveChosenPatternAndFinish() -> saveChosenPatternAndFinish
    217:224:void updatePreviewViews() -> updatePreviewViews
    312:342:void updateStage(com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$Stage) -> updateStage
com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$1 -> com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$1:
    254:254:void <init>(com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity) -> <init>
    256:256:void run() -> run
com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$2 -> com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$2:
    260:260:void <init>(com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity) -> <init>
    268:268:void onPatternCleared() -> onPatternCleared
    275:278:void onPatternDetected(java.util.List) -> onPatternDetected
    263:264:void onPatternStart() -> onPatternStart
    305:307:void patternInProgress() -> patternInProgress
com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$3 -> com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$3:
    340:340:void <clinit>() -> <clinit>
com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$LeftButtonMode -> com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$LeftButtonMode:
    58:57:void <clinit>() -> <clinit>
    70:72:void <init>(java.lang.String,int,int,boolean) -> <init>
    57:57:com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$LeftButtonMode valueOf(java.lang.String) -> valueOf
    57:57:com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$LeftButtonMode[] values() -> values
com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$RightButtonMode -> com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$RightButtonMode:
    83:82:void <clinit>() -> <clinit>
    95:97:void <init>(java.lang.String,int,int,boolean) -> <init>
    82:82:com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$RightButtonMode valueOf(java.lang.String) -> valueOf
    82:82:com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$RightButtonMode[] values() -> values
com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$Stage -> com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$Stage:
    109:107:void <clinit>() -> <clinit>
    144:149:void <init>(java.lang.String,int,int,com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$LeftButtonMode,com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$RightButtonMode,int,boolean) -> <init>
    107:107:com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$Stage valueOf(java.lang.String) -> valueOf
    107:107:com.seafile.vmoo.ui.activity.CreateGesturePasswordActivity$Stage[] values() -> values
com.seafile.vmoo.ui.activity.FileActivity -> com.seafile.vmoo.ui.activity.FileActivity:
    39:71:void <init>() -> <init>
    39:39:com.seafile.vmoo.transfer.TransferService access$000(com.seafile.vmoo.ui.activity.FileActivity) -> access$000
    39:39:com.seafile.vmoo.transfer.TransferService access$002(com.seafile.vmoo.ui.activity.FileActivity,com.seafile.vmoo.transfer.TransferService) -> access$002
    39:39:void access$100(com.seafile.vmoo.ui.activity.FileActivity) -> access$100
    39:39:android.os.Handler access$1000(com.seafile.vmoo.ui.activity.FileActivity) -> access$1000
    39:39:int access$200(com.seafile.vmoo.ui.activity.FileActivity) -> access$200
    39:39:int access$202(com.seafile.vmoo.ui.activity.FileActivity,int) -> access$202
    39:39:com.seafile.vmoo.account.Account access$300(com.seafile.vmoo.ui.activity.FileActivity) -> access$300
    39:39:java.lang.String access$400(com.seafile.vmoo.ui.activity.FileActivity) -> access$400
    39:39:java.lang.String access$500(com.seafile.vmoo.ui.activity.FileActivity) -> access$500
    39:39:java.lang.String access$600(com.seafile.vmoo.ui.activity.FileActivity) -> access$600
    39:39:void access$700(com.seafile.vmoo.ui.activity.FileActivity,com.seafile.vmoo.transfer.DownloadTaskInfo) -> access$700
    39:39:void access$800(com.seafile.vmoo.ui.activity.FileActivity,com.seafile.vmoo.transfer.DownloadTaskInfo) -> access$800
    39:39:void access$900(com.seafile.vmoo.ui.activity.FileActivity) -> access$900
    164:171:void bindTransferService() -> bindTransferService
    240:256:void handlePassword() -> handlePassword
    119:146:void initWidgets() -> initWidgets
    75:88:void onCreate(android.os.Bundle) -> onCreate
    109:113:void onDestroy() -> onDestroy
    222:236:void onFileDownloadFailed(com.seafile.vmoo.transfer.DownloadTaskInfo) -> onFileDownloadFailed
    175:195:void onFileDownloadProgress(com.seafile.vmoo.transfer.DownloadTaskInfo) -> onFileDownloadProgress
    203:218:void onFileDownloaded() -> onFileDownloaded
    311:319:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    159:159:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    93:96:void onStart() -> onStart
    102:104:void onStop() -> onStop
    150:154:void onTransferServiceConnected() -> onTransferServiceConnected
    260:262:void showToast(java.lang.CharSequence) -> showToast
    271:276:void startTimer() -> startTimer
    301:306:void stopTimer() -> stopTimer
com.seafile.vmoo.ui.activity.FileActivity$1 -> com.seafile.vmoo.ui.activity.FileActivity$1:
    56:56:void <init>(com.seafile.vmoo.ui.activity.FileActivity) -> <init>
    59:63:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.seafile.vmoo.ui.activity.FileActivity$2 -> com.seafile.vmoo.ui.activity.FileActivity$2:
    131:131:void <init>(com.seafile.vmoo.ui.activity.FileActivity) -> <init>
    134:138:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.activity.FileActivity$3 -> com.seafile.vmoo.ui.activity.FileActivity$3:
    242:242:void <init>(com.seafile.vmoo.ui.activity.FileActivity) -> <init>
    253:253:void onTaskCancelled() -> onTaskCancelled
    245:245:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.activity.FileActivity$4 -> com.seafile.vmoo.ui.activity.FileActivity$4:
    276:276:void <init>(com.seafile.vmoo.ui.activity.FileActivity) -> <init>
    280:295:void run() -> run
com.seafile.vmoo.ui.activity.GalleryActivity -> com.seafile.vmoo.ui.activity.GalleryActivity:
    37:62:void <init>() -> <init>
    37:37:java.lang.String access$000(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$000
    37:37:java.lang.String access$100(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$100
    37:37:com.seafile.vmoo.data.DataManager access$1000(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$1000
    37:37:com.seafile.vmoo.ui.adapter.GalleryAdapter access$1100(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$1100
    37:37:com.seafile.vmoo.ui.adapter.GalleryAdapter access$1102(com.seafile.vmoo.ui.activity.GalleryActivity,com.seafile.vmoo.ui.adapter.GalleryAdapter) -> access$1102
    37:37:com.seafile.vmoo.account.Account access$1200(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$1200
    37:37:com.seafile.vmoo.ui.HackyViewPager access$1300(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$1300
    37:37:void access$1400(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$1400
    37:37:void access$1500(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$1500
    37:37:java.lang.String access$200(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$200
    37:37:java.lang.String access$202(com.seafile.vmoo.ui.activity.GalleryActivity,java.lang.String) -> access$202
    37:37:void access$300(com.seafile.vmoo.ui.activity.GalleryActivity,java.lang.String,java.lang.String) -> access$300
    37:37:void access$400(com.seafile.vmoo.ui.activity.GalleryActivity,java.lang.String,java.lang.String,java.lang.String) -> access$400
    37:37:void access$500(com.seafile.vmoo.ui.activity.GalleryActivity,java.lang.String,boolean,java.lang.String) -> access$500
    37:37:android.widget.TextView access$600(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$600
    37:37:int access$700(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$700
    37:37:int access$702(com.seafile.vmoo.ui.activity.GalleryActivity,int) -> access$702
    37:37:java.util.List access$800(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$800
    37:37:java.util.List access$802(com.seafile.vmoo.ui.activity.GalleryActivity,java.util.List) -> access$802
    37:37:android.widget.TextView access$900(com.seafile.vmoo.ui.activity.GalleryActivity) -> access$900
    327:336:void deleteFile(java.lang.String,java.lang.String) -> deleteFile
    166:195:void displayPhotosInGallery(java.lang.String,java.lang.String,java.lang.String) -> displayPhotosInGallery
    313:322:void hideOrShowToolBar() -> hideOrShowToolBar
    294:304:void navToSelectedPage() -> navToSelectedPage
    81:127:void onCreate(android.os.Bundle) -> onCreate
    143:149:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    133:137:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    399:415:void removePageAndRefreshView() -> removePageAndRefreshView
    351:353:void shareFile(java.lang.String,boolean,java.lang.String) -> shareFile
    274:282:java.util.List sortFiles(java.util.List,int,int) -> sortFiles
    340:346:void starFile(java.lang.String,java.lang.String,java.lang.String) -> starFile
com.seafile.vmoo.ui.activity.GalleryActivity$1 -> com.seafile.vmoo.ui.activity.GalleryActivity$1:
    62:62:void <init>(com.seafile.vmoo.ui.activity.GalleryActivity) -> <init>
    65:67:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.activity.GalleryActivity$2 -> com.seafile.vmoo.ui.activity.GalleryActivity$2:
    96:96:void <init>(com.seafile.vmoo.ui.activity.GalleryActivity) -> <init>
    100:105:void onPageScrolled(int,float,int) -> onPageScrolled
com.seafile.vmoo.ui.activity.GalleryActivity$3 -> com.seafile.vmoo.ui.activity.GalleryActivity$3:
    329:329:void <init>(com.seafile.vmoo.ui.activity.GalleryActivity) -> <init>
    332:333:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.activity.GalleryActivity$LoadPhotosTask -> com.seafile.vmoo.ui.activity.GalleryActivity$LoadPhotosTask:
    207:210:void <init>(com.seafile.vmoo.ui.activity.GalleryActivity,java.lang.String,java.lang.String,java.lang.String) -> <init>
    203:203:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    215:220:java.util.List doInBackground(java.lang.String[]) -> doInBackground
    203:203:void onPostExecute(java.lang.Object) -> onPostExecute
    242:246:void onPostExecute(java.util.List) -> onPostExecute
com.seafile.vmoo.ui.activity.GalleryActivity$StarFileTask -> com.seafile.vmoo.ui.activity.GalleryActivity$StarFileTask:
    362:364:void <init>(com.seafile.vmoo.ui.activity.GalleryActivity,java.lang.String,java.lang.String) -> <init>
    357:357:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    370:376:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    357:357:void onPostExecute(java.lang.Object) -> onPostExecute
    384:389:void onPostExecute(java.lang.Void) -> onPostExecute
com.seafile.vmoo.ui.activity.MarkdownActivity -> com.seafile.vmoo.ui.activity.MarkdownActivity:
=======
    27:27:void setDirID(java.lang.String) -> setDirID
    59:59:void setDirPermission(java.lang.String) -> setDirPermission
    14:14:void setRepoID(java.lang.String) -> setRepoID
    18:18:void setRepoName(java.lang.String) -> setRepoName
com.seafile.seadroid2.ui.SwitchPreferenceCompat -> com.seafile.seadroid2.ui.SwitchPreferenceCompat:
    20:21:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    26:27:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    31:32:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:37:void <init>(android.content.Context) -> <init>
    41:41:void setLayoutRes() -> setLayoutRes
com.seafile.seadroid2.ui.WidgetUtils -> com.seafile.seadroid2.ui.WidgetUtils:
    279:284:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    134:184:void ShareWeChat(com.seafile.seadroid2.ui.activity.BaseActivity,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,long,boolean) -> ShareWeChat
    43:94:void chooseShareApp(com.seafile.seadroid2.ui.activity.BaseActivity,java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String) -> chooseShareApp
    276:276:int getThumbnailWidth() -> getThumbnailWidth
    102:111:void inputSharePassword(com.seafile.seadroid2.ui.activity.BaseActivity,java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.account.Account) -> inputSharePassword
    190:190:void showFile(com.seafile.seadroid2.ui.activity.BaseActivity,java.io.File) -> showFile
    200:238:void showFile(com.seafile.seadroid2.ui.activity.BaseActivity,java.io.File,boolean) -> showFile
    243:248:void showRepo(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> showRepo
    266:272:void startGalleryActivity(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.account.Account) -> startGalleryActivity
    252:254:void startMarkdownActivity(android.content.Context,java.lang.String) -> startMarkdownActivity
com.seafile.seadroid2.ui.WidgetUtils$1 -> com.seafile.seadroid2.ui.WidgetUtils$1:
    55:55:void <init>(java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,com.seafile.seadroid2.ui.activity.BaseActivity,android.content.Intent) -> <init>
    77:90:void onAppSelected(android.content.pm.ResolveInfo) -> onAppSelected
    58:72:void onCustomActionSelected(com.seafile.seadroid2.ui.dialog.AppChoiceDialog$CustomAction) -> onCustomActionSelected
com.seafile.seadroid2.ui.WidgetUtils$1$1 -> com.seafile.seadroid2.ui.WidgetUtils$1$1:
    60:60:void <init>(com.seafile.seadroid2.ui.WidgetUtils$1,com.seafile.seadroid2.ui.dialog.GetShareLinkDialog) -> <init>
    64:69:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.WidgetUtils$1$2 -> com.seafile.seadroid2.ui.WidgetUtils$1$2:
    83:83:void <init>(com.seafile.seadroid2.ui.WidgetUtils$1,com.seafile.seadroid2.ui.dialog.GetShareLinkDialog) -> <init>
    86:87:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.WidgetUtils$2 -> com.seafile.seadroid2.ui.WidgetUtils$2:
    103:103:void <init>(com.seafile.seadroid2.ui.dialog.GetShareLinkEncryptDialog,com.seafile.seadroid2.ui.activity.BaseActivity,java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.account.Account) -> <init>
    106:108:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.WidgetUtils$3 -> com.seafile.seadroid2.ui.WidgetUtils$3:
    147:147:void <init>(android.content.Intent,com.seafile.seadroid2.ui.dialog.GetShareLinkDialog,com.seafile.seadroid2.ui.activity.BaseActivity) -> <init>
    150:151:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.ZoomOutPageTransformer -> com.seafile.seadroid2.ui.ZoomOutPageTransformer:
    11:11:void <init>() -> <init>
    16:43:void transformPage(android.view.View,float) -> transformPage
com.seafile.seadroid2.ui.activity.AccountsActivity -> com.seafile.seadroid2.ui.activity.AccountsActivity:
    45:234:void <init>() -> <init>
    45:45:void access$000(com.seafile.seadroid2.ui.activity.AccountsActivity) -> access$000
    45:45:com.seafile.seadroid2.monitor.FileMonitorService access$102(com.seafile.seadroid2.ui.activity.AccountsActivity,com.seafile.seadroid2.monitor.FileMonitorService) -> access$102
    45:45:android.accounts.AccountManager access$200(com.seafile.seadroid2.ui.activity.AccountsActivity) -> access$200
    45:45:java.util.List access$300(com.seafile.seadroid2.ui.activity.AccountsActivity) -> access$300
    45:45:void access$400(com.seafile.seadroid2.ui.activity.AccountsActivity,com.seafile.seadroid2.account.Account) -> access$400
    45:45:com.seafile.seadroid2.account.AccountManager access$500(com.seafile.seadroid2.ui.activity.AccountsActivity) -> access$500
    45:45:void access$600(com.seafile.seadroid2.ui.activity.AccountsActivity) -> access$600
    45:45:com.seafile.seadroid2.avatar.AvatarManager access$700(com.seafile.seadroid2.ui.activity.AccountsActivity) -> access$700
    45:45:com.seafile.seadroid2.ui.adapter.AccountAdapter access$800(com.seafile.seadroid2.ui.activity.AccountsActivity) -> access$800
    329:343:void loadAvatarUrls(int) -> loadAvatarUrls
    265:265:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    310:318:void onBackPressed() -> onBackPressed
    283:297:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    84:142:void onCreate(android.os.Bundle) -> onCreate
    276:278:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    161:167:void onDestroy() -> onDestroy
    182:182:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    187:199:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    174:177:void onResume() -> onResume
    147:150:void onStart() -> onStart
    155:156:void onStop() -> onStop
    204:223:void refreshView() -> refreshView
    257:257:void startEditAccountActivity(com.seafile.seadroid2.account.Account) -> startEditAccountActivity
    227:231:void startFilesActivity() -> startFilesActivity
com.seafile.seadroid2.ui.activity.AccountsActivity$1 -> com.seafile.seadroid2.ui.activity.AccountsActivity$1:
    60:60:void <init>(com.seafile.seadroid2.ui.activity.AccountsActivity) -> <init>
    63:63:void onAccountsUpdated(android.accounts.Account[]) -> onAccountsUpdated
com.seafile.seadroid2.ui.activity.AccountsActivity$2 -> com.seafile.seadroid2.ui.activity.AccountsActivity$2:
    67:67:void <init>(com.seafile.seadroid2.ui.activity.AccountsActivity) -> <init>
    71:72:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    77:77:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.seadroid2.ui.activity.AccountsActivity$3 -> com.seafile.seadroid2.ui.activity.AccountsActivity$3:
    98:98:void <init>(com.seafile.seadroid2.ui.activity.AccountsActivity) -> <init>
    101:101:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.activity.AccountsActivity$4 -> com.seafile.seadroid2.ui.activity.AccountsActivity$4:
    110:110:void <init>(com.seafile.seadroid2.ui.activity.AccountsActivity) -> <init>
    114:121:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.seadroid2.ui.activity.AccountsActivity$5 -> com.seafile.seadroid2.ui.activity.AccountsActivity$5:
    234:234:void <init>(com.seafile.seadroid2.ui.activity.AccountsActivity) -> <init>
    238:251:void run(android.accounts.AccountManagerFuture) -> run
com.seafile.seadroid2.ui.activity.AccountsActivity$LoadAvatarUrlsTask -> com.seafile.seadroid2.ui.activity.AccountsActivity$LoadAvatarUrlsTask:
    360:362:void <init>(com.seafile.seadroid2.ui.activity.AccountsActivity,int) -> <init>
    354:354:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    368:402:java.util.List doInBackground(java.lang.Void[]) -> doInBackground
    354:354:void onPostExecute(java.lang.Object) -> onPostExecute
    412:415:void onPostExecute(java.util.List) -> onPostExecute
com.seafile.seadroid2.ui.activity.BaseActivity -> com.seafile.seadroid2.ui.activity.BaseActivity:
    25:39:void <init>() -> <init>
    25:25:void access$000(com.seafile.seadroid2.ui.activity.BaseActivity,int,int) -> access$000
    153:157:void autoShowOrHideActionBar(boolean) -> autoShowOrHideActionBar
    84:85:void enableActionBarAutoHide(android.widget.ListView) -> enableActionBarAutoHide
    53:63:androidx.appcompat.widget.Toolbar getActionBarToolbar() -> getActionBarToolbar
    76:79:void initActionBarAutoHide() -> initActionBarAutoHide
    179:208:void navigateUpOrBack(android.app.Activity,java.lang.Class) -> navigateUpOrBack
    45:48:void onCreate(android.os.Bundle) -> onCreate
    133:149:void onMainContentScrolled(int,int) -> onMainContentScrolled
    68:69:void setContentView(int) -> setContentView
    252:252:void showLongToast(android.app.Activity,java.lang.String) -> showLongToast
    267:267:void showLongToast(android.app.Activity,int) -> showLongToast
    223:223:void showShortToast(android.app.Activity,java.lang.String) -> showShortToast
    238:238:void showShortToast(android.app.Activity,int) -> showShortToast
com.seafile.seadroid2.ui.activity.BaseActivity$1 -> com.seafile.seadroid2.ui.activity.BaseActivity$1:
    85:89:void <init>(com.seafile.seadroid2.ui.activity.BaseActivity) -> <init>
    100:119:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.seafile.seadroid2.ui.activity.BrowserActivity -> com.seafile.seadroid2.ui.activity.BrowserActivity:
    139:139:void <clinit>() -> <clinit>
    113:781:void <init>() -> <init>
    1127:1145:void CameraTakePhoto() -> CameraTakePhoto
    113:113:int access$000(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$000
    113:113:int access$002(com.seafile.seadroid2.ui.activity.BrowserActivity,int) -> access$002
    113:113:androidx.viewpager.widget.ViewPager access$100(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$100
    113:113:com.seafile.seadroid2.account.AccountManager access$1000(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$1000
    113:113:int[] access$1100() -> access$1100
    113:113:com.seafile.seadroid2.transfer.TransferService access$1200(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$1200
    113:113:com.seafile.seadroid2.transfer.TransferService access$1202(com.seafile.seadroid2.ui.activity.BrowserActivity,com.seafile.seadroid2.transfer.TransferService) -> access$1202
    113:113:java.util.ArrayList access$1300(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$1300
    113:113:void access$1500(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$1500
    113:113:void access$1600(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$1600
    113:113:void access$1700(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$1700
    113:113:int access$1800(com.seafile.seadroid2.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> access$1800
    113:113:int access$1900(com.seafile.seadroid2.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> access$1900
    113:113:com.seafile.seadroid2.ui.NavContext access$200(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$200
    113:113:void access$2000(com.seafile.seadroid2.ui.activity.BrowserActivity,java.io.File) -> access$2000
    113:113:void access$2100(com.seafile.seadroid2.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String) -> access$2100
    113:113:void access$2200(com.seafile.seadroid2.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String,long,boolean) -> access$2200
    113:113:com.seafile.seadroid2.ui.dialog.FetchFileDialog access$2402(com.seafile.seadroid2.ui.activity.BrowserActivity,com.seafile.seadroid2.ui.dialog.FetchFileDialog) -> access$2402
    113:113:com.seafile.seadroid2.ui.CopyMoveContext access$2500(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$2500
    113:113:void access$2600(com.seafile.seadroid2.ui.activity.BrowserActivity,int) -> access$2600
    113:113:void access$2700(com.seafile.seadroid2.ui.activity.BrowserActivity,int) -> access$2700
    113:113:void access$2800(com.seafile.seadroid2.ui.activity.BrowserActivity,int) -> access$2800
    113:113:void access$300(com.seafile.seadroid2.ui.activity.BrowserActivity,int) -> access$300
    113:113:com.seafile.seadroid2.data.DataManager access$500(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$500
    113:113:com.seafile.seadroid2.ui.activity.BrowserActivity$SeafileTabsAdapter access$600(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$600
    113:113:com.google.android.material.tabs.TabLayout access$700(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$700
    113:113:android.view.MenuItem access$800(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$800
    113:113:com.seafile.seadroid2.account.Account access$900(com.seafile.seadroid2.ui.activity.BrowserActivity) -> access$900
    1055:1069:void addFile() -> addFile
    177:181:void addUpdateBlocksTask(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addUpdateBlocksTask
    168:172:void addUpdateTask(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addUpdateTask
    196:200:int addUploadBlocksTask(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addUploadBlocksTask
    186:190:int addUploadTask(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addUploadTask
    673:678:boolean checkSearchEnabled() -> checkSearchEnabled
    658:663:boolean checkServerProEdition() -> checkServerProEdition
    2040:2051:void chooseCopyMoveDest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.ui.CopyMoveContext$OP) -> chooseCopyMoveDest
    2245:2254:void chooseCopyMoveDestForMultiFiles(java.lang.String,java.lang.String,java.lang.String,java.util.List,com.seafile.seadroid2.ui.CopyMoveContext$OP) -> chooseCopyMoveDestForMultiFiles
    1842:1882:void chooseExportApp(java.lang.String,java.lang.String,java.lang.String,long) -> chooseExportApp
    427:427:void completeRemoteWipe() -> completeRemoteWipe
    2027:2027:void copyFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> copyFile
    2219:2219:void copyFiles(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> copyFiles
    2007:2007:void deleteDir(java.lang.String,java.lang.String,java.lang.String) -> deleteDir
    2003:2003:void deleteFile(java.lang.String,java.lang.String,java.lang.String) -> deleteFile
    2188:2207:void deleteFiles(java.lang.String,java.lang.String,java.util.List) -> deleteFiles
    1924:1936:void deleteRepo(java.lang.String) -> deleteRepo
    1156:1156:void disableUpButton() -> disableUpButton
    2056:2094:void doCopyMove() -> doCopyMove
    2011:2023:void doDelete(java.lang.String,java.lang.String,java.lang.String,boolean) -> doDelete
    1987:1999:void doRename(java.lang.String,java.lang.String,java.lang.String,boolean) -> doRename
    1590:1595:void downloadDir(java.lang.String,java.lang.String,boolean) -> downloadDir
    1561:1579:void downloadFile(java.lang.String,java.lang.String) -> downloadFile
    2267:2273:void downloadFiles(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> downloadFiles
    1150:1151:void enableUpButton() -> enableUpButton
    1834:1838:void exportFile(java.lang.String,long) -> exportFile
    1888:1904:void fetchFileAndExport(android.content.pm.ResolveInfo,android.content.Intent,java.lang.String,java.lang.String,java.lang.String,long) -> fetchFileAndExport
    399:403:void finishAndStartAccountsActivity() -> finishAndStartAccountsActivity
    212:212:com.seafile.seadroid2.account.Account getAccount() -> getAccount
    778:778:com.seafile.seadroid2.ui.fragment.ActivitiesFragment getActivitiesFragment() -> getActivitiesFragment
    395:395:android.widget.FrameLayout getContainer() -> getContainer
    754:754:int getCurrentPosition() -> getCurrentPosition
    164:164:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    766:766:androidx.fragment.app.Fragment getFragment(int) -> getFragment
    216:216:com.seafile.seadroid2.ui.NavContext getNavContext() -> getNavContext
    770:770:com.seafile.seadroid2.ui.fragment.ReposFragment getReposFragment() -> getReposFragment
    774:774:com.seafile.seadroid2.ui.fragment.StarredFragment getStarredFragment() -> getStarredFragment
    208:208:com.seafile.seadroid2.transfer.TransferService getTransferService() -> getTransferService
    1218:1221:boolean hasRepoWritePermission() -> hasRepoWritePermission
    1493:1496:void lambda$showFileExistDialog$1(com.seafile.seadroid2.data.SeafRepo,java.io.File,android.content.DialogInterface,int) -> lambda$showFileExistDialog$1$BrowserActivity
    460:471:void logoutWhenTokenExpired() -> logoutWhenTokenExpired
    2031:2031:void moveFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> moveFile
    2231:2231:void moveFiles(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> moveFiles
    1372:1274:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1785:1815:void onBackPressed() -> onBackPressed
    977:977:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    221:253:void onCreate(android.os.Bundle) -> onCreate
    901:904:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    877:882:void onDestroy() -> onDestroy
    2098:2129:void onFileDownloadFailed(int) -> onFileDownloadFailed
    1510:1545:void onFileSelected(com.seafile.seadroid2.data.SeafDirent,boolean) -> onFileSelected
    1550:1550:void onFileSelected(com.seafile.seadroid2.data.SeafDirent) -> onFileSelected
    2157:2158:void onFileUploadFailed(int) -> onFileUploadFailed
    2133:2150:void onFileUploaded(int) -> onFileUploaded
    1504:1504:void onItemSelected() -> onItemSelected
    2382:2387:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    488:536:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    844:861:void onNewIntent(android.content.Intent) -> onNewIntent
    476:479:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    826:827:void onPause() -> onPause
    956:956:void onPostCreate(android.os.Bundle) -> onPostCreate
    961:971:void onPostResume() -> onPostResume
    910:949:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    832:838:void onRestart() -> onRestart
    887:895:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    998:989:void onSortFileItemClick(androidx.fragment.app.DialogFragment,int) -> onSortFileItemClick
    1739:1775:void onStarredFileSelected(com.seafile.seadroid2.data.SeafStarredFile,boolean) -> onStarredFileSelected
    1780:1780:void onStarredFileSelected(com.seafile.seadroid2.data.SeafStarredFile) -> onStarredFileSelected
    808:821:void onStart() -> onStart
    867:871:void onStop() -> onStop
    1228:1240:void pickFile() -> pickFile
    1197:1202:void refreshViewOnSlideTabs(int) -> refreshViewOnSlideTabs
    1983:1983:void renameDir(java.lang.String,java.lang.String,java.lang.String) -> renameDir
    1979:1979:void renameFile(java.lang.String,java.lang.String,java.lang.String) -> renameFile
    1908:1920:void renameRepo(java.lang.String,java.lang.String) -> renameRepo
    558:581:void requestReadExternalStoragePermission() -> requestReadExternalStoragePermission
    407:423:void requestServerInfo() -> requestServerInfo
    758:762:void setCurrentPosition(int) -> setCurrentPosition
    1117:1117:void setRefreshing() -> setRefreshing
    1162:1162:void setUpButtonTitle(java.lang.String) -> setUpButtonTitle
    1171:1185:void setUpButtonTitleOnSlideTabs(int) -> setUpButtonTitleOnSlideTabs
    2430:2430:void showDirBottomSheet(java.lang.String,com.seafile.seadroid2.data.SeafDirent) -> showDirBottomSheet
    2426:2426:void showFileBottomSheet(java.lang.String,com.seafile.seadroid2.data.SeafDirent) -> showFileBottomSheet
    1471:1471:void showFileExistDialog(java.lang.String) -> showFileExistDialog
    1475:1499:void showFileExistDialog(java.io.File) -> showFileExistDialog
    1073:1091:void showNewDirDialog() -> showNewDirDialog
    1095:1113:void showNewFileDialog() -> showNewFileDialog
    1033:1048:void showNewRepoDialog() -> showNewRepoDialog
    2163:2163:com.seafile.seadroid2.ui.dialog.PasswordDialog showPasswordDialog(java.lang.String,java.lang.String,com.seafile.seadroid2.ui.dialog.TaskDialog$TaskDialogListener) -> showPasswordDialog
    2168:2174:com.seafile.seadroid2.ui.dialog.PasswordDialog showPasswordDialog(java.lang.String,java.lang.String,com.seafile.seadroid2.ui.dialog.TaskDialog$TaskDialogListener,java.lang.String) -> showPasswordDialog
    2422:2422:void showRepoBottomSheet(com.seafile.seadroid2.data.SeafRepo) -> showRepoBottomSheet
    1947:1975:void showShareDialog(java.lang.String,java.lang.String,boolean,long,java.lang.String) -> showShareDialog
    981:982:void showSortFilesDialog() -> showSortFilesDialog
    1011:1025:void sortFiles(int,int) -> sortFiles
    2035:2035:void starFile(java.lang.String,java.lang.String,java.lang.String) -> starFile
    1708:1708:void startFileActivity(java.lang.String,java.lang.String,java.lang.String,long) -> startFileActivity
    1713:1724:void startFileActivity(java.lang.String,java.lang.String,java.lang.String,long,boolean) -> startFileActivity
    1728:1734:void startPlayActivity(java.lang.String,java.lang.String,java.lang.String) -> startPlayActivity
    2434:2437:void syncCamera() -> syncCamera
    1121:1121:void unsetRefreshing() -> unsetRefreshing
com.seafile.seadroid2.ui.activity.BrowserActivity$1 -> com.seafile.seadroid2.ui.activity.BrowserActivity$1:
    270:270:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    273:282:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
com.seafile.seadroid2.ui.activity.BrowserActivity$10 -> com.seafile.seadroid2.ui.activity.BrowserActivity$10:
    1080:1080:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,com.seafile.seadroid2.ui.dialog.NewDirDialog) -> <init>
    1083:1087:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$11 -> com.seafile.seadroid2.ui.activity.BrowserActivity$11:
    1102:1102:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,com.seafile.seadroid2.ui.dialog.NewFileDialog) -> <init>
    1105:1109:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$12 -> com.seafile.seadroid2.ui.activity.BrowserActivity$12:
    1479:1479:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,com.seafile.seadroid2.data.SeafRepo,java.io.File) -> <init>
    1482:1486:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.activity.BrowserActivity$13 -> com.seafile.seadroid2.ui.activity.BrowserActivity$13:
    1534:1534:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,boolean) -> <init>
    1538:1540:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.activity.BrowserActivity$14 -> com.seafile.seadroid2.ui.activity.BrowserActivity$14:
    1748:1748:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,com.seafile.seadroid2.data.SeafStarredFile) -> <init>
    1751:1751:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$15 -> com.seafile.seadroid2.ui.activity.BrowserActivity$15:
    1863:1863:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,android.content.Intent,java.io.File,java.lang.String,java.lang.String,java.lang.String,long) -> <init>
    1870:1878:void onAppSelected(android.content.pm.ResolveInfo) -> onAppSelected
com.seafile.seadroid2.ui.activity.BrowserActivity$16 -> com.seafile.seadroid2.ui.activity.BrowserActivity$16:
    1889:1889:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,android.content.Intent) -> <init>
    1897:1897:void onDismiss() -> onDismiss
    1892:1892:void onSuccess() -> onSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$17 -> com.seafile.seadroid2.ui.activity.BrowserActivity$17:
    1910:1910:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    1913:1916:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$18 -> com.seafile.seadroid2.ui.activity.BrowserActivity$18:
    1926:1926:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    1929:1932:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$19 -> com.seafile.seadroid2.ui.activity.BrowserActivity$19:
    1956:1956:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,boolean,java.lang.String,java.lang.String,java.lang.String,long,boolean) -> <init>
    1959:1964:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.activity.BrowserActivity$2 -> com.seafile.seadroid2.ui.activity.BrowserActivity$2:
    296:296:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    304:313:void onPageSelected(int) -> onPageSelected
com.seafile.seadroid2.ui.activity.BrowserActivity$20 -> com.seafile.seadroid2.ui.activity.BrowserActivity$20:
    1989:1989:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    1992:1995:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$21 -> com.seafile.seadroid2.ui.activity.BrowserActivity$21:
    2013:2013:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,java.lang.String) -> <init>
    2016:2020:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$22 -> com.seafile.seadroid2.ui.activity.BrowserActivity$22:
    2065:2065:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    2068:2089:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$23 -> com.seafile.seadroid2.ui.activity.BrowserActivity$23:
    2116:2116:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String) -> <init>
    2119:2119:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$24 -> com.seafile.seadroid2.ui.activity.BrowserActivity$24:
    2191:2191:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,java.lang.String) -> <init>
    2194:2203:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$3 -> com.seafile.seadroid2.ui.activity.BrowserActivity$3:
    427:427:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    427:427:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    431:442:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    427:427:void onPostExecute(java.lang.Object) -> onPostExecute
    450:450:void onPostExecute(java.lang.Void) -> onPostExecute
com.seafile.seadroid2.ui.activity.BrowserActivity$4 -> com.seafile.seadroid2.ui.activity.BrowserActivity$4:
    525:525:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    528:528:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$5 -> com.seafile.seadroid2.ui.activity.BrowserActivity$5:
    566:566:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    569:569:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.activity.BrowserActivity$6 -> com.seafile.seadroid2.ui.activity.BrowserActivity$6:
    781:781:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    784:797:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    802:802:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.seadroid2.ui.activity.BrowserActivity$7 -> com.seafile.seadroid2.ui.activity.BrowserActivity$7:
    1017:1017:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,int,int) -> <init>
    1020:1020:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$8 -> com.seafile.seadroid2.ui.activity.BrowserActivity$8:
    1035:1035:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,com.seafile.seadroid2.ui.dialog.NewRepoDialog) -> <init>
    1038:1044:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.BrowserActivity$9 -> com.seafile.seadroid2.ui.activity.BrowserActivity$9:
    1057:1057:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    1061:1067:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.activity.BrowserActivity$DownloadDirTask -> com.seafile.seadroid2.ui.activity.BrowserActivity$DownloadDirTask:
    1603:1612:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    1603:1603:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,com.seafile.seadroid2.ui.activity.BrowserActivity$1) -> <init>
    1603:1603:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1616:1640:java.util.List doInBackground(java.lang.String[]) -> doInBackground
    1603:1603:void onPostExecute(java.lang.Object) -> onPostExecute
    1684:1703:void onPostExecute(java.util.List) -> onPostExecute
com.seafile.seadroid2.ui.activity.BrowserActivity$DownloadFilesTask -> com.seafile.seadroid2.ui.activity.BrowserActivity$DownloadFilesTask:
    2286:2290:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    2280:2280:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    2300:2339:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    2280:2280:void onPostExecute(java.lang.Object) -> onPostExecute
    2351:2370:void onPostExecute(java.lang.Void) -> onPostExecute
    2295:2295:void onPreExecute() -> onPreExecute
com.seafile.seadroid2.ui.activity.BrowserActivity$RequestServerInfoTask -> com.seafile.seadroid2.ui.activity.BrowserActivity$RequestServerInfoTask:
    606:606:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    606:606:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    612:614:com.seafile.seadroid2.data.ServerInfo doInBackground(java.lang.Void[]) -> doInBackground
    606:606:void onPostExecute(java.lang.Object) -> onPostExecute
    626:647:void onPostExecute(com.seafile.seadroid2.data.ServerInfo) -> onPostExecute
com.seafile.seadroid2.ui.activity.BrowserActivity$SAFLoadRemoteFileTask -> com.seafile.seadroid2.ui.activity.BrowserActivity$SAFLoadRemoteFileTask:
    1381:1381:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    1381:1381:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1388:1417:java.io.File[] doInBackground(android.net.Uri[]) -> doInBackground
    1381:1381:void onPostExecute(java.lang.Object) -> onPostExecute
    1424:1465:void onPostExecute(java.io.File[]) -> onPostExecute
com.seafile.seadroid2.ui.activity.BrowserActivity$SeafileTabsAdapter -> com.seafile.seadroid2.ui.activity.BrowserActivity$SeafileTabsAdapter:
    683:689:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,androidx.fragment.app.FragmentManager) -> <init>
    681:681:void access$400(com.seafile.seadroid2.ui.activity.BrowserActivity$SeafileTabsAdapter) -> access$400
    746:747:int getCount() -> getCount
    741:741:int getIconResId(int) -> getIconResId
    720:708:androidx.fragment.app.Fragment getItem(int) -> getItem
    732:728:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    693:693:void hideActivityTab() -> hideActivityTab
    697:697:void unHideActivityTab() -> unHideActivityTab
com.seafile.seadroid2.ui.activity.BrowserActivity$TransferReceiver -> com.seafile.seadroid2.ui.activity.BrowserActivity$TransferReceiver:
    2391:2391:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity,com.seafile.seadroid2.ui.activity.BrowserActivity$1) -> <init>
    2393:2393:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    2398:2402:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity -> com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity:
    24:262:void <init>() -> <init>
    24:24:com.seafile.seadroid2.gesturelock.LockPatternView access$000(com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity) -> access$000
    24:24:java.lang.Runnable access$100(com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity) -> access$100
    24:24:com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$Stage access$200(com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity) -> access$200
    24:24:void access$300(com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity,com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$Stage) -> access$300
    24:24:android.widget.Button access$400(com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity) -> access$400
    24:24:android.widget.Button access$500(com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity) -> access$500
    206:215:void initPreviewViews() -> initPreviewViews
    378:389:void onClick(android.view.View) -> onClick
    164:202:void onCreate(android.os.Bundle) -> onCreate
    243:250:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    44:48:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    233:236:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    372:373:void postClearPatternRunnable() -> postClearPatternRunnable
    425:430:void saveChosenPatternAndFinish() -> saveChosenPatternAndFinish
    219:226:void updatePreviewViews() -> updatePreviewViews
    314:344:void updateStage(com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$Stage) -> updateStage
com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$1 -> com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$1:
    256:256:void <init>(com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity) -> <init>
    258:258:void run() -> run
com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$2 -> com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$2:
    262:262:void <init>(com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity) -> <init>
    270:270:void onPatternCleared() -> onPatternCleared
    277:280:void onPatternDetected(java.util.List) -> onPatternDetected
    265:266:void onPatternStart() -> onPatternStart
    307:309:void patternInProgress() -> patternInProgress
com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$3 -> com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$3:
    342:342:void <clinit>() -> <clinit>
com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$LeftButtonMode -> com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$LeftButtonMode:
    60:59:void <clinit>() -> <clinit>
    72:74:void <init>(java.lang.String,int,int,boolean) -> <init>
    59:59:com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$LeftButtonMode valueOf(java.lang.String) -> valueOf
    59:59:com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$LeftButtonMode[] values() -> values
com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$RightButtonMode -> com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$RightButtonMode:
    85:84:void <clinit>() -> <clinit>
    97:99:void <init>(java.lang.String,int,int,boolean) -> <init>
    84:84:com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$RightButtonMode valueOf(java.lang.String) -> valueOf
    84:84:com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$RightButtonMode[] values() -> values
com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$Stage -> com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$Stage:
    111:109:void <clinit>() -> <clinit>
    146:151:void <init>(java.lang.String,int,int,com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$LeftButtonMode,com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$RightButtonMode,int,boolean) -> <init>
    109:109:com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$Stage valueOf(java.lang.String) -> valueOf
    109:109:com.seafile.seadroid2.ui.activity.CreateGesturePasswordActivity$Stage[] values() -> values
com.seafile.seadroid2.ui.activity.FileActivity -> com.seafile.seadroid2.ui.activity.FileActivity:
    40:72:void <init>() -> <init>
    40:40:com.seafile.seadroid2.transfer.TransferService access$000(com.seafile.seadroid2.ui.activity.FileActivity) -> access$000
    40:40:com.seafile.seadroid2.transfer.TransferService access$002(com.seafile.seadroid2.ui.activity.FileActivity,com.seafile.seadroid2.transfer.TransferService) -> access$002
    40:40:void access$100(com.seafile.seadroid2.ui.activity.FileActivity) -> access$100
    40:40:android.os.Handler access$1000(com.seafile.seadroid2.ui.activity.FileActivity) -> access$1000
    40:40:int access$200(com.seafile.seadroid2.ui.activity.FileActivity) -> access$200
    40:40:int access$202(com.seafile.seadroid2.ui.activity.FileActivity,int) -> access$202
    40:40:com.seafile.seadroid2.account.Account access$300(com.seafile.seadroid2.ui.activity.FileActivity) -> access$300
    40:40:java.lang.String access$400(com.seafile.seadroid2.ui.activity.FileActivity) -> access$400
    40:40:java.lang.String access$500(com.seafile.seadroid2.ui.activity.FileActivity) -> access$500
    40:40:java.lang.String access$600(com.seafile.seadroid2.ui.activity.FileActivity) -> access$600
    40:40:void access$700(com.seafile.seadroid2.ui.activity.FileActivity,com.seafile.seadroid2.transfer.DownloadTaskInfo) -> access$700
    40:40:void access$800(com.seafile.seadroid2.ui.activity.FileActivity,com.seafile.seadroid2.transfer.DownloadTaskInfo) -> access$800
    40:40:void access$900(com.seafile.seadroid2.ui.activity.FileActivity) -> access$900
    165:172:void bindTransferService() -> bindTransferService
    241:257:void handlePassword() -> handlePassword
    120:147:void initWidgets() -> initWidgets
    76:89:void onCreate(android.os.Bundle) -> onCreate
    110:114:void onDestroy() -> onDestroy
    223:237:void onFileDownloadFailed(com.seafile.seadroid2.transfer.DownloadTaskInfo) -> onFileDownloadFailed
    176:196:void onFileDownloadProgress(com.seafile.seadroid2.transfer.DownloadTaskInfo) -> onFileDownloadProgress
    204:219:void onFileDownloaded() -> onFileDownloaded
    312:320:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    160:160:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    94:97:void onStart() -> onStart
    103:105:void onStop() -> onStop
    151:155:void onTransferServiceConnected() -> onTransferServiceConnected
    261:263:void showToast(java.lang.CharSequence) -> showToast
    267:267:void showToast(int) -> showToast
    272:277:void startTimer() -> startTimer
    302:307:void stopTimer() -> stopTimer
com.seafile.seadroid2.ui.activity.FileActivity$1 -> com.seafile.seadroid2.ui.activity.FileActivity$1:
    57:57:void <init>(com.seafile.seadroid2.ui.activity.FileActivity) -> <init>
    60:64:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.seafile.seadroid2.ui.activity.FileActivity$2 -> com.seafile.seadroid2.ui.activity.FileActivity$2:
    132:132:void <init>(com.seafile.seadroid2.ui.activity.FileActivity) -> <init>
    135:139:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.activity.FileActivity$3 -> com.seafile.seadroid2.ui.activity.FileActivity$3:
    243:243:void <init>(com.seafile.seadroid2.ui.activity.FileActivity) -> <init>
    254:254:void onTaskCancelled() -> onTaskCancelled
    246:246:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.FileActivity$4 -> com.seafile.seadroid2.ui.activity.FileActivity$4:
    277:277:void <init>(com.seafile.seadroid2.ui.activity.FileActivity) -> <init>
    281:296:void run() -> run
com.seafile.seadroid2.ui.activity.GalleryActivity -> com.seafile.seadroid2.ui.activity.GalleryActivity:
    36:61:void <init>() -> <init>
    36:36:java.lang.String access$000(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$000
    36:36:java.lang.String access$100(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$100
    36:36:com.seafile.seadroid2.data.DataManager access$1000(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$1000
    36:36:com.seafile.seadroid2.ui.adapter.GalleryAdapter access$1100(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$1100
    36:36:com.seafile.seadroid2.ui.adapter.GalleryAdapter access$1102(com.seafile.seadroid2.ui.activity.GalleryActivity,com.seafile.seadroid2.ui.adapter.GalleryAdapter) -> access$1102
    36:36:com.seafile.seadroid2.account.Account access$1200(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$1200
    36:36:com.seafile.seadroid2.ui.HackyViewPager access$1300(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$1300
    36:36:void access$1400(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$1400
    36:36:void access$1500(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$1500
    36:36:java.lang.String access$200(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$200
    36:36:java.lang.String access$202(com.seafile.seadroid2.ui.activity.GalleryActivity,java.lang.String) -> access$202
    36:36:void access$300(com.seafile.seadroid2.ui.activity.GalleryActivity,java.lang.String,java.lang.String) -> access$300
    36:36:void access$400(com.seafile.seadroid2.ui.activity.GalleryActivity,java.lang.String,java.lang.String,java.lang.String) -> access$400
    36:36:void access$500(com.seafile.seadroid2.ui.activity.GalleryActivity,java.lang.String,boolean,java.lang.String) -> access$500
    36:36:android.widget.TextView access$600(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$600
    36:36:int access$700(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$700
    36:36:int access$702(com.seafile.seadroid2.ui.activity.GalleryActivity,int) -> access$702
    36:36:java.util.List access$800(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$800
    36:36:java.util.List access$802(com.seafile.seadroid2.ui.activity.GalleryActivity,java.util.List) -> access$802
    36:36:android.widget.TextView access$900(com.seafile.seadroid2.ui.activity.GalleryActivity) -> access$900
    326:335:void deleteFile(java.lang.String,java.lang.String) -> deleteFile
    165:194:void displayPhotosInGallery(java.lang.String,java.lang.String,java.lang.String) -> displayPhotosInGallery
    312:321:void hideOrShowToolBar() -> hideOrShowToolBar
    293:303:void navToSelectedPage() -> navToSelectedPage
    80:126:void onCreate(android.os.Bundle) -> onCreate
    142:148:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    132:136:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    398:414:void removePageAndRefreshView() -> removePageAndRefreshView
    350:352:void shareFile(java.lang.String,boolean,java.lang.String) -> shareFile
    273:281:java.util.List sortFiles(java.util.List,int,int) -> sortFiles
    339:345:void starFile(java.lang.String,java.lang.String,java.lang.String) -> starFile
com.seafile.seadroid2.ui.activity.GalleryActivity$1 -> com.seafile.seadroid2.ui.activity.GalleryActivity$1:
    61:61:void <init>(com.seafile.seadroid2.ui.activity.GalleryActivity) -> <init>
    64:66:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.activity.GalleryActivity$2 -> com.seafile.seadroid2.ui.activity.GalleryActivity$2:
    95:95:void <init>(com.seafile.seadroid2.ui.activity.GalleryActivity) -> <init>
    99:104:void onPageScrolled(int,float,int) -> onPageScrolled
com.seafile.seadroid2.ui.activity.GalleryActivity$3 -> com.seafile.seadroid2.ui.activity.GalleryActivity$3:
    328:328:void <init>(com.seafile.seadroid2.ui.activity.GalleryActivity) -> <init>
    331:332:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.GalleryActivity$LoadPhotosTask -> com.seafile.seadroid2.ui.activity.GalleryActivity$LoadPhotosTask:
    206:209:void <init>(com.seafile.seadroid2.ui.activity.GalleryActivity,java.lang.String,java.lang.String,java.lang.String) -> <init>
    202:202:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    214:219:java.util.List doInBackground(java.lang.String[]) -> doInBackground
    202:202:void onPostExecute(java.lang.Object) -> onPostExecute
    241:245:void onPostExecute(java.util.List) -> onPostExecute
com.seafile.seadroid2.ui.activity.GalleryActivity$StarFileTask -> com.seafile.seadroid2.ui.activity.GalleryActivity$StarFileTask:
    361:363:void <init>(com.seafile.seadroid2.ui.activity.GalleryActivity,java.lang.String,java.lang.String) -> <init>
    356:356:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    369:375:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    356:356:void onPostExecute(java.lang.Object) -> onPostExecute
    383:388:void onPostExecute(java.lang.Void) -> onPostExecute
com.seafile.seadroid2.ui.activity.MarkdownActivity -> com.seafile.seadroid2.ui.activity.MarkdownActivity:
>>>>>>> rename package name,fix action event info list same time crash
    27:27:void <init>() -> <init>
    99:130:void edit() -> edit
    38:50:void onCreate(android.os.Bundle) -> onCreate
    76:76:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    95:95:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    82:90:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    55:71:void onResume() -> onResume
<<<<<<< HEAD
com.seafile.vmoo.ui.activity.SeafilePathChooserActivity -> com.seafile.vmoo.ui.activity.SeafilePathChooserActivity:
    47:81:void <init>() -> <init>
    47:47:com.seafile.vmoo.ui.NavContext access$000(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> access$000
    47:47:com.seafile.vmoo.account.Account access$100(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> access$100
    47:47:int access$1000(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> access$1000
    47:47:void access$1100(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,java.util.List) -> access$1100
    47:47:com.seafile.vmoo.ui.adapter.DirentsAdapter access$1200(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> access$1200
    47:47:void access$1300(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> access$1300
    47:47:void access$1400(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,java.util.List) -> access$1400
    47:47:void access$200(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,boolean) -> access$200
    47:47:void access$300(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> access$300
    47:47:void access$400(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,boolean) -> access$400
    47:47:void access$500(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,int) -> access$500
    47:47:void access$600(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,com.seafile.vmoo.account.Account) -> access$600
    47:47:void access$700(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> access$700
    47:47:com.seafile.vmoo.ui.adapter.AccountAdapter access$800(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> access$800
    47:47:void access$900(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,int) -> access$900
=======
com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity -> com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity:
    47:81:void <init>() -> <init>
    47:47:com.seafile.seadroid2.ui.NavContext access$000(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> access$000
    47:47:com.seafile.seadroid2.account.Account access$100(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> access$100
    47:47:int access$1000(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> access$1000
    47:47:void access$1100(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,java.util.List) -> access$1100
    47:47:com.seafile.seadroid2.ui.adapter.DirentsAdapter access$1200(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> access$1200
    47:47:void access$1300(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> access$1300
    47:47:void access$1400(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,java.util.List) -> access$1400
    47:47:void access$200(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,boolean) -> access$200
    47:47:void access$300(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> access$300
    47:47:void access$400(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,boolean) -> access$400
    47:47:void access$500(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,int) -> access$500
    47:47:void access$600(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,com.seafile.seadroid2.account.Account) -> access$600
    47:47:void access$700(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> access$700
    47:47:com.seafile.seadroid2.ui.adapter.AccountAdapter access$800(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> access$800
    47:47:void access$900(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,int) -> access$900
>>>>>>> rename package name,fix action event info list same time crash
    371:383:void chooseAccount(boolean) -> chooseAccount
    387:387:void chooseAccount() -> chooseAccount
    429:429:void chooseDir() -> chooseDir
    433:439:void chooseDir(boolean) -> chooseDir
    394:394:void chooseRepo() -> chooseRepo
    398:425:void chooseRepo(boolean) -> chooseRepo
    583:584:void clearError() -> clearError
<<<<<<< HEAD
    622:626:com.seafile.vmoo.ui.adapter.AccountAdapter getAccountAdapter() -> getAccountAdapter
    606:610:com.seafile.vmoo.account.AccountManager getAccountManager() -> getAccountManager
    598:602:com.seafile.vmoo.data.DataManager getDataManager() -> getDataManager
    638:642:com.seafile.vmoo.ui.adapter.DirentsAdapter getDirentsAdapter() -> getDirentsAdapter
    614:618:com.seafile.vmoo.ui.NavContext getNavContext() -> getNavContext
    630:634:com.seafile.vmoo.ui.adapter.SeafReposAdapter getReposAdapter() -> getReposAdapter
=======
    622:626:com.seafile.seadroid2.ui.adapter.AccountAdapter getAccountAdapter() -> getAccountAdapter
    606:610:com.seafile.seadroid2.account.AccountManager getAccountManager() -> getAccountManager
    598:602:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    638:642:com.seafile.seadroid2.ui.adapter.DirentsAdapter getDirentsAdapter() -> getDirentsAdapter
    614:618:com.seafile.seadroid2.ui.NavContext getNavContext() -> getNavContext
    630:634:com.seafile.seadroid2.ui.adapter.SeafReposAdapter getReposAdapter() -> getReposAdapter
>>>>>>> rename package name,fix action event info list same time crash
    293:293:void onBackPressed() -> onBackPressed
    95:162:void onCreate(android.os.Bundle) -> onCreate
    258:260:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    178:195:void onDestroy() -> onDestroy
    199:226:void onListItemClick(android.view.View,int,long) -> onListItemClick
    283:285:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    274:278:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    266:268:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    167:171:void onStart() -> onStart
    443:443:void refreshDir() -> refreshDir
    505:528:void refreshDir(boolean) -> refreshDir
    297:302:void refreshList(boolean) -> refreshList
<<<<<<< HEAD
    646:647:void setAccount(com.seafile.vmoo.account.Account) -> setAccount
=======
    646:647:void setAccount(com.seafile.seadroid2.account.Account) -> setAccount
>>>>>>> rename package name,fix action event info list same time crash
    577:579:void setErrorMessage(int) -> setErrorMessage
    364:364:void setListAdapter(android.widget.BaseAdapter) -> setListAdapter
    589:593:void showListOrEmptyText(int) -> showListOrEmptyText
    556:572:void showLoading(boolean) -> showLoading
    532:536:void showPasswordDialog() -> showPasswordDialog
<<<<<<< HEAD
    546:552:void showPasswordDialog(java.lang.String,java.lang.String,com.seafile.vmoo.ui.dialog.TaskDialog$TaskDialogListener,java.lang.String) -> showPasswordDialog
=======
    546:552:void showPasswordDialog(java.lang.String,java.lang.String,com.seafile.seadroid2.ui.dialog.TaskDialog$TaskDialogListener,java.lang.String) -> showPasswordDialog
>>>>>>> rename package name,fix action event info list same time crash
    334:334:void stepBack() -> stepBack
    338:341:void stepBack(boolean) -> stepBack
    447:458:void updateAdapterWithDirents(java.util.List) -> updateAdapterWithDirents
    462:501:void updateAdapterWithRepos(java.util.List) -> updateAdapterWithRepos
<<<<<<< HEAD
com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$1 -> com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$1:
    121:121:void <init>(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> <init>
    124:124:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$2 -> com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$2:
    128:128:void <init>(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> <init>
    131:140:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$3 -> com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$3:
    144:144:void <init>(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> <init>
    147:148:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$4 -> com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$4:
    212:212:void <init>(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,android.view.View,int,long) -> <init>
    215:215:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$5 -> com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$5:
    320:320:void <init>(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,boolean) -> <init>
    323:323:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$6 -> com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$6:
    536:536:void <init>(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity) -> <init>
    539:539:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$LoadAccountsTask -> com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$LoadAccountsTask:
    656:658:void <init>(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,com.seafile.vmoo.account.AccountManager,boolean) -> <init>
=======
com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$1 -> com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$1:
    121:121:void <init>(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> <init>
    124:124:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$2 -> com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$2:
    128:128:void <init>(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> <init>
    131:140:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$3 -> com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$3:
    144:144:void <init>(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> <init>
    147:148:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$4 -> com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$4:
    212:212:void <init>(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,android.view.View,int,long) -> <init>
    215:215:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$5 -> com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$5:
    320:320:void <init>(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,boolean) -> <init>
    323:323:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$6 -> com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$6:
    536:536:void <init>(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity) -> <init>
    539:539:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$LoadAccountsTask -> com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$LoadAccountsTask:
    656:658:void <init>(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,com.seafile.seadroid2.account.AccountManager,boolean) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    650:650:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    664:666:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    650:650:void onPostExecute(java.lang.Object) -> onPostExecute
    675:679:void onPostExecute(java.lang.Void) -> onPostExecute
<<<<<<< HEAD
com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$LoadDirTask -> com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$LoadDirTask:
    745:748:void <init>(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,java.lang.String,java.lang.String,com.seafile.vmoo.data.DataManager) -> <init>
=======
com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$LoadDirTask -> com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$LoadDirTask:
    745:748:void <init>(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,java.lang.String,java.lang.String,com.seafile.seadroid2.data.DataManager) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    739:739:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    754:756:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    739:739:void onPostExecute(java.lang.Object) -> onPostExecute
    765:792:void onPostExecute(java.lang.Void) -> onPostExecute
<<<<<<< HEAD
com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$LoadReposTask -> com.seafile.vmoo.ui.activity.SeafilePathChooserActivity$LoadReposTask:
    706:707:void <init>(com.seafile.vmoo.ui.activity.SeafilePathChooserActivity,com.seafile.vmoo.data.DataManager) -> <init>
=======
com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$LoadReposTask -> com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity$LoadReposTask:
    706:707:void <init>(com.seafile.seadroid2.ui.activity.SeafilePathChooserActivity,com.seafile.seadroid2.data.DataManager) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    701:701:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    713:715:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    701:701:void onPostExecute(java.lang.Object) -> onPostExecute
    724:731:void onPostExecute(java.lang.Void) -> onPostExecute
<<<<<<< HEAD
com.seafile.vmoo.ui.activity.SearchActivity -> com.seafile.vmoo.ui.activity.SearchActivity:
    53:458:void <init>() -> <init>
    53:53:void access$000(com.seafile.vmoo.ui.activity.SearchActivity,boolean) -> access$000
    53:53:android.view.View access$100(com.seafile.vmoo.ui.activity.SearchActivity) -> access$100
    53:53:android.widget.ImageButton access$1000(com.seafile.vmoo.ui.activity.SearchActivity) -> access$1000
    53:53:void access$1100(com.seafile.vmoo.ui.activity.SearchActivity,int) -> access$1100
    53:53:void access$1200(com.seafile.vmoo.ui.activity.SearchActivity,java.lang.String,java.lang.String,java.lang.String) -> access$1200
    53:53:void access$1300(com.seafile.vmoo.ui.activity.SearchActivity,java.lang.String,java.lang.String,java.lang.String) -> access$1300
    53:53:com.seafile.vmoo.transfer.TransferService access$1402(com.seafile.vmoo.ui.activity.SearchActivity,com.seafile.vmoo.transfer.TransferService) -> access$1402
    53:53:android.widget.LinearLayout access$200(com.seafile.vmoo.ui.activity.SearchActivity) -> access$200
    53:53:java.lang.String access$300(com.seafile.vmoo.ui.activity.SearchActivity) -> access$300
    53:53:java.lang.String access$302(com.seafile.vmoo.ui.activity.SearchActivity,java.lang.String) -> access$302
    53:53:android.widget.ImageView access$400(com.seafile.vmoo.ui.activity.SearchActivity) -> access$400
    53:53:android.widget.ImageView access$500(com.seafile.vmoo.ui.activity.SearchActivity) -> access$500
    53:53:android.view.View access$600(com.seafile.vmoo.ui.activity.SearchActivity) -> access$600
    53:53:java.util.List access$700(com.seafile.vmoo.ui.activity.SearchActivity) -> access$700
    53:53:java.util.List access$702(com.seafile.vmoo.ui.activity.SearchActivity,java.util.List) -> access$702
    53:53:com.seafile.vmoo.ui.adapter.SearchAdapter access$800(com.seafile.vmoo.ui.activity.SearchActivity) -> access$800
    53:53:android.widget.EditText access$900(com.seafile.vmoo.ui.activity.SearchActivity) -> access$900
    317:322:com.seafile.vmoo.data.DataManager getDataManager() -> getDataManager
    221:236:void handleSearch(int) -> handleSearch
    151:158:void initData() -> initData
    210:211:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    195:200:void onClick(android.view.View) -> onClick
    77:105:void onCreate(android.os.Bundle) -> onCreate
    163:163:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    141:147:void onDestroy() -> onDestroy
    169:169:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    174:179:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    120:134:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    184:188:void onResume() -> onResume
    111:114:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    391:434:void onSearchedFileSelected(com.seafile.vmoo.data.SearchedFile) -> onSearchedFileSelected
    242:242:void search(java.lang.String,int) -> search
    327:341:void showLoading(boolean) -> showLoading
    438:445:void startFileActivity(java.lang.String,java.lang.String,java.lang.String) -> startFileActivity
    449:455:void startPlayActivity(java.lang.String,java.lang.String,java.lang.String) -> startPlayActivity
com.seafile.vmoo.ui.activity.SearchActivity$1 -> com.seafile.vmoo.ui.activity.SearchActivity$1:
    422:422:void <init>(com.seafile.vmoo.ui.activity.SearchActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    426:428:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.activity.SearchActivity$2 -> com.seafile.vmoo.ui.activity.SearchActivity$2:
    458:458:void <init>(com.seafile.vmoo.ui.activity.SearchActivity) -> <init>
    461:463:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    468:468:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.vmoo.ui.activity.SearchActivity$EditorActionListener -> com.seafile.vmoo.ui.activity.SearchActivity$EditorActionListener:
    375:375:void <init>(com.seafile.vmoo.ui.activity.SearchActivity) -> <init>
    381:383:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.seafile.vmoo.ui.activity.SearchActivity$SearchLibrariesTask -> com.seafile.vmoo.ui.activity.SearchActivity$SearchLibrariesTask:
    260:263:void <init>(com.seafile.vmoo.ui.activity.SearchActivity,com.seafile.vmoo.data.DataManager,java.lang.String,int) -> <init>
    245:245:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    269:272:java.util.ArrayList doInBackground(java.lang.Void[]) -> doInBackground
    245:245:void onPostExecute(java.lang.Object) -> onPostExecute
    280:312:void onPostExecute(java.util.ArrayList) -> onPostExecute
    255:257:void onPreExecute() -> onPreExecute
com.seafile.vmoo.ui.activity.SearchActivity$SearchListClickListener -> com.seafile.vmoo.ui.activity.SearchActivity$SearchListClickListener:
    345:345:void <init>(com.seafile.vmoo.ui.activity.SearchActivity) -> <init>
    349:350:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.vmoo.ui.activity.SearchActivity$SearchTextWatcher -> com.seafile.vmoo.ui.activity.SearchActivity$SearchTextWatcher:
    354:354:void <init>(com.seafile.vmoo.ui.activity.SearchActivity) -> <init>
    362:367:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.seafile.vmoo.ui.activity.SettingsActivity -> com.seafile.vmoo.ui.activity.SettingsActivity:
=======
com.seafile.seadroid2.ui.activity.SearchActivity -> com.seafile.seadroid2.ui.activity.SearchActivity:
    54:459:void <init>() -> <init>
    54:54:void access$000(com.seafile.seadroid2.ui.activity.SearchActivity,boolean) -> access$000
    54:54:android.view.View access$100(com.seafile.seadroid2.ui.activity.SearchActivity) -> access$100
    54:54:android.widget.ImageButton access$1000(com.seafile.seadroid2.ui.activity.SearchActivity) -> access$1000
    54:54:void access$1100(com.seafile.seadroid2.ui.activity.SearchActivity,int) -> access$1100
    54:54:void access$1200(com.seafile.seadroid2.ui.activity.SearchActivity,java.lang.String,java.lang.String,java.lang.String) -> access$1200
    54:54:void access$1300(com.seafile.seadroid2.ui.activity.SearchActivity,java.lang.String,java.lang.String,java.lang.String) -> access$1300
    54:54:com.seafile.seadroid2.transfer.TransferService access$1402(com.seafile.seadroid2.ui.activity.SearchActivity,com.seafile.seadroid2.transfer.TransferService) -> access$1402
    54:54:android.widget.LinearLayout access$200(com.seafile.seadroid2.ui.activity.SearchActivity) -> access$200
    54:54:java.lang.String access$300(com.seafile.seadroid2.ui.activity.SearchActivity) -> access$300
    54:54:java.lang.String access$302(com.seafile.seadroid2.ui.activity.SearchActivity,java.lang.String) -> access$302
    54:54:android.widget.ImageView access$400(com.seafile.seadroid2.ui.activity.SearchActivity) -> access$400
    54:54:android.widget.ImageView access$500(com.seafile.seadroid2.ui.activity.SearchActivity) -> access$500
    54:54:android.view.View access$600(com.seafile.seadroid2.ui.activity.SearchActivity) -> access$600
    54:54:java.util.List access$700(com.seafile.seadroid2.ui.activity.SearchActivity) -> access$700
    54:54:java.util.List access$702(com.seafile.seadroid2.ui.activity.SearchActivity,java.util.List) -> access$702
    54:54:com.seafile.seadroid2.ui.adapter.SearchAdapter access$800(com.seafile.seadroid2.ui.activity.SearchActivity) -> access$800
    54:54:android.widget.EditText access$900(com.seafile.seadroid2.ui.activity.SearchActivity) -> access$900
    318:323:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    222:237:void handleSearch(int) -> handleSearch
    152:159:void initData() -> initData
    211:212:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    196:201:void onClick(android.view.View) -> onClick
    78:106:void onCreate(android.os.Bundle) -> onCreate
    164:164:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    142:148:void onDestroy() -> onDestroy
    170:170:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    175:180:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    121:135:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    185:189:void onResume() -> onResume
    112:115:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    392:435:void onSearchedFileSelected(com.seafile.seadroid2.data.SearchedFile) -> onSearchedFileSelected
    243:243:void search(java.lang.String,int) -> search
    328:342:void showLoading(boolean) -> showLoading
    439:446:void startFileActivity(java.lang.String,java.lang.String,java.lang.String) -> startFileActivity
    450:456:void startPlayActivity(java.lang.String,java.lang.String,java.lang.String) -> startPlayActivity
com.seafile.seadroid2.ui.activity.SearchActivity$1 -> com.seafile.seadroid2.ui.activity.SearchActivity$1:
    423:423:void <init>(com.seafile.seadroid2.ui.activity.SearchActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    427:429:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.activity.SearchActivity$2 -> com.seafile.seadroid2.ui.activity.SearchActivity$2:
    459:459:void <init>(com.seafile.seadroid2.ui.activity.SearchActivity) -> <init>
    462:464:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    469:469:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.seadroid2.ui.activity.SearchActivity$EditorActionListener -> com.seafile.seadroid2.ui.activity.SearchActivity$EditorActionListener:
    376:376:void <init>(com.seafile.seadroid2.ui.activity.SearchActivity) -> <init>
    382:384:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.seafile.seadroid2.ui.activity.SearchActivity$SearchLibrariesTask -> com.seafile.seadroid2.ui.activity.SearchActivity$SearchLibrariesTask:
    261:264:void <init>(com.seafile.seadroid2.ui.activity.SearchActivity,com.seafile.seadroid2.data.DataManager,java.lang.String,int) -> <init>
    246:246:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    270:273:java.util.ArrayList doInBackground(java.lang.Void[]) -> doInBackground
    246:246:void onPostExecute(java.lang.Object) -> onPostExecute
    281:313:void onPostExecute(java.util.ArrayList) -> onPostExecute
    256:258:void onPreExecute() -> onPreExecute
com.seafile.seadroid2.ui.activity.SearchActivity$SearchListClickListener -> com.seafile.seadroid2.ui.activity.SearchActivity$SearchListClickListener:
    346:346:void <init>(com.seafile.seadroid2.ui.activity.SearchActivity) -> <init>
    350:351:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.seadroid2.ui.activity.SearchActivity$SearchTextWatcher -> com.seafile.seadroid2.ui.activity.SearchActivity$SearchTextWatcher:
    355:355:void <init>(com.seafile.seadroid2.ui.activity.SearchActivity) -> <init>
    363:368:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.seafile.seadroid2.ui.activity.SettingsActivity -> com.seafile.seadroid2.ui.activity.SettingsActivity:
>>>>>>> rename package name,fix action event info list same time crash
    15:15:void <init>() -> <init>
    24:39:void onCreate(android.os.Bundle) -> onCreate
    48:48:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    53:57:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
<<<<<<< HEAD
com.seafile.vmoo.ui.activity.ShareToSeafileActivity -> com.seafile.vmoo.ui.activity.ShareToSeafileActivity:
    40:50:void <init>() -> <init>
    40:40:java.util.ArrayList access$000(com.seafile.vmoo.ui.activity.ShareToSeafileActivity) -> access$000
    40:40:com.seafile.vmoo.transfer.TransferService access$100(com.seafile.vmoo.ui.activity.ShareToSeafileActivity) -> access$100
    40:40:com.seafile.vmoo.transfer.TransferService access$102(com.seafile.vmoo.ui.activity.ShareToSeafileActivity,com.seafile.vmoo.transfer.TransferService) -> access$102
    40:40:void access$200(com.seafile.vmoo.ui.activity.ShareToSeafileActivity,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList) -> access$200
    40:40:java.lang.Boolean access$300(com.seafile.vmoo.ui.activity.ShareToSeafileActivity) -> access$300
    40:40:void access$400(com.seafile.vmoo.ui.activity.ShareToSeafileActivity,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList) -> access$400
    174:174:void addUpdateTask(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList) -> addUpdateTask
    187:187:void addUploadTask(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList) -> addUploadTask
    383:384:void asyncCheckDrientFromServer(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String) -> asyncCheckDrientFromServer
    206:249:void bindTransferService(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,boolean) -> bindTransferService
    65:69:void loadSharedFiles(java.lang.Object) -> loadSharedFiles
    317:373:void notifyFileOverwriting(com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String) -> notifyFileOverwriting
    258:275:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    52:59:void onCreate(android.os.Bundle) -> onCreate
    155:161:void onDestroy() -> onDestroy
    281:281:void onPostResume() -> onPostResume
com.seafile.vmoo.ui.activity.ShareToSeafileActivity$1 -> com.seafile.vmoo.ui.activity.ShareToSeafileActivity$1:
    214:214:void <init>(com.seafile.vmoo.ui.activity.ShareToSeafileActivity,java.util.ArrayList,com.seafile.vmoo.data.DataManager,java.lang.String,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,boolean) -> <init>
    217:240:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    245:245:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.vmoo.ui.activity.ShareToSeafileActivity$2 -> com.seafile.vmoo.ui.activity.ShareToSeafileActivity$2:
    355:355:void <init>(com.seafile.vmoo.ui.activity.ShareToSeafileActivity,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String) -> <init>
    358:361:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.activity.ShareToSeafileActivity$3 -> com.seafile.vmoo.ui.activity.ShareToSeafileActivity$3:
    345:345:void <init>(com.seafile.vmoo.ui.activity.ShareToSeafileActivity) -> <init>
    348:350:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.activity.ShareToSeafileActivity$4 -> com.seafile.vmoo.ui.activity.ShareToSeafileActivity$4:
    335:335:void <init>(com.seafile.vmoo.ui.activity.ShareToSeafileActivity,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String) -> <init>
    338:341:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.activity.ShareToSeafileActivity$CheckDirentExistentTask -> com.seafile.vmoo.ui.activity.ShareToSeafileActivity$CheckDirentExistentTask:
    399:404:void <init>(com.seafile.vmoo.ui.activity.ShareToSeafileActivity,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String,java.lang.String) -> <init>
    387:387:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    411:430:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    387:387:void onPostExecute(java.lang.Object) -> onPostExecute
    437:440:void onPostExecute(java.lang.Void) -> onPostExecute
com.seafile.vmoo.ui.activity.ShareToSeafileActivity$LoadSharedFileTask -> com.seafile.vmoo.ui.activity.ShareToSeafileActivity$LoadSharedFileTask:
    93:93:void <init>(com.seafile.vmoo.ui.activity.ShareToSeafileActivity) -> <init>
    93:93:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    100:128:java.io.File[] doInBackground(android.net.Uri[]) -> doInBackground
    93:93:void onPostExecute(java.lang.Object) -> onPostExecute
    133:143:void onPostExecute(java.io.File[]) -> onPostExecute
com.seafile.vmoo.ui.activity.TransferActivity -> com.seafile.vmoo.ui.activity.TransferActivity:
    24:32:void <init>() -> <init>
    24:24:com.seafile.vmoo.ui.adapter.TransferTaskAdapter$TaskType access$000(com.seafile.vmoo.ui.activity.TransferActivity) -> access$000
    24:24:com.seafile.vmoo.ui.adapter.TransferTaskAdapter$TaskType access$002(com.seafile.vmoo.ui.activity.TransferActivity,com.seafile.vmoo.ui.adapter.TransferTaskAdapter$TaskType) -> access$002
    24:24:androidx.viewpager.widget.ViewPager access$100(com.seafile.vmoo.ui.activity.TransferActivity) -> access$100
    185:185:com.seafile.vmoo.ui.fragment.DownloadTaskFragment getDownloadTaskFragment() -> getDownloadTaskFragment
    193:193:androidx.fragment.app.Fragment getFragment(int) -> getFragment
    189:189:com.seafile.vmoo.ui.fragment.UploadTaskFragment getUploadTaskFragment() -> getUploadTaskFragment
=======
com.seafile.seadroid2.ui.activity.ShareToSeafileActivity -> com.seafile.seadroid2.ui.activity.ShareToSeafileActivity:
    41:51:void <init>() -> <init>
    41:41:java.util.ArrayList access$000(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity) -> access$000
    41:41:com.seafile.seadroid2.transfer.TransferService access$100(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity) -> access$100
    41:41:com.seafile.seadroid2.transfer.TransferService access$102(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity,com.seafile.seadroid2.transfer.TransferService) -> access$102
    41:41:void access$200(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList) -> access$200
    41:41:java.lang.Boolean access$300(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity) -> access$300
    41:41:void access$400(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList) -> access$400
    175:175:void addUpdateTask(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList) -> addUpdateTask
    188:188:void addUploadTask(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList) -> addUploadTask
    384:385:void asyncCheckDrientFromServer(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String) -> asyncCheckDrientFromServer
    207:250:void bindTransferService(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,boolean) -> bindTransferService
    81:89:java.lang.String getSharedFilePath(android.net.Uri) -> getSharedFilePath
    66:70:void loadSharedFiles(java.lang.Object) -> loadSharedFiles
    318:374:void notifyFileOverwriting(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String) -> notifyFileOverwriting
    259:276:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    53:60:void onCreate(android.os.Bundle) -> onCreate
    156:162:void onDestroy() -> onDestroy
    282:282:void onPostResume() -> onPostResume
com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$1 -> com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$1:
    215:215:void <init>(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity,java.util.ArrayList,com.seafile.seadroid2.data.DataManager,java.lang.String,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,boolean) -> <init>
    218:241:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    246:246:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$2 -> com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$2:
    356:356:void <init>(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String) -> <init>
    359:362:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$3 -> com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$3:
    346:346:void <init>(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity) -> <init>
    349:351:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$4 -> com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$4:
    336:336:void <init>(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String) -> <init>
    339:342:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$CheckDirentExistentTask -> com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$CheckDirentExistentTask:
    400:405:void <init>(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String) -> <init>
    388:388:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    412:431:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    388:388:void onPostExecute(java.lang.Object) -> onPostExecute
    438:441:void onPostExecute(java.lang.Void) -> onPostExecute
com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$LoadSharedFileTask -> com.seafile.seadroid2.ui.activity.ShareToSeafileActivity$LoadSharedFileTask:
    94:94:void <init>(com.seafile.seadroid2.ui.activity.ShareToSeafileActivity) -> <init>
    94:94:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    101:129:java.io.File[] doInBackground(android.net.Uri[]) -> doInBackground
    94:94:void onPostExecute(java.lang.Object) -> onPostExecute
    134:144:void onPostExecute(java.io.File[]) -> onPostExecute
com.seafile.seadroid2.ui.activity.TransferActivity -> com.seafile.seadroid2.ui.activity.TransferActivity:
    24:32:void <init>() -> <init>
    24:24:com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$TaskType access$000(com.seafile.seadroid2.ui.activity.TransferActivity) -> access$000
    24:24:com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$TaskType access$002(com.seafile.seadroid2.ui.activity.TransferActivity,com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$TaskType) -> access$002
    24:24:androidx.viewpager.widget.ViewPager access$100(com.seafile.seadroid2.ui.activity.TransferActivity) -> access$100
    185:185:com.seafile.seadroid2.ui.fragment.DownloadTaskFragment getDownloadTaskFragment() -> getDownloadTaskFragment
    193:193:androidx.fragment.app.Fragment getFragment(int) -> getFragment
    189:189:com.seafile.seadroid2.ui.fragment.UploadTaskFragment getUploadTaskFragment() -> getUploadTaskFragment
>>>>>>> rename package name,fix action event info list same time crash
    197:197:java.lang.String makeFragmentName(int) -> makeFragmentName
    54:115:void onCreate(android.os.Bundle) -> onCreate
    142:143:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    120:125:void onItemSelected() -> onItemSelected
    133:137:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    164:169:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    36:46:void onNewIntent(android.content.Intent) -> onNewIntent
    155:159:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
<<<<<<< HEAD
com.seafile.vmoo.ui.activity.TransferActivity$1 -> com.seafile.vmoo.ui.activity.TransferActivity$1:
    66:66:void <init>(com.seafile.vmoo.ui.activity.TransferActivity) -> <init>
    70:93:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
com.seafile.vmoo.ui.activity.TransferActivity$TransferTabsAdapter -> com.seafile.vmoo.ui.activity.TransferActivity$TransferTabsAdapter:
    208:211:void <init>(com.seafile.vmoo.ui.activity.TransferActivity,androidx.fragment.app.FragmentManager) -> <init>
    231:224:androidx.fragment.app.Fragment getItem(int) -> getItem
    241:239:java.lang.CharSequence getPageTitle(int) -> getPageTitle
com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity -> com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity:
    25:135:void <init>() -> <init>
    25:25:com.seafile.vmoo.gesturelock.LockPatternView access$000(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity) -> access$000
    25:25:java.lang.Runnable access$100(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity) -> access$100
    25:25:int access$200(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity) -> access$200
    25:25:int access$202(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity,int) -> access$202
    25:25:int access$208(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity) -> access$208
    25:25:android.widget.TextView access$300(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity) -> access$300
    25:25:android.view.animation.Animation access$400(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity) -> access$400
    25:25:android.os.Handler access$500(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity) -> access$500
    25:25:android.os.CountDownTimer access$602(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity,android.os.CountDownTimer) -> access$602
    69:72:void onBackPressed() -> onBackPressed
    39:55:void onCreate(android.os.Bundle) -> onCreate
    60:62:void onDestroy() -> onDestroy
    167:171:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity$1 -> com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity$1:
    75:75:void <init>(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity) -> <init>
    77:77:void run() -> run
com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity$2 -> com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity$2:
    81:81:void <init>(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity) -> <init>
    89:89:void onPatternCleared() -> onPatternCleared
    95:123:void onPatternDetected(java.util.List) -> onPatternDetected
    84:85:void onPatternStart() -> onPatternStart
com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity$3 -> com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity$3:
    135:135:void <init>(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity) -> <init>
    139:141:void run() -> run
com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity$3$1 -> com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity$3$1:
    142:142:void <init>(com.seafile.vmoo.ui.activity.UnlockGesturePasswordActivity$3,long,long) -> <init>
    158:159:void onFinish() -> onFinish
    146:151:void onTick(long) -> onTick
com.seafile.vmoo.ui.adapter.AccountAdapter -> com.seafile.vmoo.ui.adapter.AccountAdapter:
    41:44:void <init>(android.content.Context) -> <init>
    58:58:void add(com.seafile.vmoo.account.Account) -> add
    86:86:void clear() -> clear
    140:145:java.lang.String getAvatarUrl(com.seafile.vmoo.account.Account) -> getAvatarUrl
    49:49:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    67:67:com.seafile.vmoo.account.Account getItem(int) -> getItem
=======
com.seafile.seadroid2.ui.activity.TransferActivity$1 -> com.seafile.seadroid2.ui.activity.TransferActivity$1:
    66:66:void <init>(com.seafile.seadroid2.ui.activity.TransferActivity) -> <init>
    70:93:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
com.seafile.seadroid2.ui.activity.TransferActivity$TransferTabsAdapter -> com.seafile.seadroid2.ui.activity.TransferActivity$TransferTabsAdapter:
    208:211:void <init>(com.seafile.seadroid2.ui.activity.TransferActivity,androidx.fragment.app.FragmentManager) -> <init>
    231:224:androidx.fragment.app.Fragment getItem(int) -> getItem
    241:239:java.lang.CharSequence getPageTitle(int) -> getPageTitle
com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity -> com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity:
    26:136:void <init>() -> <init>
    26:26:com.seafile.seadroid2.gesturelock.LockPatternView access$000(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity) -> access$000
    26:26:java.lang.Runnable access$100(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity) -> access$100
    26:26:int access$200(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity) -> access$200
    26:26:int access$202(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity,int) -> access$202
    26:26:int access$208(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity) -> access$208
    26:26:android.widget.TextView access$300(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity) -> access$300
    26:26:android.view.animation.Animation access$400(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity) -> access$400
    26:26:android.os.Handler access$500(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity) -> access$500
    26:26:android.os.CountDownTimer access$602(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity,android.os.CountDownTimer) -> access$602
    70:73:void onBackPressed() -> onBackPressed
    40:56:void onCreate(android.os.Bundle) -> onCreate
    61:63:void onDestroy() -> onDestroy
    168:172:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity$1 -> com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity$1:
    76:76:void <init>(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity) -> <init>
    78:78:void run() -> run
com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity$2 -> com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity$2:
    82:82:void <init>(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity) -> <init>
    90:90:void onPatternCleared() -> onPatternCleared
    96:124:void onPatternDetected(java.util.List) -> onPatternDetected
    85:86:void onPatternStart() -> onPatternStart
com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity$3 -> com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity$3:
    136:136:void <init>(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity) -> <init>
    140:142:void run() -> run
com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity$3$1 -> com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity$3$1:
    143:143:void <init>(com.seafile.seadroid2.ui.activity.UnlockGesturePasswordActivity$3,long,long) -> <init>
    159:160:void onFinish() -> onFinish
    147:152:void onTick(long) -> onTick
com.seafile.seadroid2.ui.adapter.AccountAdapter -> com.seafile.seadroid2.ui.adapter.AccountAdapter:
    41:44:void <init>(android.content.Context) -> <init>
    58:58:void add(com.seafile.seadroid2.account.Account) -> add
    86:86:void clear() -> clear
    140:145:java.lang.String getAvatarUrl(com.seafile.seadroid2.account.Account) -> getAvatarUrl
    49:49:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    67:67:com.seafile.seadroid2.account.Account getItem(int) -> getItem
>>>>>>> rename package name,fix action event info list same time crash
    103:134:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    54:54:boolean isEmpty() -> isEmpty
    62:62:void notifyChanged() -> notifyChanged
    77:77:void setAvatars(java.util.ArrayList) -> setAvatars
    71:72:void setItems(java.util.List) -> setItems
<<<<<<< HEAD
com.seafile.vmoo.ui.adapter.AccountAdapter$AnimateFirstDisplayListener -> com.seafile.vmoo.ui.adapter.AccountAdapter$AnimateFirstDisplayListener:
    154:154:void <clinit>() -> <clinit>
    152:152:void <init>() -> <init>
    152:152:void <init>(com.seafile.vmoo.ui.adapter.AccountAdapter$1) -> <init>
    159:163:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.seafile.vmoo.ui.adapter.AccountAdapter$Viewholder -> com.seafile.vmoo.ui.adapter.AccountAdapter$Viewholder:
    173:177:void <init>(com.seafile.vmoo.ui.adapter.AccountAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView) -> <init>
com.seafile.vmoo.ui.adapter.ActivitiesItemAdapter -> com.seafile.vmoo.ui.adapter.ActivitiesItemAdapter:
    46:60:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    69:69:void clear() -> clear
    65:65:int getCount() -> getCount
    116:116:android.view.View getFooterView() -> getFooterView
    33:33:java.lang.Object getItem(int) -> getItem
    82:82:com.seafile.vmoo.data.SeafItem getItem(int) -> getItem
    121:170:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    77:77:void notifyChanged() -> notifyChanged
    181:185:java.lang.String parseAvatar(java.lang.String) -> parseAvatar
    191:193:java.lang.String parseRelativeTime(java.lang.String) -> parseRelativeTime
    98:107:void setFooterViewLoading(boolean) -> setFooterViewLoading
    91:92:void setItems(java.util.List) -> setItems
    112:112:void setState(int) -> setState
com.seafile.vmoo.ui.adapter.ActivitiesItemAdapter$ViewHolder -> com.seafile.vmoo.ui.adapter.ActivitiesItemAdapter$ViewHolder:
    201:207:void <init>(com.seafile.vmoo.ui.adapter.ActivitiesItemAdapter,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.ImageView) -> <init>
com.seafile.vmoo.ui.adapter.BottomSheetAdapter -> com.seafile.vmoo.ui.adapter.BottomSheetAdapter:
    21:23:void <init>(android.content.Context,java.util.List) -> <init>
    28:28:int getCount() -> getCount
    33:33:java.lang.Object getItem(int) -> getItem
    45:61:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.seafile.vmoo.ui.adapter.BottomSheetAdapter$1 -> com.seafile.vmoo.ui.adapter.BottomSheetAdapter$1:
    57:57:void <clinit>() -> <clinit>
com.seafile.vmoo.ui.adapter.BottomSheetAdapter$ViewHolder -> com.seafile.vmoo.ui.adapter.BottomSheetAdapter$ViewHolder:
    81:81:void <init>() -> <init>
com.seafile.vmoo.ui.adapter.DirentsAdapter -> com.seafile.vmoo.ui.adapter.DirentsAdapter:
    23:24:void <init>() -> <init>
    47:47:void add(com.seafile.vmoo.data.SeafDirent) -> add
    62:62:void clearDirents() -> clearDirents
    38:38:int getCount() -> getCount
    19:19:java.lang.Object getItem(int) -> getItem
    53:53:com.seafile.vmoo.data.SeafDirent getItem(int) -> getItem
=======
com.seafile.seadroid2.ui.adapter.AccountAdapter$AnimateFirstDisplayListener -> com.seafile.seadroid2.ui.adapter.AccountAdapter$AnimateFirstDisplayListener:
    154:154:void <clinit>() -> <clinit>
    152:152:void <init>() -> <init>
    152:152:void <init>(com.seafile.seadroid2.ui.adapter.AccountAdapter$1) -> <init>
    159:163:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.seafile.seadroid2.ui.adapter.AccountAdapter$Viewholder -> com.seafile.seadroid2.ui.adapter.AccountAdapter$Viewholder:
    173:177:void <init>(com.seafile.seadroid2.ui.adapter.AccountAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView) -> <init>
com.seafile.seadroid2.ui.adapter.ActivitiesItemAdapter -> com.seafile.seadroid2.ui.adapter.ActivitiesItemAdapter:
    45:59:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    72:72:void add(com.seafile.seadroid2.data.SeafEvent) -> add
    68:68:void clear() -> clear
    64:64:int getCount() -> getCount
    115:115:android.view.View getFooterView() -> getFooterView
    32:32:java.lang.Object getItem(int) -> getItem
    81:81:com.seafile.seadroid2.data.SeafItem getItem(int) -> getItem
    120:169:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    76:76:void notifyChanged() -> notifyChanged
    180:184:java.lang.String parseAvatar(java.lang.String) -> parseAvatar
    190:192:java.lang.String parseRelativeTime(java.lang.String) -> parseRelativeTime
    97:106:void setFooterViewLoading(boolean) -> setFooterViewLoading
    90:91:void setItems(java.util.List) -> setItems
    111:111:void setState(int) -> setState
com.seafile.seadroid2.ui.adapter.ActivitiesItemAdapter$ViewHolder -> com.seafile.seadroid2.ui.adapter.ActivitiesItemAdapter$ViewHolder:
    200:206:void <init>(com.seafile.seadroid2.ui.adapter.ActivitiesItemAdapter,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.ImageView) -> <init>
com.seafile.seadroid2.ui.adapter.BottomSheetAdapter -> com.seafile.seadroid2.ui.adapter.BottomSheetAdapter:
    22:24:void <init>(android.content.Context,java.util.List) -> <init>
    29:29:int getCount() -> getCount
    34:34:java.lang.Object getItem(int) -> getItem
    46:62:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.seafile.seadroid2.ui.adapter.BottomSheetAdapter$1 -> com.seafile.seadroid2.ui.adapter.BottomSheetAdapter$1:
    58:58:void <clinit>() -> <clinit>
com.seafile.seadroid2.ui.adapter.BottomSheetAdapter$ViewHolder -> com.seafile.seadroid2.ui.adapter.BottomSheetAdapter$ViewHolder:
    82:82:void <init>() -> <init>
com.seafile.seadroid2.ui.adapter.DirentsAdapter -> com.seafile.seadroid2.ui.adapter.DirentsAdapter:
    23:24:void <init>() -> <init>
    47:47:void add(com.seafile.seadroid2.data.SeafDirent) -> add
    62:62:void clearDirents() -> clearDirents
    38:38:int getCount() -> getCount
    19:19:java.lang.Object getItem(int) -> getItem
    53:53:com.seafile.seadroid2.data.SeafDirent getItem(int) -> getItem
>>>>>>> rename package name,fix action event info list same time crash
    114:145:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    43:43:boolean isEmpty() -> isEmpty
    66:70:void setDirents(java.util.List) -> setDirents
    74:107:void sortFiles(int,int) -> sortFiles
<<<<<<< HEAD
com.seafile.vmoo.ui.adapter.DirentsAdapter$Viewholder -> com.seafile.vmoo.ui.adapter.DirentsAdapter$Viewholder:
    155:159:void <init>(com.seafile.vmoo.ui.adapter.DirentsAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView) -> <init>
com.seafile.vmoo.ui.adapter.GalleryAdapter -> com.seafile.vmoo.ui.adapter.GalleryAdapter:
    48:61:void <init>(com.seafile.vmoo.ui.activity.GalleryActivity,com.seafile.vmoo.account.Account,java.util.List,com.seafile.vmoo.data.DataManager) -> <init>
    34:34:com.seafile.vmoo.data.DataManager access$000(com.seafile.vmoo.ui.adapter.GalleryAdapter) -> access$000
    34:34:com.nostra13.universalimageloader.core.DisplayImageOptions access$100(com.seafile.vmoo.ui.adapter.GalleryAdapter) -> access$100
    34:34:com.seafile.vmoo.ui.activity.GalleryActivity access$200(com.seafile.vmoo.ui.adapter.GalleryAdapter) -> access$200
=======
com.seafile.seadroid2.ui.adapter.DirentsAdapter$Viewholder -> com.seafile.seadroid2.ui.adapter.DirentsAdapter$Viewholder:
    155:159:void <init>(com.seafile.seadroid2.ui.adapter.DirentsAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView) -> <init>
com.seafile.seadroid2.ui.adapter.GalleryAdapter -> com.seafile.seadroid2.ui.adapter.GalleryAdapter:
    48:61:void <init>(com.seafile.seadroid2.ui.activity.GalleryActivity,com.seafile.seadroid2.account.Account,java.util.List,com.seafile.seadroid2.data.DataManager) -> <init>
    34:34:com.seafile.seadroid2.data.DataManager access$000(com.seafile.seadroid2.ui.adapter.GalleryAdapter) -> access$000
    34:34:com.nostra13.universalimageloader.core.DisplayImageOptions access$100(com.seafile.seadroid2.ui.adapter.GalleryAdapter) -> access$100
    34:34:com.seafile.seadroid2.ui.activity.GalleryActivity access$200(com.seafile.seadroid2.ui.adapter.GalleryAdapter) -> access$200
>>>>>>> rename package name,fix action event info list same time crash
    168:168:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    66:66:int getCount() -> getCount
    34:34:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    75:151:android.view.View instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    70:70:void setItems(java.util.List) -> setItems
<<<<<<< HEAD
com.seafile.vmoo.ui.adapter.GalleryAdapter$1 -> com.seafile.vmoo.ui.adapter.GalleryAdapter$1:
    86:86:void <init>(com.seafile.vmoo.ui.adapter.GalleryAdapter,android.widget.ProgressBar,java.lang.String,java.lang.String,java.lang.String,uk.co.senab.photoview.PhotoView) -> <init>
    138:139:void onFileDownloadFailed(int) -> onFileDownloadFailed
    89:89:void onFileDownloadProgress(int) -> onFileDownloadProgress
    95:95:void onFileDownloaded(int) -> onFileDownloaded
com.seafile.vmoo.ui.adapter.GalleryAdapter$1$1 -> com.seafile.vmoo.ui.adapter.GalleryAdapter$1$1:
    99:99:void <init>(com.seafile.vmoo.ui.adapter.GalleryAdapter$1) -> <init>
=======
com.seafile.seadroid2.ui.adapter.GalleryAdapter$1 -> com.seafile.seadroid2.ui.adapter.GalleryAdapter$1:
    86:86:void <init>(com.seafile.seadroid2.ui.adapter.GalleryAdapter,android.widget.ProgressBar,java.lang.String,java.lang.String,java.lang.String,uk.co.senab.photoview.PhotoView) -> <init>
    138:139:void onFileDownloadFailed(int) -> onFileDownloadFailed
    89:89:void onFileDownloadProgress(int) -> onFileDownloadProgress
    95:95:void onFileDownloaded(int) -> onFileDownloaded
com.seafile.seadroid2.ui.adapter.GalleryAdapter$1$1 -> com.seafile.seadroid2.ui.adapter.GalleryAdapter$1$1:
    99:99:void <init>(com.seafile.seadroid2.ui.adapter.GalleryAdapter$1) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    121:121:void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
    115:115:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    109:109:void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    103:103:void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
<<<<<<< HEAD
com.seafile.vmoo.ui.adapter.GalleryAdapter$1$2 -> com.seafile.vmoo.ui.adapter.GalleryAdapter$1$2:
    124:124:void <init>(com.seafile.vmoo.ui.adapter.GalleryAdapter$1) -> <init>
    130:130:void onProgressUpdate(java.lang.String,android.view.View,int,int) -> onProgressUpdate
com.seafile.vmoo.ui.adapter.GalleryAdapter$2 -> com.seafile.vmoo.ui.adapter.GalleryAdapter$2:
    144:144:void <init>(com.seafile.vmoo.ui.adapter.GalleryAdapter) -> <init>
    147:147:void onPhotoTap(android.view.View,float,float) -> onPhotoTap
com.seafile.vmoo.ui.adapter.ReposAdapter -> com.seafile.vmoo.ui.adapter.ReposAdapter:
=======
com.seafile.seadroid2.ui.adapter.GalleryAdapter$1$2 -> com.seafile.seadroid2.ui.adapter.GalleryAdapter$1$2:
    124:124:void <init>(com.seafile.seadroid2.ui.adapter.GalleryAdapter$1) -> <init>
    130:130:void onProgressUpdate(java.lang.String,android.view.View,int,int) -> onProgressUpdate
com.seafile.seadroid2.ui.adapter.GalleryAdapter$2 -> com.seafile.seadroid2.ui.adapter.GalleryAdapter$2:
    144:144:void <init>(com.seafile.seadroid2.ui.adapter.GalleryAdapter) -> <init>
    147:147:void onPhotoTap(android.view.View,float,float) -> onPhotoTap
com.seafile.seadroid2.ui.adapter.ReposAdapter -> com.seafile.seadroid2.ui.adapter.ReposAdapter:
>>>>>>> rename package name,fix action event info list same time crash
    24:26:void <init>(boolean,java.lang.String) -> <init>
    39:39:java.util.List getData() -> getData
    75:95:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    43:53:void setRepos(java.util.List) -> setRepos
<<<<<<< HEAD
com.seafile.vmoo.ui.adapter.ReposAdapter$Viewholder -> com.seafile.vmoo.ui.adapter.ReposAdapter$Viewholder:
    103:108:void <init>(com.seafile.vmoo.ui.adapter.ReposAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.ImageView) -> <init>
com.seafile.vmoo.ui.adapter.SeafAccountAdapter -> com.seafile.vmoo.ui.adapter.SeafAccountAdapter:
    12:12:void <init>(android.content.Context) -> <init>
com.seafile.vmoo.ui.adapter.SeafItemAdapter -> com.seafile.vmoo.ui.adapter.SeafItemAdapter:
    53:56:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    37:37:com.seafile.vmoo.ui.activity.BrowserActivity access$000(com.seafile.vmoo.ui.adapter.SeafItemAdapter) -> access$000
    37:37:android.util.SparseBooleanArray access$100(com.seafile.vmoo.ui.adapter.SeafItemAdapter) -> access$100
    37:37:java.util.List access$200(com.seafile.vmoo.ui.adapter.SeafItemAdapter) -> access$200
    37:37:java.util.List access$300(com.seafile.vmoo.ui.adapter.SeafItemAdapter) -> access$300
    129:129:void add(com.seafile.vmoo.data.SeafItem) -> add
    174:174:void clear() -> clear
    150:153:void deselectAllItems() -> deselectAllItems
    116:119:boolean equalLists(java.util.List,java.util.List) -> equalLists
    452:471:android.view.View getCacheView(com.seafile.vmoo.data.SeafCachedFile,android.view.View,android.view.ViewGroup) -> getCacheView
    511:511:int getCheckedItemCount() -> getCheckedItemCount
    78:78:int getCount() -> getCount
    259:328:android.view.View getDirentView(com.seafile.vmoo.data.SeafDirent,android.view.View,android.view.ViewGroup,int) -> getDirentView
    244:250:android.view.View getGroupView(com.seafile.vmoo.data.SeafGroup) -> getGroupView
    37:37:java.lang.Object getItem(int) -> getItem
    138:138:com.seafile.vmoo.data.SeafItem getItem(int) -> getItem
    196:197:int getItemViewType(int) -> getItemViewType
    208:234:android.view.View getRepoView(com.seafile.vmoo.data.SeafRepo,android.view.View,android.view.ViewGroup) -> getRepoView
    515:515:java.util.List getSelectedItemsValues() -> getSelectedItemsValues
    545:545:int getThumbnailWidth() -> getThumbnailWidth
    478:486:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    83:83:boolean isEmpty() -> isEmpty
    133:133:void notifyChanged() -> notifyChanged
    157:165:void selectAllItems() -> selectAllItems
    491:491:void setActionModeOn(boolean) -> setActionModeOn
    95:98:void setDownloadTaskList(java.util.List) -> setDownloadTaskList
    549:549:void setEncryptedRepo(boolean) -> setEncryptedRepo
    348:361:void setFileView(com.seafile.vmoo.data.SeafDirent,com.seafile.vmoo.ui.adapter.SeafItemAdapter$Viewholder,int) -> setFileView
    142:146:void setItems(java.util.List) -> setItems
    557:611:void sortFiles(int,int) -> sortFiles
    495:507:void toggleSelection(int) -> toggleSelection
com.seafile.vmoo.ui.adapter.SeafItemAdapter$1 -> com.seafile.vmoo.ui.adapter.SeafItemAdapter$1:
    222:222:void <init>(com.seafile.vmoo.ui.adapter.SeafItemAdapter,com.seafile.vmoo.data.SeafRepo) -> <init>
    225:225:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.adapter.SeafItemAdapter$2 -> com.seafile.vmoo.ui.adapter.SeafItemAdapter$2:
    273:273:void <init>(com.seafile.vmoo.ui.adapter.SeafItemAdapter,com.seafile.vmoo.data.SeafDirent,int) -> <init>
    276:279:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.adapter.SeafItemAdapter$3 -> com.seafile.vmoo.ui.adapter.SeafItemAdapter$3:
    290:290:void <init>(com.seafile.vmoo.ui.adapter.SeafItemAdapter,int,com.seafile.vmoo.ui.adapter.SeafItemAdapter$Viewholder,com.seafile.vmoo.data.SeafDirent) -> <init>
    293:305:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.adapter.SeafItemAdapter$4 -> com.seafile.vmoo.ui.adapter.SeafItemAdapter$4:
    386:386:void <clinit>() -> <clinit>
com.seafile.vmoo.ui.adapter.SeafItemAdapter$Viewholder -> com.seafile.vmoo.ui.adapter.SeafItemAdapter$Viewholder:
    532:540:void <init>(com.seafile.vmoo.ui.adapter.SeafItemAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.ImageView,android.widget.RelativeLayout,android.widget.ImageView,android.widget.ProgressBar) -> <init>
com.seafile.vmoo.ui.adapter.SeafReposAdapter -> com.seafile.vmoo.ui.adapter.SeafReposAdapter:
    18:18:void <init>(boolean,java.lang.String) -> <init>
    42:42:void add(com.seafile.vmoo.data.SeafRepo) -> add
    56:56:void clearRepos() -> clearRepos
    111:111:com.seafile.vmoo.data.SeafRepo getChildSeafRepo(int) -> getChildSeafRepo
    33:33:int getCount() -> getCount
    15:15:java.lang.Object getItem(int) -> getItem
    47:47:com.seafile.vmoo.data.SeafRepo getItem(int) -> getItem
    38:38:boolean isEmpty() -> isEmpty
    60:81:void sortFiles(int,int) -> sortFiles
com.seafile.vmoo.ui.adapter.SearchAdapter -> com.seafile.vmoo.ui.adapter.SearchAdapter:
    27:29:void <init>(com.seafile.vmoo.ui.activity.SearchActivity) -> <init>
    79:82:java.lang.String filePath(com.seafile.vmoo.data.SearchedFile) -> filePath
=======
com.seafile.seadroid2.ui.adapter.ReposAdapter$Viewholder -> com.seafile.seadroid2.ui.adapter.ReposAdapter$Viewholder:
    103:108:void <init>(com.seafile.seadroid2.ui.adapter.ReposAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.ImageView) -> <init>
com.seafile.seadroid2.ui.adapter.SeafAccountAdapter -> com.seafile.seadroid2.ui.adapter.SeafAccountAdapter:
    12:12:void <init>(android.content.Context) -> <init>
com.seafile.seadroid2.ui.adapter.SeafItemAdapter -> com.seafile.seadroid2.ui.adapter.SeafItemAdapter:
    52:55:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    36:36:com.seafile.seadroid2.ui.activity.BrowserActivity access$000(com.seafile.seadroid2.ui.adapter.SeafItemAdapter) -> access$000
    36:36:android.util.SparseBooleanArray access$100(com.seafile.seadroid2.ui.adapter.SeafItemAdapter) -> access$100
    36:36:java.util.List access$200(com.seafile.seadroid2.ui.adapter.SeafItemAdapter) -> access$200
    36:36:java.util.List access$300(com.seafile.seadroid2.ui.adapter.SeafItemAdapter) -> access$300
    128:128:void add(com.seafile.seadroid2.data.SeafItem) -> add
    122:124:void addEntry(com.seafile.seadroid2.data.SeafItem) -> addEntry
    173:173:void clear() -> clear
    149:152:void deselectAllItems() -> deselectAllItems
    115:118:boolean equalLists(java.util.List,java.util.List) -> equalLists
    451:470:android.view.View getCacheView(com.seafile.seadroid2.data.SeafCachedFile,android.view.View,android.view.ViewGroup) -> getCacheView
    510:510:int getCheckedItemCount() -> getCheckedItemCount
    77:77:int getCount() -> getCount
    258:327:android.view.View getDirentView(com.seafile.seadroid2.data.SeafDirent,android.view.View,android.view.ViewGroup,int) -> getDirentView
    243:249:android.view.View getGroupView(com.seafile.seadroid2.data.SeafGroup) -> getGroupView
    36:36:java.lang.Object getItem(int) -> getItem
    137:137:com.seafile.seadroid2.data.SeafItem getItem(int) -> getItem
    195:196:int getItemViewType(int) -> getItemViewType
    207:233:android.view.View getRepoView(com.seafile.seadroid2.data.SeafRepo,android.view.View,android.view.ViewGroup) -> getRepoView
    514:514:java.util.List getSelectedItemsValues() -> getSelectedItemsValues
    544:544:int getThumbnailWidth() -> getThumbnailWidth
    477:485:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    186:187:boolean isClickable(int) -> isClickable
    82:82:boolean isEmpty() -> isEmpty
    181:182:boolean isEnable(int) -> isEnable
    132:132:void notifyChanged() -> notifyChanged
    156:164:void selectAllItems() -> selectAllItems
    490:490:void setActionModeOn(boolean) -> setActionModeOn
    94:97:void setDownloadTaskList(java.util.List) -> setDownloadTaskList
    548:548:void setEncryptedRepo(boolean) -> setEncryptedRepo
    347:360:void setFileView(com.seafile.seadroid2.data.SeafDirent,com.seafile.seadroid2.ui.adapter.SeafItemAdapter$Viewholder,int) -> setFileView
    141:145:void setItems(java.util.List) -> setItems
    556:610:void sortFiles(int,int) -> sortFiles
    494:506:void toggleSelection(int) -> toggleSelection
com.seafile.seadroid2.ui.adapter.SeafItemAdapter$1 -> com.seafile.seadroid2.ui.adapter.SeafItemAdapter$1:
    221:221:void <init>(com.seafile.seadroid2.ui.adapter.SeafItemAdapter,com.seafile.seadroid2.data.SeafRepo) -> <init>
    224:224:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.adapter.SeafItemAdapter$2 -> com.seafile.seadroid2.ui.adapter.SeafItemAdapter$2:
    272:272:void <init>(com.seafile.seadroid2.ui.adapter.SeafItemAdapter,com.seafile.seadroid2.data.SeafDirent,int) -> <init>
    275:278:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.adapter.SeafItemAdapter$3 -> com.seafile.seadroid2.ui.adapter.SeafItemAdapter$3:
    289:289:void <init>(com.seafile.seadroid2.ui.adapter.SeafItemAdapter,int,com.seafile.seadroid2.ui.adapter.SeafItemAdapter$Viewholder,com.seafile.seadroid2.data.SeafDirent) -> <init>
    292:304:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.adapter.SeafItemAdapter$4 -> com.seafile.seadroid2.ui.adapter.SeafItemAdapter$4:
    385:385:void <clinit>() -> <clinit>
com.seafile.seadroid2.ui.adapter.SeafItemAdapter$Viewholder -> com.seafile.seadroid2.ui.adapter.SeafItemAdapter$Viewholder:
    531:539:void <init>(com.seafile.seadroid2.ui.adapter.SeafItemAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.ImageView,android.widget.RelativeLayout,android.widget.ImageView,android.widget.ProgressBar) -> <init>
com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter -> com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter:
    36:38:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    26:26:com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter$OnCheckedChangeListener access$000(com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter) -> access$000
    63:64:void add(com.seafile.seadroid2.data.SeafItem) -> add
    56:59:void addEntry(com.seafile.seadroid2.data.SeafItem) -> addEntry
    117:117:void clear() -> clear
    164:191:android.view.View getCacheView(com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter$SeafItemWrap,android.view.View,android.view.ViewGroup,int) -> getCacheView
    47:47:int getCount() -> getCount
    126:154:android.view.View getDirentView(com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter$SeafItemWrap,android.view.View,android.view.ViewGroup,int) -> getDirentView
    26:26:java.lang.Object getItem(int) -> getItem
    73:73:com.seafile.seadroid2.data.SeafItem getItem(int) -> getItem
    89:90:int getNumSelected() -> getNumSelected
    98:101:java.util.List getSelectedItems() -> getSelectedItems
    197:201:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    52:52:boolean isEmpty() -> isEmpty
    68:68:void notifyChanged() -> notifyChanged
    107:113:void removeSelectedItems() -> removeSelectedItems
    77:79:void setItem(com.seafile.seadroid2.data.SeafItem,int) -> setItem
    42:42:void setOnCheckedChangeListener(com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter$OnCheckedChangeListener) -> setOnCheckedChangeListener
com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter$1 -> com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter$1:
    173:173:void <init>(com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter,com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter$Viewholder) -> <init>
    176:179:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter$SeafItemWrap -> com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter$SeafItemWrap:
    223:225:void <init>(com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter,com.seafile.seadroid2.data.SeafItem) -> <init>
    233:233:boolean isSelected() -> isSelected
    229:229:void setSeleted(boolean) -> setSeleted
com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter$Viewholder -> com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter$Viewholder:
    211:215:void <init>(com.seafile.seadroid2.ui.adapter.SeafItemCheckableAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.CheckBox) -> <init>
com.seafile.seadroid2.ui.adapter.SeafReposAdapter -> com.seafile.seadroid2.ui.adapter.SeafReposAdapter:
    18:18:void <init>(boolean,java.lang.String) -> <init>
    42:42:void add(com.seafile.seadroid2.data.SeafRepo) -> add
    56:56:void clearRepos() -> clearRepos
    111:111:com.seafile.seadroid2.data.SeafRepo getChildSeafRepo(int) -> getChildSeafRepo
    33:33:int getCount() -> getCount
    15:15:java.lang.Object getItem(int) -> getItem
    47:47:com.seafile.seadroid2.data.SeafRepo getItem(int) -> getItem
    38:38:boolean isEmpty() -> isEmpty
    60:81:void sortFiles(int,int) -> sortFiles
com.seafile.seadroid2.ui.adapter.SearchAdapter -> com.seafile.seadroid2.ui.adapter.SearchAdapter:
    27:29:void <init>(com.seafile.seadroid2.ui.activity.SearchActivity) -> <init>
    79:82:java.lang.String filePath(com.seafile.seadroid2.data.SearchedFile) -> filePath
>>>>>>> rename package name,fix action event info list same time crash
    38:38:int getCount() -> getCount
    43:43:java.lang.Object getItem(int) -> getItem
    53:73:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    88:88:void notifyChanged() -> notifyChanged
    33:33:void setItems(java.util.List) -> setItems
<<<<<<< HEAD
com.seafile.vmoo.ui.adapter.SearchAdapter$Viewholder -> com.seafile.vmoo.ui.adapter.SearchAdapter$Viewholder:
    95:101:void <init>(com.seafile.vmoo.ui.adapter.SearchAdapter,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.ImageView) -> <init>
com.seafile.vmoo.ui.adapter.StarredItemAdapter -> com.seafile.vmoo.ui.adapter.StarredItemAdapter:
    36:39:void <init>(com.seafile.vmoo.ui.activity.BrowserActivity) -> <init>
    26:26:android.util.SparseBooleanArray access$000(com.seafile.vmoo.ui.adapter.StarredItemAdapter) -> access$000
    26:26:java.util.List access$100(com.seafile.vmoo.ui.adapter.StarredItemAdapter) -> access$100
    26:26:java.util.List access$200(com.seafile.vmoo.ui.adapter.StarredItemAdapter) -> access$200
    26:26:com.seafile.vmoo.ui.activity.BrowserActivity access$300(com.seafile.vmoo.ui.adapter.StarredItemAdapter) -> access$300
    52:52:void add(com.seafile.vmoo.data.SeafItem) -> add
=======
com.seafile.seadroid2.ui.adapter.SearchAdapter$Viewholder -> com.seafile.seadroid2.ui.adapter.SearchAdapter$Viewholder:
    95:101:void <init>(com.seafile.seadroid2.ui.adapter.SearchAdapter,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.ImageView) -> <init>
com.seafile.seadroid2.ui.adapter.StarredItemAdapter -> com.seafile.seadroid2.ui.adapter.StarredItemAdapter:
    36:39:void <init>(com.seafile.seadroid2.ui.activity.BrowserActivity) -> <init>
    26:26:android.util.SparseBooleanArray access$000(com.seafile.seadroid2.ui.adapter.StarredItemAdapter) -> access$000
    26:26:java.util.List access$100(com.seafile.seadroid2.ui.adapter.StarredItemAdapter) -> access$100
    26:26:java.util.List access$200(com.seafile.seadroid2.ui.adapter.StarredItemAdapter) -> access$200
    26:26:com.seafile.seadroid2.ui.activity.BrowserActivity access$300(com.seafile.seadroid2.ui.adapter.StarredItemAdapter) -> access$300
    52:52:void add(com.seafile.seadroid2.data.SeafItem) -> add
>>>>>>> rename package name,fix action event info list same time crash
    48:48:void clear() -> clear
    106:109:void deselectAllItems() -> deselectAllItems
    90:90:int getCheckedItemCount() -> getCheckedItemCount
    44:44:int getCount() -> getCount
    26:26:java.lang.Object getItem(int) -> getItem
<<<<<<< HEAD
    61:61:com.seafile.vmoo.data.SeafItem getItem(int) -> getItem
    94:94:java.util.List getSelectedItemsValues() -> getSelectedItemsValues
    126:196:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    56:56:void notifyChanged() -> notifyChanged
    70:70:void setActionModeOn(boolean) -> setActionModeOn
    74:86:void toggleSelection(int) -> toggleSelection
com.seafile.vmoo.ui.adapter.StarredItemAdapter$1 -> com.seafile.vmoo.ui.adapter.StarredItemAdapter$1:
    177:177:void <init>(com.seafile.vmoo.ui.adapter.StarredItemAdapter,int,com.seafile.vmoo.ui.adapter.StarredItemAdapter$Viewholder,com.seafile.vmoo.data.SeafItem) -> <init>
    180:192:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.adapter.StarredItemAdapter$Viewholder -> com.seafile.vmoo.ui.adapter.StarredItemAdapter$Viewholder:
    205:211:void <init>(com.seafile.vmoo.ui.adapter.StarredItemAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView) -> <init>
com.seafile.vmoo.ui.adapter.TransferTaskAdapter -> com.seafile.vmoo.ui.adapter.TransferTaskAdapter:
    52:55:void <init>(com.seafile.vmoo.ui.activity.TransferActivity,java.util.List) -> <init>
    28:28:android.util.SparseBooleanArray access$100(com.seafile.vmoo.ui.adapter.TransferTaskAdapter) -> access$100
    28:28:java.util.List access$200(com.seafile.vmoo.ui.adapter.TransferTaskAdapter) -> access$200
    28:28:com.seafile.vmoo.ui.activity.TransferActivity access$300(com.seafile.vmoo.ui.adapter.TransferTaskAdapter) -> access$300
    222:223:void actionModeOff() -> actionModeOff
    217:218:void actionModeOn() -> actionModeOn
    227:229:void deselectAllItems() -> deselectAllItems
    195:195:int getCheckedItemCount() -> getCheckedItemCount
    104:104:int getCount() -> getCount
    28:28:java.lang.Object getItem(int) -> getItem
    114:114:com.seafile.vmoo.transfer.TransferTaskInfo getItem(int) -> getItem
    199:199:java.util.List getSelectedIds() -> getSelectedIds
    247:326:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    109:109:boolean isEmpty() -> isEmpty
    233:239:void selectAllItems() -> selectAllItems
    59:59:void setCurrentTab(com.seafile.vmoo.ui.adapter.TransferTaskAdapter$TaskType) -> setCurrentTab
    91:92:void setTransferTaskInfos(java.util.List) -> setTransferTaskInfos
    203:213:void toggleSelection(int) -> toggleSelection
    127:191:void updateTaskView(com.seafile.vmoo.transfer.TransferTaskInfo,com.seafile.vmoo.ui.adapter.TransferTaskAdapter$Viewholder) -> updateTaskView
com.seafile.vmoo.ui.adapter.TransferTaskAdapter$1 -> com.seafile.vmoo.ui.adapter.TransferTaskAdapter$1:
    277:277:void <init>(com.seafile.vmoo.ui.adapter.TransferTaskAdapter,int,com.seafile.vmoo.ui.adapter.TransferTaskAdapter$Viewholder) -> <init>
    280:290:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.adapter.TransferTaskAdapter$2 -> com.seafile.vmoo.ui.adapter.TransferTaskAdapter$2:
    310:310:void <init>(com.seafile.vmoo.ui.adapter.TransferTaskAdapter,int,com.seafile.vmoo.ui.adapter.TransferTaskAdapter$Viewholder) -> <init>
    313:323:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.adapter.TransferTaskAdapter$3 -> com.seafile.vmoo.ui.adapter.TransferTaskAdapter$3:
    67:67:void <clinit>() -> <clinit>
com.seafile.vmoo.ui.adapter.TransferTaskAdapter$TaskInfoComparator -> com.seafile.vmoo.ui.adapter.TransferTaskAdapter$TaskInfoComparator:
    65:65:void <init>(com.seafile.vmoo.ui.adapter.TransferTaskAdapter) -> <init>
    65:65:void <init>(com.seafile.vmoo.ui.adapter.TransferTaskAdapter,com.seafile.vmoo.ui.adapter.TransferTaskAdapter$1) -> <init>
    65:65:int compare(java.lang.Object,java.lang.Object) -> compare
    86:86:int compare(com.seafile.vmoo.transfer.TransferTaskInfo,com.seafile.vmoo.transfer.TransferTaskInfo) -> compare
    67:67:int taskStateToInteger(com.seafile.vmoo.transfer.TransferTaskInfo) -> taskStateToInteger
com.seafile.vmoo.ui.adapter.TransferTaskAdapter$TaskType -> com.seafile.vmoo.ui.adapter.TransferTaskAdapter$TaskType:
    39:39:void <clinit>() -> <clinit>
    39:39:void <init>(java.lang.String,int) -> <init>
    39:39:com.seafile.vmoo.ui.adapter.TransferTaskAdapter$TaskType valueOf(java.lang.String) -> valueOf
    39:39:com.seafile.vmoo.ui.adapter.TransferTaskAdapter$TaskType[] values() -> values
com.seafile.vmoo.ui.adapter.TransferTaskAdapter$Viewholder -> com.seafile.vmoo.ui.adapter.TransferTaskAdapter$Viewholder:
    338:346:void <init>(com.seafile.vmoo.ui.adapter.TransferTaskAdapter,android.widget.ImageView,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.ProgressBar) -> <init>
com.seafile.vmoo.ui.dialog.AppChoiceDialog -> com.seafile.vmoo.ui.dialog.AppChoiceDialog:
    26:31:void <init>() -> <init>
    26:26:void access$100(com.seafile.vmoo.ui.dialog.AppChoiceDialog,int) -> access$100
    26:26:java.util.List access$200(com.seafile.vmoo.ui.dialog.AppChoiceDialog) -> access$200
    26:26:java.util.List access$300(com.seafile.vmoo.ui.dialog.AppChoiceDialog) -> access$300
    45:45:void addCustomAction(int,android.graphics.drawable.Drawable,java.lang.String) -> addCustomAction
    39:41:void init(java.lang.String,java.util.List,com.seafile.vmoo.ui.dialog.AppChoiceDialog$OnItemSelectedListener) -> init
    49:58:void onAppSelected(int) -> onAppSelected
    66:75:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
com.seafile.vmoo.ui.dialog.AppChoiceDialog$1 -> com.seafile.vmoo.ui.dialog.AppChoiceDialog$1:
    68:68:void <init>(com.seafile.vmoo.ui.dialog.AppChoiceDialog) -> <init>
    71:71:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.dialog.AppChoiceDialog$AppsListAdapter -> com.seafile.vmoo.ui.dialog.AppChoiceDialog$AppsListAdapter:
    78:78:void <init>(com.seafile.vmoo.ui.dialog.AppChoiceDialog) -> <init>
    78:78:void <init>(com.seafile.vmoo.ui.dialog.AppChoiceDialog,com.seafile.vmoo.ui.dialog.AppChoiceDialog$1) -> <init>
    81:81:int getCount() -> getCount
    91:94:java.lang.Object getItem(int) -> getItem
    103:115:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    127:132:void setAppInfo(com.seafile.vmoo.ui.dialog.AppChoiceDialog$AppsListAdapter$Viewholder,android.content.pm.ResolveInfo) -> setAppInfo
    122:123:void setCustomAction(com.seafile.vmoo.ui.dialog.AppChoiceDialog$AppsListAdapter$Viewholder,com.seafile.vmoo.ui.dialog.AppChoiceDialog$CustomAction) -> setCustomAction
com.seafile.vmoo.ui.dialog.AppChoiceDialog$AppsListAdapter$Viewholder -> com.seafile.vmoo.ui.dialog.AppChoiceDialog$AppsListAdapter$Viewholder:
    139:141:void <init>(com.seafile.vmoo.ui.dialog.AppChoiceDialog$AppsListAdapter,android.widget.ImageView,android.widget.TextView) -> <init>
com.seafile.vmoo.ui.dialog.AppChoiceDialog$CustomAction -> com.seafile.vmoo.ui.dialog.AppChoiceDialog$CustomAction:
    152:155:void <init>(int,android.graphics.drawable.Drawable,java.lang.String) -> <init>
com.seafile.vmoo.ui.dialog.ClearCacheTask -> com.seafile.vmoo.ui.dialog.ClearCacheTask:
    12:12:void <init>() -> <init>
    16:21:void runTask() -> runTask
com.seafile.vmoo.ui.dialog.ClearCacheTaskDialog -> com.seafile.vmoo.ui.dialog.ClearCacheTaskDialog:
    25:25:void <init>() -> <init>
    28:28:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    34:34:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    25:25:com.seafile.vmoo.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    39:39:com.seafile.vmoo.ui.dialog.ClearCacheTask prepareTask() -> prepareTask
com.seafile.vmoo.ui.dialog.CopyMoveDialog -> com.seafile.vmoo.ui.dialog.CopyMoveDialog:
    16:16:void <init>() -> <init>
    37:38:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    28:32:com.seafile.vmoo.data.DataManager getDataManager() -> getDataManager
    23:24:void init(com.seafile.vmoo.account.Account,com.seafile.vmoo.ui.CopyMoveContext) -> init
    46:80:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    16:16:com.seafile.vmoo.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    88:88:com.seafile.vmoo.ui.dialog.CopyMoveTask prepareTask() -> prepareTask
com.seafile.vmoo.ui.dialog.CopyMoveTask -> com.seafile.vmoo.ui.dialog.CopyMoveTask:
    16:18:void <init>(com.seafile.vmoo.ui.CopyMoveContext,com.seafile.vmoo.data.DataManager) -> <init>
    24:51:void runTask() -> runTask
com.seafile.vmoo.ui.dialog.DeleteFileDialog -> com.seafile.vmoo.ui.dialog.DeleteFileDialog:
    132:132:void <init>() -> <init>
    164:164:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    156:159:com.seafile.vmoo.data.DataManager getDataManager() -> getDataManager
    142:145:void init(java.lang.String,java.lang.String,boolean,com.seafile.vmoo.account.Account) -> init
    149:152:void init(java.lang.String,java.lang.String,java.util.List,com.seafile.vmoo.account.Account) -> init
    170:172:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    132:132:com.seafile.vmoo.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    177:180:com.seafile.vmoo.ui.dialog.DeleteTask prepareTask() -> prepareTask
com.seafile.vmoo.ui.dialog.DeleteTask -> com.seafile.vmoo.ui.dialog.DeleteTask:
    29:33:void <init>(java.lang.String,java.lang.String,boolean,com.seafile.vmoo.data.DataManager) -> <init>
    36:41:void <init>(java.lang.String,java.lang.String,java.util.List,com.seafile.vmoo.data.DataManager) -> <init>
    48:57:void runTask() -> runTask
com.seafile.vmoo.ui.dialog.DeleteTask$DeleteCell -> com.seafile.vmoo.ui.dialog.DeleteTask$DeleteCell:
    112:115:void <init>(com.seafile.vmoo.ui.dialog.DeleteTask,java.lang.String,java.lang.String,boolean) -> <init>
    107:107:boolean access$000(com.seafile.vmoo.ui.dialog.DeleteTask$DeleteCell) -> access$000
    123:123:java.lang.String getPath() -> getPath
    119:119:java.lang.String getRepoID() -> getRepoID
com.seafile.vmoo.ui.dialog.DeleteTask$DeleteTaskManager -> com.seafile.vmoo.ui.dialog.DeleteTask$DeleteTaskManager:
    64:66:void <init>(com.seafile.vmoo.ui.dialog.DeleteTask) -> <init>
    78:83:void addTaskToQue(com.seafile.vmoo.ui.dialog.DeleteTask$DeleteCell) -> addTaskToQue
    88:100:void doNext() -> doNext
    69:74:boolean hasInQue(com.seafile.vmoo.ui.dialog.DeleteTask$DeleteCell) -> hasInQue
com.seafile.vmoo.ui.dialog.FetchFileDialog -> com.seafile.vmoo.ui.dialog.FetchFileDialog:
    30:47:void <init>() -> <init>
    30:30:int access$000(com.seafile.vmoo.ui.dialog.FetchFileDialog) -> access$000
    30:30:com.seafile.vmoo.ui.activity.BrowserActivity access$100(com.seafile.vmoo.ui.dialog.FetchFileDialog) -> access$100
    30:30:android.os.Handler access$200(com.seafile.vmoo.ui.dialog.FetchFileDialog) -> access$200
    30:30:void access$300(com.seafile.vmoo.ui.dialog.FetchFileDialog) -> access$300
    30:30:boolean access$402(com.seafile.vmoo.ui.dialog.FetchFileDialog,boolean) -> access$402
    30:30:void access$500(com.seafile.vmoo.ui.dialog.FetchFileDialog) -> access$500
    30:30:com.seafile.vmoo.ui.dialog.FetchFileDialog$FetchFileListener access$600(com.seafile.vmoo.ui.dialog.FetchFileDialog) -> access$600
    176:185:void cancelTask() -> cancelTask
    56:56:com.seafile.vmoo.ui.activity.BrowserActivity getBrowserActivity() -> getBrowserActivity
    132:132:com.seafile.vmoo.ui.dialog.TaskDialog$TaskDialogListener getPasswordDialogListener() -> getPasswordDialogListener
    111:118:void handleDownloadTaskInfo(com.seafile.vmoo.transfer.DownloadTaskInfo) -> handleDownloadTaskInfo
    146:146:void handlePassword() -> handlePassword
=======
    61:61:com.seafile.seadroid2.data.SeafItem getItem(int) -> getItem
    94:94:java.util.List getSelectedItemsValues() -> getSelectedItemsValues
    126:196:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    56:56:void notifyChanged() -> notifyChanged
    113:121:void selectAllItems() -> selectAllItems
    70:70:void setActionModeOn(boolean) -> setActionModeOn
    98:102:void setItems(java.util.List) -> setItems
    74:86:void toggleSelection(int) -> toggleSelection
com.seafile.seadroid2.ui.adapter.StarredItemAdapter$1 -> com.seafile.seadroid2.ui.adapter.StarredItemAdapter$1:
    177:177:void <init>(com.seafile.seadroid2.ui.adapter.StarredItemAdapter,int,com.seafile.seadroid2.ui.adapter.StarredItemAdapter$Viewholder,com.seafile.seadroid2.data.SeafItem) -> <init>
    180:192:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.adapter.StarredItemAdapter$Viewholder -> com.seafile.seadroid2.ui.adapter.StarredItemAdapter$Viewholder:
    205:211:void <init>(com.seafile.seadroid2.ui.adapter.StarredItemAdapter,android.widget.TextView,android.widget.TextView,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView) -> <init>
com.seafile.seadroid2.ui.adapter.TransferTaskAdapter -> com.seafile.seadroid2.ui.adapter.TransferTaskAdapter:
    53:56:void <init>(com.seafile.seadroid2.ui.activity.TransferActivity,java.util.List) -> <init>
    29:29:android.util.SparseBooleanArray access$100(com.seafile.seadroid2.ui.adapter.TransferTaskAdapter) -> access$100
    29:29:java.util.List access$200(com.seafile.seadroid2.ui.adapter.TransferTaskAdapter) -> access$200
    29:29:com.seafile.seadroid2.ui.activity.TransferActivity access$300(com.seafile.seadroid2.ui.adapter.TransferTaskAdapter) -> access$300
    223:224:void actionModeOff() -> actionModeOff
    218:219:void actionModeOn() -> actionModeOn
    228:230:void deselectAllItems() -> deselectAllItems
    196:196:int getCheckedItemCount() -> getCheckedItemCount
    105:105:int getCount() -> getCount
    29:29:java.lang.Object getItem(int) -> getItem
    115:115:com.seafile.seadroid2.transfer.TransferTaskInfo getItem(int) -> getItem
    200:200:java.util.List getSelectedIds() -> getSelectedIds
    248:327:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    110:110:boolean isEmpty() -> isEmpty
    234:240:void selectAllItems() -> selectAllItems
    60:60:void setCurrentTab(com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$TaskType) -> setCurrentTab
    92:93:void setTransferTaskInfos(java.util.List) -> setTransferTaskInfos
    204:214:void toggleSelection(int) -> toggleSelection
    128:192:void updateTaskView(com.seafile.seadroid2.transfer.TransferTaskInfo,com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$Viewholder) -> updateTaskView
com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$1 -> com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$1:
    278:278:void <init>(com.seafile.seadroid2.ui.adapter.TransferTaskAdapter,int,com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$Viewholder) -> <init>
    281:291:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$2 -> com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$2:
    311:311:void <init>(com.seafile.seadroid2.ui.adapter.TransferTaskAdapter,int,com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$Viewholder) -> <init>
    314:324:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$3 -> com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$3:
    68:68:void <clinit>() -> <clinit>
com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$TaskInfoComparator -> com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$TaskInfoComparator:
    66:66:void <init>(com.seafile.seadroid2.ui.adapter.TransferTaskAdapter) -> <init>
    66:66:void <init>(com.seafile.seadroid2.ui.adapter.TransferTaskAdapter,com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$1) -> <init>
    66:66:int compare(java.lang.Object,java.lang.Object) -> compare
    87:87:int compare(com.seafile.seadroid2.transfer.TransferTaskInfo,com.seafile.seadroid2.transfer.TransferTaskInfo) -> compare
    68:68:int taskStateToInteger(com.seafile.seadroid2.transfer.TransferTaskInfo) -> taskStateToInteger
com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$TaskType -> com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$TaskType:
    40:40:void <clinit>() -> <clinit>
    40:40:void <init>(java.lang.String,int) -> <init>
    40:40:com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$TaskType valueOf(java.lang.String) -> valueOf
    40:40:com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$TaskType[] values() -> values
com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$Viewholder -> com.seafile.seadroid2.ui.adapter.TransferTaskAdapter$Viewholder:
    339:347:void <init>(com.seafile.seadroid2.ui.adapter.TransferTaskAdapter,android.widget.ImageView,android.widget.ImageView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.ProgressBar) -> <init>
com.seafile.seadroid2.ui.dialog.AppChoiceDialog -> com.seafile.seadroid2.ui.dialog.AppChoiceDialog:
    26:31:void <init>() -> <init>
    26:26:void access$100(com.seafile.seadroid2.ui.dialog.AppChoiceDialog,int) -> access$100
    26:26:java.util.List access$200(com.seafile.seadroid2.ui.dialog.AppChoiceDialog) -> access$200
    26:26:java.util.List access$300(com.seafile.seadroid2.ui.dialog.AppChoiceDialog) -> access$300
    45:45:void addCustomAction(int,android.graphics.drawable.Drawable,java.lang.String) -> addCustomAction
    39:41:void init(java.lang.String,java.util.List,com.seafile.seadroid2.ui.dialog.AppChoiceDialog$OnItemSelectedListener) -> init
    49:58:void onAppSelected(int) -> onAppSelected
    66:75:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
com.seafile.seadroid2.ui.dialog.AppChoiceDialog$1 -> com.seafile.seadroid2.ui.dialog.AppChoiceDialog$1:
    68:68:void <init>(com.seafile.seadroid2.ui.dialog.AppChoiceDialog) -> <init>
    71:71:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.dialog.AppChoiceDialog$AppsListAdapter -> com.seafile.seadroid2.ui.dialog.AppChoiceDialog$AppsListAdapter:
    78:78:void <init>(com.seafile.seadroid2.ui.dialog.AppChoiceDialog) -> <init>
    78:78:void <init>(com.seafile.seadroid2.ui.dialog.AppChoiceDialog,com.seafile.seadroid2.ui.dialog.AppChoiceDialog$1) -> <init>
    81:81:int getCount() -> getCount
    91:94:java.lang.Object getItem(int) -> getItem
    103:115:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    127:132:void setAppInfo(com.seafile.seadroid2.ui.dialog.AppChoiceDialog$AppsListAdapter$Viewholder,android.content.pm.ResolveInfo) -> setAppInfo
    122:123:void setCustomAction(com.seafile.seadroid2.ui.dialog.AppChoiceDialog$AppsListAdapter$Viewholder,com.seafile.seadroid2.ui.dialog.AppChoiceDialog$CustomAction) -> setCustomAction
com.seafile.seadroid2.ui.dialog.AppChoiceDialog$AppsListAdapter$Viewholder -> com.seafile.seadroid2.ui.dialog.AppChoiceDialog$AppsListAdapter$Viewholder:
    139:141:void <init>(com.seafile.seadroid2.ui.dialog.AppChoiceDialog$AppsListAdapter,android.widget.ImageView,android.widget.TextView) -> <init>
com.seafile.seadroid2.ui.dialog.AppChoiceDialog$CustomAction -> com.seafile.seadroid2.ui.dialog.AppChoiceDialog$CustomAction:
    152:155:void <init>(int,android.graphics.drawable.Drawable,java.lang.String) -> <init>
com.seafile.seadroid2.ui.dialog.ClearCacheTask -> com.seafile.seadroid2.ui.dialog.ClearCacheTask:
    12:12:void <init>() -> <init>
    16:21:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.ClearCacheTaskDialog -> com.seafile.seadroid2.ui.dialog.ClearCacheTaskDialog:
    25:25:void <init>() -> <init>
    28:28:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    34:34:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    25:25:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    39:39:com.seafile.seadroid2.ui.dialog.ClearCacheTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.ClearPasswordTask -> com.seafile.seadroid2.ui.dialog.ClearPasswordTask:
    33:33:void <init>() -> <init>
    37:41:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.ClearPasswordTaskDialog -> com.seafile.seadroid2.ui.dialog.ClearPasswordTaskDialog:
    13:13:void <init>() -> <init>
    17:17:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    23:23:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    13:13:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    28:28:com.seafile.seadroid2.ui.dialog.ClearPasswordTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.CopyMoveDialog -> com.seafile.seadroid2.ui.dialog.CopyMoveDialog:
    18:18:void <init>() -> <init>
    39:40:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    30:34:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    25:26:void init(com.seafile.seadroid2.account.Account,com.seafile.seadroid2.ui.CopyMoveContext) -> init
    48:82:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    18:18:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    90:90:com.seafile.seadroid2.ui.dialog.CopyMoveTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.CopyMoveTask -> com.seafile.seadroid2.ui.dialog.CopyMoveTask:
    16:18:void <init>(com.seafile.seadroid2.ui.CopyMoveContext,com.seafile.seadroid2.data.DataManager) -> <init>
    24:51:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.DeleteFileDialog -> com.seafile.seadroid2.ui.dialog.DeleteFileDialog:
    133:133:void <init>() -> <init>
    165:165:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    157:160:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    143:146:void init(java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.account.Account) -> init
    150:153:void init(java.lang.String,java.lang.String,java.util.List,com.seafile.seadroid2.account.Account) -> init
    171:173:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    133:133:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    178:181:com.seafile.seadroid2.ui.dialog.DeleteTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.DeleteRepoDialog -> com.seafile.seadroid2.ui.dialog.DeleteRepoDialog:
    33:33:void <init>() -> <init>
    57:62:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    48:52:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    43:44:void init(java.lang.String,com.seafile.seadroid2.account.Account) -> init
    77:78:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    70:72:void onSaveDialogContentState(android.os.Bundle) -> onSaveDialogContentState
    33:33:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    83:83:com.seafile.seadroid2.ui.dialog.DeleteRepoTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.DeleteRepoTask -> com.seafile.seadroid2.ui.dialog.DeleteRepoTask:
    18:20:void <init>(java.lang.String,com.seafile.seadroid2.data.DataManager) -> <init>
    26:28:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.DeleteTask -> com.seafile.seadroid2.ui.dialog.DeleteTask:
    30:34:void <init>(java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.data.DataManager) -> <init>
    37:42:void <init>(java.lang.String,java.lang.String,java.util.List,com.seafile.seadroid2.data.DataManager) -> <init>
    49:58:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.DeleteTask$DeleteCell -> com.seafile.seadroid2.ui.dialog.DeleteTask$DeleteCell:
    113:116:void <init>(com.seafile.seadroid2.ui.dialog.DeleteTask,java.lang.String,java.lang.String,boolean) -> <init>
    108:108:boolean access$000(com.seafile.seadroid2.ui.dialog.DeleteTask$DeleteCell) -> access$000
    124:124:java.lang.String getPath() -> getPath
    120:120:java.lang.String getRepoID() -> getRepoID
    128:128:boolean isdir() -> isdir
com.seafile.seadroid2.ui.dialog.DeleteTask$DeleteTaskManager -> com.seafile.seadroid2.ui.dialog.DeleteTask$DeleteTaskManager:
    65:67:void <init>(com.seafile.seadroid2.ui.dialog.DeleteTask) -> <init>
    79:84:void addTaskToQue(com.seafile.seadroid2.ui.dialog.DeleteTask$DeleteCell) -> addTaskToQue
    89:101:void doNext() -> doNext
    70:75:boolean hasInQue(com.seafile.seadroid2.ui.dialog.DeleteTask$DeleteCell) -> hasInQue
com.seafile.seadroid2.ui.dialog.FetchFileDialog -> com.seafile.seadroid2.ui.dialog.FetchFileDialog:
    30:47:void <init>() -> <init>
    30:30:int access$000(com.seafile.seadroid2.ui.dialog.FetchFileDialog) -> access$000
    30:30:com.seafile.seadroid2.ui.activity.BrowserActivity access$100(com.seafile.seadroid2.ui.dialog.FetchFileDialog) -> access$100
    30:30:android.os.Handler access$200(com.seafile.seadroid2.ui.dialog.FetchFileDialog) -> access$200
    30:30:void access$300(com.seafile.seadroid2.ui.dialog.FetchFileDialog) -> access$300
    30:30:boolean access$402(com.seafile.seadroid2.ui.dialog.FetchFileDialog,boolean) -> access$402
    30:30:void access$500(com.seafile.seadroid2.ui.dialog.FetchFileDialog) -> access$500
    30:30:com.seafile.seadroid2.ui.dialog.FetchFileDialog$FetchFileListener access$600(com.seafile.seadroid2.ui.dialog.FetchFileDialog) -> access$600
    176:185:void cancelTask() -> cancelTask
    56:56:com.seafile.seadroid2.ui.activity.BrowserActivity getBrowserActivity() -> getBrowserActivity
    132:132:com.seafile.seadroid2.ui.dialog.TaskDialog$TaskDialogListener getPasswordDialogListener() -> getPasswordDialogListener
    107:107:int getTaskID() -> getTaskID
    111:118:void handleDownloadTaskInfo(com.seafile.seadroid2.transfer.DownloadTaskInfo) -> handleDownloadTaskInfo
    146:146:void handlePassword() -> handlePassword
    60:64:void init(java.lang.String,java.lang.String,java.lang.String,long,com.seafile.seadroid2.ui.dialog.FetchFileDialog$FetchFileListener) -> init
>>>>>>> rename package name,fix action event info list same time crash
    220:260:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    208:214:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    77:78:void onStart() -> onStart
    83:84:void onStop() -> onStop
<<<<<<< HEAD
    151:163:void onTaskFailed(com.seafile.vmoo.SeafException) -> onTaskFailed
=======
    151:163:void onTaskFailed(com.seafile.seadroid2.SeafException) -> onTaskFailed
>>>>>>> rename package name,fix action event info list same time crash
    169:171:void onTaskFinished() -> onTaskFinished
    69:71:void startDownloadFile() -> startDownloadFile
    88:89:void startTimer() -> startTimer
    102:103:void stopTimer() -> stopTimer
    189:200:void updateProgress(long,long) -> updateProgress
<<<<<<< HEAD
com.seafile.vmoo.ui.dialog.FetchFileDialog$1 -> com.seafile.vmoo.ui.dialog.FetchFileDialog$1:
    89:89:void <init>(com.seafile.vmoo.ui.dialog.FetchFileDialog) -> <init>
    93:96:void run() -> run
com.seafile.vmoo.ui.dialog.FetchFileDialog$2 -> com.seafile.vmoo.ui.dialog.FetchFileDialog$2:
    132:132:void <init>(com.seafile.vmoo.ui.dialog.FetchFileDialog) -> <init>
    140:140:void onTaskCancelled() -> onTaskCancelled
    135:135:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.dialog.FetchFileDialog$3 -> com.seafile.vmoo.ui.dialog.FetchFileDialog$3:
    246:246:void <init>(com.seafile.vmoo.ui.dialog.FetchFileDialog) -> <init>
    249:250:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.dialog.FetchFileDialog$4 -> com.seafile.vmoo.ui.dialog.FetchFileDialog$4:
    260:260:void <init>(com.seafile.vmoo.ui.dialog.FetchFileDialog) -> <init>
    263:264:void onDismiss(android.content.DialogInterface) -> onDismiss
com.seafile.vmoo.ui.dialog.FetchFileDialog$5 -> com.seafile.vmoo.ui.dialog.FetchFileDialog$5:
    114:114:void <clinit>() -> <clinit>
com.seafile.vmoo.ui.dialog.FileSaveTask -> com.seafile.vmoo.ui.dialog.FileSaveTask:
    20:22:void <init>(java.lang.String,com.yydcdut.markdown.MarkdownEditText) -> <init>
    28:30:void runTask() -> runTask
com.seafile.vmoo.ui.dialog.FileSaveTaskDialog -> com.seafile.vmoo.ui.dialog.FileSaveTaskDialog:
=======
com.seafile.seadroid2.ui.dialog.FetchFileDialog$1 -> com.seafile.seadroid2.ui.dialog.FetchFileDialog$1:
    89:89:void <init>(com.seafile.seadroid2.ui.dialog.FetchFileDialog) -> <init>
    93:96:void run() -> run
com.seafile.seadroid2.ui.dialog.FetchFileDialog$2 -> com.seafile.seadroid2.ui.dialog.FetchFileDialog$2:
    132:132:void <init>(com.seafile.seadroid2.ui.dialog.FetchFileDialog) -> <init>
    140:140:void onTaskCancelled() -> onTaskCancelled
    135:135:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.dialog.FetchFileDialog$3 -> com.seafile.seadroid2.ui.dialog.FetchFileDialog$3:
    246:246:void <init>(com.seafile.seadroid2.ui.dialog.FetchFileDialog) -> <init>
    249:250:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.dialog.FetchFileDialog$4 -> com.seafile.seadroid2.ui.dialog.FetchFileDialog$4:
    260:260:void <init>(com.seafile.seadroid2.ui.dialog.FetchFileDialog) -> <init>
    263:264:void onDismiss(android.content.DialogInterface) -> onDismiss
com.seafile.seadroid2.ui.dialog.FetchFileDialog$5 -> com.seafile.seadroid2.ui.dialog.FetchFileDialog$5:
    114:114:void <clinit>() -> <clinit>
com.seafile.seadroid2.ui.dialog.FileSaveTask -> com.seafile.seadroid2.ui.dialog.FileSaveTask:
    20:22:void <init>(java.lang.String,com.yydcdut.markdown.MarkdownEditText) -> <init>
    28:30:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.FileSaveTaskDialog -> com.seafile.seadroid2.ui.dialog.FileSaveTaskDialog:
>>>>>>> rename package name,fix action event info list same time crash
    35:35:void <init>() -> <init>
    47:47:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    40:41:void init(java.lang.String,com.yydcdut.markdown.MarkdownEditText) -> init
    54:55:void onDialogCreated(android.app.Dialog) -> onDialogCreated
<<<<<<< HEAD
    35:35:com.seafile.vmoo.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    61:61:com.seafile.vmoo.ui.dialog.FileSaveTask prepareTask() -> prepareTask
com.seafile.vmoo.ui.dialog.GetShareLinkDialog -> com.seafile.vmoo.ui.dialog.GetShareLinkDialog:
    60:60:void <init>() -> <init>
    102:104:java.lang.String getLink() -> getLink
    70:76:void init(java.lang.String,java.lang.String,boolean,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String) -> init
    91:91:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    60:60:com.seafile.vmoo.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    97:97:com.seafile.vmoo.ui.dialog.GetShareLinkTask prepareTask() -> prepareTask
com.seafile.vmoo.ui.dialog.GetShareLinkEncryptDialog -> com.seafile.vmoo.ui.dialog.GetShareLinkEncryptDialog:
=======
    35:35:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    61:61:com.seafile.seadroid2.ui.dialog.FileSaveTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.GetShareLinkDialog -> com.seafile.seadroid2.ui.dialog.GetShareLinkDialog:
    60:60:void <init>() -> <init>
    102:104:java.lang.String getLink() -> getLink
    70:76:void init(java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String) -> init
    91:91:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    60:60:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    97:97:com.seafile.seadroid2.ui.dialog.GetShareLinkTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.GetShareLinkEncryptDialog -> com.seafile.seadroid2.ui.dialog.GetShareLinkEncryptDialog:
>>>>>>> rename package name,fix action event info list same time crash
    38:38:void <init>() -> <init>
    46:50:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    88:89:void disableInput() -> disableInput
    94:95:void enableInput() -> enableInput
    138:140:java.lang.String getDays() -> getDays
    130:132:java.lang.String getPassword() -> getPassword
    118:124:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    57:58:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    68:73:void onValidateUserInput() -> onValidateUserInput
<<<<<<< HEAD
    38:38:com.seafile.vmoo.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    107:111:com.seafile.vmoo.ui.dialog.GetShareLinkPasswordTask prepareTask() -> prepareTask
com.seafile.vmoo.ui.dialog.GetShareLinkPasswordTask -> com.seafile.vmoo.ui.dialog.GetShareLinkPasswordTask:
    18:20:void <init>(java.lang.String,java.lang.String) -> <init>
    33:33:java.lang.String getDays() -> getDays
    29:29:java.lang.String getPassword() -> getPassword
com.seafile.vmoo.ui.dialog.GetShareLinkTask -> com.seafile.vmoo.ui.dialog.GetShareLinkTask:
    27:34:void <init>(java.lang.String,java.lang.String,boolean,com.seafile.vmoo.SeafConnection,com.seafile.vmoo.account.Account,java.lang.String,java.lang.String) -> <init>
    56:56:java.lang.String getResult() -> getResult
    41:51:void runTask() -> runTask
com.seafile.vmoo.ui.dialog.PasswordDialog -> com.seafile.vmoo.ui.dialog.PasswordDialog:
=======
    38:38:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    107:111:com.seafile.seadroid2.ui.dialog.GetShareLinkPasswordTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.GetShareLinkPasswordTask -> com.seafile.seadroid2.ui.dialog.GetShareLinkPasswordTask:
    18:20:void <init>(java.lang.String,java.lang.String) -> <init>
    33:33:java.lang.String getDays() -> getDays
    29:29:java.lang.String getPassword() -> getPassword
com.seafile.seadroid2.ui.dialog.GetShareLinkTask -> com.seafile.seadroid2.ui.dialog.GetShareLinkTask:
    27:34:void <init>(java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.SeafConnection,com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String) -> <init>
    56:56:java.lang.String getResult() -> getResult
    41:51:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.NewDirDialog -> com.seafile.seadroid2.ui.dialog.NewDirDialog:
    40:40:void <init>() -> <init>
    73:79:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    110:111:void disableInput() -> disableInput
    116:117:void enableInput() -> enableInput
    64:68:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    54:54:java.lang.String getNewDirName() -> getNewDirName
    58:60:void init(java.lang.String,java.lang.String,com.seafile.seadroid2.account.Account) -> init
    87:88:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    103:105:void onSaveDialogContentState(android.os.Bundle) -> onSaveDialogContentState
    93:97:void onValidateUserInput() -> onValidateUserInput
    40:40:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    122:124:com.seafile.seadroid2.ui.dialog.NewDirTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.NewDirTask -> com.seafile.seadroid2.ui.dialog.NewDirTask:
    23:27:void <init>(java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.DataManager) -> <init>
    33:35:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.NewFileDialog -> com.seafile.seadroid2.ui.dialog.NewFileDialog:
    41:41:void <init>() -> <init>
    73:79:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    117:118:void disableInput() -> disableInput
    123:124:void enableInput() -> enableInput
    60:64:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    68:68:java.lang.String getNewFileName() -> getNewFileName
    54:56:void init(java.lang.String,java.lang.String,com.seafile.seadroid2.account.Account) -> init
    94:95:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    87:89:void onSaveDialogContentState(android.os.Bundle) -> onSaveDialogContentState
    100:104:void onValidateUserInput() -> onValidateUserInput
    41:41:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    110:111:com.seafile.seadroid2.ui.dialog.NewFileTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.NewFileTask -> com.seafile.seadroid2.ui.dialog.NewFileTask:
    24:28:void <init>(java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.DataManager) -> <init>
    34:36:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.NewRepoDialog -> com.seafile.seadroid2.ui.dialog.NewRepoDialog:
    40:40:void <init>() -> <init>
    40:40:androidx.core.widget.NestedScrollView access$000(com.seafile.seadroid2.ui.dialog.NewRepoDialog) -> access$000
    40:40:android.widget.EditText access$100(com.seafile.seadroid2.ui.dialog.NewRepoDialog) -> access$100
    40:40:android.widget.EditText access$200(com.seafile.seadroid2.ui.dialog.NewRepoDialog) -> access$200
    74:90:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    148:152:void disableInput() -> disableInput
    157:161:void enableInput() -> enableInput
    61:65:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    69:69:java.lang.String getPassword() -> getPassword
    70:70:java.lang.String getPasswordConfirmation() -> getPasswordConfirmation
    68:68:java.lang.String getRepoName() -> getRepoName
    57:57:void init(com.seafile.seadroid2.account.Account) -> init
    116:117:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    111:111:void onSaveDialogContentState(android.os.Bundle) -> onSaveDialogContentState
    122:123:void onValidateUserInput() -> onValidateUserInput
    40:40:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    143:143:com.seafile.seadroid2.ui.dialog.NewRepoTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.NewRepoDialog$1 -> com.seafile.seadroid2.ui.dialog.NewRepoDialog$1:
    90:90:void <init>(com.seafile.seadroid2.ui.dialog.NewRepoDialog) -> <init>
    94:100:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.seafile.seadroid2.ui.dialog.NewRepoTask -> com.seafile.seadroid2.ui.dialog.NewRepoTask:
    24:27:void <init>(java.lang.String,java.lang.String,com.seafile.seadroid2.data.DataManager) -> <init>
    33:35:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.PasswordDialog -> com.seafile.seadroid2.ui.dialog.PasswordDialog:
>>>>>>> rename package name,fix action event info list same time crash
    60:60:void <init>() -> <init>
    90:100:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    131:132:void disableInput() -> disableInput
    137:138:void enableInput() -> enableInput
    176:176:boolean executeTaskImmediately() -> executeTaskImmediately
<<<<<<< HEAD
    81:85:com.seafile.vmoo.data.DataManager getDataManager() -> getDataManager
    202:203:java.lang.String getErrorFromException(com.seafile.vmoo.SeafException) -> getErrorFromException
    108:109:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    60:60:com.seafile.vmoo.ui.dialog.TaskDialog$Task onRestoreTaskState(android.os.Bundle) -> onRestoreTaskState
    162:164:com.seafile.vmoo.ui.dialog.SetPasswordTask onRestoreTaskState(android.os.Bundle) -> onRestoreTaskState
=======
    81:85:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    202:203:java.lang.String getErrorFromException(com.seafile.seadroid2.SeafException) -> getErrorFromException
    108:109:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    60:60:com.seafile.seadroid2.ui.dialog.TaskDialog$Task onRestoreTaskState(android.os.Bundle) -> onRestoreTaskState
    162:164:com.seafile.seadroid2.ui.dialog.SetPasswordTask onRestoreTaskState(android.os.Bundle) -> onRestoreTaskState
>>>>>>> rename package name,fix action event info list same time crash
    114:116:void onSaveDialogContentState(android.os.Bundle) -> onSaveDialogContentState
    150:152:void onSaveTaskState(android.os.Bundle) -> onSaveTaskState
    181:197:void onTaskSuccess() -> onTaskSuccess
    121:125:void onValidateUserInput() -> onValidateUserInput
<<<<<<< HEAD
    60:60:com.seafile.vmoo.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    143:144:com.seafile.vmoo.ui.dialog.SetPasswordTask prepareTask() -> prepareTask
    171:171:void setPassword(java.lang.String) -> setPassword
    75:77:void setRepo(java.lang.String,java.lang.String,com.seafile.vmoo.account.Account) -> setRepo
com.seafile.vmoo.ui.dialog.SetPasswordTask -> com.seafile.vmoo.ui.dialog.SetPasswordTask:
    37:40:void <init>(java.lang.String,java.lang.String,com.seafile.vmoo.data.DataManager) -> <init>
    45:53:void runTask() -> runTask
com.seafile.vmoo.ui.dialog.SortFilesDialogFragment -> com.seafile.vmoo.ui.dialog.SortFilesDialogFragment:
=======
    60:60:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    143:144:com.seafile.seadroid2.ui.dialog.SetPasswordTask prepareTask() -> prepareTask
    171:171:void setPassword(java.lang.String) -> setPassword
    75:77:void setRepo(java.lang.String,java.lang.String,com.seafile.seadroid2.account.Account) -> setRepo
com.seafile.seadroid2.ui.dialog.RenameFileDialog -> com.seafile.seadroid2.ui.dialog.RenameFileDialog:
    47:47:void <init>() -> <init>
    82:95:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    128:129:void disableInput() -> disableInput
    134:135:void enableInput() -> enableInput
    69:73:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    77:77:java.lang.String getNewFileName() -> getNewFileName
    62:65:void init(java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.account.Account) -> init
    103:105:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    140:143:void onSaveDialogContentState(android.os.Bundle) -> onSaveDialogContentState
    110:114:void onValidateUserInput() -> onValidateUserInput
    47:47:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
    120:122:com.seafile.seadroid2.ui.dialog.RenameTask prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.RenameRepoDialog -> com.seafile.seadroid2.ui.dialog.RenameRepoDialog:
    41:41:void <init>() -> <init>
    72:82:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    114:115:void disableInput() -> disableInput
    120:121:void enableInput() -> enableInput
    61:65:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    68:68:java.lang.String getNewName() -> getNewName
    55:57:void init(java.lang.String,java.lang.String,com.seafile.seadroid2.account.Account) -> init
    89:91:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    96:99:void onSaveDialogContentState(android.os.Bundle) -> onSaveDialogContentState
    104:107:void onValidateUserInput() -> onValidateUserInput
    126:126:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.RenameRepoTask -> com.seafile.seadroid2.ui.dialog.RenameRepoTask:
    22:26:void <init>(java.lang.String,java.lang.String,java.lang.String,com.seafile.seadroid2.data.DataManager) -> <init>
    31:36:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.RenameTask -> com.seafile.seadroid2.ui.dialog.RenameTask:
    26:31:void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,com.seafile.seadroid2.data.DataManager) -> <init>
    36:42:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.SetPasswordTask -> com.seafile.seadroid2.ui.dialog.SetPasswordTask:
    37:40:void <init>(java.lang.String,java.lang.String,com.seafile.seadroid2.data.DataManager) -> <init>
    45:53:void runTask() -> runTask
com.seafile.seadroid2.ui.dialog.SortFilesDialogFragment -> com.seafile.seadroid2.ui.dialog.SortFilesDialogFragment:
>>>>>>> rename package name,fix action event info list same time crash
    14:14:void <init>() -> <init>
    43:47:int calculateCheckedItem() -> calculateCheckedItem
    31:38:void onAttach(android.app.Activity) -> onAttach
    62:75:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
<<<<<<< HEAD
com.seafile.vmoo.ui.dialog.SortFilesDialogFragment$1 -> com.seafile.vmoo.ui.dialog.SortFilesDialogFragment$1:
    66:66:void <init>(com.seafile.vmoo.ui.dialog.SortFilesDialogFragment) -> <init>
    69:70:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.dialog.SslConfirmDialog -> com.seafile.vmoo.ui.dialog.SslConfirmDialog:
    48:48:void <init>() -> <init>
    52:54:void <init>(com.seafile.vmoo.account.Account,com.seafile.vmoo.ui.dialog.SslConfirmDialog$Listener) -> <init>
    58:61:void <init>(com.seafile.vmoo.account.Account,java.security.cert.X509Certificate,com.seafile.vmoo.ui.dialog.SslConfirmDialog$Listener) -> <init>
    26:26:com.seafile.vmoo.ui.dialog.SslConfirmDialog$Listener access$000(com.seafile.vmoo.ui.dialog.SslConfirmDialog) -> access$000
    156:157:void onCancel(android.content.DialogInterface) -> onCancel
    66:151:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
com.seafile.vmoo.ui.dialog.SslConfirmDialog$1 -> com.seafile.vmoo.ui.dialog.SslConfirmDialog$1:
    135:135:void <init>(com.seafile.vmoo.ui.dialog.SslConfirmDialog) -> <init>
    138:139:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.dialog.SslConfirmDialog$2 -> com.seafile.vmoo.ui.dialog.SslConfirmDialog$2:
    143:143:void <init>(com.seafile.vmoo.ui.dialog.SslConfirmDialog) -> <init>
    146:147:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.dialog.SwitchStorageTask -> com.seafile.vmoo.ui.dialog.SwitchStorageTask:
    33:35:void <init>() -> <init>
    26:26:com.seafile.vmoo.transfer.TransferService access$002(com.seafile.vmoo.ui.dialog.SwitchStorageTask,com.seafile.vmoo.transfer.TransferService) -> access$002
    57:82:void runTask() -> runTask
    39:39:void setNewLocation(com.seafile.vmoo.data.StorageManager$Location) -> setNewLocation
com.seafile.vmoo.ui.dialog.SwitchStorageTask$1 -> com.seafile.vmoo.ui.dialog.SwitchStorageTask$1:
    42:42:void <init>(com.seafile.vmoo.ui.dialog.SwitchStorageTask) -> <init>
    45:46:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    51:51:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.vmoo.ui.dialog.SwitchStorageTaskDialog -> com.seafile.vmoo.ui.dialog.SwitchStorageTaskDialog:
    87:90:void <init>() -> <init>
    98:117:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    124:124:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    130:140:com.seafile.vmoo.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
com.seafile.vmoo.ui.dialog.TaskDialog -> com.seafile.vmoo.ui.dialog.TaskDialog:
    28:61:void <init>() -> <init>
    28:28:com.seafile.vmoo.ui.dialog.TaskDialog$Task access$000(com.seafile.vmoo.ui.dialog.TaskDialog) -> access$000
    28:28:com.seafile.vmoo.ui.dialog.TaskDialog$Task access$002(com.seafile.vmoo.ui.dialog.TaskDialog,com.seafile.vmoo.ui.dialog.TaskDialog$Task) -> access$002
    28:28:com.seafile.vmoo.ui.dialog.TaskDialog$TaskDialogListener access$100(com.seafile.vmoo.ui.dialog.TaskDialog) -> access$100
    28:28:boolean access$200(com.seafile.vmoo.ui.dialog.TaskDialog) -> access$200
    28:28:android.widget.Button access$300(com.seafile.vmoo.ui.dialog.TaskDialog) -> access$300
    28:28:android.widget.Button access$302(com.seafile.vmoo.ui.dialog.TaskDialog,android.widget.Button) -> access$302
    28:28:android.widget.Button access$402(com.seafile.vmoo.ui.dialog.TaskDialog,android.widget.Button) -> access$402
    28:28:void access$500(com.seafile.vmoo.ui.dialog.TaskDialog) -> access$500
    28:28:void access$600(com.seafile.vmoo.ui.dialog.TaskDialog,android.os.Bundle) -> access$600
=======
com.seafile.seadroid2.ui.dialog.SortFilesDialogFragment$1 -> com.seafile.seadroid2.ui.dialog.SortFilesDialogFragment$1:
    66:66:void <init>(com.seafile.seadroid2.ui.dialog.SortFilesDialogFragment) -> <init>
    69:70:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.dialog.SslConfirmDialog -> com.seafile.seadroid2.ui.dialog.SslConfirmDialog:
    48:48:void <init>() -> <init>
    52:54:void <init>(com.seafile.seadroid2.account.Account,com.seafile.seadroid2.ui.dialog.SslConfirmDialog$Listener) -> <init>
    58:61:void <init>(com.seafile.seadroid2.account.Account,java.security.cert.X509Certificate,com.seafile.seadroid2.ui.dialog.SslConfirmDialog$Listener) -> <init>
    26:26:com.seafile.seadroid2.ui.dialog.SslConfirmDialog$Listener access$000(com.seafile.seadroid2.ui.dialog.SslConfirmDialog) -> access$000
    156:157:void onCancel(android.content.DialogInterface) -> onCancel
    66:151:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
com.seafile.seadroid2.ui.dialog.SslConfirmDialog$1 -> com.seafile.seadroid2.ui.dialog.SslConfirmDialog$1:
    135:135:void <init>(com.seafile.seadroid2.ui.dialog.SslConfirmDialog) -> <init>
    138:139:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.dialog.SslConfirmDialog$2 -> com.seafile.seadroid2.ui.dialog.SslConfirmDialog$2:
    143:143:void <init>(com.seafile.seadroid2.ui.dialog.SslConfirmDialog) -> <init>
    146:147:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.dialog.SwitchStorageTask -> com.seafile.seadroid2.ui.dialog.SwitchStorageTask:
    33:35:void <init>() -> <init>
    26:26:com.seafile.seadroid2.transfer.TransferService access$002(com.seafile.seadroid2.ui.dialog.SwitchStorageTask,com.seafile.seadroid2.transfer.TransferService) -> access$002
    57:82:void runTask() -> runTask
    39:39:void setNewLocation(com.seafile.seadroid2.data.StorageManager$Location) -> setNewLocation
com.seafile.seadroid2.ui.dialog.SwitchStorageTask$1 -> com.seafile.seadroid2.ui.dialog.SwitchStorageTask$1:
    42:42:void <init>(com.seafile.seadroid2.ui.dialog.SwitchStorageTask) -> <init>
    45:46:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    51:51:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.seadroid2.ui.dialog.SwitchStorageTaskDialog -> com.seafile.seadroid2.ui.dialog.SwitchStorageTaskDialog:
    87:90:void <init>() -> <init>
    98:117:android.view.View createDialogContentView(android.view.LayoutInflater,android.os.Bundle) -> createDialogContentView
    124:124:void onDialogCreated(android.app.Dialog) -> onDialogCreated
    130:140:com.seafile.seadroid2.ui.dialog.TaskDialog$Task prepareTask() -> prepareTask
com.seafile.seadroid2.ui.dialog.TaskDialog -> com.seafile.seadroid2.ui.dialog.TaskDialog:
    28:61:void <init>() -> <init>
    28:28:com.seafile.seadroid2.ui.dialog.TaskDialog$Task access$000(com.seafile.seadroid2.ui.dialog.TaskDialog) -> access$000
    28:28:com.seafile.seadroid2.ui.dialog.TaskDialog$Task access$002(com.seafile.seadroid2.ui.dialog.TaskDialog,com.seafile.seadroid2.ui.dialog.TaskDialog$Task) -> access$002
    28:28:com.seafile.seadroid2.ui.dialog.TaskDialog$TaskDialogListener access$100(com.seafile.seadroid2.ui.dialog.TaskDialog) -> access$100
    28:28:boolean access$200(com.seafile.seadroid2.ui.dialog.TaskDialog) -> access$200
    28:28:android.widget.Button access$300(com.seafile.seadroid2.ui.dialog.TaskDialog) -> access$300
    28:28:android.widget.Button access$302(com.seafile.seadroid2.ui.dialog.TaskDialog,android.widget.Button) -> access$302
    28:28:android.widget.Button access$402(com.seafile.seadroid2.ui.dialog.TaskDialog,android.widget.Button) -> access$402
    28:28:void access$500(com.seafile.seadroid2.ui.dialog.TaskDialog) -> access$500
    28:28:void access$600(com.seafile.seadroid2.ui.dialog.TaskDialog,android.os.Bundle) -> access$600
>>>>>>> rename package name,fix action event info list same time crash
    359:359:void disableCancel() -> disableCancel
    353:354:void disableInput() -> disableInput
    363:364:void enableInput() -> enableInput
    345:345:boolean errorIsVisible() -> errorIsVisible
    369:379:void executeTask() -> executeTask
<<<<<<< HEAD
    159:159:java.lang.String getErrorFromException(com.seafile.vmoo.SeafException) -> getErrorFromException
    106:106:com.seafile.vmoo.ui.dialog.TaskDialog$Task getTask() -> getTask
=======
    80:80:android.view.View getContentView() -> getContentView
    159:159:java.lang.String getErrorFromException(com.seafile.seadroid2.SeafException) -> getErrorFromException
    106:106:com.seafile.seadroid2.ui.dialog.TaskDialog$Task getTask() -> getTask
>>>>>>> rename package name,fix action event info list same time crash
    349:349:boolean hasOkButton() -> hasOkButton
    339:341:void hideError() -> hideError
    321:323:void hideLoading() -> hideLoading
    327:328:void hideLoadingPro() -> hideLoadingPro
    202:284:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    178:187:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    111:116:void onStop() -> onStop
<<<<<<< HEAD
    163:168:void onTaskFailed(com.seafile.vmoo.SeafException) -> onTaskFailed
    147:149:void onTaskSuccess() -> onTaskSuccess
    291:298:void restoreTask(android.os.Bundle) -> restoreTask
    173:173:void setTaskDialogLisenter(com.seafile.vmoo.ui.dialog.TaskDialog$TaskDialogListener) -> setTaskDialogLisenter
    332:335:void showError(java.lang.String) -> showError
    303:305:void showLoading() -> showLoading
    309:310:void showLoadingPro() -> showLoadingPro
com.seafile.vmoo.ui.dialog.TaskDialog$1 -> com.seafile.vmoo.ui.dialog.TaskDialog$1:
    227:227:void <init>(com.seafile.vmoo.ui.dialog.TaskDialog) -> <init>
com.seafile.vmoo.ui.dialog.TaskDialog$2 -> com.seafile.vmoo.ui.dialog.TaskDialog$2:
    233:233:void <init>(com.seafile.vmoo.ui.dialog.TaskDialog) -> <init>
    236:240:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.vmoo.ui.dialog.TaskDialog$3 -> com.seafile.vmoo.ui.dialog.TaskDialog$3:
    247:247:void <init>(com.seafile.vmoo.ui.dialog.TaskDialog,androidx.appcompat.app.AlertDialog,android.os.Bundle) -> <init>
    250:279:void onShow(android.content.DialogInterface) -> onShow
com.seafile.vmoo.ui.dialog.TaskDialog$3$1 -> com.seafile.vmoo.ui.dialog.TaskDialog$3$1:
    255:255:void <init>(com.seafile.vmoo.ui.dialog.TaskDialog$3) -> <init>
    259:261:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.dialog.TaskDialog$Task -> com.seafile.vmoo.ui.dialog.TaskDialog$Task:
    382:382:void <init>() -> <init>
    382:382:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    413:413:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    382:382:void onPostExecute(java.lang.Object) -> onPostExecute
    419:422:void onPostExecute(java.lang.Void) -> onPostExecute
    396:396:void setTaskDialog(com.seafile.vmoo.ui.dialog.TaskDialog) -> setTaskDialog
    404:404:void setTaskException(com.seafile.vmoo.SeafException) -> setTaskException
com.seafile.vmoo.ui.dialog.TaskDialog$TaskDialogListener -> com.seafile.vmoo.ui.dialog.TaskDialog$TaskDialogListener:
    29:29:void <init>() -> <init>
com.seafile.vmoo.ui.fragment.ActivitiesFragment -> com.seafile.vmoo.ui.fragment.ActivitiesFragment:
    48:70:void <init>() -> <init>
    48:48:int access$000() -> access$000
    48:48:int access$002(int) -> access$002
    48:48:int access$100(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> access$100
    48:48:void access$1000(com.seafile.vmoo.ui.fragment.ActivitiesFragment,java.util.List) -> access$1000
    48:48:int access$102(com.seafile.vmoo.ui.fragment.ActivitiesFragment,int) -> access$102
    48:48:void access$1100(com.seafile.vmoo.ui.fragment.ActivitiesFragment,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> access$1100
    48:48:void access$1200(com.seafile.vmoo.ui.fragment.ActivitiesFragment,java.lang.String,java.lang.String,java.lang.String) -> access$1200
    48:48:com.seafile.vmoo.ui.activity.BrowserActivity access$200(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> access$200
    48:48:com.seafile.vmoo.ui.adapter.ActivitiesItemAdapter access$300(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> access$300
    48:48:void access$400(com.seafile.vmoo.ui.fragment.ActivitiesFragment,com.seafile.vmoo.data.EventDetailsFileItem) -> access$400
    48:48:androidx.swiperefreshlayout.widget.SwipeRefreshLayout access$500(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> access$500
    48:48:void access$600(com.seafile.vmoo.ui.fragment.ActivitiesFragment,int) -> access$600
    48:48:java.util.List access$700(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> access$700
    48:48:java.util.List access$702(com.seafile.vmoo.ui.fragment.ActivitiesFragment,java.util.List) -> access$702
    48:48:android.widget.ListView access$800(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> access$800
    48:48:android.widget.ImageView access$900(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> access$900
=======
    163:168:void onTaskFailed(com.seafile.seadroid2.SeafException) -> onTaskFailed
    147:149:void onTaskSuccess() -> onTaskSuccess
    291:298:void restoreTask(android.os.Bundle) -> restoreTask
    315:316:void setProgress(int) -> setProgress
    173:173:void setTaskDialogLisenter(com.seafile.seadroid2.ui.dialog.TaskDialog$TaskDialogListener) -> setTaskDialogLisenter
    332:335:void showError(java.lang.String) -> showError
    303:305:void showLoading() -> showLoading
    309:310:void showLoadingPro() -> showLoadingPro
com.seafile.seadroid2.ui.dialog.TaskDialog$1 -> com.seafile.seadroid2.ui.dialog.TaskDialog$1:
    227:227:void <init>(com.seafile.seadroid2.ui.dialog.TaskDialog) -> <init>
com.seafile.seadroid2.ui.dialog.TaskDialog$2 -> com.seafile.seadroid2.ui.dialog.TaskDialog$2:
    233:233:void <init>(com.seafile.seadroid2.ui.dialog.TaskDialog) -> <init>
    236:240:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.dialog.TaskDialog$3 -> com.seafile.seadroid2.ui.dialog.TaskDialog$3:
    247:247:void <init>(com.seafile.seadroid2.ui.dialog.TaskDialog,androidx.appcompat.app.AlertDialog,android.os.Bundle) -> <init>
    250:279:void onShow(android.content.DialogInterface) -> onShow
com.seafile.seadroid2.ui.dialog.TaskDialog$3$1 -> com.seafile.seadroid2.ui.dialog.TaskDialog$3$1:
    255:255:void <init>(com.seafile.seadroid2.ui.dialog.TaskDialog$3) -> <init>
    259:261:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.dialog.TaskDialog$Task -> com.seafile.seadroid2.ui.dialog.TaskDialog$Task:
    382:382:void <init>() -> <init>
    382:382:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    413:413:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    408:408:com.seafile.seadroid2.SeafException getTaskException() -> getTaskException
    382:382:void onPostExecute(java.lang.Object) -> onPostExecute
    419:422:void onPostExecute(java.lang.Void) -> onPostExecute
    392:392:void progress(int) -> progress
    396:396:void setTaskDialog(com.seafile.seadroid2.ui.dialog.TaskDialog) -> setTaskDialog
    404:404:void setTaskException(com.seafile.seadroid2.SeafException) -> setTaskException
com.seafile.seadroid2.ui.dialog.TaskDialog$TaskDialogListener -> com.seafile.seadroid2.ui.dialog.TaskDialog$TaskDialogListener:
    29:29:void <init>() -> <init>
com.seafile.seadroid2.ui.dialog.UploadChoiceDialog -> com.seafile.seadroid2.ui.dialog.UploadChoiceDialog:
    18:19:void <init>() -> <init>
    18:18:android.content.Context access$000(com.seafile.seadroid2.ui.dialog.UploadChoiceDialog) -> access$000
    24:51:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
com.seafile.seadroid2.ui.dialog.UploadChoiceDialog$1 -> com.seafile.seadroid2.ui.dialog.UploadChoiceDialog$1:
    27:27:void <init>(com.seafile.seadroid2.ui.dialog.UploadChoiceDialog) -> <init>
    42:33:void onClick(android.content.DialogInterface,int) -> onClick
com.seafile.seadroid2.ui.fragment.ActivitiesFragment -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment:
    48:70:void <init>() -> <init>
    48:48:int access$000() -> access$000
    48:48:int access$002(int) -> access$002
    48:48:int access$100(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> access$100
    48:48:void access$1000(com.seafile.seadroid2.ui.fragment.ActivitiesFragment,java.util.List) -> access$1000
    48:48:int access$102(com.seafile.seadroid2.ui.fragment.ActivitiesFragment,int) -> access$102
    48:48:void access$1100(com.seafile.seadroid2.ui.fragment.ActivitiesFragment,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> access$1100
    48:48:void access$1200(com.seafile.seadroid2.ui.fragment.ActivitiesFragment,java.lang.String,java.lang.String,java.lang.String) -> access$1200
    48:48:com.seafile.seadroid2.ui.activity.BrowserActivity access$200(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> access$200
    48:48:com.seafile.seadroid2.ui.adapter.ActivitiesItemAdapter access$300(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> access$300
    48:48:void access$400(com.seafile.seadroid2.ui.fragment.ActivitiesFragment,com.seafile.seadroid2.data.EventDetailsFileItem) -> access$400
    48:48:androidx.swiperefreshlayout.widget.SwipeRefreshLayout access$500(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> access$500
    48:48:void access$600(com.seafile.seadroid2.ui.fragment.ActivitiesFragment,int) -> access$600
    48:48:java.util.List access$700(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> access$700
    48:48:java.util.List access$702(com.seafile.seadroid2.ui.fragment.ActivitiesFragment,java.util.List) -> access$702
    48:48:android.widget.ListView access$800(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> access$800
    48:48:android.widget.ImageView access$900(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> access$900
>>>>>>> rename package name,fix action event info list same time crash
    241:241:void hideBottomSheet() -> hideBottomSheet
    74:74:boolean isBottomSheetShown() -> isBottomSheetShown
    113:195:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    79:81:void onAttach(android.app.Activity) -> onAttach
    93:93:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    86:87:void onDetach() -> onDetach
<<<<<<< HEAD
    326:327:void onItemClicked(com.seafile.vmoo.data.EventDetailsFileItem) -> onItemClicked
    98:106:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    533:552:void openFile(java.lang.String,java.lang.String,java.lang.String) -> openFile
    332:335:void openLocalFile(com.seafile.vmoo.data.EventDetailsFileItem) -> openLocalFile
=======
    326:327:void onItemClicked(com.seafile.seadroid2.data.EventDetailsFileItem) -> onItemClicked
    98:106:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    531:550:void openFile(java.lang.String,java.lang.String,java.lang.String) -> openFile
    332:335:void openLocalFile(com.seafile.seadroid2.data.EventDetailsFileItem) -> openLocalFile
>>>>>>> rename package name,fix action event info list same time crash
    199:199:void refreshView() -> refreshView
    274:318:void showChangesDialog(java.util.List) -> showChangesDialog
    203:203:void showError(int) -> showError
    207:215:void showError(java.lang.String) -> showError
    224:236:void showLoading(boolean) -> showLoading
    245:246:void switchMenu() -> switchMenu
<<<<<<< HEAD
    514:528:void switchTab(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> switchTab
    491:509:void viewFile(java.lang.String,java.lang.String) -> viewFile
    469:486:void viewRepo(java.lang.String,java.lang.String) -> viewRepo
com.seafile.vmoo.ui.fragment.ActivitiesFragment$1 -> com.seafile.vmoo.ui.fragment.ActivitiesFragment$1:
    114:114:void <init>(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> <init>
    117:119:void onRefresh() -> onRefresh
com.seafile.vmoo.ui.fragment.ActivitiesFragment$2 -> com.seafile.vmoo.ui.fragment.ActivitiesFragment$2:
    125:125:void <init>(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> <init>
    128:156:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.vmoo.ui.fragment.ActivitiesFragment$2$1 -> com.seafile.vmoo.ui.fragment.ActivitiesFragment$2$1:
    145:145:void <init>(com.seafile.vmoo.ui.fragment.ActivitiesFragment$2,com.seafile.vmoo.data.SeafEvent) -> <init>
    148:149:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.fragment.ActivitiesFragment$3 -> com.seafile.vmoo.ui.fragment.ActivitiesFragment$3:
    160:160:void <init>(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> <init>
    163:181:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.seafile.vmoo.ui.fragment.ActivitiesFragment$4 -> com.seafile.vmoo.ui.fragment.ActivitiesFragment$4:
    215:215:void <init>(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> <init>
    218:218:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.fragment.ActivitiesFragment$5 -> com.seafile.vmoo.ui.fragment.ActivitiesFragment$5:
    295:295:void <init>(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> <init>
    298:298:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.fragment.ActivitiesFragment$6 -> com.seafile.vmoo.ui.fragment.ActivitiesFragment$6:
    306:306:void <init>(com.seafile.vmoo.ui.fragment.ActivitiesFragment,java.util.List) -> <init>
    309:311:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.vmoo.ui.fragment.ActivitiesFragment$7 -> com.seafile.vmoo.ui.fragment.ActivitiesFragment$7:
    479:479:void <init>(com.seafile.vmoo.ui.fragment.ActivitiesFragment,java.lang.String,com.seafile.vmoo.data.SeafRepo,java.lang.String) -> <init>
    482:482:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.fragment.ActivitiesFragment$8 -> com.seafile.vmoo.ui.fragment.ActivitiesFragment$8:
    501:501:void <init>(com.seafile.vmoo.ui.fragment.ActivitiesFragment,java.lang.String,com.seafile.vmoo.data.SeafRepo,java.lang.String) -> <init>
    504:504:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.fragment.ActivitiesFragment$LoadEventsTask -> com.seafile.vmoo.ui.fragment.ActivitiesFragment$LoadEventsTask:
    339:339:void <init>(com.seafile.vmoo.ui.fragment.ActivitiesFragment) -> <init>
    339:339:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    350:357:com.seafile.vmoo.data.SeafActivities doInBackground(java.lang.Void[]) -> doInBackground
    339:339:void onPostExecute(java.lang.Object) -> onPostExecute
    367:423:void onPostExecute(com.seafile.vmoo.data.SeafActivities) -> onPostExecute
    344:345:void onPreExecute() -> onPreExecute
com.seafile.vmoo.ui.fragment.ActivitiesFragment$LoadHistoryChangesTask -> com.seafile.vmoo.ui.fragment.ActivitiesFragment$LoadHistoryChangesTask:
    431:432:void <init>(com.seafile.vmoo.ui.fragment.ActivitiesFragment,com.seafile.vmoo.data.SeafEvent) -> <init>
    427:427:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    438:442:com.seafile.vmoo.data.CommitDetails doInBackground(java.lang.String[]) -> doInBackground
    427:427:void onPostExecute(java.lang.Object) -> onPostExecute
    452:464:void onPostExecute(com.seafile.vmoo.data.CommitDetails) -> onPostExecute
com.seafile.vmoo.ui.fragment.CustomPreferenceFragment -> com.seafile.vmoo.ui.fragment.CustomPreferenceFragment:
    46:307:void <init>() -> <init>
    46:46:void access$000(com.seafile.vmoo.ui.fragment.CustomPreferenceFragment) -> access$000
    46:46:android.widget.ListView access$100(com.seafile.vmoo.ui.fragment.CustomPreferenceFragment) -> access$100
=======
    512:526:void switchTab(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> switchTab
    489:507:void viewFile(java.lang.String,java.lang.String) -> viewFile
    467:484:void viewRepo(java.lang.String,java.lang.String) -> viewRepo
com.seafile.seadroid2.ui.fragment.ActivitiesFragment$1 -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment$1:
    114:114:void <init>(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> <init>
    117:119:void onRefresh() -> onRefresh
com.seafile.seadroid2.ui.fragment.ActivitiesFragment$2 -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment$2:
    125:125:void <init>(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> <init>
    128:156:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.seadroid2.ui.fragment.ActivitiesFragment$2$1 -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment$2$1:
    145:145:void <init>(com.seafile.seadroid2.ui.fragment.ActivitiesFragment$2,com.seafile.seadroid2.data.SeafEvent) -> <init>
    148:149:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.fragment.ActivitiesFragment$3 -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment$3:
    160:160:void <init>(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> <init>
    163:181:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.seafile.seadroid2.ui.fragment.ActivitiesFragment$4 -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment$4:
    215:215:void <init>(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> <init>
    218:218:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.fragment.ActivitiesFragment$5 -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment$5:
    295:295:void <init>(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> <init>
    298:298:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.fragment.ActivitiesFragment$6 -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment$6:
    306:306:void <init>(com.seafile.seadroid2.ui.fragment.ActivitiesFragment,java.util.List) -> <init>
    309:311:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.seafile.seadroid2.ui.fragment.ActivitiesFragment$7 -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment$7:
    477:477:void <init>(com.seafile.seadroid2.ui.fragment.ActivitiesFragment,java.lang.String,com.seafile.seadroid2.data.SeafRepo,java.lang.String) -> <init>
    480:480:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.fragment.ActivitiesFragment$8 -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment$8:
    499:499:void <init>(com.seafile.seadroid2.ui.fragment.ActivitiesFragment,java.lang.String,com.seafile.seadroid2.data.SeafRepo,java.lang.String) -> <init>
    502:502:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.fragment.ActivitiesFragment$LoadEventsTask -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment$LoadEventsTask:
    339:339:void <init>(com.seafile.seadroid2.ui.fragment.ActivitiesFragment) -> <init>
    339:339:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    350:357:com.seafile.seadroid2.data.SeafActivities doInBackground(java.lang.Void[]) -> doInBackground
    339:339:void onPostExecute(java.lang.Object) -> onPostExecute
    367:421:void onPostExecute(com.seafile.seadroid2.data.SeafActivities) -> onPostExecute
    344:345:void onPreExecute() -> onPreExecute
com.seafile.seadroid2.ui.fragment.ActivitiesFragment$LoadHistoryChangesTask -> com.seafile.seadroid2.ui.fragment.ActivitiesFragment$LoadHistoryChangesTask:
    429:430:void <init>(com.seafile.seadroid2.ui.fragment.ActivitiesFragment,com.seafile.seadroid2.data.SeafEvent) -> <init>
    425:425:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    436:440:com.seafile.seadroid2.data.CommitDetails doInBackground(java.lang.String[]) -> doInBackground
    425:425:void onPostExecute(java.lang.Object) -> onPostExecute
    450:462:void onPostExecute(com.seafile.seadroid2.data.CommitDetails) -> onPostExecute
com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment -> com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment:
    46:307:void <init>() -> <init>
    46:46:void access$000(com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment) -> access$000
    46:46:android.widget.ListView access$100(com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment) -> access$100
    214:216:void addPreferencesFromIntent(android.content.Intent) -> addPreferencesFromIntent
>>>>>>> rename package name,fix action event info list same time crash
    226:228:void addPreferencesFromResource(int) -> addPreferencesFromResource
    272:274:void bindPreferences() -> bindPreferences
    284:289:void ensureList() -> ensureList
    254:257:android.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    279:280:android.widget.ListView getListView() -> getListView
<<<<<<< HEAD
    205:205:android.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    111:124:void onActivityCreated(android.os.Bundle) -> onActivityCreated
=======
    181:181:android.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    205:205:android.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    111:124:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    171:173:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
>>>>>>> rename package name,fix action event info list same time crash
    97:99:void onCreate(android.os.Bundle) -> onCreate
    105:105:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    153:154:void onDestroy() -> onDestroy
    145:148:void onDestroyView() -> onDestroyView
    239:240:boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    159:165:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    132:133:void onStart() -> onStart
    138:140:void onStop() -> onStop
    267:268:void postBindPreferences() -> postBindPreferences
    261:262:void requirePreferenceManager() -> requirePreferenceManager
    190:193:void setPreferenceScreen(android.preference.PreferenceScreen) -> setPreferenceScreen
<<<<<<< HEAD
com.seafile.vmoo.ui.fragment.CustomPreferenceFragment$1 -> com.seafile.vmoo.ui.fragment.CustomPreferenceFragment$1:
    62:62:void <init>(com.seafile.vmoo.ui.fragment.CustomPreferenceFragment) -> <init>
    65:68:void handleMessage(android.os.Message) -> handleMessage
com.seafile.vmoo.ui.fragment.CustomPreferenceFragment$2 -> com.seafile.vmoo.ui.fragment.CustomPreferenceFragment$2:
    74:74:void <init>(com.seafile.vmoo.ui.fragment.CustomPreferenceFragment) -> <init>
    76:76:void run() -> run
com.seafile.vmoo.ui.fragment.CustomPreferenceFragment$3 -> com.seafile.vmoo.ui.fragment.CustomPreferenceFragment$3:
    307:307:void <init>(com.seafile.vmoo.ui.fragment.CustomPreferenceFragment) -> <init>
    311:314:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.seafile.vmoo.ui.fragment.DownloadTaskFragment -> com.seafile.vmoo.ui.fragment.DownloadTaskFragment:
=======
com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment$1 -> com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment$1:
    62:62:void <init>(com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment) -> <init>
    65:68:void handleMessage(android.os.Message) -> handleMessage
com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment$2 -> com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment$2:
    74:74:void <init>(com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment) -> <init>
    76:76:void run() -> run
com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment$3 -> com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment$3:
    307:307:void <init>(com.seafile.seadroid2.ui.fragment.CustomPreferenceFragment) -> <init>
    311:314:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.seafile.seadroid2.ui.fragment.DownloadTaskFragment -> com.seafile.seadroid2.ui.fragment.DownloadTaskFragment:
>>>>>>> rename package name,fix action event info list same time crash
    16:16:void <init>() -> <init>
    113:114:void cancelAllDownloadTasks() -> cancelAllDownloadTasks
    122:123:void cancelDownloadTasksByIds(java.util.List) -> cancelDownloadTasksByIds
    129:130:void deleteSelectedItems(java.util.List) -> deleteSelectedItems
    29:29:java.util.List getTransferTaskInfos() -> getTransferTaskInfos
    44:44:boolean isNeedUpdateProgress() -> isNeedUpdateProgress
    21:24:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    84:87:void removeAllDownloadTasks() -> removeAllDownloadTasks
<<<<<<< HEAD
    95:96:void removeDownloadTasksByIds(java.util.List) -> removeDownloadTasksByIds
    135:136:void restartSelectedItems(java.util.List) -> restartSelectedItems
    66:67:void restartTasksByIds(java.util.List) -> restartTasksByIds
    35:39:void setUpTransferList() -> setUpTransferList
com.seafile.vmoo.ui.fragment.ReposFragment -> com.seafile.vmoo.ui.fragment.ReposFragment:
    52:86:void <init>() -> <init>
    52:52:int access$000() -> access$000
    52:52:int access$002(int) -> access$002
    52:52:com.seafile.vmoo.ui.activity.BrowserActivity access$100(com.seafile.vmoo.ui.fragment.ReposFragment) -> access$100
    52:52:void access$1100(com.seafile.vmoo.ui.fragment.ReposFragment,java.util.List,boolean) -> access$1100
    52:52:void access$1400(com.seafile.vmoo.ui.fragment.ReposFragment) -> access$1400
    52:52:void access$1500(com.seafile.vmoo.ui.fragment.ReposFragment,java.util.List,boolean) -> access$1500
    52:52:androidx.appcompat.view.ActionMode access$1602(com.seafile.vmoo.ui.fragment.ReposFragment,androidx.appcompat.view.ActionMode) -> access$1602
    52:52:com.seafile.vmoo.ui.NavContext access$200(com.seafile.vmoo.ui.fragment.ReposFragment) -> access$200
    52:52:com.seafile.vmoo.ui.adapter.SeafItemAdapter access$300(com.seafile.vmoo.ui.fragment.ReposFragment) -> access$300
    52:52:android.os.Handler access$400(com.seafile.vmoo.ui.fragment.ReposFragment) -> access$400
    52:52:void access$500(com.seafile.vmoo.ui.fragment.ReposFragment,int) -> access$500
    52:52:com.seafile.vmoo.data.DataManager access$600(com.seafile.vmoo.ui.fragment.ReposFragment) -> access$600
    52:52:androidx.swiperefreshlayout.widget.SwipeRefreshLayout access$700(com.seafile.vmoo.ui.fragment.ReposFragment) -> access$700
    52:52:int access$802(int) -> access$802
    724:748:void addReposToAdapter(java.util.List) -> addReposToAdapter
    97:97:com.seafile.vmoo.ui.adapter.SeafItemAdapter getAdapter() -> getAdapter
    89:89:com.seafile.vmoo.data.DataManager getDataManager() -> getDataManager
    101:101:android.widget.ImageView getEmptyView() -> getEmptyView
    93:93:com.seafile.vmoo.ui.NavContext getNavContext() -> getNavContext
=======
    75:76:void removeAllFailedDownloadTasks() -> removeAllFailedDownloadTasks
    104:105:void removeAllFinishedDownloadTasks() -> removeAllFinishedDownloadTasks
    95:96:void removeDownloadTasksByIds(java.util.List) -> removeDownloadTasksByIds
    60:61:void restartAllCancelledTasks() -> restartAllCancelledTasks
    135:136:void restartSelectedItems(java.util.List) -> restartSelectedItems
    66:67:void restartTasksByIds(java.util.List) -> restartTasksByIds
    51:52:void retryAllFailedTasks() -> retryAllFailedTasks
    35:39:void setUpTransferList() -> setUpTransferList
com.seafile.seadroid2.ui.fragment.ReposFragment -> com.seafile.seadroid2.ui.fragment.ReposFragment:
    52:86:void <init>() -> <init>
    52:52:int access$000() -> access$000
    52:52:int access$002(int) -> access$002
    52:52:com.seafile.seadroid2.ui.activity.BrowserActivity access$100(com.seafile.seadroid2.ui.fragment.ReposFragment) -> access$100
    52:52:void access$1100(com.seafile.seadroid2.ui.fragment.ReposFragment,java.util.List,boolean) -> access$1100
    52:52:void access$1400(com.seafile.seadroid2.ui.fragment.ReposFragment) -> access$1400
    52:52:void access$1500(com.seafile.seadroid2.ui.fragment.ReposFragment,java.util.List,boolean) -> access$1500
    52:52:androidx.appcompat.view.ActionMode access$1602(com.seafile.seadroid2.ui.fragment.ReposFragment,androidx.appcompat.view.ActionMode) -> access$1602
    52:52:com.seafile.seadroid2.ui.NavContext access$200(com.seafile.seadroid2.ui.fragment.ReposFragment) -> access$200
    52:52:com.seafile.seadroid2.ui.adapter.SeafItemAdapter access$300(com.seafile.seadroid2.ui.fragment.ReposFragment) -> access$300
    52:52:android.os.Handler access$400(com.seafile.seadroid2.ui.fragment.ReposFragment) -> access$400
    52:52:void access$500(com.seafile.seadroid2.ui.fragment.ReposFragment,int) -> access$500
    52:52:com.seafile.seadroid2.data.DataManager access$600(com.seafile.seadroid2.ui.fragment.ReposFragment) -> access$600
    52:52:androidx.swiperefreshlayout.widget.SwipeRefreshLayout access$700(com.seafile.seadroid2.ui.fragment.ReposFragment) -> access$700
    52:52:int access$802(int) -> access$802
    724:748:void addReposToAdapter(java.util.List) -> addReposToAdapter
    97:97:com.seafile.seadroid2.ui.adapter.SeafItemAdapter getAdapter() -> getAdapter
    89:89:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
    101:101:android.widget.ImageView getEmptyView() -> getEmptyView
    93:93:com.seafile.seadroid2.ui.NavContext getNavContext() -> getNavContext
>>>>>>> rename package name,fix action event info list same time crash
    518:518:boolean isDirentsRefreshTimeOut(java.lang.String,java.lang.String) -> isDirentsRefreshTimeOut
    502:502:boolean isReposRefreshTimeOut() -> isReposRefreshTimeOut
    422:460:void navToDirectory(boolean,boolean) -> navToDirectory
    397:418:void navToReposView(boolean,boolean) -> navToReposView
    319:324:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    110:112:void onAttach(android.app.Activity) -> onAttach
    118:135:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    356:358:void onDetach() -> onDetach
    596:663:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    342:346:void onResume() -> onResume
    351:351:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    330:330:void onStart() -> onStart
    336:337:void onStop() -> onStop
    362:363:void refresh() -> refresh
    367:367:void refreshView() -> refreshView
    371:371:void refreshView(boolean) -> refreshView
    375:391:void refreshView(boolean,boolean) -> refreshView
    695:704:void restoreDirentScrollPosition(boolean,java.lang.String,java.lang.String) -> restoreDirentScrollPosition
    710:717:void restoreRepoScrollPosition(boolean) -> restoreRepoScrollPosition
    678:683:void saveDirentScrollPosition(java.lang.String,java.lang.String) -> saveDirentScrollPosition
    687:691:void saveRepoScrollPosition() -> saveRepoScrollPosition
    873:873:void showError(int) -> showError
    877:885:void showError(java.lang.String) -> showError
    894:910:void showLoading(boolean) -> showLoading
    1053:1057:void showPasswordDialog() -> showPasswordDialog
    526:529:void sortFiles(int,int) -> sortFiles
    164:170:void startContextualActionMode(int) -> startContextualActionMode
    175:180:void startContextualActionMode() -> startContextualActionMode
    468:473:void startTimer() -> startTimer
    493:495:void stopTimer() -> stopTimer
    551:570:void updateAdapterWithDirents(java.util.List,boolean) -> updateAdapterWithDirents
    533:544:void updateAdapterWithRepos(java.util.List,boolean) -> updateAdapterWithRepos
    581:586:void updateContextualActionBar() -> updateContextualActionBar
<<<<<<< HEAD
com.seafile.vmoo.ui.fragment.ReposFragment$1 -> com.seafile.vmoo.ui.fragment.ReposFragment$1:
    126:126:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment) -> <init>
    129:129:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.seafile.vmoo.ui.fragment.ReposFragment$2 -> com.seafile.vmoo.ui.fragment.ReposFragment$2:
    135:135:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment) -> <init>
    138:139:void onRefresh() -> onRefresh
com.seafile.vmoo.ui.fragment.ReposFragment$3 -> com.seafile.vmoo.ui.fragment.ReposFragment$3:
    473:473:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment) -> <init>
    477:487:void run() -> run
com.seafile.vmoo.ui.fragment.ReposFragment$4 -> com.seafile.vmoo.ui.fragment.ReposFragment$4:
    627:627:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment,android.widget.ListView,android.view.View,int,long) -> <init>
    630:630:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.fragment.ReposFragment$5 -> com.seafile.vmoo.ui.fragment.ReposFragment$5:
    885:885:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment) -> <init>
    888:888:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.fragment.ReposFragment$6 -> com.seafile.vmoo.ui.fragment.ReposFragment$6:
    1057:1057:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment) -> <init>
    1060:1060:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.fragment.ReposFragment$ActionModeCallback -> com.seafile.vmoo.ui.fragment.ReposFragment$ActionModeCallback:
    1073:1073:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment) -> <init>
=======
com.seafile.seadroid2.ui.fragment.ReposFragment$1 -> com.seafile.seadroid2.ui.fragment.ReposFragment$1:
    126:126:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment) -> <init>
    129:129:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.seafile.seadroid2.ui.fragment.ReposFragment$2 -> com.seafile.seadroid2.ui.fragment.ReposFragment$2:
    135:135:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment) -> <init>
    138:139:void onRefresh() -> onRefresh
com.seafile.seadroid2.ui.fragment.ReposFragment$3 -> com.seafile.seadroid2.ui.fragment.ReposFragment$3:
    473:473:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment) -> <init>
    477:487:void run() -> run
com.seafile.seadroid2.ui.fragment.ReposFragment$4 -> com.seafile.seadroid2.ui.fragment.ReposFragment$4:
    627:627:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment,android.widget.ListView,android.view.View,int,long) -> <init>
    630:630:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.fragment.ReposFragment$5 -> com.seafile.seadroid2.ui.fragment.ReposFragment$5:
    885:885:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment) -> <init>
    888:888:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.fragment.ReposFragment$6 -> com.seafile.seadroid2.ui.fragment.ReposFragment$6:
    1057:1057:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment) -> <init>
    1060:1060:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.fragment.ReposFragment$ActionModeCallback -> com.seafile.seadroid2.ui.fragment.ReposFragment$ActionModeCallback:
    1073:1073:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    1112:1146:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    1079:1089:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    1164:1171:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    1100:1102:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
<<<<<<< HEAD
com.seafile.vmoo.ui.fragment.ReposFragment$LoadDirTask -> com.seafile.vmoo.ui.fragment.ReposFragment$LoadDirTask:
    923:924:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment,com.seafile.vmoo.data.DataManager) -> <init>
    914:914:void access$1200(com.seafile.vmoo.ui.fragment.ReposFragment$LoadDirTask) -> access$1200
    914:914:void access$1300(com.seafile.vmoo.ui.fragment.ReposFragment$LoadDirTask) -> access$1300
=======
com.seafile.seadroid2.ui.fragment.ReposFragment$LoadDirTask -> com.seafile.seadroid2.ui.fragment.ReposFragment$LoadDirTask:
    923:924:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment,com.seafile.seadroid2.data.DataManager) -> <init>
    914:914:void access$1200(com.seafile.seadroid2.ui.fragment.ReposFragment$LoadDirTask) -> access$1200
    914:914:void access$1300(com.seafile.seadroid2.ui.fragment.ReposFragment$LoadDirTask) -> access$1300
>>>>>>> rename package name,fix action event info list same time crash
    969:976:void displaySSLError() -> displaySSLError
    914:914:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    940:951:java.util.List doInBackground(java.lang.String[]) -> doInBackground
    914:914:void onPostExecute(java.lang.Object) -> onPostExecute
    982:1048:void onPostExecute(java.util.List) -> onPostExecute
    929:932:void onPreExecute() -> onPreExecute
    958:965:void resend() -> resend
<<<<<<< HEAD
com.seafile.vmoo.ui.fragment.ReposFragment$LoadDirTask$1 -> com.seafile.vmoo.ui.fragment.ReposFragment$LoadDirTask$1:
    1005:1005:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment$LoadDirTask) -> <init>
    1008:1010:void onAccepted(boolean) -> onAccepted
    1015:1015:void onRejected() -> onRejected
com.seafile.vmoo.ui.fragment.ReposFragment$LoadTask -> com.seafile.vmoo.ui.fragment.ReposFragment$LoadTask:
    758:759:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment,com.seafile.vmoo.data.DataManager) -> <init>
    754:754:void access$1000(com.seafile.vmoo.ui.fragment.ReposFragment$LoadTask) -> access$1000
    754:754:void access$900(com.seafile.vmoo.ui.fragment.ReposFragment$LoadTask) -> access$900
=======
com.seafile.seadroid2.ui.fragment.ReposFragment$LoadDirTask$1 -> com.seafile.seadroid2.ui.fragment.ReposFragment$LoadDirTask$1:
    1005:1005:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment$LoadDirTask) -> <init>
    1008:1010:void onAccepted(boolean) -> onAccepted
    1015:1015:void onRejected() -> onRejected
com.seafile.seadroid2.ui.fragment.ReposFragment$LoadTask -> com.seafile.seadroid2.ui.fragment.ReposFragment$LoadTask:
    758:759:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment,com.seafile.seadroid2.data.DataManager) -> <init>
    754:754:void access$1000(com.seafile.seadroid2.ui.fragment.ReposFragment$LoadTask) -> access$1000
    754:754:void access$900(com.seafile.seadroid2.ui.fragment.ReposFragment$LoadTask) -> access$900
>>>>>>> rename package name,fix action event info list same time crash
    784:791:void displaySSLError() -> displaySSLError
    754:754:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    776:778:java.util.List doInBackground(java.lang.Void[]) -> doInBackground
    754:754:void onPostExecute(java.lang.Object) -> onPostExecute
    807:867:void onPostExecute(java.util.List) -> onPostExecute
    764:767:void onPreExecute() -> onPreExecute
    795:801:void resend() -> resend
<<<<<<< HEAD
com.seafile.vmoo.ui.fragment.ReposFragment$LoadTask$1 -> com.seafile.vmoo.ui.fragment.ReposFragment$LoadTask$1:
    831:831:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment$LoadTask) -> <init>
    834:836:void onAccepted(boolean) -> onAccepted
    841:841:void onRejected() -> onRejected
com.seafile.vmoo.ui.fragment.ReposFragment$ScrollState -> com.seafile.vmoo.ui.fragment.ReposFragment$ScrollState:
    671:673:void <init>(com.seafile.vmoo.ui.fragment.ReposFragment,int,int) -> <init>
com.seafile.vmoo.ui.fragment.SettingsFragment -> com.seafile.vmoo.ui.fragment.SettingsFragment:
    58:58:void <clinit>() -> <clinit>
    47:813:void <init>() -> <init>
    47:47:com.seafile.vmoo.ui.activity.SettingsActivity access$000(com.seafile.vmoo.ui.fragment.SettingsFragment) -> access$000
    47:47:java.lang.String access$100(com.seafile.vmoo.ui.fragment.SettingsFragment) -> access$100
    47:47:void access$200(com.seafile.vmoo.ui.fragment.SettingsFragment) -> access$200
    47:47:void access$300(com.seafile.vmoo.ui.fragment.SettingsFragment) -> access$300
    47:47:com.seafile.vmoo.data.DataManager access$400(com.seafile.vmoo.ui.fragment.SettingsFragment) -> access$400
    47:47:com.seafile.vmoo.account.AccountManager access$500(com.seafile.vmoo.ui.fragment.SettingsFragment) -> access$500
    47:47:com.seafile.vmoo.data.StorageManager access$600(com.seafile.vmoo.ui.fragment.SettingsFragment) -> access$600
    47:47:void access$700(com.seafile.vmoo.ui.fragment.SettingsFragment) -> access$700
    781:781:void calculateCacheSize() -> calculateCacheSize
    633:647:void clearCache() -> clearCache
=======
com.seafile.seadroid2.ui.fragment.ReposFragment$LoadTask$1 -> com.seafile.seadroid2.ui.fragment.ReposFragment$LoadTask$1:
    831:831:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment$LoadTask) -> <init>
    834:836:void onAccepted(boolean) -> onAccepted
    841:841:void onRejected() -> onRejected
com.seafile.seadroid2.ui.fragment.ReposFragment$ScrollState -> com.seafile.seadroid2.ui.fragment.ReposFragment$ScrollState:
    671:673:void <init>(com.seafile.seadroid2.ui.fragment.ReposFragment,int,int) -> <init>
com.seafile.seadroid2.ui.fragment.SettingsFragment -> com.seafile.seadroid2.ui.fragment.SettingsFragment:
    58:58:void <clinit>() -> <clinit>
    47:813:void <init>() -> <init>
    47:47:com.seafile.seadroid2.ui.activity.SettingsActivity access$000(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> access$000
    47:47:java.lang.String access$100(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> access$100
    47:47:void access$200(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> access$200
    47:47:void access$300(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> access$300
    47:47:com.seafile.seadroid2.data.DataManager access$400(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> access$400
    47:47:com.seafile.seadroid2.account.AccountManager access$500(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> access$500
    47:47:com.seafile.seadroid2.data.StorageManager access$600(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> access$600
    47:47:void access$700(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> access$700
    781:781:void calculateCacheSize() -> calculateCacheSize
    633:647:void clearCache() -> clearCache
    565:577:void clearPassword() -> clearPassword
    552:552:void clearPasswordSilently() -> clearPasswordSilently
    774:775:com.seafile.seadroid2.account.AccountInfo getAccountInfoBySignature(java.lang.String) -> getAccountInfoBySignature
>>>>>>> rename package name,fix action event info list same time crash
    761:766:java.lang.String getCurrentUserIdentifier() -> getCurrentUserIdentifier
    667:658:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    88:98:void onAttach(android.app.Activity) -> onAttach
    102:112:void onCreate(android.os.Bundle) -> onCreate
    118:121:void onDestroy() -> onDestroy
    126:437:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
<<<<<<< HEAD
    770:770:void saveAccountInfo(java.lang.String,com.seafile.vmoo.account.AccountInfo) -> saveAccountInfo
    581:582:void updateStorageLocationSummary() -> updateStorageLocationSummary
com.seafile.vmoo.ui.fragment.SettingsFragment$1 -> com.seafile.vmoo.ui.fragment.SettingsFragment$1:
    401:401:void <init>(com.seafile.vmoo.ui.fragment.SettingsFragment) -> <init>
    405:408:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.seafile.vmoo.ui.fragment.SettingsFragment$2 -> com.seafile.vmoo.ui.fragment.SettingsFragment$2:
    417:417:void <init>(com.seafile.vmoo.ui.fragment.SettingsFragment) -> <init>
    420:420:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.seafile.vmoo.ui.fragment.SettingsFragment$3 -> com.seafile.vmoo.ui.fragment.SettingsFragment$3:
    428:428:void <init>(com.seafile.vmoo.ui.fragment.SettingsFragment) -> <init>
    431:431:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.seafile.vmoo.ui.fragment.SettingsFragment$6 -> com.seafile.vmoo.ui.fragment.SettingsFragment$6:
    634:634:void <init>(com.seafile.vmoo.ui.fragment.SettingsFragment) -> <init>
    644:644:void onTaskFailed(com.seafile.vmoo.SeafException) -> onTaskFailed
    638:639:void onTaskSuccess() -> onTaskSuccess
com.seafile.vmoo.ui.fragment.SettingsFragment$7 -> com.seafile.vmoo.ui.fragment.SettingsFragment$7:
    814:814:void <init>(com.seafile.vmoo.ui.fragment.SettingsFragment) -> <init>
    819:821:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.seafile.vmoo.ui.fragment.SettingsFragment$CalculateCacheTask -> com.seafile.vmoo.ui.fragment.SettingsFragment$CalculateCacheTask:
    784:784:void <init>(com.seafile.vmoo.ui.fragment.SettingsFragment) -> <init>
=======
    770:770:void saveAccountInfo(java.lang.String,com.seafile.seadroid2.account.AccountInfo) -> saveAccountInfo
    708:713:void scanCustomDirs(boolean) -> scanCustomDirs
    581:582:void updateStorageLocationSummary() -> updateStorageLocationSummary
com.seafile.seadroid2.ui.fragment.SettingsFragment$1 -> com.seafile.seadroid2.ui.fragment.SettingsFragment$1:
    401:401:void <init>(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> <init>
    405:408:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.seafile.seadroid2.ui.fragment.SettingsFragment$2 -> com.seafile.seadroid2.ui.fragment.SettingsFragment$2:
    417:417:void <init>(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> <init>
    420:420:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.seafile.seadroid2.ui.fragment.SettingsFragment$3 -> com.seafile.seadroid2.ui.fragment.SettingsFragment$3:
    428:428:void <init>(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> <init>
    431:431:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.seafile.seadroid2.ui.fragment.SettingsFragment$4 -> com.seafile.seadroid2.ui.fragment.SettingsFragment$4:
    552:552:void <init>(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> <init>
    555:559:void run() -> run
com.seafile.seadroid2.ui.fragment.SettingsFragment$5 -> com.seafile.seadroid2.ui.fragment.SettingsFragment$5:
    566:566:void <init>(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> <init>
    574:574:void onTaskFailed(com.seafile.seadroid2.SeafException) -> onTaskFailed
    569:569:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.fragment.SettingsFragment$6 -> com.seafile.seadroid2.ui.fragment.SettingsFragment$6:
    634:634:void <init>(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> <init>
    644:644:void onTaskFailed(com.seafile.seadroid2.SeafException) -> onTaskFailed
    638:639:void onTaskSuccess() -> onTaskSuccess
com.seafile.seadroid2.ui.fragment.SettingsFragment$7 -> com.seafile.seadroid2.ui.fragment.SettingsFragment$7:
    814:814:void <init>(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> <init>
    819:821:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.seafile.seadroid2.ui.fragment.SettingsFragment$CalculateCacheTask -> com.seafile.seadroid2.ui.fragment.SettingsFragment$CalculateCacheTask:
    784:784:void <init>(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    784:784:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    788:788:java.lang.Long doInBackground(java.lang.String[]) -> doInBackground
    784:784:void onPostExecute(java.lang.Object) -> onPostExecute
    793:794:void onPostExecute(java.lang.Long) -> onPostExecute
<<<<<<< HEAD
com.seafile.vmoo.ui.fragment.SettingsFragment$RequestAccountInfoTask -> com.seafile.vmoo.ui.fragment.SettingsFragment$RequestAccountInfoTask:
    721:721:void <init>(com.seafile.vmoo.ui.fragment.SettingsFragment) -> <init>
    721:721:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    736:738:com.seafile.vmoo.account.AccountInfo doInBackground(com.seafile.vmoo.account.Account[]) -> doInBackground
    721:721:void onPostExecute(java.lang.Object) -> onPostExecute
    746:756:void onPostExecute(com.seafile.vmoo.account.AccountInfo) -> onPostExecute
    725:725:void onPreExecute() -> onPreExecute
com.seafile.vmoo.ui.fragment.SettingsFragment$UpdateStorageSLocationSummaryTask -> com.seafile.vmoo.ui.fragment.SettingsFragment$UpdateStorageSLocationSummaryTask:
    799:799:void <init>(com.seafile.vmoo.ui.fragment.SettingsFragment) -> <init>
    799:799:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    799:799:void onPostExecute(java.lang.Object) -> onPostExecute
    808:808:void onPostExecute(java.lang.Void) -> onPostExecute
com.seafile.vmoo.ui.fragment.StarredFragment -> com.seafile.vmoo.ui.fragment.StarredFragment:
    33:35:void <init>() -> <init>
    33:33:int access$000() -> access$000
    33:33:int access$002(int) -> access$002
    33:33:void access$100(com.seafile.vmoo.ui.fragment.StarredFragment,boolean) -> access$100
    33:33:com.seafile.vmoo.ui.activity.BrowserActivity access$200(com.seafile.vmoo.ui.fragment.StarredFragment) -> access$200
    33:33:com.seafile.vmoo.data.DataManager access$300(com.seafile.vmoo.ui.fragment.StarredFragment) -> access$300
    33:33:androidx.swiperefreshlayout.widget.SwipeRefreshLayout access$400(com.seafile.vmoo.ui.fragment.StarredFragment) -> access$400
    33:33:void access$500(com.seafile.vmoo.ui.fragment.StarredFragment,java.lang.String) -> access$500
    33:33:void access$600(com.seafile.vmoo.ui.fragment.StarredFragment,java.util.List) -> access$600
    33:33:com.seafile.vmoo.ui.adapter.StarredItemAdapter access$700(com.seafile.vmoo.ui.fragment.StarredFragment) -> access$700
    33:33:androidx.appcompat.view.ActionMode access$802(com.seafile.vmoo.ui.fragment.StarredFragment,androidx.appcompat.view.ActionMode) -> access$802
    52:52:com.seafile.vmoo.data.DataManager getDataManager() -> getDataManager
=======
com.seafile.seadroid2.ui.fragment.SettingsFragment$RequestAccountInfoTask -> com.seafile.seadroid2.ui.fragment.SettingsFragment$RequestAccountInfoTask:
    721:721:void <init>(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> <init>
    721:721:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    736:738:com.seafile.seadroid2.account.AccountInfo doInBackground(com.seafile.seadroid2.account.Account[]) -> doInBackground
    721:721:void onPostExecute(java.lang.Object) -> onPostExecute
    746:756:void onPostExecute(com.seafile.seadroid2.account.AccountInfo) -> onPostExecute
    725:725:void onPreExecute() -> onPreExecute
com.seafile.seadroid2.ui.fragment.SettingsFragment$UpdateStorageSLocationSummaryTask -> com.seafile.seadroid2.ui.fragment.SettingsFragment$UpdateStorageSLocationSummaryTask:
    799:799:void <init>(com.seafile.seadroid2.ui.fragment.SettingsFragment) -> <init>
    799:799:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    799:799:void onPostExecute(java.lang.Object) -> onPostExecute
    808:808:void onPostExecute(java.lang.Void) -> onPostExecute
com.seafile.seadroid2.ui.fragment.StarredFragment -> com.seafile.seadroid2.ui.fragment.StarredFragment:
    33:35:void <init>() -> <init>
    33:33:int access$000() -> access$000
    33:33:int access$002(int) -> access$002
    33:33:void access$100(com.seafile.seadroid2.ui.fragment.StarredFragment,boolean) -> access$100
    33:33:com.seafile.seadroid2.ui.activity.BrowserActivity access$200(com.seafile.seadroid2.ui.fragment.StarredFragment) -> access$200
    33:33:com.seafile.seadroid2.data.DataManager access$300(com.seafile.seadroid2.ui.fragment.StarredFragment) -> access$300
    33:33:androidx.swiperefreshlayout.widget.SwipeRefreshLayout access$400(com.seafile.seadroid2.ui.fragment.StarredFragment) -> access$400
    33:33:void access$500(com.seafile.seadroid2.ui.fragment.StarredFragment,java.lang.String) -> access$500
    33:33:void access$600(com.seafile.seadroid2.ui.fragment.StarredFragment,java.util.List) -> access$600
    33:33:com.seafile.seadroid2.ui.adapter.StarredItemAdapter access$700(com.seafile.seadroid2.ui.fragment.StarredFragment) -> access$700
    33:33:androidx.appcompat.view.ActionMode access$800(com.seafile.seadroid2.ui.fragment.StarredFragment) -> access$800
    33:33:androidx.appcompat.view.ActionMode access$802(com.seafile.seadroid2.ui.fragment.StarredFragment,androidx.appcompat.view.ActionMode) -> access$802
    255:261:void doStarFile(java.lang.String,java.lang.String,java.lang.String) -> doStarFile
    244:249:void doUnStarFile(java.lang.String,java.lang.String) -> doUnStarFile
    56:56:com.seafile.seadroid2.ui.adapter.StarredItemAdapter getAdapter() -> getAdapter
    52:52:com.seafile.seadroid2.data.DataManager getDataManager() -> getDataManager
>>>>>>> rename package name,fix action event info list same time crash
    103:107:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    65:66:void onAttach(android.app.Activity) -> onAttach
    72:90:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    135:136:void onDetach() -> onDetach
    224:234:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    123:125:void onResume() -> onResume
    130:130:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    113:113:void onStart() -> onStart
    118:118:void onStop() -> onStop
<<<<<<< HEAD
=======
    140:141:void refresh() -> refresh
>>>>>>> rename package name,fix action event info list same time crash
    146:161:void refreshView() -> refreshView
    169:177:void showError(java.lang.String) -> showError
    186:202:void showLoading(boolean) -> showLoading
    416:421:void startContextualActionMode(int) -> startContextualActionMode
    426:428:void startContextualActionMode() -> startContextualActionMode
<<<<<<< HEAD
    207:217:void updateAdapterWithStarredFiles(java.util.List) -> updateAdapterWithStarredFiles
    438:443:void updateContextualActionBar() -> updateContextualActionBar
com.seafile.vmoo.ui.fragment.StarredFragment$1 -> com.seafile.vmoo.ui.fragment.StarredFragment$1:
    80:80:void <init>(com.seafile.vmoo.ui.fragment.StarredFragment) -> <init>
    83:83:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.seafile.vmoo.ui.fragment.StarredFragment$2 -> com.seafile.vmoo.ui.fragment.StarredFragment$2:
    90:90:void <init>(com.seafile.vmoo.ui.fragment.StarredFragment) -> <init>
    93:94:void onRefresh() -> onRefresh
com.seafile.vmoo.ui.fragment.StarredFragment$3 -> com.seafile.vmoo.ui.fragment.StarredFragment$3:
    177:177:void <init>(com.seafile.vmoo.ui.fragment.StarredFragment) -> <init>
    180:180:void onClick(android.view.View) -> onClick
com.seafile.vmoo.ui.fragment.StarredFragment$ActionModeCallback -> com.seafile.vmoo.ui.fragment.StarredFragment$ActionModeCallback:
    459:459:void <init>(com.seafile.vmoo.ui.fragment.StarredFragment) -> <init>
    485:494:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    467:470:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    528:535:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
com.seafile.vmoo.ui.fragment.StarredFragment$LoadStarredFilesTask -> com.seafile.vmoo.ui.fragment.StarredFragment$LoadStarredFilesTask:
    270:271:void <init>(com.seafile.vmoo.ui.fragment.StarredFragment,com.seafile.vmoo.data.DataManager) -> <init>
=======
    238:239:void unStarFiles(java.util.List) -> unStarFiles
    207:217:void updateAdapterWithStarredFiles(java.util.List) -> updateAdapterWithStarredFiles
    438:443:void updateContextualActionBar() -> updateContextualActionBar
com.seafile.seadroid2.ui.fragment.StarredFragment$1 -> com.seafile.seadroid2.ui.fragment.StarredFragment$1:
    80:80:void <init>(com.seafile.seadroid2.ui.fragment.StarredFragment) -> <init>
    83:83:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.seafile.seadroid2.ui.fragment.StarredFragment$2 -> com.seafile.seadroid2.ui.fragment.StarredFragment$2:
    90:90:void <init>(com.seafile.seadroid2.ui.fragment.StarredFragment) -> <init>
    93:94:void onRefresh() -> onRefresh
com.seafile.seadroid2.ui.fragment.StarredFragment$3 -> com.seafile.seadroid2.ui.fragment.StarredFragment$3:
    177:177:void <init>(com.seafile.seadroid2.ui.fragment.StarredFragment) -> <init>
    180:180:void onClick(android.view.View) -> onClick
com.seafile.seadroid2.ui.fragment.StarredFragment$ActionModeCallback -> com.seafile.seadroid2.ui.fragment.StarredFragment$ActionModeCallback:
    459:459:void <init>(com.seafile.seadroid2.ui.fragment.StarredFragment) -> <init>
    485:494:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    467:470:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    528:535:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
com.seafile.seadroid2.ui.fragment.StarredFragment$LoadStarredFilesTask -> com.seafile.seadroid2.ui.fragment.StarredFragment$LoadStarredFilesTask:
    270:271:void <init>(com.seafile.seadroid2.ui.fragment.StarredFragment,com.seafile.seadroid2.data.DataManager) -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    264:264:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    284:287:java.util.List doInBackground(java.lang.Void[]) -> doInBackground
    264:264:void onPostExecute(java.lang.Object) -> onPostExecute
    296:324:void onPostExecute(java.util.List) -> onPostExecute
    276:277:void onPreExecute() -> onPreExecute
<<<<<<< HEAD
com.seafile.vmoo.ui.fragment.TransferTaskFragment -> com.seafile.vmoo.ui.fragment.TransferTaskFragment:
    38:114:void <init>() -> <init>
    38:38:androidx.appcompat.view.ActionMode access$000(com.seafile.vmoo.ui.fragment.TransferTaskFragment) -> access$000
    38:38:androidx.appcompat.view.ActionMode access$002(com.seafile.vmoo.ui.fragment.TransferTaskFragment,androidx.appcompat.view.ActionMode) -> access$002
    38:38:void access$100(com.seafile.vmoo.ui.fragment.TransferTaskFragment,boolean) -> access$100
    38:38:void access$200(com.seafile.vmoo.ui.fragment.TransferTaskFragment) -> access$200
    38:38:java.util.List access$300(com.seafile.vmoo.ui.fragment.TransferTaskFragment,java.util.List) -> access$300
=======
com.seafile.seadroid2.ui.fragment.StarredFragment$StarFileTask -> com.seafile.seadroid2.ui.fragment.StarredFragment$StarFileTask:
    333:335:void <init>(com.seafile.seadroid2.ui.fragment.StarredFragment,java.lang.String,java.lang.String) -> <init>
    328:328:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    342:344:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    328:328:void onPostExecute(java.lang.Object) -> onPostExecute
    352:357:void onPostExecute(java.lang.Void) -> onPostExecute
com.seafile.seadroid2.ui.fragment.StarredFragment$UnStarFileTask -> com.seafile.seadroid2.ui.fragment.StarredFragment$UnStarFileTask:
    366:368:void <init>(com.seafile.seadroid2.ui.fragment.StarredFragment,java.lang.String,java.lang.String) -> <init>
    361:361:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    375:377:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    361:361:void onPostExecute(java.lang.Object) -> onPostExecute
    385:393:void onPostExecute(java.lang.Void) -> onPostExecute
com.seafile.seadroid2.ui.fragment.TransferTaskFragment -> com.seafile.seadroid2.ui.fragment.TransferTaskFragment:
    38:114:void <init>() -> <init>
    38:38:androidx.appcompat.view.ActionMode access$000(com.seafile.seadroid2.ui.fragment.TransferTaskFragment) -> access$000
    38:38:androidx.appcompat.view.ActionMode access$002(com.seafile.seadroid2.ui.fragment.TransferTaskFragment,androidx.appcompat.view.ActionMode) -> access$002
    38:38:void access$100(com.seafile.seadroid2.ui.fragment.TransferTaskFragment,boolean) -> access$100
    38:38:void access$200(com.seafile.seadroid2.ui.fragment.TransferTaskFragment) -> access$200
    38:38:java.util.List access$300(com.seafile.seadroid2.ui.fragment.TransferTaskFragment,java.util.List) -> access$300
>>>>>>> rename package name,fix action event info list same time crash
    83:86:java.util.List convertToTaskIds(java.util.List) -> convertToTaskIds
    96:99:void deselectItems() -> deselectItems
    58:58:androidx.appcompat.view.ActionMode getActionMode() -> getActionMode
    108:110:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    53:54:void onAttach(android.app.Activity) -> onAttach
    63:78:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    211:216:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    142:144:void onResume() -> onResume
    149:152:void onStart() -> onStart
    159:163:void onStop() -> onStop
    187:205:void showLoading(boolean) -> showLoading
    169:170:void startTimer() -> startTimer
    183:183:void stopTimer() -> stopTimer
    224:235:void updateContextualActionBar() -> updateContextualActionBar
<<<<<<< HEAD
com.seafile.vmoo.ui.fragment.TransferTaskFragment$1 -> com.seafile.vmoo.ui.fragment.TransferTaskFragment$1:
    65:65:void <init>(com.seafile.vmoo.ui.fragment.TransferTaskFragment) -> <init>
    68:69:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.seafile.vmoo.ui.fragment.TransferTaskFragment$2 -> com.seafile.vmoo.ui.fragment.TransferTaskFragment$2:
    114:114:void <init>(com.seafile.vmoo.ui.fragment.TransferTaskFragment) -> <init>
    118:126:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    132:132:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.vmoo.ui.fragment.TransferTaskFragment$3 -> com.seafile.vmoo.ui.fragment.TransferTaskFragment$3:
    170:170:void <init>(com.seafile.vmoo.ui.fragment.TransferTaskFragment) -> <init>
    174:177:void run() -> run
com.seafile.vmoo.ui.fragment.TransferTaskFragment$ActionModeCallback -> com.seafile.vmoo.ui.fragment.TransferTaskFragment$ActionModeCallback:
    251:251:void <init>(com.seafile.vmoo.ui.fragment.TransferTaskFragment) -> <init>
    277:295:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    257:262:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    334:341:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
com.seafile.vmoo.ui.fragment.UploadTaskFragment -> com.seafile.vmoo.ui.fragment.UploadTaskFragment:
=======
com.seafile.seadroid2.ui.fragment.TransferTaskFragment$1 -> com.seafile.seadroid2.ui.fragment.TransferTaskFragment$1:
    65:65:void <init>(com.seafile.seadroid2.ui.fragment.TransferTaskFragment) -> <init>
    68:69:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.seafile.seadroid2.ui.fragment.TransferTaskFragment$2 -> com.seafile.seadroid2.ui.fragment.TransferTaskFragment$2:
    114:114:void <init>(com.seafile.seadroid2.ui.fragment.TransferTaskFragment) -> <init>
    118:126:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    132:132:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.seafile.seadroid2.ui.fragment.TransferTaskFragment$3 -> com.seafile.seadroid2.ui.fragment.TransferTaskFragment$3:
    170:170:void <init>(com.seafile.seadroid2.ui.fragment.TransferTaskFragment) -> <init>
    174:177:void run() -> run
com.seafile.seadroid2.ui.fragment.TransferTaskFragment$ActionModeCallback -> com.seafile.seadroid2.ui.fragment.TransferTaskFragment$ActionModeCallback:
    251:251:void <init>(com.seafile.seadroid2.ui.fragment.TransferTaskFragment) -> <init>
    277:295:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    257:262:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    334:341:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
com.seafile.seadroid2.ui.fragment.UploadTaskFragment -> com.seafile.seadroid2.ui.fragment.UploadTaskFragment:
>>>>>>> rename package name,fix action event info list same time crash
    16:16:void <init>() -> <init>
    106:107:void cancelUploadTasks() -> cancelUploadTasks
    112:113:void cancelUploadTasksByIds(java.util.List) -> cancelUploadTasksByIds
    126:127:void deleteSelectedItems(java.util.List) -> deleteSelectedItems
    29:29:java.util.List getTransferTaskInfos() -> getTransferTaskInfos
    42:42:boolean isNeedUpdateProgress() -> isNeedUpdateProgress
    21:23:void onActivityCreated(android.os.Bundle) -> onActivityCreated
<<<<<<< HEAD
    83:86:void removeAllUploadTasks() -> removeAllUploadTasks
    118:119:void removeUploadTasksByIds(java.util.List) -> removeUploadTasksByIds
    132:133:void restartSelectedItems(java.util.List) -> restartSelectedItems
    65:66:void restartTasksByIds(java.util.List) -> restartTasksByIds
    34:37:void setUpTransferList() -> setUpTransferList
com.seafile.vmoo.ui.widget.CircleImageView -> com.seafile.vmoo.ui.widget.CircleImageView:
=======
    74:75:void removeAllFailedUploadTasks() -> removeAllFailedUploadTasks
    94:95:void removeAllFinishedUploadTasks() -> removeAllFinishedUploadTasks
    83:86:void removeAllUploadTasks() -> removeAllUploadTasks
    118:119:void removeUploadTasksByIds(java.util.List) -> removeUploadTasksByIds
    59:60:void restartAllCancelledTasks() -> restartAllCancelledTasks
    132:133:void restartSelectedItems(java.util.List) -> restartSelectedItems
    65:66:void restartTasksByIds(java.util.List) -> restartTasksByIds
    50:51:void retryAllFailedTasks() -> retryAllFailedTasks
    34:37:void setUpTransferList() -> setUpTransferList
com.seafile.seadroid2.ui.widget.CircleImageView -> com.seafile.seadroid2.ui.widget.CircleImageView:
>>>>>>> rename package name,fix action event info list same time crash
    28:30:void <clinit>() -> <clinit>
    58:44:void <init>(android.content.Context) -> <init>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:182:android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.Drawable) -> getBitmapFromDrawable
    115:115:int getBorderColor() -> getBorderColor
    129:129:int getBorderWidth() -> getBorderWidth
    86:86:android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    98:104:void onDraw(android.graphics.Canvas) -> onDraw
    110:111:void onSizeChanged(int,int,int,int) -> onSizeChanged
    119:125:void setBorderColor(int) -> setBorderColor
    133:138:void setBorderWidth(int) -> setBorderWidth
    143:145:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    150:152:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    157:159:void setImageResource(int) -> setImageResource
    91:92:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    190:219:void setup() -> setup
    227:240:void updateShaderMatrix() -> updateShaderMatrix
<<<<<<< HEAD
com.seafile.vmoo.util.ConcurrentAsyncTask -> com.seafile.vmoo.util.ConcurrentAsyncTask:
    75:75:void <clinit>() -> <clinit>
    78:81:void execute(android.os.AsyncTask,java.lang.Object[]) -> execute
    87:87:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    92:92:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
com.seafile.vmoo.util.ConcurrentAsyncTask$SeadroidThreadPoolExecutor -> com.seafile.vmoo.util.ConcurrentAsyncTask$SeadroidThreadPoolExecutor:
    33:39:void <clinit>() -> <clinit>
    48:48:void <init>() -> <init>
    54:71:void afterExecute(java.lang.Runnable,java.lang.Throwable) -> afterExecute
com.seafile.vmoo.util.ConcurrentAsyncTask$SeadroidThreadPoolExecutor$1 -> com.seafile.vmoo.util.ConcurrentAsyncTask$SeadroidThreadPoolExecutor$1:
    39:40:void <init>() -> <init>
    43:43:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.seafile.vmoo.util.FileMimeUtils -> com.seafile.vmoo.util.FileMimeUtils:
    16:45:void <clinit>() -> <clinit>
    55:60:java.lang.String getMimeType(java.io.File) -> getMimeType
    50:50:boolean isOfficeOrTextFile(java.lang.String) -> isOfficeOrTextFile
com.seafile.vmoo.util.PinyinSource -> com.seafile.vmoo.util.PinyinSource:
    105:107:java.io.File getFile(android.content.Context) -> getFile
    33:65:java.lang.String getSource() -> getSource
    77:94:boolean toFile(android.content.Context) -> toFile
com.seafile.vmoo.util.PinyinUtils -> com.seafile.vmoo.util.PinyinUtils:
    83:116:java.lang.String toPinyin(android.content.Context,java.lang.String) -> toPinyin
com.seafile.vmoo.util.Utils -> com.seafile.vmoo.util.Utils:
    487:503:void <clinit>() -> <clinit>
    653:661:java.lang.String assembleUserName(java.lang.String,java.lang.String,java.lang.String) -> assembleUserName
    674:682:java.lang.String cleanServerURL(java.lang.String) -> cleanServerURL
    473:483:void copyFile(java.io.File,java.io.File) -> copyFile
    839:839:int dip2px(android.content.Context,float) -> dip2px
    173:177:java.lang.String fileNameFromPath(java.lang.String) -> fileNameFromPath
    716:726:java.util.List getAppsByIntent(android.content.Intent) -> getAppsByIntent
    276:287:int getFileIcon(java.lang.String) -> getFileIcon
    512:538:java.util.List getFileList(java.lang.String,java.util.List) -> getFileList
    454:459:java.lang.String getFileMimeType(java.lang.String) -> getFileMimeType
=======
com.seafile.seadroid2.util.ConcurrentAsyncTask -> com.seafile.seadroid2.util.ConcurrentAsyncTask:
    75:75:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    78:81:void execute(android.os.AsyncTask,java.lang.Object[]) -> execute
    87:87:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    92:92:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
com.seafile.seadroid2.util.ConcurrentAsyncTask$SeadroidThreadPoolExecutor -> com.seafile.seadroid2.util.ConcurrentAsyncTask$SeadroidThreadPoolExecutor:
    33:39:void <clinit>() -> <clinit>
    48:48:void <init>() -> <init>
    54:71:void afterExecute(java.lang.Runnable,java.lang.Throwable) -> afterExecute
com.seafile.seadroid2.util.ConcurrentAsyncTask$SeadroidThreadPoolExecutor$1 -> com.seafile.seadroid2.util.ConcurrentAsyncTask$SeadroidThreadPoolExecutor$1:
    39:40:void <init>() -> <init>
    43:43:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.seafile.seadroid2.util.FileMimeUtils -> com.seafile.seadroid2.util.FileMimeUtils:
    16:45:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    55:60:java.lang.String getMimeType(java.io.File) -> getMimeType
    50:50:boolean isOfficeOrTextFile(java.lang.String) -> isOfficeOrTextFile
com.seafile.seadroid2.util.PinyinSource -> com.seafile.seadroid2.util.PinyinSource:
    30:30:void <init>() -> <init>
    105:107:java.io.File getFile(android.content.Context) -> getFile
    33:65:java.lang.String getSource() -> getSource
    77:94:boolean toFile(android.content.Context) -> toFile
com.seafile.seadroid2.util.PinyinUtils -> com.seafile.seadroid2.util.PinyinUtils:
    34:34:void <init>() -> <init>
    44:67:java.lang.String toPinyin(android.content.Context,char) -> toPinyin
    83:116:java.lang.String toPinyin(android.content.Context,java.lang.String) -> toPinyin
com.seafile.seadroid2.util.Utils -> com.seafile.seadroid2.util.Utils:
    487:503:void <clinit>() -> <clinit>
    87:87:void <init>() -> <init>
    653:661:java.lang.String assembleUserName(java.lang.String,java.lang.String,java.lang.String) -> assembleUserName
    612:623:int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> calculateInSampleSize
    674:682:java.lang.String cleanServerURL(java.lang.String) -> cleanServerURL
    473:483:void copyFile(java.io.File,java.io.File) -> copyFile
    547:557:android.content.Intent createGetContentIntent() -> createGetContentIntent
    636:646:android.graphics.Bitmap decodeSampledBitmapFromStream(java.io.InputStream,int,int) -> decodeSampledBitmapFromStream
    839:839:int dip2px(android.content.Context,float) -> dip2px
    173:177:java.lang.String fileNameFromPath(java.lang.String) -> fileNameFromPath
    716:726:java.util.List getAppsByIntent(android.content.Intent) -> getAppsByIntent
    400:400:java.lang.String getCurrentHourMinute() -> getCurrentHourMinute
    276:287:int getFileIcon(java.lang.String) -> getFileIcon
    512:538:java.util.List getFileList(java.lang.String,java.util.List) -> getFileList
    454:459:java.lang.String getFileMimeType(java.lang.String) -> getFileMimeType
    469:469:java.lang.String getFileMimeType(java.io.File) -> getFileMimeType
>>>>>>> rename package name,fix action event info list same time crash
    564:575:java.lang.String getFilenamefromUri(android.content.Context,android.net.Uri) -> getFilenamefromUri
    155:164:java.lang.String getParentPath(java.lang.String) -> getParentPath
    581:597:java.lang.String getPath(android.content.Context,android.net.Uri) -> getPath
    228:252:int getResIdforMimetype(java.lang.String) -> getResIdforMimetype
<<<<<<< HEAD
    263:272:java.util.HashMap getSuffixIconMap() -> getSuffixIconMap
=======
    604:607:java.lang.String getStackTrace(java.lang.Exception) -> getStackTrace
    263:272:java.util.HashMap getSuffixIconMap() -> getSuffixIconMap
    687:694:android.content.pm.ResolveInfo getWeChatIntent(android.content.Intent) -> getWeChatIntent
>>>>>>> rename package name,fix action event info list same time crash
    769:778:java.security.cert.X509Certificate getX509CertFromSslCertHack(android.net.http.SslCertificate) -> getX509CertFromSslCertHack
    203:219:java.util.TreeMap groupRepos(java.util.List) -> groupRepos
    668:669:void hideSoftKeyboard(android.view.View) -> hideSoftKeyboard
    852:859:void hideSystemNavigationBar(android.app.Activity) -> hideSystemNavigationBar
    753:757:boolean isFastTapping() -> isFastTapping
<<<<<<< HEAD
=======
    707:713:boolean isInChina() -> isInChina
>>>>>>> rename package name,fix action event info list same time crash
    334:346:boolean isNetworkOn() -> isNetworkOn
    792:798:boolean isSameCert(android.net.http.SslCertificate,java.security.cert.X509Certificate) -> isSameCert
    318:324:boolean isTextFile(java.io.File) -> isTextFile
    738:740:boolean isTextMimeType(java.lang.String) -> isTextMimeType
<<<<<<< HEAD
=======
    734:734:boolean isValidEmail(java.lang.CharSequence) -> isValidEmail
>>>>>>> rename package name,fix action event info list same time crash
    307:313:boolean isVideoFile(java.lang.String) -> isVideoFile
    291:301:boolean isViewableImage(java.lang.String) -> isViewableImage
    354:359:boolean isWiFiOn() -> isWiFiOn
    450:450:long now() -> now
    113:115:org.json.JSONArray parseJsonArray(java.lang.String) -> parseJsonArray
    104:106:org.json.JSONArray parseJsonArrayByKey(java.lang.String,java.lang.String) -> parseJsonArrayByKey
    92:97:org.json.JSONObject parseJsonObject(java.lang.String) -> parseJsonObject
    366:380:java.lang.String pathJoin(java.lang.String,java.lang.String[]) -> pathJoin
<<<<<<< HEAD
=======
    844:844:int px2dip(android.content.Context,float) -> px2dip
>>>>>>> rename package name,fix action event info list same time crash
    125:145:java.lang.String readFile(java.io.File) -> readFile
    182:184:java.lang.String readableFileSize(long) -> readableFileSize
    384:388:java.lang.String removeLastPathSeperator(java.lang.String) -> removeLastPathSeperator
    396:396:java.lang.String stripSlashes(java.lang.String) -> stripSlashes
    407:434:java.lang.String translateCommitTime(long) -> translateCommitTime
<<<<<<< HEAD
    190:198:void writeFile(java.io.File,java.lang.String) -> writeFile
com.seafile.vmoo.util.Utils$1 -> com.seafile.vmoo.util.Utils$1:
    487:487:void <init>() -> <init>
    487:487:int compare(java.lang.Object,java.lang.Object) -> compare
    490:490:int compare(com.seafile.vmoo.fileschooser.SelectableFile,com.seafile.vmoo.fileschooser.SelectableFile) -> compare
com.seafile.vmoo.util.Utils$2 -> com.seafile.vmoo.util.Utils$2:
    495:495:void <init>() -> <init>
    497:499:boolean accept(java.io.File) -> accept
com.seafile.vmoo.util.Utils$3 -> com.seafile.vmoo.util.Utils$3:
    503:503:void <init>() -> <init>
    505:507:boolean accept(java.io.File) -> accept
com.seafile.vmoo.util.Utils$SslCertificateComparator -> com.seafile.vmoo.util.Utils$SslCertificateComparator:
    811:814:boolean compare(android.net.http.SslCertificate,android.net.http.SslCertificate) -> compare
    834:834:boolean isSameDN(android.net.http.SslCertificate$DName,android.net.http.SslCertificate$DName) -> isSameDN
    824:824:boolean isSameDate(java.util.Date,java.util.Date) -> isSameDate
com.seafile.vmoo.util.UtilsJellyBean -> com.seafile.vmoo.util.UtilsJellyBean:
=======
    442:445:java.lang.String translateTime() -> translateTime
    190:198:void writeFile(java.io.File,java.lang.String) -> writeFile
com.seafile.seadroid2.util.Utils$1 -> com.seafile.seadroid2.util.Utils$1:
    487:487:void <init>() -> <init>
    487:487:int compare(java.lang.Object,java.lang.Object) -> compare
    490:490:int compare(com.seafile.seadroid2.fileschooser.SelectableFile,com.seafile.seadroid2.fileschooser.SelectableFile) -> compare
com.seafile.seadroid2.util.Utils$2 -> com.seafile.seadroid2.util.Utils$2:
    495:495:void <init>() -> <init>
    497:499:boolean accept(java.io.File) -> accept
com.seafile.seadroid2.util.Utils$3 -> com.seafile.seadroid2.util.Utils$3:
    503:503:void <init>() -> <init>
    505:507:boolean accept(java.io.File) -> accept
com.seafile.seadroid2.util.Utils$SslCertificateComparator -> com.seafile.seadroid2.util.Utils$SslCertificateComparator:
    807:807:void <init>() -> <init>
    811:814:boolean compare(android.net.http.SslCertificate,android.net.http.SslCertificate) -> compare
    834:834:boolean isSameDN(android.net.http.SslCertificate$DName,android.net.http.SslCertificate$DName) -> isSameDN
    824:824:boolean isSameDate(java.util.Date,java.util.Date) -> isSameDate
com.seafile.seadroid2.util.UtilsJellyBean -> com.seafile.seadroid2.util.UtilsJellyBean:
    16:16:void <init>() -> <init>
>>>>>>> rename package name,fix action event info list same time crash
    19:31:java.util.List extractUriListFromIntent(android.content.Intent) -> extractUriListFromIntent
com.shuyu.gsyvideoplayer.BuildConfig -> com.shuyu.gsyvideoplayer.BuildConfig:
    6:6:void <init>() -> <init>
com.shuyu.gsyvideoplayer.GSYBaseActivityDetail -> com.shuyu.gsyvideoplayer.GSYBaseActivityDetail:
    18:18:void <init>() -> <init>
    37:41:void initVideo() -> initVideo
    59:62:void initVideoBuilderMode() -> initVideoBuilderMode
    67:73:void onBackPressed() -> onBackPressed
    103:106:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    28:28:void onCreate(android.os.Bundle) -> onCreate
    93:98:void onDestroy() -> onDestroy
    79:81:void onPause() -> onPause
    113:114:void onPrepared(java.lang.String,java.lang.Object[]) -> onPrepared
    173:174:void onQuitFullscreen(java.lang.String,java.lang.Object[]) -> onQuitFullscreen
    86:88:void onResume() -> onResume
com.shuyu.gsyvideoplayer.GSYBaseActivityDetail$1 -> com.shuyu.gsyvideoplayer.GSYBaseActivityDetail$1:
    41:41:void <init>(com.shuyu.gsyvideoplayer.GSYBaseActivityDetail) -> <init>
    45:49:void onClick(android.view.View) -> onClick
com.shuyu.gsyvideoplayer.GSYPreViewManager -> com.shuyu.gsyvideoplayer.GSYPreViewManager:
    49:56:void <init>() -> <init>
    25:25:void access$000(com.shuyu.gsyvideoplayer.GSYPreViewManager,android.os.Message) -> access$000
    25:25:void access$100(com.shuyu.gsyvideoplayer.GSYPreViewManager,android.os.Message) -> access$100
    25:25:tv.danmaku.ijk.media.player.IjkMediaPlayer access$200(com.shuyu.gsyvideoplayer.GSYPreViewManager) -> access$200
    157:157:tv.danmaku.ijk.media.player.IjkMediaPlayer getMediaPlayer() -> getMediaPlayer
    102:107:void initIJKPlayer(android.os.Message) -> initIJKPlayer
    86:97:void initVideo(android.os.Message) -> initVideo
    43:46:com.shuyu.gsyvideoplayer.GSYPreViewManager instance() -> instance
    161:161:boolean isSeekToComplete() -> isSeekToComplete
    125:126:void onPrepared(tv.danmaku.ijk.media.player.IMediaPlayer) -> onPrepared
    131:131:void onSeekComplete(tv.danmaku.ijk.media.player.IMediaPlayer) -> onSeekComplete
    135:140:void prepare(java.lang.String,java.util.Map,boolean,float) -> prepare
    144:146:void releaseMediaPlayer() -> releaseMediaPlayer
    150:153:void setDisplay(android.view.Surface) -> setDisplay
    165:165:void setSeekToComplete(boolean) -> setSeekToComplete
    112:117:void showDisplay(android.os.Message) -> showDisplay
com.shuyu.gsyvideoplayer.GSYPreViewManager$MediaHandler -> com.shuyu.gsyvideoplayer.GSYPreViewManager$MediaHandler:
    60:61:void <init>(com.shuyu.gsyvideoplayer.GSYPreViewManager,android.os.Looper) -> <init>
    66:69:void handleMessage(android.os.Message) -> handleMessage
com.shuyu.gsyvideoplayer.GSYRenderView -> com.shuyu.gsyvideoplayer.GSYRenderView:
    35:35:void <init>() -> <init>
    260:286:void addGLView(android.content.Context,android.view.ViewGroup,int,com.shuyu.gsyvideoplayer.GSYVideoGLView$onGSYSurfaceListener,com.shuyu.gsyvideoplayer.GSYVideoGLView$ShaderInterface,float[],com.shuyu.gsyvideoplayer.render.GSYVideoGLViewBaseRender) -> addGLView
    231:249:void addSurfaceView(android.content.Context,android.view.ViewGroup,int,android.view.SurfaceHolder$Callback2) -> addSurfaceView
    205:223:void addTextureView(android.content.Context,android.view.ViewGroup,int,android.view.TextureView$SurfaceTextureListener) -> addTextureView
    68:68:int getHeight() -> getHeight
    168:168:android.view.ViewGroup$LayoutParams getLayoutParams() -> getLayoutParams
    51:51:float getRotation() -> getRotation
    72:72:android.view.View getShowView() -> getShowView
    296:296:int getTextureParams() -> getTextureParams
    64:64:int getWidth() -> getWidth
    79:83:android.graphics.Bitmap initCover() -> initCover
    92:96:android.graphics.Bitmap initCoverHigh() -> initCoverHigh
    60:60:void invalidate() -> invalidate
    185:188:void onPause() -> onPause
    177:180:void onResume() -> onResume
    193:196:void releaseAll() -> releaseAll
    46:47:void requestLayout() -> requestLayout
    134:134:void saveFrame(java.io.File,com.shuyu.gsyvideoplayer.listener.GSYVideoShotSaveListener) -> saveFrame
    143:162:void saveFrame(java.io.File,boolean,com.shuyu.gsyvideoplayer.listener.GSYVideoShotSaveListener) -> saveFrame
    172:173:void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
    55:56:void setRotation(float) -> setRotation
    40:41:void setTransform(android.graphics.Matrix) -> setTransform
    105:105:void taskShotPic(com.shuyu.gsyvideoplayer.listener.GSYVideoShotListener) -> taskShotPic
    116:124:void taskShotPic(com.shuyu.gsyvideoplayer.listener.GSYVideoShotListener,boolean) -> taskShotPic
com.shuyu.gsyvideoplayer.GSYRenderView$1 -> com.shuyu.gsyvideoplayer.GSYRenderView$1:
    143:143:void <init>(com.shuyu.gsyvideoplayer.GSYRenderView,com.shuyu.gsyvideoplayer.listener.GSYVideoShotSaveListener,java.io.File) -> <init>
    147:150:void getBitmap(android.graphics.Bitmap) -> getBitmap
com.shuyu.gsyvideoplayer.GSYSurfaceView -> com.shuyu.gsyvideoplayer.GSYSurfaceView:
    18:19:void <init>(android.content.Context) -> <init>
    23:24:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    56:56:int getSizeH() -> getSizeH
    60:60:int getSizeW() -> getSizeW
    28:28:void init() -> init
    33:52:void onMeasure(int,int) -> onMeasure
com.shuyu.gsyvideoplayer.GSYTextureView -> com.shuyu.gsyvideoplayer.GSYTextureView:
    21:22:void <init>(android.content.Context) -> <init>
    26:27:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:58:int getSizeH() -> getSizeH
    62:62:int getSizeW() -> getSizeW
    31:31:void init() -> init
    36:54:void onMeasure(int,int) -> onMeasure
com.shuyu.gsyvideoplayer.GSYVideoGLView -> com.shuyu.gsyvideoplayer.GSYVideoGLView:
    48:49:void <init>(android.content.Context) -> <init>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    132:132:int getSizeH() -> getSizeH
    136:136:int getSizeW() -> getSizeW
    58:62:void init(android.content.Context) -> init
    66:66:void initRender() -> initRender
    110:128:void onMeasure(int,int) -> onMeasure
    140:141:void releaseAll() -> releaseAll
    76:77:void setCustomRenderer(com.shuyu.gsyvideoplayer.render.GSYVideoGLViewBaseRender) -> setCustomRenderer
    87:88:void setEffect(com.shuyu.gsyvideoplayer.GSYVideoGLView$ShaderInterface) -> setEffect
    81:82:void setGSYSurfaceListener(com.shuyu.gsyvideoplayer.GSYVideoGLView$onGSYSurfaceListener) -> setGSYSurfaceListener
    105:105:void setGSYVideoShotListener(com.shuyu.gsyvideoplayer.listener.GSYVideoShotListener,boolean) -> setGSYVideoShotListener
    94:95:void setMVPMatrix(float[]) -> setMVPMatrix
    100:100:void takeShotPic() -> takeShotPic
com.shuyu.gsyvideoplayer.GSYVideoManager -> com.shuyu.gsyvideoplayer.GSYVideoManager:
    259:265:void <init>(tv.danmaku.ijk.media.player.IjkLibLoader) -> <init>
    47:47:void access$000(com.shuyu.gsyvideoplayer.GSYVideoManager,android.os.Message) -> access$000
    47:47:void access$100(com.shuyu.gsyvideoplayer.GSYVideoManager,android.os.Message) -> access$100
    47:47:tv.danmaku.ijk.media.player.IMediaPlayer access$200(com.shuyu.gsyvideoplayer.GSYVideoManager) -> access$200
    47:47:com.danikula.videocache.HttpProxyCacheServer access$300(com.shuyu.gsyvideoplayer.GSYVideoManager) -> access$300
    47:47:int access$400(com.shuyu.gsyvideoplayer.GSYVideoManager) -> access$400
    47:47:int access$402(com.shuyu.gsyvideoplayer.GSYVideoManager,int) -> access$402
    47:47:void access$500(com.shuyu.gsyvideoplayer.GSYVideoManager) -> access$500
    47:47:java.lang.ref.WeakReference access$600(com.shuyu.gsyvideoplayer.GSYVideoManager) -> access$600
    47:47:boolean access$700(com.shuyu.gsyvideoplayer.GSYVideoManager) -> access$700
    47:47:void access$800(com.shuyu.gsyvideoplayer.GSYVideoManager) -> access$800
    399:402:void cancelTimeOutBuffer() -> cancelTimeOutBuffer
    145:146:void clearAllDefaultCache(android.content.Context) -> clearAllDefaultCache
    153:162:void clearDefaultCache(android.content.Context,java.lang.String) -> clearDefaultCache
    602:602:int getCurrentVideoHeight() -> getCurrentVideoHeight
    598:598:int getCurrentVideoWidth() -> getCurrentVideoWidth
    136:136:tv.danmaku.ijk.media.player.IjkLibLoader getIjkLibLoader() -> getIjkLibLoader
    606:606:int getLastState() -> getLastState
    591:592:tv.danmaku.ijk.media.player.IMediaPlayer getMediaPlayer() -> getMediaPlayer
    643:643:java.util.List getOptionModelList() -> getOptionModelList
    630:630:int getPlayPosition() -> getPlayPosition
    622:622:java.lang.String getPlayTag() -> getPlayTag
    174:194:com.danikula.videocache.HttpProxyCacheServer getProxy(android.content.Context,java.io.File) -> getProxy
    203:205:com.danikula.videocache.HttpProxyCacheServer getProxy(android.content.Context) -> getProxy
    681:681:int getTimeOut() -> getTimeOut
    639:639:int getVideoType() -> getVideoType
    361:366:void initEXOPlayer(android.os.Message) -> initEXOPlayer
    371:377:void initIJKOption(tv.danmaku.ijk.media.player.IjkMediaPlayer) -> initIJKOption
    328:356:void initIJKPlayer(android.os.Message) -> initIJKPlayer
    302:323:void initVideo(android.os.Message) -> initVideo
    121:124:com.shuyu.gsyvideoplayer.GSYVideoManager instance() -> instance
    663:663:boolean isNeedMute() -> isNeedMute
    685:685:boolean isNeedTimeOutOther() -> isNeedTimeOutOther
    237:239:com.shuyu.gsyvideoplayer.listener.GSYMediaPlayerListener lastListener() -> lastListener
    231:233:com.shuyu.gsyvideoplayer.listener.GSYMediaPlayerListener listener() -> listener
    212:218:com.danikula.videocache.HttpProxyCacheServer newProxy(android.content.Context,java.io.File) -> newProxy
    226:226:com.danikula.videocache.HttpProxyCacheServer newProxy(android.content.Context) -> newProxy
    490:490:void onBufferingUpdate(tv.danmaku.ijk.media.player.IMediaPlayer,int) -> onBufferingUpdate
    568:568:void onCacheAvailable(java.io.File,java.lang.String,int) -> onCacheAvailable
    477:477:void onCompletion(tv.danmaku.ijk.media.player.IMediaPlayer) -> onCompletion
    519:519:boolean onError(tv.danmaku.ijk.media.player.IMediaPlayer,int,int) -> onError
    533:533:boolean onInfo(tv.danmaku.ijk.media.player.IMediaPlayer,int,int) -> onInfo
    575:576:void onPause() -> onPause
    464:464:void onPrepared(tv.danmaku.ijk.media.player.IMediaPlayer) -> onPrepared
    584:585:void onResume() -> onResume
    506:506:void onSeekComplete(tv.danmaku.ijk.media.player.IMediaPlayer) -> onSeekComplete
    553:555:void onVideoSizeChanged(tv.danmaku.ijk.media.player.IMediaPlayer,int,int,int,int) -> onVideoSizeChanged
    436:443:void prepare(java.lang.String,java.util.Map,boolean,float) -> prepare
    448:452:void releaseMediaPlayer() -> releaseMediaPlayer
    614:614:void setCurrentVideoHeight(int) -> setCurrentVideoHeight
    618:618:void setCurrentVideoWidth(int) -> setCurrentVideoWidth
    456:459:void setDisplay(android.view.Surface) -> setDisplay
    132:132:void setIjkLibLoader(tv.danmaku.ijk.media.player.IjkLibLoader) -> setIjkLibLoader
    251:253:void setLastListener(com.shuyu.gsyvideoplayer.listener.GSYMediaPlayerListener) -> setLastListener
    610:610:void setLastState(int) -> setLastState
    244:246:void setListener(com.shuyu.gsyvideoplayer.listener.GSYMediaPlayerListener) -> setListener
    670:675:void setNeedMute(boolean) -> setNeedMute
    650:650:void setOptionModelList(java.util.List) -> setOptionModelList
    634:634:void setPlayPosition(int) -> setPlayPosition
    626:626:void setPlayTag(java.lang.String) -> setPlayTag
    707:708:void setTimeOut(int,boolean) -> setTimeOut
    658:659:void setVideoType(android.content.Context,int) -> setVideoType
    418:428:void showDisplay(android.os.Message) -> showDisplay
    390:391:void startTimeOutBuffer() -> startTimeOutBuffer
com.shuyu.gsyvideoplayer.GSYVideoManager$1 -> com.shuyu.gsyvideoplayer.GSYVideoManager$1:
    330:330:void <init>(com.shuyu.gsyvideoplayer.GSYVideoManager) -> <init>
com.shuyu.gsyvideoplayer.GSYVideoManager$2 -> com.shuyu.gsyvideoplayer.GSYVideoManager$2:
    406:406:void <init>(com.shuyu.gsyvideoplayer.GSYVideoManager) -> <init>
    409:411:void run() -> run
com.shuyu.gsyvideoplayer.GSYVideoManager$3 -> com.shuyu.gsyvideoplayer.GSYVideoManager$3:
    464:464:void <init>(com.shuyu.gsyvideoplayer.GSYVideoManager) -> <init>
    467:469:void run() -> run
com.shuyu.gsyvideoplayer.GSYVideoManager$4 -> com.shuyu.gsyvideoplayer.GSYVideoManager$4:
    477:477:void <init>(com.shuyu.gsyvideoplayer.GSYVideoManager) -> <init>
    480:482:void run() -> run
com.shuyu.gsyvideoplayer.GSYVideoManager$5 -> com.shuyu.gsyvideoplayer.GSYVideoManager$5:
    490:490:void <init>(com.shuyu.gsyvideoplayer.GSYVideoManager,int) -> <init>
    493:497:void run() -> run
com.shuyu.gsyvideoplayer.GSYVideoManager$6 -> com.shuyu.gsyvideoplayer.GSYVideoManager$6:
    506:506:void <init>(com.shuyu.gsyvideoplayer.GSYVideoManager) -> <init>
    509:511:void run() -> run
com.shuyu.gsyvideoplayer.GSYVideoManager$7 -> com.shuyu.gsyvideoplayer.GSYVideoManager$7:
    519:519:void <init>(com.shuyu.gsyvideoplayer.GSYVideoManager,int,int) -> <init>
    522:524:void run() -> run
com.shuyu.gsyvideoplayer.GSYVideoManager$8 -> com.shuyu.gsyvideoplayer.GSYVideoManager$8:
    533:533:void <init>(com.shuyu.gsyvideoplayer.GSYVideoManager,int,int) -> <init>
    536:544:void run() -> run
com.shuyu.gsyvideoplayer.GSYVideoManager$9 -> com.shuyu.gsyvideoplayer.GSYVideoManager$9:
    555:555:void <init>(com.shuyu.gsyvideoplayer.GSYVideoManager) -> <init>
    558:559:void run() -> run
com.shuyu.gsyvideoplayer.GSYVideoManager$MediaHandler -> com.shuyu.gsyvideoplayer.GSYVideoManager$MediaHandler:
    270:271:void <init>(com.shuyu.gsyvideoplayer.GSYVideoManager,android.os.Looper) -> <init>
    276:279:void handleMessage(android.os.Message) -> handleMessage
com.shuyu.gsyvideoplayer.R -> com.shuyu.gsyvideoplayer.R:
    10:10:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$anim -> com.shuyu.gsyvideoplayer.R$anim:
    13:13:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$attr -> com.shuyu.gsyvideoplayer.R$attr:
    27:27:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$bool -> com.shuyu.gsyvideoplayer.R$bool:
    260:260:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$color -> com.shuyu.gsyvideoplayer.R$color:
    266:266:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$dimen -> com.shuyu.gsyvideoplayer.R$dimen:
    329:329:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$drawable -> com.shuyu.gsyvideoplayer.R$drawable:
    396:396:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$id -> com.shuyu.gsyvideoplayer.R$id:
    483:483:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$integer -> com.shuyu.gsyvideoplayer.R$integer:
    624:624:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$layout -> com.shuyu.gsyvideoplayer.R$layout:
    632:632:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$string -> com.shuyu.gsyvideoplayer.R$string:
    676:676:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$style -> com.shuyu.gsyvideoplayer.R$style:
    703:703:void <init>() -> <init>
com.shuyu.gsyvideoplayer.R$styleable -> com.shuyu.gsyvideoplayer.R$styleable:
    988:1267:void <clinit>() -> <clinit>
    986:986:void <init>() -> <init>
com.shuyu.gsyvideoplayer.SmallVideoTouch -> com.shuyu.gsyvideoplayer.SmallVideoTouch:
    18:21:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer,int,int) -> <init>
    26:36:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder -> com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder:
    27:141:void <init>() -> <init>
    477:499:void build(com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer) -> build
    503:547:void build(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer) -> build
    403:403:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setBottomProgressBarDrawable(android.graphics.drawable.Drawable) -> setBottomProgressBarDrawable
    394:395:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setBottomShowProgressBarDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setBottomShowProgressBarDrawable
    361:361:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setCachePath(java.io.File) -> setCachePath
    351:351:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setCacheWithPlay(boolean) -> setCacheWithPlay
    420:420:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setDialogProgressBar(android.graphics.drawable.Drawable) -> setDialogProgressBar
    428:429:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setDialogProgressColor(int,int) -> setDialogProgressColor
    411:411:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setDialogVolumeProgressBar(android.graphics.drawable.Drawable) -> setDialogVolumeProgressBar
    464:464:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setDismissControlTime(int) -> setDismissControlTime
    472:472:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setEffectFilter(com.shuyu.gsyvideoplayer.GSYVideoGLView$ShaderInterface) -> setEffectFilter
    246:246:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setEnlargeImageRes(int) -> setEnlargeImageRes
    209:209:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setHideKey(boolean) -> setHideKey
    218:218:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setIsTouchWiget(boolean) -> setIsTouchWiget
    227:227:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setIsTouchWigetFull(boolean) -> setIsTouchWigetFull
    454:454:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setLockClickListener(com.shuyu.gsyvideoplayer.listener.LockClickListener) -> setLockClickListener
    184:184:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setLockLand(boolean) -> setLockLand
    157:157:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setLooping(boolean) -> setLooping
    371:371:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setMapHeadData(java.util.Map) -> setMapHeadData
    446:446:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setNeedLockFull(boolean) -> setNeedLockFull
    236:236:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setNeedShowWifiTip(boolean) -> setNeedShowWifiTip
    311:311:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setPlayPosition(int) -> setPlayPosition
    302:302:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setPlayTag(java.lang.String) -> setPlayTag
    176:176:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setRotateViewAuto(boolean) -> setRotateViewAuto
    292:292:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setRotateWithSystem(boolean) -> setRotateWithSystem
    321:321:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setSeekOnStart(long) -> setSeekOnStart
    282:282:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setSeekRatio(float) -> setSeekRatio
    149:149:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setShowFullAnimation(boolean) -> setShowFullAnimation
    269:269:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setShowPauseCover(boolean) -> setShowPauseCover
    256:256:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setShrinkImageRes(int) -> setShrinkImageRes
    201:201:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setSoundTouch(boolean) -> setSoundTouch
    192:192:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setSpeed(float) -> setSpeed
    377:377:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setStandardVideoAllCallBack(com.shuyu.gsyvideoplayer.listener.StandardVideoAllCallBack) -> setStandardVideoAllCallBack
    385:385:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setThumbImageView(android.view.View) -> setThumbImageView
    437:437:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setThumbPlay(boolean) -> setThumbPlay
    331:331:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setUrl(java.lang.String) -> setUrl
    168:168:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setVideoAllCallBack(com.shuyu.gsyvideoplayer.listener.VideoAllCallBack) -> setVideoAllCallBack
    341:341:com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder setVideoTitle(java.lang.String) -> setVideoTitle
com.shuyu.gsyvideoplayer.effect.AutoFixEffect -> com.shuyu.gsyvideoplayer.effect.AutoFixEffect:
    21:27:void <init>(float) -> <init>
    33:33:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.BarrelBlurEffect -> com.shuyu.gsyvideoplayer.effect.BarrelBlurEffect:
    17:14:void <init>() -> <init>
    21:22:void <init>(int) -> <init>
    33:33:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
    26:26:void setCountLevel(int) -> setCountLevel
com.shuyu.gsyvideoplayer.effect.BlackAndWhiteEffect -> com.shuyu.gsyvideoplayer.effect.BlackAndWhiteEffect:
    17:17:void <init>() -> <init>
com.shuyu.gsyvideoplayer.effect.BrightnessEffect -> com.shuyu.gsyvideoplayer.effect.BrightnessEffect:
    21:27:void <init>(float) -> <init>
    33:33:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.ContrastEffect -> com.shuyu.gsyvideoplayer.effect.ContrastEffect:
    20:26:void <init>(float) -> <init>
    32:32:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.CrossProcessEffect -> com.shuyu.gsyvideoplayer.effect.CrossProcessEffect:
    19:19:void <init>() -> <init>
com.shuyu.gsyvideoplayer.effect.DocumentaryEffect -> com.shuyu.gsyvideoplayer.effect.DocumentaryEffect:
    23:23:void <init>() -> <init>
    40:66:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
    33:35:void initValues(android.opengl.GLSurfaceView) -> initValues
com.shuyu.gsyvideoplayer.effect.DuotoneEffect -> com.shuyu.gsyvideoplayer.effect.DuotoneEffect:
    27:29:void <init>(int,int) -> <init>
    34:51:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.FillLightEffect -> com.shuyu.gsyvideoplayer.effect.FillLightEffect:
    21:27:void <init>(float) -> <init>
    33:41:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.GammaEffect -> com.shuyu.gsyvideoplayer.effect.GammaEffect:
    18:23:void <init>(float) -> <init>
    30:30:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.GaussianBlurEffect -> com.shuyu.gsyvideoplayer.effect.GaussianBlurEffect:
    22:23:void <init>(float) -> <init>
    26:30:void <init>(float,int) -> <init>
    44:44:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.GrainEffect -> com.shuyu.gsyvideoplayer.effect.GrainEffect:
    27:32:void <init>(float) -> <init>
    48:60:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
    41:43:void initValues(android.opengl.GLSurfaceView) -> initValues
com.shuyu.gsyvideoplayer.effect.GreyScaleEffect -> com.shuyu.gsyvideoplayer.effect.GreyScaleEffect:
    17:17:void <init>() -> <init>
com.shuyu.gsyvideoplayer.effect.HueEffect -> com.shuyu.gsyvideoplayer.effect.HueEffect:
    21:23:void <init>(float) -> <init>
    30:30:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.InvertColorsEffect -> com.shuyu.gsyvideoplayer.effect.InvertColorsEffect:
    17:17:void <init>() -> <init>
com.shuyu.gsyvideoplayer.effect.LamoishEffect -> com.shuyu.gsyvideoplayer.effect.LamoishEffect:
    23:23:void <init>() -> <init>
    40:68:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
    33:35:void initValues(android.opengl.GLSurfaceView) -> initValues
com.shuyu.gsyvideoplayer.effect.NoEffect -> com.shuyu.gsyvideoplayer.effect.NoEffect:
    17:17:void <init>() -> <init>
com.shuyu.gsyvideoplayer.effect.OverlayEffect -> com.shuyu.gsyvideoplayer.effect.OverlayEffect:
    17:14:void <init>() -> <init>
    20:21:void <init>(float) -> <init>
    26:26:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.PosterizeEffect -> com.shuyu.gsyvideoplayer.effect.PosterizeEffect:
    17:17:void <init>() -> <init>
com.shuyu.gsyvideoplayer.effect.SampleBlurEffect -> com.shuyu.gsyvideoplayer.effect.SampleBlurEffect:
    17:14:void <init>() -> <init>
    20:21:void <init>(float) -> <init>
    26:26:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.SaturationEffect -> com.shuyu.gsyvideoplayer.effect.SaturationEffect:
    22:24:void <init>(float) -> <init>
    30:55:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.SepiaEffect -> com.shuyu.gsyvideoplayer.effect.SepiaEffect:
    16:16:void <init>() -> <init>
    21:37:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.SharpnessEffect -> com.shuyu.gsyvideoplayer.effect.SharpnessEffect:
    22:28:void <init>(float) -> <init>
    43:49:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
    37:38:void initValues(android.opengl.GLSurfaceView) -> initValues
com.shuyu.gsyvideoplayer.effect.TemperatureEffect -> com.shuyu.gsyvideoplayer.effect.TemperatureEffect:
    21:26:void <init>(float) -> <init>
    33:35:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.TintEffect -> com.shuyu.gsyvideoplayer.effect.TintEffect:
    23:24:void <init>(int) -> <init>
    30:44:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
com.shuyu.gsyvideoplayer.effect.VignetteEffect -> com.shuyu.gsyvideoplayer.effect.VignetteEffect:
    24:29:void <init>(float) -> <init>
    45:71:java.lang.String getShader(android.opengl.GLSurfaceView) -> getShader
    39:40:void initValues(android.opengl.GLSurfaceView) -> initValues
com.shuyu.gsyvideoplayer.ex_so.BuildConfig -> com.shuyu.gsyvideoplayer.ex_so.BuildConfig:
    6:6:void <init>() -> <init>
com.shuyu.gsyvideoplayer.ex_so.CarGuo -> com.shuyu.gsyvideoplayer.ex_so.CarGuo:
    5:5:void <init>() -> <init>
com.shuyu.gsyvideoplayer.ex_so.R -> com.shuyu.gsyvideoplayer.ex_so.R:
    10:10:void <init>() -> <init>
com.shuyu.gsyvideoplayer.ex_so.R$string -> com.shuyu.gsyvideoplayer.ex_so.R$string:
    13:13:void <init>() -> <init>
com.shuyu.gsyvideoplayer.model.GSYModel -> com.shuyu.gsyvideoplayer.model.GSYModel:
    19:23:void <init>(java.lang.String,java.util.Map,boolean,float) -> <init>
    35:35:java.util.Map getMapHeadData() -> getMapHeadData
    51:51:float getSpeed() -> getSpeed
    27:27:java.lang.String getUrl() -> getUrl
    43:43:boolean isLooping() -> isLooping
    47:47:void setLooping(boolean) -> setLooping
    39:39:void setMapHeadData(java.util.Map) -> setMapHeadData
    55:55:void setSpeed(float) -> setSpeed
    31:31:void setUrl(java.lang.String) -> setUrl
com.shuyu.gsyvideoplayer.model.GSYVideoModel -> com.shuyu.gsyvideoplayer.model.GSYVideoModel:
    12:14:void <init>(java.lang.String,java.lang.String) -> <init>
    26:26:java.lang.String getTitle() -> getTitle
    18:18:java.lang.String getUrl() -> getUrl
    30:30:void setTitle(java.lang.String) -> setTitle
    22:22:void setUrl(java.lang.String) -> setUrl
com.shuyu.gsyvideoplayer.model.VideoOptionModel -> com.shuyu.gsyvideoplayer.model.VideoOptionModel:
    25:29:void <init>(int,java.lang.String,int) -> <init>
    33:37:void <init>(int,java.lang.String,java.lang.String) -> <init>
    49:49:int getCategory() -> getCategory
    66:66:java.lang.String getName() -> getName
    57:57:int getValueInt() -> getValueInt
    74:74:java.lang.String getValueString() -> getValueString
    41:41:int getValueType() -> getValueType
    53:53:void setCategory(int) -> setCategory
    70:70:void setName(java.lang.String) -> setName
    61:62:void setValueInt(int) -> setValueInt
    78:79:void setValueString(java.lang.String) -> setValueString
    45:45:void setValueType(int) -> setValueType
com.shuyu.gsyvideoplayer.render.GSYVideoGLViewBaseRender -> com.shuyu.gsyvideoplayer.render.GSYVideoGLViewBaseRender:
    34:37:void <init>() -> <init>
    107:109:void checkGlError(java.lang.String) -> checkGlError
    117:143:android.graphics.Bitmap createBitmapFromGLSurface(int,int,int,int,javax.microedition.khronos.opengles.GL10) -> createBitmapFromGLSurface
    75:98:int createProgram(java.lang.String,java.lang.String) -> createProgram
    57:67:int loadShader(int,java.lang.String) -> loadShader
    51:52:void sendSurfaceForPlayer(android.view.Surface) -> sendSurfaceForPlayer
    149:149:void setGSYSurfaceListener(com.shuyu.gsyvideoplayer.GSYVideoGLView$onGSYSurfaceListener) -> setGSYSurfaceListener
    47:47:void setSurfaceView(android.opengl.GLSurfaceView) -> setSurfaceView
com.shuyu.gsyvideoplayer.render.GSYVideoGLViewSimpleRender -> com.shuyu.gsyvideoplayer.render.GSYVideoGLViewSimpleRender:
    88:96:void <init>() -> <init>
    207:208:void bindDrawFrameTexture() -> bindDrawFrameTexture
    286:286:java.lang.String getFragmentShader() -> getFragmentShader
    270:270:float[] getMVPMatrix() -> getMVPMatrix
    262:262:int getMaPositionHandle() -> getMaPositionHandle
    266:266:int getMaTextureHandle() -> getMaTextureHandle
    254:254:int getMuMVPMatrixHandle() -> getMuMVPMatrixHandle
    258:258:int getMuSTMatrixHandle() -> getMuSTMatrixHandle
    250:250:int getProgram() -> getProgram
    274:274:float[] getSTMatrix() -> getSTMatrix
    278:278:int[] getTextureID() -> getTextureID
    196:202:void initDrawFrame() -> initDrawFrame
    224:245:void initPointerAndDraw() -> initPointerAndDraw
    101:107:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    187:188:void onFrameAvailable(android.graphics.SurfaceTexture) -> onFrameAvailable
    122:122:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    128:136:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    318:318:void setEffect(com.shuyu.gsyvideoplayer.GSYVideoGLView$ShaderInterface) -> setEffect
    307:308:void setGSYVideoShotListener(com.shuyu.gsyvideoplayer.listener.GSYVideoShotListener,boolean) -> setGSYVideoShotListener
    293:293:void setMVPMatrix(float[]) -> setMVPMatrix
    213:217:void takeBitmap(javax.microedition.khronos.opengles.GL10) -> takeBitmap
    300:300:void takeShotPic() -> takeShotPic
com.shuyu.gsyvideoplayer.utils.AnimatedGifEncoder -> com.shuyu.gsyvideoplayer.utils.AnimatedGifEncoder:
    11:55:void <init>() -> <init>
    118:144:boolean addFrame(android.graphics.Bitmap) -> addFrame
    266:291:void analyzePixels() -> analyzePixels
    299:313:int findClosest(int) -> findClosest
    157:179:boolean finish() -> finish
    347:351:int[] getImageData(android.graphics.Bitmap) -> getImageData
    326:342:void getImagePixels() -> getImagePixels
    64:64:void setDelay(int) -> setDelay
    76:76:void setDispose(int) -> setDispose
    192:192:void setFrameRate(float) -> setFrameRate
    237:238:void setPosition(int,int) -> setPosition
    209:209:void setQuality(int) -> setQuality
    90:90:void setRepeat(int) -> setRepeat
    220:226:void setSize(int,int) -> setSize
    104:104:void setTransparent(int) -> setTransparent
    252:259:boolean start(java.io.OutputStream) -> start
    359:383:void writeGraphicCtrlExt() -> writeGraphicCtrlExt
    390:401:void writeImageDesc() -> writeImageDesc
    414:423:void writeLSD() -> writeLSD
    430:437:void writeNetscapeExt() -> writeNetscapeExt
    444:447:void writePalette() -> writePalette
    455:456:void writePixels() -> writePixels
    463:464:void writeShort(int) -> writeShort
    471:472:void writeString(java.lang.String) -> writeString
com.shuyu.gsyvideoplayer.utils.CommonUtil -> com.shuyu.gsyvideoplayer.utils.CommonUtil:
    29:29:void <init>() -> <init>
    246:255:void deleteFile(java.lang.String) -> deleteFile
    192:192:int dip2px(android.content.Context,float) -> dip2px
    97:99:int getActionBarHeight(android.app.Activity) -> getActionBarHeight
    263:266:android.app.Activity getActivityContext(android.content.Context) -> getActivityContext
    179:182:androidx.appcompat.app.AppCompatActivity getAppCompActivity(android.content.Context) -> getAppCompActivity
    273:274:boolean getCurrentScreenLand(android.app.Activity) -> getCurrentScreenLand
    224:227:int getScreenHeight(android.content.Context) -> getScreenHeight
    211:214:int getScreenWidth(android.content.Context) -> getScreenWidth
    82:85:int getStatusBarHeight(android.content.Context) -> getStatusBarHeight
    236:240:java.lang.String getTextSpeed(long) -> getTextSpeed
    151:159:void hideNavKey(android.content.Context) -> hideNavKey
    107:122:void hideSupportActionBar(android.content.Context,boolean,boolean) -> hideSupportActionBar
    48:50:boolean isWifiConnected(android.content.Context) -> isWifiConnected
    200:200:int px2dip(android.content.Context,float) -> px2dip
    65:68:android.app.Activity scanForActivity(android.content.Context) -> scanForActivity
    167:167:void showNavKey(android.content.Context,int) -> showNavKey
    130:145:void showSupportActionBar(android.content.Context,boolean,boolean) -> showSupportActionBar
    34:43:java.lang.String stringForTime(int) -> stringForTime
com.shuyu.gsyvideoplayer.utils.Debuger -> com.shuyu.gsyvideoplayer.utils.Debuger:
    12:12:void <init>() -> <init>
    75:77:void Toast(android.app.Activity,java.lang.String) -> Toast
    23:23:void disable() -> disable
    19:19:void enable() -> enable
    27:27:boolean getDebugMode() -> getDebugMode
    53:55:void printfError(java.lang.String) -> printfError
    60:62:void printfError(java.lang.String,java.lang.String) -> printfError
    67:70:void printfError(java.lang.String,java.lang.Exception) -> printfError
    31:33:void printfLog(java.lang.String,java.lang.String) -> printfLog
    38:38:void printfLog(java.lang.String) -> printfLog
    42:44:void printfWarning(java.lang.String,java.lang.String) -> printfWarning
    49:49:void printfWarning(java.lang.String) -> printfWarning
com.shuyu.gsyvideoplayer.utils.FileUtils -> com.shuyu.gsyvideoplayer.utils.FileUtils:
    14:14:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    44:51:void deleteFiles(java.io.File) -> deleteFiles
    22:27:java.lang.String getAppPath(java.lang.String) -> getAppPath
    31:34:java.lang.String getPath() -> getPath
    40:40:java.lang.String getTestPath() -> getTestPath
    62:66:void saveBitmap(android.graphics.Bitmap,java.io.File) -> saveBitmap
com.shuyu.gsyvideoplayer.utils.GSYVideoType -> com.shuyu.gsyvideoplayer.utils.GSYVideoType:
    7:7:void <init>() -> <init>
    64:64:void disableMediaCodec() -> disableMediaCodec
    78:78:void disableMediaCodecTexture() -> disableMediaCodecTexture
    57:57:void enableMediaCodec() -> enableMediaCodec
    71:71:void enableMediaCodecTexture() -> enableMediaCodecTexture
    108:108:int getRenderType() -> getRenderType
    96:96:int getShowType() -> getShowType
    85:85:boolean isMediaCodec() -> isMediaCodec
    92:92:boolean isMediaCodecTexture() -> isMediaCodecTexture
    117:117:void setRenderType(int) -> setRenderType
    103:103:void setShowType(int) -> setShowType
com.shuyu.gsyvideoplayer.utils.GifCreateHelper -> com.shuyu.gsyvideoplayer.utils.GifCreateHelper:
    54:54:void <init>(com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer,com.shuyu.gsyvideoplayer.listener.GSYVideoGifSaveListener) -> <init>
    64:70:void <init>(com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer,com.shuyu.gsyvideoplayer.listener.GSYVideoGifSaveListener,int,int,int,int) -> <init>
    25:25:java.util.List access$100(com.shuyu.gsyvideoplayer.utils.GifCreateHelper) -> access$100
    25:25:int access$200(com.shuyu.gsyvideoplayer.utils.GifCreateHelper) -> access$200
    25:25:int access$300(com.shuyu.gsyvideoplayer.utils.GifCreateHelper) -> access$300
    25:25:int access$400(com.shuyu.gsyvideoplayer.utils.GifCreateHelper) -> access$400
    25:25:com.shuyu.gsyvideoplayer.listener.GSYVideoGifSaveListener access$500(com.shuyu.gsyvideoplayer.utils.GifCreateHelper) -> access$500
    25:25:boolean access$600(com.shuyu.gsyvideoplayer.utils.GifCreateHelper) -> access$600
    25:25:boolean access$602(com.shuyu.gsyvideoplayer.utils.GifCreateHelper,boolean) -> access$602
    25:25:void access$700(com.shuyu.gsyvideoplayer.utils.GifCreateHelper) -> access$700
    113:115:void cancelTask() -> cancelTask
    150:180:void createGif(java.io.File,java.util.List,int,int,int,com.shuyu.gsyvideoplayer.listener.GSYVideoGifSaveListener) -> createGif
    79:84:void startGif(java.io.File) -> startGif
    124:125:void startSaveBitmap() -> startSaveBitmap
    93:106:void stopGif(java.io.File) -> stopGif
com.shuyu.gsyvideoplayer.utils.GifCreateHelper$1 -> com.shuyu.gsyvideoplayer.utils.GifCreateHelper$1:
    95:95:void <init>(com.shuyu.gsyvideoplayer.utils.GifCreateHelper,java.io.File) -> <init>
    98:103:void run() -> run
com.shuyu.gsyvideoplayer.utils.GifCreateHelper$2 -> com.shuyu.gsyvideoplayer.utils.GifCreateHelper$2:
    125:125:void <init>(com.shuyu.gsyvideoplayer.utils.GifCreateHelper) -> <init>
    128:131:void result(boolean,java.io.File) -> result
com.shuyu.gsyvideoplayer.utils.GifCreateHelper$TaskLocal -> com.shuyu.gsyvideoplayer.utils.GifCreateHelper$TaskLocal:
    189:189:void <init>(com.shuyu.gsyvideoplayer.utils.GifCreateHelper) -> <init>
    189:189:void <init>(com.shuyu.gsyvideoplayer.utils.GifCreateHelper,com.shuyu.gsyvideoplayer.utils.GifCreateHelper$1) -> <init>
    192:194:void run() -> run
com.shuyu.gsyvideoplayer.utils.LZWEncoder -> com.shuyu.gsyvideoplayer.utils.LZWEncoder:
    1089:1093:void <init>(int,int,byte[],int) -> <init>
    1099:1101:void char_out(byte,java.io.OutputStream) -> char_out
    1108:1112:void cl_block(java.io.OutputStream) -> cl_block
    1118:1118:void cl_hash(int) -> cl_hash
    1131:1189:void compress(int,java.io.OutputStream) -> compress
    1194:1201:void encode(java.io.OutputStream) -> encode
    1206:1209:void flush_char(java.io.OutputStream) -> flush_char
    1221:1226:int nextPixel() -> nextPixel
    1232:1270:void output(int,java.io.OutputStream) -> output
com.shuyu.gsyvideoplayer.utils.ListVideoUtil -> com.shuyu.gsyvideoplayer.utils.ListVideoUtil:
    80:82:void <init>(android.content.Context) -> <init>
    36:36:com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer access$000(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$000
    36:36:void access$100(com.shuyu.gsyvideoplayer.utils.ListVideoUtil,com.shuyu.gsyvideoplayer.video.base.GSYVideoPlayer) -> access$100
    36:36:java.lang.String access$1000(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$1000
    36:36:java.lang.String access$1100(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$1100
    36:36:boolean access$1200(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$1200
    36:36:android.content.Context access$1300(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$1300
    36:36:int access$1400(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$1400
    36:36:boolean access$1500(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$1500
    36:36:boolean access$1600(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$1600
    36:36:int[] access$1700(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$1700
    36:36:int[] access$1800(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$1800
    36:36:void access$1900(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$1900
    36:36:android.view.ViewGroup access$200(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$200
    36:36:android.os.Handler access$2000(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$2000
    36:36:void access$300(com.shuyu.gsyvideoplayer.utils.ListVideoUtil,com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer) -> access$300
    36:36:void access$400(com.shuyu.gsyvideoplayer.utils.ListVideoUtil,int) -> access$400
    36:36:boolean access$502(com.shuyu.gsyvideoplayer.utils.ListVideoUtil,boolean) -> access$502
    36:36:com.shuyu.gsyvideoplayer.utils.OrientationUtils access$600(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$600
    36:36:android.view.ViewGroup$LayoutParams access$700(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$700
    36:36:android.view.ViewGroup access$800(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$800
    36:36:com.shuyu.gsyvideoplayer.listener.StandardVideoAllCallBack access$900(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> access$900
    96:108:void addVideoPlayer(int,android.view.View,java.lang.String,android.view.ViewGroup,android.view.View) -> addVideoPlayer
    389:391:boolean backFromFull() -> backFromFull
    571:571:java.io.File getCachePath() -> getCachePath
    601:601:int getCurrentPositionWhenPlaying() -> getCurrentPositionWhenPlaying
    554:554:int getDuration() -> getDuration
    608:608:com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer getGsyVideoPlayer() -> getGsyVideoPlayer
    590:590:java.util.Map getMapHeadData() -> getMapHeadData
    527:527:int getPlayPosition() -> getPlayPosition
    531:531:java.lang.String getPlayTAG() -> getPlayTAG
    559:559:int getSpeed() -> getSpeed
    582:582:java.lang.String getTitle() -> getTitle
    460:460:boolean isAutoRotation() -> isAutoRotation
    381:381:boolean isCurrentViewPlaying(int,java.lang.String) -> isCurrentViewPlaying
    447:447:boolean isFull() -> isFull
    473:473:boolean isFullLandFrist() -> isFullLandFrist
    504:504:boolean isHideActionBar() -> isHideActionBar
    612:612:boolean isHideKey() -> isHideKey
    491:491:boolean isHideStatusBar() -> isHideStatusBar
    540:540:boolean isLoop() -> isLoop
    623:623:boolean isNeedLockFull() -> isNeedLockFull
    634:634:boolean isNeedShowWifiTip() -> isNeedShowWifiTip
    377:377:boolean isPlayView(int,java.lang.String) -> isPlayView
    486:486:boolean isShowFullAnimation() -> isShowFullAnimation
    535:535:boolean isSmall() -> isSmall
    400:406:void releaseVideoPlayer() -> releaseVideoPlayer
    338:351:void resolveChangeFirstLogic(int) -> resolveChangeFirstLogic
    226:228:void resolveFullAdd() -> resolveFullAdd
    171:177:void resolveFullBtn() -> resolveFullBtn
    235:245:void resolveMaterialAnimation() -> resolveMaterialAnimation
    260:266:void resolveMaterialFullVideoShow(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer) -> resolveMaterialFullVideoShow
    307:329:void resolveMaterialToNormal(com.shuyu.gsyvideoplayer.video.base.GSYVideoPlayer) -> resolveMaterialToNormal
    185:218:void resolveToFull() -> resolveToFull
    274:275:void resolveToNormal() -> resolveToNormal
    359:369:void saveLocationStatus(android.content.Context,boolean,boolean) -> saveLocationStatus
    456:456:void setAutoRotation(boolean) -> setAutoRotation
    578:578:void setCachePath(java.io.File) -> setCachePath
    469:469:void setFullLandFrist(boolean) -> setFullLandFrist
    440:440:void setFullViewContainer(android.view.ViewGroup) -> setFullViewContainer
    513:513:void setHideActionBar(boolean) -> setHideActionBar
    619:619:void setHideKey(boolean) -> setHideKey
    500:500:void setHideStatusBar(boolean) -> setHideStatusBar
    547:547:void setLoop(boolean) -> setLoop
    594:594:void setMapHeadData(java.util.Map) -> setMapHeadData
    630:630:void setNeedLockFull(boolean) -> setNeedLockFull
    641:641:void setNeedShowWifiTip(boolean) -> setNeedShowWifiTip
    119:120:void setPlayPositionAndTag(int,java.lang.String) -> setPlayPositionAndTag
    482:482:void setShowFullAnimation(boolean) -> setShowFullAnimation
    566:566:void setSpeed(int) -> setSpeed
    586:586:void setTitle(java.lang.String) -> setTitle
    522:523:void setVideoAllCallBack(com.shuyu.gsyvideoplayer.listener.StandardVideoAllCallBack) -> setVideoAllCallBack
    418:420:void showSmallVideo(android.graphics.Point,boolean,boolean) -> showSmallVideo
    429:430:void smallVideoToNormal() -> smallVideoToNormal
    130:166:void startPlay(java.lang.String) -> startPlay
com.shuyu.gsyvideoplayer.utils.ListVideoUtil$1 -> com.shuyu.gsyvideoplayer.utils.ListVideoUtil$1:
    159:159:void <init>(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> <init>
    162:162:void onClick(android.view.View) -> onClick
com.shuyu.gsyvideoplayer.utils.ListVideoUtil$2 -> com.shuyu.gsyvideoplayer.utils.ListVideoUtil$2:
    203:203:void <init>(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> <init>
    206:206:void onClick(android.view.View) -> onClick
com.shuyu.gsyvideoplayer.utils.ListVideoUtil$3 -> com.shuyu.gsyvideoplayer.utils.ListVideoUtil$3:
    245:245:void <init>(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> <init>
    249:251:void run() -> run
com.shuyu.gsyvideoplayer.utils.ListVideoUtil$4 -> com.shuyu.gsyvideoplayer.utils.ListVideoUtil$4:
    275:275:void <init>(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> <init>
    278:297:void run() -> run
com.shuyu.gsyvideoplayer.utils.ListVideoUtil$5 -> com.shuyu.gsyvideoplayer.utils.ListVideoUtil$5:
    309:309:void <init>(com.shuyu.gsyvideoplayer.utils.ListVideoUtil,com.shuyu.gsyvideoplayer.video.base.GSYVideoPlayer) -> <init>
    312:320:void run() -> run
com.shuyu.gsyvideoplayer.utils.ListVideoUtil$5$1 -> com.shuyu.gsyvideoplayer.utils.ListVideoUtil$5$1:
    320:320:void <init>(com.shuyu.gsyvideoplayer.utils.ListVideoUtil$5) -> <init>
    323:323:void run() -> run
com.shuyu.gsyvideoplayer.utils.ListVideoUtil$6 -> com.shuyu.gsyvideoplayer.utils.ListVideoUtil$6:
    339:339:void <init>(com.shuyu.gsyvideoplayer.utils.ListVideoUtil) -> <init>
    342:343:void run() -> run
com.shuyu.gsyvideoplayer.utils.MeasureHelper -> com.shuyu.gsyvideoplayer.utils.MeasureHelper:
    39:40:void <init>(android.view.View) -> <init>
    71:202:void doMeasure(int,int) -> doMeasure
    210:210:int getMeasuredHeight() -> getMeasuredHeight
    206:206:int getMeasuredWidth() -> getMeasuredWidth
    44:46:android.view.View getView() -> getView
    214:214:void setAspectRatio(int) -> setAspectRatio
    60:60:void setVideoRotation(int) -> setVideoRotation
    55:56:void setVideoSampleAspectRatio(int,int) -> setVideoSampleAspectRatio
    50:51:void setVideoSize(int,int) -> setVideoSize
com.shuyu.gsyvideoplayer.utils.NetInfoModule -> com.shuyu.gsyvideoplayer.utils.NetInfoModule:
    40:45:void <init>(android.content.Context,com.shuyu.gsyvideoplayer.utils.NetInfoModule$NetChangeListener) -> <init>
    16:16:void access$100(com.shuyu.gsyvideoplayer.utils.NetInfoModule) -> access$100
    100:109:java.lang.String getCurrentConnectionType() -> getCurrentConnectionType
    60:64:java.lang.String getCurrentConnectivity() -> getCurrentConnectivity
    68:71:boolean isConnectionMetered() -> isConnectionMetered
    53:53:void onHostPause() -> onHostPause
    49:49:void onHostResume() -> onHostResume
    75:78:void registerReceiver() -> registerReceiver
    116:117:void sendConnectivityChangedEvent() -> sendConnectivityChangedEvent
    82:84:void unregisterReceiver() -> unregisterReceiver
    89:94:void updateAndSendConnectionType() -> updateAndSendConnectionType
com.shuyu.gsyvideoplayer.utils.NetInfoModule$ConnectivityBroadcastReceiver -> com.shuyu.gsyvideoplayer.utils.NetInfoModule$ConnectivityBroadcastReceiver:
    125:128:void <init>(com.shuyu.gsyvideoplayer.utils.NetInfoModule) -> <init>
    125:125:void <init>(com.shuyu.gsyvideoplayer.utils.NetInfoModule,com.shuyu.gsyvideoplayer.utils.NetInfoModule$1) -> <init>
    135:135:boolean isRegistered() -> isRegistered
    140:141:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    131:131:void setRegistered(boolean) -> setRegistered
com.shuyu.gsyvideoplayer.utils.NetworkUtils -> com.shuyu.gsyvideoplayer.utils.NetworkUtils:
    22:22:void <init>() -> <init>
    58:59:android.net.NetworkInfo getActiveNetworkInfo(android.content.Context) -> getActiveNetworkInfo
    157:196:int getNetWorkType(android.content.Context) -> getNetWorkType
    226:226:java.lang.String getNetWorkTypeName(android.content.Context) -> getNetWorkTypeName
    117:118:java.lang.String getNetworkOperatorName(android.content.Context) -> getNetworkOperatorName
    135:136:int getPhoneType(android.content.Context) -> getPhoneType
    91:92:boolean is4G(android.content.Context) -> is4G
    67:68:boolean isAvailable(android.content.Context) -> isAvailable
    79:80:boolean isConnected(android.content.Context) -> isConnected
    104:105:boolean isWifiConnected(android.content.Context) -> isWifiConnected
    43:46:void openWirelessSettings(android.content.Context) -> openWirelessSettings
com.shuyu.gsyvideoplayer.utils.NeuQuant -> com.shuyu.gsyvideoplayer.utils.NeuQuant:
    614:629:void <init>(byte[],int,int) -> <init>
    896:911:void alterneigh(int,int,int,int,int) -> alterneigh
    925:928:void altersingle(int,int,int,int,int) -> altersingle
    634:643:byte[] colorMap() -> colorMap
    951:977:int contest(int,int,int) -> contest
    663:701:void inxbuild() -> inxbuild
    714:773:void learn() -> learn
    793:842:int map(int,int,int) -> map
    852:855:byte[] process() -> process
    868:871:void unbiasnet() -> unbiasnet
com.shuyu.gsyvideoplayer.utils.OrientationUtils -> com.shuyu.gsyvideoplayer.utils.OrientationUtils:
    32:35:void <init>(android.app.Activity,com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer) -> <init>
    15:15:android.app.Activity access$000(com.shuyu.gsyvideoplayer.utils.OrientationUtils) -> access$000
    15:15:boolean access$100(com.shuyu.gsyvideoplayer.utils.OrientationUtils) -> access$100
    15:15:boolean access$200(com.shuyu.gsyvideoplayer.utils.OrientationUtils) -> access$200
    15:15:boolean access$202(com.shuyu.gsyvideoplayer.utils.OrientationUtils,boolean) -> access$202
    15:15:int access$300(com.shuyu.gsyvideoplayer.utils.OrientationUtils) -> access$300
    15:15:int access$302(com.shuyu.gsyvideoplayer.utils.OrientationUtils,int) -> access$302
    15:15:boolean access$400(com.shuyu.gsyvideoplayer.utils.OrientationUtils) -> access$400
    15:15:boolean access$402(com.shuyu.gsyvideoplayer.utils.OrientationUtils,boolean) -> access$402
    15:15:boolean access$500(com.shuyu.gsyvideoplayer.utils.OrientationUtils) -> access$500
    15:15:boolean access$502(com.shuyu.gsyvideoplayer.utils.OrientationUtils,boolean) -> access$502
    15:15:int access$602(com.shuyu.gsyvideoplayer.utils.OrientationUtils,int) -> access$602
    15:15:com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer access$700(com.shuyu.gsyvideoplayer.utils.OrientationUtils) -> access$700
    144:150:int backToProtVideo() -> backToProtVideo
    193:193:int getIsLand() -> getIsLand
    210:210:int getScreenType() -> getScreenType
    39:112:void init() -> init
    177:177:boolean isClick() -> isClick
    185:185:boolean isClickLand() -> isClickLand
    202:202:boolean isClickPort() -> isClickPort
    158:158:boolean isEnable() -> isEnable
    219:219:boolean isRotateWithSystem() -> isRotateWithSystem
    171:172:void releaseListener() -> releaseListener
    119:135:void resolveByClick() -> resolveByClick
    181:181:void setClick(boolean) -> setClick
    189:189:void setClickLand(boolean) -> setClickLand
    206:206:void setClickPort(boolean) -> setClickPort
    162:166:void setEnable(boolean) -> setEnable
    197:197:void setIsLand(int) -> setIsLand
    227:227:void setRotateWithSystem(boolean) -> setRotateWithSystem
    214:214:void setScreenType(int) -> setScreenType
com.shuyu.gsyvideoplayer.utils.OrientationUtils$1 -> com.shuyu.gsyvideoplayer.utils.OrientationUtils$1:
    39:39:void <init>(com.shuyu.gsyvideoplayer.utils.OrientationUtils,android.content.Context) -> <init>
    42:107:void onOrientationChanged(int) -> onOrientationChanged
com.shuyu.gsyvideoplayer.utils.StorageUtils -> com.shuyu.gsyvideoplayer.utils.StorageUtils:
    18:18:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    49:62:java.io.File getCacheDirectory(android.content.Context,boolean) -> getCacheDirectory
    68:72:java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    30:31:java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
com.shuyu.gsyvideoplayer.video.CustomGSYVideoPlayer -> com.shuyu.gsyvideoplayer.video.CustomGSYVideoPlayer:
    40:34:void <init>(android.content.Context,java.lang.Boolean) -> <init>
    44:34:void <init>(android.content.Context) -> <init>
    48:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:102:void addTextureView() -> addTextureView
    63:63:int getLayoutId() -> getLayoutId
    53:54:void init(android.content.Context) -> init
    58:58:void initView() -> initView
    174:174:boolean isOpenPreView() -> isOpenPreView
    113:128:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    135:139:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    145:153:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    107:108:void prepareVideo() -> prepareVideo
    181:181:void setOpenPreView(boolean) -> setOpenPreView
    159:162:void setTextAndProgress(int) -> setTextAndProgress
    167:169:com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer startWindowFullscreen(android.content.Context,boolean,boolean) -> startWindowFullscreen
com.shuyu.gsyvideoplayer.video.CustomGSYVideoPlayer$1 -> com.shuyu.gsyvideoplayer.video.CustomGSYVideoPlayer$1:
    76:76:void <init>(com.shuyu.gsyvideoplayer.video.CustomGSYVideoPlayer) -> <init>
    79:79:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    89:89:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
com.shuyu.gsyvideoplayer.video.ListGSYVideoPlayer -> com.shuyu.gsyvideoplayer.video.ListGSYVideoPlayer:
    30:23:void <init>(android.content.Context,java.lang.Boolean) -> <init>
    34:23:void <init>(android.content.Context) -> <init>
    38:23:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    118:128:void onAutoCompletion() -> onAutoCompletion
    110:113:void onCompletion() -> onCompletion
    97:105:void resolveNormalVideoShow(android.view.View,android.view.ViewGroup,com.shuyu.gsyvideoplayer.video.base.GSYVideoPlayer) -> resolveNormalVideoShow
    50:55:boolean setUp(java.util.List,boolean,int) -> setUp
    69:74:boolean setUp(java.util.List,boolean,int,java.io.File) -> setUp
    81:88:com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer startWindowFullscreen(android.content.Context,boolean,boolean) -> startWindowFullscreen
com.shuyu.gsyvideoplayer.video.NormalGSYVideoPlayer -> com.shuyu.gsyvideoplayer.video.NormalGSYVideoPlayer:
    17:17:void <init>(android.content.Context,java.lang.Boolean) -> <init>
    21:21:void <init>(android.content.Context) -> <init>
    25:25:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    30:30:int getLayoutId() -> getLayoutId
    35:42:void updateStartImage() -> updateStartImage
com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer -> com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer:
    100:94:void <init>(android.content.Context,java.lang.Boolean) -> <init>
    104:94:void <init>(android.content.Context) -> <init>
    108:94:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    593:604:void changeUiToClear() -> changeUiToClear
    609:622:void changeUiToCompleteClear() -> changeUiToCompleteClear
    508:521:void changeUiToCompleteShow() -> changeUiToCompleteShow
    526:539:void changeUiToError() -> changeUiToError
    413:425:void changeUiToNormal() -> changeUiToNormal
    566:569:void changeUiToPauseClear() -> changeUiToPauseClear
    469:483:void changeUiToPauseShow() -> changeUiToPauseShow
    573:589:void changeUiToPlayingBufferingClear() -> changeUiToPlayingBufferingClear
    488:501:void changeUiToPlayingBufferingShow() -> changeUiToPlayingBufferingShow
    560:562:void changeUiToPlayingClear() -> changeUiToPlayingClear
    451:464:void changeUiToPlayingShow() -> changeUiToPlayingShow
    544:555:void changeUiToPrepareingClear() -> changeUiToPrepareingClear
    431:444:void changeUiToPreparingShow() -> changeUiToPreparingShow
    319:321:void dismissBrightnessDialog() -> dismissBrightnessDialog
    237:239:void dismissProgressDialog() -> dismissProgressDialog
    279:281:void dismissVolumeDialog() -> dismissVolumeDialog
    139:139:int getLayoutId() -> getLayoutId
    404:407:void hideAllWidget() -> hideAllWidget
    113:127:void init(android.content.Context) -> init
    656:674:void initFullUI(com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer) -> initFullUI
    355:396:void onClickUiToggle() -> onClickUiToggle
    753:753:void saveFrame(java.io.File,com.shuyu.gsyvideoplayer.listener.GSYVideoShotSaveListener) -> saveFrame
    762:763:void saveFrame(java.io.File,boolean,com.shuyu.gsyvideoplayer.listener.GSYVideoShotSaveListener) -> saveFrame
    694:696:void setBottomProgressBarDrawable(android.graphics.drawable.Drawable) -> setBottomProgressBarDrawable
    682:686:void setBottomShowProgressBarDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setBottomShowProgressBarDrawable
    712:712:void setDialogProgressBar(android.graphics.drawable.Drawable) -> setDialogProgressBar
    719:720:void setDialogProgressColor(int,int) -> setDialogProgressColor
    704:704:void setDialogVolumeProgressBar(android.graphics.drawable.Drawable) -> setDialogVolumeProgressBar
    725:726:void setStandardVideoAllCallBack(com.shuyu.gsyvideoplayer.listener.StandardVideoAllCallBack) -> setStandardVideoAllCallBack
    291:314:void showBrightnessDialog(float) -> showBrightnessDialog
    188:230:void showProgressDialog(float,java.lang.String,int,java.lang.String,int) -> showProgressDialog
    248:274:void showVolumeDialog(float,int) -> showVolumeDialog
    160:179:void showWifiDialog() -> showWifiDialog
    147:152:void startPlayLogic() -> startPlayLogic
    336:342:com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer startWindowFullscreen(android.content.Context,boolean,boolean) -> startWindowFullscreen
    735:735:void taskShotPic(com.shuyu.gsyvideoplayer.listener.GSYVideoShotListener) -> taskShotPic
    744:745:void taskShotPic(com.shuyu.gsyvideoplayer.listener.GSYVideoShotListener,boolean) -> taskShotPic
    629:646:void updateStartImage() -> updateStartImage
com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer$1 -> com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer$1:
    166:166:void <init>(com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer) -> <init>
    169:170:void onClick(android.content.DialogInterface,int) -> onClick
com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer$2 -> com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer$2:
    173:173:void <init>(com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer) -> <init>
    176:176:void onClick(android.content.DialogInterface,int) -> onClick
com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer -> com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer:
    82:409:void <init>(android.content.Context,java.lang.Boolean) -> <init>
    86:409:void <init>(android.content.Context) -> <init>
    90:409:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    94:409:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    773:779:boolean backFromWindowFull(android.content.Context) -> backFromWindowFull
    375:405:void backToNormal() -> backToNormal
    427:428:void checkoutState() -> checkoutState
    340:360:void clearFullscreenLayout() -> clearFullscreenLayout
    197:218:void cloneParams(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer,com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer) -> cloneParams
    751:752:com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer getCurrentPlayer() -> getCurrentPlayer
    738:742:com.shuyu.gsyvideoplayer.video.base.GSYVideoPlayer getFullWindowPlayer() -> getFullWindowPlayer
    157:157:android.view.ViewGroup getViewGroup() -> getViewGroup
    661:675:void hideSmallVideo() -> hideSmallVideo
    99:100:void init(android.content.Context) -> init
    707:707:boolean isLockLand() -> isLockLand
    693:693:boolean isRotateViewAuto() -> isRotateViewAuto
    719:719:boolean isRotateWithSystem() -> isRotateWithSystem
    680:680:boolean isShowFullAnimation() -> isShowFullAnimation
    145:151:void lockTouchLogic() -> lockTouchLogic
    106:106:void onBackFullscreen() -> onBackFullscreen
    441:453:void onConfigurationChanged(android.app.Activity,android.content.res.Configuration,com.shuyu.gsyvideoplayer.utils.OrientationUtils) -> onConfigurationChanged
    241:253:void pauseFullBackCoverLogic(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer) -> pauseFullBackCoverLogic
    225:231:void pauseFullCoverLogic() -> pauseFullCoverLogic
    164:168:void removeVideo(android.view.ViewGroup,int) -> removeVideo
    263:301:void resolveFullVideoShow(android.content.Context,com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer,android.widget.FrameLayout) -> resolveFullVideoShow
    309:331:void resolveNormalVideoShow(android.view.View,android.view.ViewGroup,com.shuyu.gsyvideoplayer.video.base.GSYVideoPlayer) -> resolveNormalVideoShow
    177:187:void saveLocationStatus(android.content.Context,boolean,boolean) -> saveLocationStatus
    762:762:void setBackFromFullScreenListener(android.view.View$OnClickListener) -> setBackFromFullScreenListener
    714:714:void setLockLand(boolean) -> setLockLand
    700:702:void setRotateViewAuto(boolean) -> setRotateViewAuto
    728:728:void setRotateWithSystem(boolean) -> setRotateWithSystem
    689:689:void setShowFullAnimation(boolean) -> setShowFullAnimation
    114:130:void setSmallVideoTextureView() -> setSmallVideoTextureView
    599:651:com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer showSmallVideo(android.graphics.Point,boolean,boolean) -> showSmallVideo
    469:587:com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer startWindowFullscreen(android.content.Context,boolean,boolean) -> startWindowFullscreen
com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$1 -> com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$1:
    130:130:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer) -> <init>
    133:134:void onClick(android.view.View) -> onClick
com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$2 -> com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$2:
    276:276:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer,com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer,android.widget.FrameLayout) -> <init>
    279:283:void run() -> run
com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$3 -> com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$3:
    360:360:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer) -> <init>
    363:363:void run() -> run
com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$4 -> com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$4:
    394:394:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer,android.view.View,android.view.ViewGroup,com.shuyu.gsyvideoplayer.video.base.GSYVideoPlayer) -> <init>
    397:397:void run() -> run
com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$5 -> com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$5:
    409:409:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer) -> <init>
    412:417:void run() -> run
com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$6 -> com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$6:
    527:527:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer) -> <init>
    530:533:void onClick(android.view.View) -> onClick
com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$7 -> com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$7:
    541:541:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer) -> <init>
    544:547:void onClick(android.view.View) -> onClick
com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$8 -> com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer$8:
    562:562:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer,android.view.ViewGroup,android.content.Context,com.shuyu.gsyvideoplayer.video.base.GSYBaseVideoPlayer,android.widget.FrameLayout) -> <init>
    565:566:void run() -> run
com.shuyu.gsyvideoplayer.video.base.GSYTextureRenderView -> com.shuyu.gsyvideoplayer.video.base.GSYTextureRenderView:
    55:46:void <init>(android.content.Context) -> <init>
    59:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:150:void addTextureView() -> addTextureView
    168:172:void changeTextureViewShowType() -> changeTextureViewShowType
    210:210:com.shuyu.gsyvideoplayer.GSYVideoGLView$ShaderInterface getEffectFilter() -> getEffectFilter
    193:194:com.shuyu.gsyvideoplayer.GSYVideoGLView getGSYVideoGLSView() -> getGSYVideoGLSView
    217:217:com.shuyu.gsyvideoplayer.GSYRenderView getRenderProxy() -> getRenderProxy
    160:160:int getTextureParams() -> getTextureParams
    179:179:void initCover() -> initCover
    120:120:void onSurfaceAvailable(android.view.Surface) -> onSurfaceAvailable
    72:73:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    84:85:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    92:92:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    129:133:void pauseLogic(android.view.Surface,boolean) -> pauseLogic
    251:256:void setCustomGLRenderer(com.shuyu.gsyvideoplayer.render.GSYVideoGLViewBaseRender) -> setCustomGLRenderer
    224:228:void setEffectFilter(com.shuyu.gsyvideoplayer.GSYVideoGLView$ShaderInterface) -> setEffectFilter
    238:243:void setMatrixGL(float[]) -> setMatrixGL
    186:188:void setSmallVideoTextureView(android.view.View$OnTouchListener) -> setSmallVideoTextureView
    98:98:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    109:110:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView -> com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView:
    176:406:void <init>(android.content.Context) -> <init>
    180:406:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    184:406:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    188:406:void <init>(android.content.Context,java.lang.Boolean) -> <init>
    919:925:void cancelDismissControlViewTimer() -> cancelDismissControlViewTimer
    840:846:void cancelProgressTimer() -> cancelProgressTimer
    1077:1078:void clearThumbImageView() -> clearThumbImageView
    769:780:void clickStartIcon() -> clickStartIcon
    1113:1113:android.widget.ImageView getBackButton() -> getBackButton
    1250:1250:int getDismissControlTime() -> getDismissControlTime
    1118:1119:int getEnlargeImageRes() -> getEnlargeImageRes
    1106:1106:android.widget.ImageView getFullscreenButton() -> getFullscreenButton
    1217:1217:float getSeekRatio() -> getSeekRatio
    1134:1135:int getShrinkImageRes() -> getShrinkImageRes
    1099:1099:android.view.View getStartButton() -> getStartButton
    1083:1083:android.view.View getThumbImageView() -> getThumbImageView
    1060:1060:android.widget.RelativeLayout getThumbImageViewLayout() -> getThumbImageViewLayout
    1091:1091:android.widget.TextView getTitleTextView() -> getTitleTextView
    192:269:void init(android.content.Context) -> init
    1053:1053:void initUIState() -> initUIState
    1166:1166:boolean isHideKey() -> isHideKey
    1222:1222:boolean isNeedLockFull() -> isNeedLockFull
    1177:1177:boolean isNeedShowWifiTip() -> isNeedShowWifiTip
    1182:1182:boolean isTouchWiget() -> isTouchWiget
    1194:1194:boolean isTouchWigetFull() -> isTouchWigetFull
    822:828:void lockTouchLogic() -> lockTouchLogic
    900:907:void loopSetProgressAndTime() -> loopSetProgressAndTime
    281:284:void onAutoCompletion() -> onAutoCompletion
    955:969:void onBrightnessSlide(float) -> onBrightnessSlide
    583:594:void onBufferingUpdate(int) -> onBufferingUpdate
    359:399:void onClick(android.view.View) -> onClick
    274:276:void onDetachedFromWindow() -> onDetachedFromWindow
    290:293:void onError(int,int) -> onError
    575:577:void onPrepared() -> onPrepared
    554:568:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    420:480:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    884:894:void resetProgressAndTime() -> resetProgressAndTime
    932:938:void resolveThumbImage(android.view.View) -> resolveThumbImage
    752:737:void resolveUIState(int) -> resolveUIState
    1246:1246:void setDismissControlTime(int) -> setDismissControlTime
    1130:1130:void setEnlargeImageRes(int) -> setEnlargeImageRes
    1173:1173:void setHideKey(boolean) -> setHideKey
    1190:1190:void setIsTouchWiget(boolean) -> setIsTouchWiget
    1154:1154:void setIsTouchWigetFull(boolean) -> setIsTouchWigetFull
    1237:1237:void setLockClickListener(com.shuyu.gsyvideoplayer.listener.LockClickListener) -> setLockClickListener
    1230:1230:void setNeedLockFull(boolean) -> setNeedLockFull
    1201:1201:void setNeedShowWifiTip(boolean) -> setNeedShowWifiTip
    860:878:void setProgressAndTime(int,int,int,int) -> setProgressAndTime
    1213:1213:void setSeekRatio(float) -> setSeekRatio
    1146:1146:void setShrinkImageRes(int) -> setShrinkImageRes
    352:354:void setSmallVideoTextureView(android.view.View$OnTouchListener) -> setSmallVideoTextureView
    304:346:void setStateAndUi(int) -> setStateAndUi
    852:855:void setTextAndProgress(int) -> setTextAndProgress
    1067:1069:void setThumbImageView(android.view.View) -> setThumbImageView
    1161:1161:void setThumbPlay(boolean) -> setThumbPlay
    510:510:boolean setUp(java.lang.String,boolean,java.lang.String) -> setUp
    524:533:boolean setUp(java.lang.String,boolean,java.io.File,java.lang.String) -> setUp
    945:945:void setViewShowState(android.view.View,int) -> setViewShowState
    912:915:void startDismissControlViewTimer() -> startDismissControlViewTimer
    833:836:void startProgressTimer() -> startProgressTimer
    722:725:void touchDoubleUp() -> touchDoubleUp
    600:608:void touchSurfaceDown(float,float) -> touchSurfaceDown
    613:636:void touchSurfaceMove(float,float,float) -> touchSurfaceMove
    644:668:void touchSurfaceMoveFullLogic(float,float) -> touchSurfaceMoveFullLogic
    675:712:void touchSurfaceUp() -> touchSurfaceUp
com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$1 -> com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$1:
    253:253:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView) -> <init>
    256:262:void onClick(android.view.View) -> onClick
com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$2 -> com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$2:
    406:406:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView) -> <init>
    409:410:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$DismissControlViewTimerTask -> com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$DismissControlViewTimerTask:
    987:987:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView) -> <init>
    987:987:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView,com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$1) -> <init>
    991:995:void run() -> run
com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$DismissControlViewTimerTask$1 -> com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$DismissControlViewTimerTask$1:
    995:995:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$DismissControlViewTimerTask) -> <init>
    998:1001:void run() -> run
com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$ProgressTimerTask -> com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$ProgressTimerTask:
    973:973:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView) -> <init>
    973:973:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView,com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$1) -> <init>
    976:977:void run() -> run
com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$ProgressTimerTask$1 -> com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$ProgressTimerTask$1:
    977:977:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoControlView$ProgressTimerTask) -> <init>
    980:980:void run() -> run
com.shuyu.gsyvideoplayer.video.base.GSYVideoPlayer -> com.shuyu.gsyvideoplayer.video.base.GSYVideoPlayer:
    14:14:void <init>(android.content.Context,java.lang.Boolean) -> <init>
    18:18:void <init>(android.content.Context) -> <init>
    22:22:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    26:26:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
com.shuyu.gsyvideoplayer.video.base.GSYVideoView -> com.shuyu.gsyvideoplayer.video.base.GSYVideoView:
    160:161:void <init>(android.content.Context) -> <init>
    165:166:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    170:171:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    175:177:void <init>(android.content.Context,java.lang.Boolean) -> <init>
    615:632:void clearCurrentCache() -> clearCurrentCache
    699:710:void createNetWorkState() -> createNetWorkState
    464:466:void deleteCacheFileWhenError() -> deleteCacheFileWhenError
    221:221:android.content.Context getActivityContext() -> getActivityContext
    854:854:int getBuffterPoint() -> getBuffterPoint
    643:647:int getCurrentPositionWhenPlaying() -> getCurrentPositionWhenPlaying
    776:776:int getCurrentState() -> getCurrentState
    660:662:int getDuration() -> getDuration
    813:818:long getNetSpeed() -> getNetSpeed
    833:834:java.lang.String getNetSpeedText() -> getNetSpeedText
    797:797:int getPlayPosition() -> getPlayPosition
    783:783:java.lang.String getPlayTag() -> getPlayTag
    838:838:long getSeekOnStart() -> getSeekOnStart
    890:890:float getSpeed() -> getSpeed
    226:239:void init(android.content.Context) -> init
    245:256:void initInflate(android.content.Context) -> initInflate
    691:692:boolean isCurrentMediaListener() -> isCurrentMediaListener
    861:861:boolean isIfCurrentIsFullscreen() -> isIfCurrentIsFullscreen
    869:869:boolean isLooping() -> isLooping
    954:954:boolean isShowPauseCover() -> isShowPauseCover
    718:719:void listenerNetWorkState() -> listenerNetWorkState
    447:450:void netWorkErrorLogic() -> netWorkErrorLogic
    506:523:void onAutoCompletion() -> onAutoCompletion
    530:548:void onCompletion() -> onCompletion
    560:573:void onError(int,int) -> onError
    581:597:void onInfo(int,int) -> onInfo
    471:500:void onPrepared() -> onPrepared
    411:420:void onVideoPause() -> onVideoPause
    402:402:void onVideoReset() -> onVideoReset
    429:438:void onVideoResume() -> onVideoResume
    603:606:void onVideoSizeChanged() -> onVideoSizeChanged
    281:292:void prepareVideo() -> prepareVideo
    682:685:void release() -> release
    672:675:void releaseAllVideos() -> releaseAllVideos
    736:738:void releaseNetWorkState() -> releaseNetWorkState
    198:204:void releasePauseCover() -> releasePauseCover
    973:977:void seekTo(long) -> seekTo
    865:865:void setIfCurrentIsFullscreen(boolean) -> setIfCurrentIsFullscreen
    769:769:void setIjkLibLoader(tv.danmaku.ijk.media.player.IjkLibLoader) -> setIjkLibLoader
    876:876:void setLooping(boolean) -> setLooping
    804:804:void setPlayPosition(int) -> setPlayPosition
    792:792:void setPlayTag(java.lang.String) -> setPlayTag
    847:847:void setSeekOnStart(long) -> setSeekOnStart
    965:965:void setShowPauseCover(boolean) -> setShowPauseCover
    897:897:void setSpeed(float) -> setSpeed
    907:928:void setSpeed(float,boolean) -> setSpeed
    941:948:void setSpeedPlaying(float,boolean) -> setSpeedPlaying
    337:337:boolean setUp(java.lang.String,boolean,java.lang.String) -> setUp
    352:355:boolean setUp(java.lang.String,boolean,java.io.File,java.util.Map,java.lang.String) -> setUp
    371:393:boolean setUp(java.lang.String,boolean,java.io.File,java.lang.String) -> setUp
    886:886:void setVideoAllCallBack(com.shuyu.gsyvideoplayer.listener.VideoAllCallBack) -> setVideoAllCallBack
    182:189:void showPauseCover() -> showPauseCover
    267:274:void startButtonLogic() -> startButtonLogic
    727:728:void unListenerNetWorkState() -> unListenerNetWorkState
    210:215:void updatePauseCover() -> updatePauseCover
com.shuyu.gsyvideoplayer.video.base.GSYVideoView$1 -> com.shuyu.gsyvideoplayer.video.base.GSYVideoView$1:
    298:298:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoView) -> <init>
    305:318:void onAudioFocusChange(int) -> onAudioFocusChange
com.shuyu.gsyvideoplayer.video.base.GSYVideoView$1$1 -> com.shuyu.gsyvideoplayer.video.base.GSYVideoView$1$1:
    305:305:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoView$1) -> <init>
    308:308:void run() -> run
com.shuyu.gsyvideoplayer.video.base.GSYVideoView$2 -> com.shuyu.gsyvideoplayer.video.base.GSYVideoView$2:
    450:450:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoView,long) -> <init>
    453:454:void run() -> run
com.shuyu.gsyvideoplayer.video.base.GSYVideoView$3 -> com.shuyu.gsyvideoplayer.video.base.GSYVideoView$3:
    700:700:void <init>(com.shuyu.gsyvideoplayer.video.base.GSYVideoView) -> <init>
    703:707:void changed(java.lang.String) -> changed
com.transitionseverywhere.AutoTransition -> com.transitionseverywhere.AutoTransition:
    37:38:void <init>() -> <init>
    47:50:void init() -> init
com.transitionseverywhere.ChangeBounds -> com.transitionseverywhere.ChangeBounds:
    63:145:void <clinit>() -> <clinit>
    156:151:void <init>() -> <init>
    242:242:void captureEndValues(com.transitionseverywhere.TransitionValues) -> captureEndValues
    237:237:void captureStartValues(com.transitionseverywhere.TransitionValues) -> captureStartValues
    219:230:void captureValues(com.transitionseverywhere.TransitionValues) -> captureValues
    264:430:android.animation.Animator createAnimator(android.view.ViewGroup,com.transitionseverywhere.TransitionValues,com.transitionseverywhere.TransitionValues) -> createAnimator
    169:169:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    247:252:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
com.transitionseverywhere.ChangeBounds$1 -> com.transitionseverywhere.ChangeBounds$1:
    80:82:void <init>() -> <init>
    80:80:android.graphics.PointF get(java.lang.Object) -> get
    80:80:java.lang.Object get(java.lang.Object) -> get
    93:94:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    80:80:void set(java.lang.Object,java.lang.Object) -> set
    86:88:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
com.transitionseverywhere.ChangeBounds$2 -> com.transitionseverywhere.ChangeBounds$2:
    97:97:void <init>() -> <init>
    97:97:void set(java.lang.Object,java.lang.Object) -> set
    100:100:void set(com.transitionseverywhere.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
com.transitionseverywhere.ChangeBounds$3 -> com.transitionseverywhere.ChangeBounds$3:
    103:103:void <init>() -> <init>
    103:103:void set(java.lang.Object,java.lang.Object) -> set
    106:106:void set(com.transitionseverywhere.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
com.transitionseverywhere.ChangeBounds$4 -> com.transitionseverywhere.ChangeBounds$4:
    109:109:void <init>() -> <init>
    109:109:void set(java.lang.Object,java.lang.Object) -> set
    112:116:void set(android.view.View,android.graphics.PointF) -> set
com.transitionseverywhere.ChangeBounds$5 -> com.transitionseverywhere.ChangeBounds$5:
    119:119:void <init>() -> <init>
    119:119:void set(java.lang.Object,java.lang.Object) -> set
    122:126:void set(android.view.View,android.graphics.PointF) -> set
com.transitionseverywhere.ChangeBounds$6 -> com.transitionseverywhere.ChangeBounds$6:
    129:129:void <init>() -> <init>
    129:129:void set(java.lang.Object,java.lang.Object) -> set
    132:136:void set(android.view.View,android.graphics.PointF) -> set
com.transitionseverywhere.ChangeBounds$7 -> com.transitionseverywhere.ChangeBounds$7:
    353:353:void <init>(com.transitionseverywhere.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    358:358:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    363:365:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.transitionseverywhere.ChangeBounds$8 -> com.transitionseverywhere.ChangeBounds$8:
    377:378:void <init>(com.transitionseverywhere.ChangeBounds,android.view.ViewGroup) -> <init>
    388:389:void onTransitionEnd(com.transitionseverywhere.Transition) -> onTransitionEnd
    395:395:void onTransitionPause(com.transitionseverywhere.Transition) -> onTransitionPause
    400:400:void onTransitionResume(com.transitionseverywhere.Transition) -> onTransitionResume
com.transitionseverywhere.ChangeBounds$9 -> com.transitionseverywhere.ChangeBounds$9:
    430:430:void <init>(com.transitionseverywhere.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    433:434:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.transitionseverywhere.ChangeBounds$ViewBounds -> com.transitionseverywhere.ChangeBounds$ViewBounds:
    453:454:void <init>(android.view.View) -> <init>
    467:471:void setBottomRight(android.graphics.PointF) -> setBottomRight
    476:478:void setLeftTopRightBottom() -> setLeftTopRightBottom
    458:462:void setTopLeft(android.graphics.PointF) -> setTopLeft
com.transitionseverywhere.ChangeClipBounds -> com.transitionseverywhere.ChangeClipBounds:
    44:66:void <clinit>() -> <clinit>
com.transitionseverywhere.ChangeClipBounds$1 -> com.transitionseverywhere.ChangeClipBounds$1:
    52:52:void <init>(java.lang.Class,java.lang.String) -> <init>
    52:52:java.lang.Object get(java.lang.Object) -> get
    61:61:android.graphics.Rect get(android.view.View) -> get
    52:52:void set(java.lang.Object,java.lang.Object) -> set
    56:56:void set(android.view.View,android.graphics.Rect) -> set
com.transitionseverywhere.Fade -> com.transitionseverywhere.Fade:
    96:97:void <init>(int) -> <init>
    110:112:void captureStartValues(com.transitionseverywhere.TransitionValues) -> captureStartValues
    120:139:android.animation.Animator createAnimation(android.view.View,float,float,com.transitionseverywhere.TransitionValues) -> createAnimation
    152:152:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,com.transitionseverywhere.TransitionValues,com.transitionseverywhere.TransitionValues) -> onAppear
    158:158:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,com.transitionseverywhere.TransitionValues,com.transitionseverywhere.TransitionValues) -> onDisappear
com.transitionseverywhere.Fade$1 -> com.transitionseverywhere.Fade$1:
    139:139:void <init>(com.transitionseverywhere.Fade,android.view.View,float) -> <init>
    142:142:void onTransitionEnd(com.transitionseverywhere.Transition) -> onTransitionEnd
com.transitionseverywhere.Fade$FadeAnimatorListener -> com.transitionseverywhere.Fade$FadeAnimatorListener:
    166:168:void <init>(android.view.View,float) -> <init>
    182:184:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    173:176:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.transitionseverywhere.PathMotion -> com.transitionseverywhere.PathMotion:
    42:42:void <clinit>() -> <clinit>
    52:52:void <init>() -> <init>
com.transitionseverywhere.PathMotion$1 -> com.transitionseverywhere.PathMotion$1:
    42:42:void <init>() -> <init>
    45:47:android.graphics.Path getPath(float,float,float,float) -> getPath
com.transitionseverywhere.Scene -> com.transitionseverywhere.Scene:
    147:149:void exit() -> exit
    206:206:com.transitionseverywhere.Scene getCurrentScene(android.view.View) -> getCurrentScene
    195:195:void setCurrentScene(android.view.View,com.transitionseverywhere.Scene) -> setCurrentScene
com.transitionseverywhere.Transition -> com.transitionseverywhere.Transition:
    158:189:void <clinit>() -> <clinit>
    246:238:void <init>() -> <init>
    119:119:java.util.ArrayList access$000(com.transitionseverywhere.Transition) -> access$000
    1966:1969:com.transitionseverywhere.Transition addListener(com.transitionseverywhere.Transition$TransitionListener) -> addListener
    631:639:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1476:1509:void addViewValues(com.transitionseverywhere.TransitionValuesMaps,android.view.View,com.transitionseverywhere.TransitionValues) -> addViewValues
    1854:1872:void animate(android.animation.Animator) -> animate
    1550:1599:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    2150:2163:void capturePropagationValues(com.transitionseverywhere.TransitionValues) -> capturePropagationValues
    1413:1468:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1522:1532:void clearValues(boolean) -> clearValues
    118:118:java.lang.Object clone() -> clone
    2207:2212:com.transitionseverywhere.Transition clone() -> clone
    689:785:void createAnimators(android.view.ViewGroup,com.transitionseverywhere.TransitionValuesMaps,com.transitionseverywhere.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1910:1932:void end() -> end
    343:343:long getDuration() -> getDuration
    397:397:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1630:1653:com.transitionseverywhere.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2232:2232:java.lang.String getName() -> getName
    2112:2112:com.transitionseverywhere.PathMotion getPathMotion() -> getPathMotion
    848:851:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    370:370:long getStartDelay() -> getStartDelay
    1611:1615:com.transitionseverywhere.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1794:1805:boolean isTransitionRequired(com.transitionseverywhere.TransitionValues,com.transitionseverywhere.TransitionValues) -> isTransitionRequired
    804:839:boolean isValidTarget(android.view.View) -> isValidTarget
    1817:1832:boolean isValueChanged(com.transitionseverywhere.TransitionValues,com.transitionseverywhere.TransitionValues,java.lang.String) -> isValueChanged
    578:590:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    530:537:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    551:563:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    605:617:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    645:669:void matchStartAndEnd(com.transitionseverywhere.TransitionValuesMaps,com.transitionseverywhere.TransitionValuesMaps) -> matchStartAndEnd
    1666:1680:void pause(android.view.View) -> pause
    1732:1770:void playTransition(android.view.ViewGroup) -> playTransition
    1981:1986:com.transitionseverywhere.Transition removeListener(com.transitionseverywhere.Transition$TransitionListener) -> removeListener
    1701:1722:void resume(android.view.View) -> resume
    886:898:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    866:879:void runAnimators() -> runAnimators
    330:330:com.transitionseverywhere.Transition setDuration(long) -> setDuration
    384:384:com.transitionseverywhere.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    357:357:com.transitionseverywhere.Transition setStartDelay(long) -> setStartDelay
    1884:1895:void start() -> start
    2200:2200:java.lang.String toString() -> toString
    2236:2265:java.lang.String toString(java.lang.String) -> toString
com.transitionseverywhere.Transition$1 -> com.transitionseverywhere.Transition$1:
    886:886:void <init>(com.transitionseverywhere.Transition,androidx.collection.ArrayMap) -> <init>
    894:895:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    889:889:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.transitionseverywhere.Transition$2 -> com.transitionseverywhere.Transition$2:
    1865:1865:void <init>(com.transitionseverywhere.Transition) -> <init>
    1868:1869:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.transitionseverywhere.Transition$AnimationInfo -> com.transitionseverywhere.Transition$AnimationInfo:
    2373:2378:void <init>(android.view.View,java.lang.String,com.transitionseverywhere.Transition,java.lang.Object,com.transitionseverywhere.TransitionValues) -> <init>
com.transitionseverywhere.Transition$TransitionListenerAdapter -> com.transitionseverywhere.Transition$TransitionListenerAdapter:
    2335:2335:void <init>() -> <init>
com.transitionseverywhere.TransitionManager -> com.transitionseverywhere.TransitionManager:
    72:79:void <clinit>() -> <clinit>
    68:68:java.util.ArrayList access$000() -> access$000
    68:68:java.util.ArrayList access$100(android.view.ViewGroup) -> access$100
    68:68:boolean access$200(android.view.View) -> access$200
    396:396:void beginDelayedTransition(android.view.ViewGroup) -> beginDelayedTransition
    423:435:void beginDelayedTransition(android.view.ViewGroup,com.transitionseverywhere.Transition) -> beginDelayedTransition
    311:315:boolean cancelAllSystemLayoutTransitions(android.view.View) -> cancelAllSystemLayoutTransitions
    209:212:java.util.ArrayList getRunningTransitions(android.view.ViewGroup) -> getRunningTransitions
    463:463:boolean isTransitionsAllowed() -> isTransitionsAllowed
    220:226:void sceneChangeRunTransition(android.view.ViewGroup,com.transitionseverywhere.Transition) -> sceneChangeRunTransition
    322:340:void sceneChangeSetup(android.view.ViewGroup,com.transitionseverywhere.Transition) -> sceneChangeSetup
com.transitionseverywhere.TransitionManager$MultiListener -> com.transitionseverywhere.TransitionManager$MultiListener:
    245:247:void <init>(com.transitionseverywhere.Transition,android.view.ViewGroup) -> <init>
    275:303:boolean onPreDraw() -> onPreDraw
    261:270:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    251:252:void removeListeners() -> removeListeners
com.transitionseverywhere.TransitionManager$MultiListener$1 -> com.transitionseverywhere.TransitionManager$MultiListener$1:
    289:289:void <init>(com.transitionseverywhere.TransitionManager$MultiListener) -> <init>
    292:293:void onTransitionEnd(com.transitionseverywhere.Transition) -> onTransitionEnd
com.transitionseverywhere.TransitionSet -> com.transitionseverywhere.TransitionSet:
    79:58:void <init>() -> <init>
    53:53:com.transitionseverywhere.Transition addListener(com.transitionseverywhere.Transition$TransitionListener) -> addListener
    256:256:com.transitionseverywhere.TransitionSet addListener(com.transitionseverywhere.Transition$TransitionListener) -> addListener
    141:146:com.transitionseverywhere.TransitionSet addTransition(com.transitionseverywhere.Transition) -> addTransition
    157:158:void addTransitionInternal(com.transitionseverywhere.Transition) -> addTransitionInternal
    479:483:void captureEndValues(com.transitionseverywhere.TransitionValues) -> captureEndValues
    491:494:void capturePropagationValues(com.transitionseverywhere.TransitionValues) -> capturePropagationValues
    467:471:void captureStartValues(com.transitionseverywhere.TransitionValues) -> captureStartValues
    53:53:com.transitionseverywhere.Transition clone() -> clone
    53:53:java.lang.Object clone() -> clone
    580:584:com.transitionseverywhere.TransitionSet clone() -> clone
    409:423:void createAnimators(android.view.ViewGroup,com.transitionseverywhere.TransitionValuesMaps,com.transitionseverywhere.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    501:504:void pause(android.view.View) -> pause
    53:53:com.transitionseverywhere.Transition removeListener(com.transitionseverywhere.Transition$TransitionListener) -> removeListener
    325:325:com.transitionseverywhere.TransitionSet removeListener(com.transitionseverywhere.Transition$TransitionListener) -> removeListener
    511:514:void resume(android.view.View) -> resume
    433:460:void runAnimators() -> runAnimators
    53:53:com.transitionseverywhere.Transition setDuration(long) -> setDuration
    195:199:com.transitionseverywhere.TransitionSet setDuration(long) -> setDuration
    53:53:com.transitionseverywhere.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    212:216:com.transitionseverywhere.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    102:105:com.transitionseverywhere.TransitionSet setOrdering(int) -> setOrdering
    53:53:com.transitionseverywhere.Transition setStartDelay(long) -> setStartDelay
    207:207:com.transitionseverywhere.TransitionSet setStartDelay(long) -> setStartDelay
    364:368:void setupStartEndListeners() -> setupStartEndListeners
    571:573:java.lang.String toString(java.lang.String) -> toString
com.transitionseverywhere.TransitionSet$1 -> com.transitionseverywhere.TransitionSet$1:
    446:446:void <init>(com.transitionseverywhere.TransitionSet,com.transitionseverywhere.Transition) -> <init>
    449:450:void onTransitionEnd(com.transitionseverywhere.Transition) -> onTransitionEnd
com.transitionseverywhere.TransitionSet$TransitionSetListener -> com.transitionseverywhere.TransitionSet$TransitionSetListener:
    378:379:void <init>(com.transitionseverywhere.TransitionSet) -> <init>
    392:398:void onTransitionEnd(com.transitionseverywhere.Transition) -> onTransitionEnd
    384:386:void onTransitionStart(com.transitionseverywhere.Transition) -> onTransitionStart
com.transitionseverywhere.TransitionUtils -> com.transitionseverywhere.TransitionUtils:
    91:111:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    159:171:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> createViewBitmap
    49:50:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
com.transitionseverywhere.TransitionValues -> com.transitionseverywhere.TransitionValues:
    44:58:void <init>() -> <init>
    62:64:boolean equals(java.lang.Object) -> equals
    74:74:int hashCode() -> hashCode
    79:83:java.lang.String toString() -> toString
com.transitionseverywhere.TransitionValuesMaps -> com.transitionseverywhere.TransitionValuesMaps:
    24:29:void <init>() -> <init>
com.transitionseverywhere.Visibility -> com.transitionseverywhere.Visibility:
    77:77:void <clinit>() -> <clinit>
    96:94:void <init>() -> <init>
    163:163:void captureEndValues(com.transitionseverywhere.TransitionValues) -> captureEndValues
    158:158:void captureStartValues(com.transitionseverywhere.TransitionValues) -> captureStartValues
    147:153:void captureValues(com.transitionseverywhere.TransitionValues,int) -> captureValues
    257:264:android.animation.Animator createAnimator(android.view.ViewGroup,com.transitionseverywhere.TransitionValues,com.transitionseverywhere.TransitionValues) -> createAnimator
    139:139:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    203:249:com.transitionseverywhere.Visibility$VisibilityInfo getVisibilityChangeInfo(com.transitionseverywhere.TransitionValues,com.transitionseverywhere.TransitionValues) -> getVisibilityChangeInfo
    495:503:boolean isTransitionRequired(com.transitionseverywhere.TransitionValues,com.transitionseverywhere.TransitionValues) -> isTransitionRequired
    293:318:android.animation.Animator onAppear(android.view.ViewGroup,com.transitionseverywhere.TransitionValues,int,com.transitionseverywhere.TransitionValues,int) -> onAppear
    378:483:android.animation.Animator onDisappear(android.view.ViewGroup,com.transitionseverywhere.TransitionValues,int,com.transitionseverywhere.TransitionValues,int) -> onDisappear
    121:119:com.transitionseverywhere.Visibility setMode(int) -> setMode
com.transitionseverywhere.Visibility$1 -> com.transitionseverywhere.Visibility$1:
    454:454:void <init>(com.transitionseverywhere.Visibility,android.view.View,android.view.ViewGroup,android.view.View) -> <init>
    457:460:void onTransitionEnd(com.transitionseverywhere.Transition) -> onTransitionEnd
com.transitionseverywhere.Visibility$DisappearListener -> com.transitionseverywhere.Visibility$DisappearListener:
    539:545:void <init>(android.view.View,int,boolean) -> <init>
    596:610:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    564:564:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    569:569:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    550:551:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    557:558:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    578:578:void onTransitionEnd(com.transitionseverywhere.Transition) -> onTransitionEnd
    587:587:void onTransitionPause(com.transitionseverywhere.Transition) -> onTransitionPause
    592:592:void onTransitionResume(com.transitionseverywhere.Transition) -> onTransitionResume
    614:616:void suppressLayout(boolean) -> suppressLayout
com.transitionseverywhere.Visibility$VisibilityInfo -> com.transitionseverywhere.Visibility$VisibilityInfo:
    82:82:void <init>() -> <init>
    82:82:void <init>(com.transitionseverywhere.Visibility$1) -> <init>
com.transitionseverywhere.utils.AnimatorUtils -> com.transitionseverywhere.utils.AnimatorUtils:
    143:153:void <clinit>() -> <clinit>
    158:158:void addPauseListener(android.animation.Animator,android.animation.Animator$AnimatorPauseListener) -> addPauseListener
    202:202:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    198:198:boolean isAnimatorStarted(android.animation.Animator) -> isAnimatorStarted
    172:172:android.animation.Animator ofPointF(java.lang.Object,com.transitionseverywhere.utils.PointFProperty,float,float,float,float) -> ofPointF
    177:177:android.animation.Animator ofPointF(java.lang.Object,com.transitionseverywhere.utils.PointFProperty,android.graphics.Path) -> ofPointF
    186:187:android.animation.Animator ofPointF(java.lang.Object,com.transitionseverywhere.utils.PointFProperty,com.transitionseverywhere.PathMotion,float,float,float,float) -> ofPointF
    162:162:void pause(android.animation.Animator) -> pause
    166:166:void resume(android.animation.Animator) -> resume
com.transitionseverywhere.utils.AnimatorUtils$BaseAnimatorCompat -> com.transitionseverywhere.utils.AnimatorUtils$BaseAnimatorCompat:
    16:16:void <init>() -> <init>
com.transitionseverywhere.utils.AnimatorUtils$IceCreamSandwichAnimatorCompat -> com.transitionseverywhere.utils.AnimatorUtils$IceCreamSandwichAnimatorCompat:
    56:56:void <init>() -> <init>
    76:76:boolean isAnimatorStarted(android.animation.Animator) -> isAnimatorStarted
    66:66:android.animation.Animator ofPointF(java.lang.Object,com.transitionseverywhere.utils.PointFProperty,float,float,float,float) -> ofPointF
    71:71:android.animation.Animator ofPointF(java.lang.Object,com.transitionseverywhere.utils.PointFProperty,android.graphics.Path) -> ofPointF
    60:60:void pause(android.animation.Animator) -> pause
com.transitionseverywhere.utils.AnimatorUtils$JellyBeanCompat -> com.transitionseverywhere.utils.AnimatorUtils$JellyBeanCompat:
    105:105:void <init>() -> <init>
    108:108:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
com.transitionseverywhere.utils.AnimatorUtils$KitKatAnimatorCompat -> com.transitionseverywhere.utils.AnimatorUtils$KitKatAnimatorCompat:
    113:113:void <init>() -> <init>
    116:116:void addPauseListener(android.animation.Animator,android.animation.Animator$AnimatorPauseListener) -> addPauseListener
    121:121:void pause(android.animation.Animator) -> pause
    126:126:void resume(android.animation.Animator) -> resume
com.transitionseverywhere.utils.AnimatorUtils$LollipopAnimatorCompat -> com.transitionseverywhere.utils.AnimatorUtils$LollipopAnimatorCompat:
    131:131:void <init>() -> <init>
    135:135:android.animation.Animator ofPointF(java.lang.Object,com.transitionseverywhere.utils.PointFProperty,android.graphics.Path) -> ofPointF
com.transitionseverywhere.utils.BasePointFAnimator -> com.transitionseverywhere.utils.BasePointFAnimator:
    26:30:void <init>(java.lang.Object,com.transitionseverywhere.utils.PointFProperty) -> <init>
    37:44:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.transitionseverywhere.utils.PathAnimatorCompat -> com.transitionseverywhere.utils.PathAnimatorCompat:
    21:18:void <init>(java.lang.Object,com.transitionseverywhere.utils.PointFProperty) -> <init>
    42:43:void applyAnimatedFraction(android.graphics.PointF,float) -> applyAnimatedFraction
    27:29:com.transitionseverywhere.utils.PathAnimatorCompat ofPointF(java.lang.Object,com.transitionseverywhere.utils.PointFProperty,android.graphics.Path) -> ofPointF
com.transitionseverywhere.utils.PointFAnimator -> com.transitionseverywhere.utils.PointFAnimator:
    16:16:void <init>(java.lang.Object,com.transitionseverywhere.utils.PointFProperty) -> <init>
    33:34:void applyAnimatedFraction(android.graphics.PointF,float) -> applyAnimatedFraction
    23:27:com.transitionseverywhere.utils.PointFAnimator ofPointF(java.lang.Object,com.transitionseverywhere.utils.PointFProperty,float,float,float,float) -> ofPointF
com.transitionseverywhere.utils.PointFProperty -> com.transitionseverywhere.utils.PointFProperty:
    15:15:void <init>() -> <init>
    11:11:java.lang.Object get(java.lang.Object) -> get
com.transitionseverywhere.utils.RectEvaluator -> com.transitionseverywhere.utils.RectEvaluator:
    41:41:void <init>() -> <init>
    26:26:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    77:85:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
com.transitionseverywhere.utils.ReflectionUtils -> com.transitionseverywhere.utils.ReflectionUtils:
    119:123:void <clinit>() -> <clinit>
    35:35:java.lang.Class getClass(java.lang.String) -> getClass
    109:111:java.lang.Object getFieldValue(java.lang.Object,java.lang.Object,java.lang.reflect.Field) -> getFieldValue
    43:45:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    81:87:java.lang.reflect.Field getPrivateField(java.lang.Class,java.lang.String) -> getPrivateField
    56:59:java.lang.reflect.Method getPrivateMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getPrivateMethod
    73:75:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    126:126:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.reflect.Method) -> invoke
    130:132:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.reflect.Method,java.lang.Object) -> invoke
    162:170:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.reflect.Method,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    99:101:void setFieldValue(java.lang.Object,java.lang.reflect.Field,java.lang.Object) -> setFieldValue
com.transitionseverywhere.utils.ViewGroupOverlayUtils -> com.transitionseverywhere.utils.ViewGroupOverlayUtils:
    137:140:void <clinit>() -> <clinit>
    146:146:void addOverlay(android.view.ViewGroup,android.view.View,int,int) -> addOverlay
    151:151:void initializeOverlay(android.view.ViewGroup) -> initializeOverlay
    156:156:void removeOverlay(android.view.ViewGroup,android.view.View) -> removeOverlay
com.transitionseverywhere.utils.ViewGroupOverlayUtils$BaseViewGroupOverlayUtils -> com.transitionseverywhere.utils.ViewGroupOverlayUtils$BaseViewGroupOverlayUtils:
    14:14:void <init>() -> <init>
    17:19:void addOverlay(android.view.ViewGroup,android.view.View,int,int) -> addOverlay
    38:38:void initializeOverlay(android.view.ViewGroup) -> initializeOverlay
    24:26:void removeOverlay(android.view.ViewGroup,android.view.View) -> removeOverlay
com.transitionseverywhere.utils.ViewGroupOverlayUtils$JellyBeanMR2ViewGroupUtils -> com.transitionseverywhere.utils.ViewGroupOverlayUtils$JellyBeanMR2ViewGroupUtils:
    71:71:void <init>() -> <init>
    75:76:void addOverlay(android.view.ViewGroup,android.view.View,int,int) -> addOverlay
    87:90:void moveViewInOverlay(android.view.ViewGroup,android.view.View,int,int) -> moveViewInOverlay
    81:81:void removeOverlay(android.view.ViewGroup,android.view.View) -> removeOverlay
com.transitionseverywhere.utils.ViewGroupUtils -> com.transitionseverywhere.utils.ViewGroupUtils:
    100:103:void <clinit>() -> <clinit>
    117:117:boolean cancelLayoutTransition(android.view.ViewGroup) -> cancelLayoutTransition
    109:109:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
com.transitionseverywhere.utils.ViewGroupUtils$BaseViewGroupUtils -> com.transitionseverywhere.utils.ViewGroupUtils$BaseViewGroupUtils:
    22:23:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    74:77:boolean cancelLayoutTransition(android.view.ViewGroup) -> cancelLayoutTransition
    26:62:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
com.transitionseverywhere.utils.ViewGroupUtils$BaseViewGroupUtils$1 -> com.transitionseverywhere.utils.ViewGroupUtils$BaseViewGroupUtils$1:
    27:27:void <init>(com.transitionseverywhere.utils.ViewGroupUtils$BaseViewGroupUtils) -> <init>
com.transitionseverywhere.utils.ViewGroupUtils$BaseViewGroupUtils$2 -> com.transitionseverywhere.utils.ViewGroupUtils$BaseViewGroupUtils$2:
    62:62:void <init>(com.transitionseverywhere.utils.ViewGroupUtils$BaseViewGroupUtils,android.view.ViewGroup,android.animation.LayoutTransition) -> <init>
    65:65:void run() -> run
com.transitionseverywhere.utils.ViewGroupUtils$JellyBeanMr2ViewGroupUtils -> com.transitionseverywhere.utils.ViewGroupUtils$JellyBeanMr2ViewGroupUtils:
    88:88:void <clinit>() -> <clinit>
    86:86:void <init>() -> <init>
    93:93:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
com.transitionseverywhere.utils.ViewOverlayPreJellybean -> com.transitionseverywhere.utils.ViewOverlayPreJellybean:
    28:28:void <clinit>() -> <clinit>
    33:34:void <init>(android.content.Context) -> <init>
    127:130:void addDrawable(android.graphics.drawable.Drawable) -> addDrawable
    53:79:void addView(android.view.View,int,int) -> addView
    148:162:com.transitionseverywhere.utils.ViewOverlayPreJellybean getOverlay(android.view.ViewGroup) -> getOverlay
    48:48:void init() -> init
    103:120:android.widget.FrameLayout$LayoutParams initParams(android.view.View,int,int) -> initParams
    139:141:void onDraw(android.graphics.Canvas) -> onDraw
    133:135:void removeDrawable(android.graphics.drawable.Drawable) -> removeDrawable
    90:93:void removeView(android.view.View) -> removeView
com.transitionseverywhere.utils.ViewOverlayUtils -> com.transitionseverywhere.utils.ViewOverlayUtils:
    40:43:void <clinit>() -> <clinit>
    48:48:void addOverlay(android.view.ViewGroup,android.graphics.drawable.Drawable) -> addOverlay
    52:52:void removeOverlay(android.view.ViewGroup,android.graphics.drawable.Drawable) -> removeOverlay
com.transitionseverywhere.utils.ViewOverlayUtils$BaseViewOverlayUtils -> com.transitionseverywhere.utils.ViewOverlayUtils$BaseViewOverlayUtils:
    10:10:void <init>() -> <init>
    13:14:void addOverlay(android.view.ViewGroup,android.graphics.drawable.Drawable) -> addOverlay
    18:19:void removeOverlay(android.view.ViewGroup,android.graphics.drawable.Drawable) -> removeOverlay
com.transitionseverywhere.utils.ViewOverlayUtils$JellyBeanMR2ViewUtils -> com.transitionseverywhere.utils.ViewOverlayUtils$JellyBeanMR2ViewUtils:
    25:25:void <init>() -> <init>
    28:28:void addOverlay(android.view.ViewGroup,android.graphics.drawable.Drawable) -> addOverlay
    33:33:void removeOverlay(android.view.ViewGroup,android.graphics.drawable.Drawable) -> removeOverlay
com.transitionseverywhere.utils.ViewUtils -> com.transitionseverywhere.utils.ViewUtils:
    168:182:void <clinit>() -> <clinit>
    199:199:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    207:207:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    239:239:java.lang.Object getWindowId(android.view.View) -> getWindowId
    247:247:boolean hasTransientState(android.view.View) -> hasTransientState
    191:191:boolean isLaidOut(android.view.View,boolean) -> isLaidOut
    195:195:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    251:251:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    274:274:void setLayoutParamsSilently(android.view.View,android.view.ViewGroup$LayoutParams) -> setLayoutParamsSilently
    269:269:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    264:264:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    219:219:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    223:223:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
com.transitionseverywhere.utils.ViewUtils$BaseViewUtils -> com.transitionseverywhere.utils.ViewUtils$BaseViewUtils:
    21:30:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    55:55:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    113:113:void setLayoutParamsSilently(android.view.View,android.view.ViewGroup$LayoutParams) -> setLayoutParamsSilently
    109:109:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    103:105:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
com.transitionseverywhere.utils.ViewUtils$ViewUtilsJellyBean -> com.transitionseverywhere.utils.ViewUtils$ViewUtilsJellyBean:
    119:119:void <init>() -> <init>
    127:127:boolean hasTransientState(android.view.View) -> hasTransientState
    122:122:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
com.transitionseverywhere.utils.ViewUtils$ViewUtilsJellyBeanMR1 -> com.transitionseverywhere.utils.ViewUtils$ViewUtilsJellyBeanMR1:
    132:132:void <init>() -> <init>
com.transitionseverywhere.utils.ViewUtils$ViewUtilsJellyBeanMR2 -> com.transitionseverywhere.utils.ViewUtils$ViewUtilsJellyBeanMR2:
    140:140:void <init>() -> <init>
    148:148:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    153:153:java.lang.Object getWindowId(android.view.View) -> getWindowId
    143:143:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
com.transitionseverywhere.utils.ViewUtils$ViewUtilsKitKat -> com.transitionseverywhere.utils.ViewUtils$ViewUtilsKitKat:
    158:158:void <init>() -> <init>
    161:161:boolean isLaidOut(android.view.View,boolean) -> isLaidOut
com.transitionseverywhere.utils.ViewUtilsLollipop -> com.transitionseverywhere.utils.ViewUtilsLollipop:
    17:27:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    61:61:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    31:31:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    36:36:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
com.transitionseverywhere.utils.ViewUtilsLollipopMr1 -> com.transitionseverywhere.utils.ViewUtilsLollipopMr1:
    16:20:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    25:30:android.util.Property getChangeBoundsProperty(java.lang.String) -> getChangeBoundsProperty
    45:51:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
com.viewpagerindicator.CirclePageIndicator -> com.viewpagerindicator.CirclePageIndicator:
    68:68:void <init>(android.content.Context) -> <init>
    72:72:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:113:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:141:int getFillColor() -> getFillColor
    158:158:int getOrientation() -> getOrientation
    132:132:int getPageColor() -> getPageColor
    185:185:float getRadius() -> getRadius
    167:167:int getStrokeColor() -> getStrokeColor
    176:176:float getStrokeWidth() -> getStrokeWidth
    462:475:int measureLong(int) -> measureLong
    490:501:int measureShort(int) -> measureShort
    199:278:void onDraw(android.graphics.Canvas) -> onDraw
    446:449:void onMeasure(int,int) -> onMeasure
    403:406:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    412:417:void onPageScrolled(int,float,int) -> onPageScrolled
    423:430:void onPageSelected(int) -> onPageSelected
    509:513:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    518:520:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    282:293:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    118:119:void setCentered(boolean) -> setCentered
    388:389:void setCurrentItem(int) -> setCurrentItem
    136:137:void setFillColor(int) -> setFillColor
    436:436:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    153:149:void setOrientation(int) -> setOrientation
    127:128:void setPageColor(int) -> setPageColor
    180:181:void setRadius(float) -> setRadius
    189:190:void setSnap(boolean) -> setSnap
    162:163:void setStrokeColor(int) -> setStrokeColor
    171:172:void setStrokeWidth(float) -> setStrokeWidth
    366:373:void setViewPager(androidx.viewpager.widget.ViewPager) -> setViewPager
    382:383:void setViewPager(androidx.viewpager.widget.ViewPager,int) -> setViewPager
com.viewpagerindicator.CirclePageIndicator$SavedState -> com.viewpagerindicator.CirclePageIndicator$SavedState:
    543:543:void <clinit>() -> <clinit>
    524:524:void <init>(android.os.Parcel,com.viewpagerindicator.CirclePageIndicator$1) -> <init>
    528:528:void <init>(android.os.Parcelable) -> <init>
    532:533:void <init>(android.os.Parcel) -> <init>
    538:539:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.CirclePageIndicator$SavedState$1 -> com.viewpagerindicator.CirclePageIndicator$SavedState$1:
    543:543:void <init>() -> <init>
    543:543:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    546:546:com.viewpagerindicator.CirclePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    543:543:java.lang.Object[] newArray(int) -> newArray
    551:551:com.viewpagerindicator.CirclePageIndicator$SavedState[] newArray(int) -> newArray
com.viewpagerindicator.IconPageIndicator -> com.viewpagerindicator.IconPageIndicator:
    45:45:void <init>(android.content.Context) -> <init>
    49:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:36:java.lang.Runnable access$002(com.viewpagerindicator.IconPageIndicator,java.lang.Runnable) -> access$002
    57:68:void animateToIcon(int) -> animateToIcon
    128:140:void notifyDataSetChanged() -> notifyDataSetChanged
    73:76:void onAttachedToWindow() -> onAttachedToWindow
    82:84:void onDetachedFromWindow() -> onDetachedFromWindow
    90:91:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    97:98:void onPageScrolled(int,float,int) -> onPageScrolled
    104:106:void onPageSelected(int) -> onPageSelected
    151:152:void setCurrentItem(int) -> setCurrentItem
    170:170:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    112:120:void setViewPager(androidx.viewpager.widget.ViewPager) -> setViewPager
    145:146:void setViewPager(androidx.viewpager.widget.ViewPager,int) -> setViewPager
com.viewpagerindicator.IconPageIndicator$1 -> com.viewpagerindicator.IconPageIndicator$1:
    61:61:void <init>(com.viewpagerindicator.IconPageIndicator,android.view.View) -> <init>
    63:65:void run() -> run
com.viewpagerindicator.IcsLinearLayout -> com.viewpagerindicator.IcsLinearLayout:
    18:18:void <clinit>() -> <clinit>
    35:41:void <init>(android.content.Context,int) -> <init>
    128:150:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    101:123:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    155:157:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    161:163:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    167:173:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    62:85:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    90:97:void onDraw(android.graphics.Canvas) -> onDraw
    45:57:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
com.viewpagerindicator.LinePageIndicator -> com.viewpagerindicator.LinePageIndicator:
    57:57:void <init>(android.content.Context) -> <init>
    61:61:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:96:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    152:152:float getGapWidth() -> getGapWidth
    133:133:float getLineWidth() -> getLineWidth
    124:124:int getSelectedColor() -> getSelectedColor
    143:143:float getStrokeWidth() -> getStrokeWidth
    115:115:int getUnselectedColor() -> getUnselectedColor
    383:397:int measureHeight(int) -> measureHeight
    356:371:int measureWidth(int) -> measureWidth
    157:188:void onDraw(android.graphics.Canvas) -> onDraw
    344:344:void onMeasure(int,int) -> onMeasure
    315:316:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    322:323:void onPageScrolled(int,float,int) -> onPageScrolled
    329:333:void onPageSelected(int) -> onPageSelected
    402:405:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    410:412:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    193:204:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    101:102:void setCentered(boolean) -> setCentered
    300:301:void setCurrentItem(int) -> setCurrentItem
    147:148:void setGapWidth(float) -> setGapWidth
    128:129:void setLineWidth(float) -> setLineWidth
    339:339:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    119:120:void setSelectedColor(int) -> setSelectedColor
    137:139:void setStrokeWidth(float) -> setStrokeWidth
    110:111:void setUnselectedColor(int) -> setUnselectedColor
    277:285:void setViewPager(androidx.viewpager.widget.ViewPager) -> setViewPager
    294:295:void setViewPager(androidx.viewpager.widget.ViewPager,int) -> setViewPager
com.viewpagerindicator.LinePageIndicator$SavedState -> com.viewpagerindicator.LinePageIndicator$SavedState:
    435:435:void <clinit>() -> <clinit>
    416:416:void <init>(android.os.Parcel,com.viewpagerindicator.LinePageIndicator$1) -> <init>
    420:420:void <init>(android.os.Parcelable) -> <init>
    424:425:void <init>(android.os.Parcel) -> <init>
    430:431:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.LinePageIndicator$SavedState$1 -> com.viewpagerindicator.LinePageIndicator$SavedState$1:
    435:435:void <init>() -> <init>
    435:435:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    438:438:com.viewpagerindicator.LinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    435:435:java.lang.Object[] newArray(int) -> newArray
    443:443:com.viewpagerindicator.LinePageIndicator$SavedState[] newArray(int) -> newArray
com.viewpagerindicator.R$styleable -> com.viewpagerindicator.R$styleable:
    137:177:void <clinit>() -> <clinit>
com.viewpagerindicator.TabPageIndicator -> com.viewpagerindicator.TabPageIndicator:
    39:39:void <clinit>() -> <clinit>
    78:78:void <init>(android.content.Context) -> <init>
    82:86:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:37:androidx.viewpager.widget.ViewPager access$000(com.viewpagerindicator.TabPageIndicator) -> access$000
    37:37:com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener access$100(com.viewpagerindicator.TabPageIndicator) -> access$100
    37:37:java.lang.Runnable access$202(com.viewpagerindicator.TabPageIndicator,java.lang.Runnable) -> access$202
    37:37:int access$400(com.viewpagerindicator.TabPageIndicator) -> access$400
    153:163:void addTab(int,java.lang.CharSequence,int) -> addTab
    121:132:void animateToTab(int) -> animateToTab
    206:228:void notifyDataSetChanged() -> notifyDataSetChanged
    137:140:void onAttachedToWindow() -> onAttachedToWindow
    146:148:void onDetachedFromWindow() -> onDetachedFromWindow
    95:116:void onMeasure(int,int) -> onMeasure
    168:169:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    175:176:void onPageScrolled(int,float,int) -> onPageScrolled
    182:184:void onPageSelected(int) -> onPageSelected
    239:240:void setCurrentItem(int) -> setCurrentItem
    258:258:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    90:90:void setOnTabReselectedListener(com.viewpagerindicator.TabPageIndicator$OnTabReselectedListener) -> setOnTabReselectedListener
    190:198:void setViewPager(androidx.viewpager.widget.ViewPager) -> setViewPager
    233:234:void setViewPager(androidx.viewpager.widget.ViewPager,int) -> setViewPager
com.viewpagerindicator.TabPageIndicator$1 -> com.viewpagerindicator.TabPageIndicator$1:
    55:55:void <init>(com.viewpagerindicator.TabPageIndicator) -> <init>
    57:62:void onClick(android.view.View) -> onClick
com.viewpagerindicator.TabPageIndicator$2 -> com.viewpagerindicator.TabPageIndicator$2:
    125:125:void <init>(com.viewpagerindicator.TabPageIndicator,android.view.View) -> <init>
    127:129:void run() -> run
com.viewpagerindicator.TabPageIndicator$TabView -> com.viewpagerindicator.TabPageIndicator$TabView:
    264:265:void <init>(com.viewpagerindicator.TabPageIndicator,android.content.Context) -> <init>
    261:261:int access$302(com.viewpagerindicator.TabPageIndicator$TabView,int) -> access$302
    280:280:int getIndex() -> getIndex
    270:274:void onMeasure(int,int) -> onMeasure
com.viewpagerindicator.TitlePageIndicator -> com.viewpagerindicator.TitlePageIndicator:
    152:152:void <init>(android.content.Context) -> <init>
    156:156:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    160:215:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    700:703:android.graphics.Rect calcBounds(int,android.graphics.Paint) -> calcBounds
    672:685:java.util.ArrayList calculateAllBounds(android.graphics.Paint) -> calculateAllBounds
    661:662:void clipViewOnTheLeft(android.graphics.Rect,float,int) -> clipViewOnTheLeft
    648:649:void clipViewOnTheRight(android.graphics.Rect,float,int) -> clipViewOnTheRight
    331:331:float getClipPadding() -> getClipPadding
    220:220:int getFooterColor() -> getFooterColor
    240:240:float getFooterIndicatorHeight() -> getFooterIndicatorHeight
    249:249:float getFooterIndicatorPadding() -> getFooterIndicatorPadding
    258:258:com.viewpagerindicator.TitlePageIndicator$IndicatorStyle getFooterIndicatorStyle() -> getFooterIndicatorStyle
    230:230:float getFooterLineHeight() -> getFooterLineHeight
    267:267:com.viewpagerindicator.TitlePageIndicator$LinePosition getLinePosition() -> getLinePosition
    276:276:int getSelectedColor() -> getSelectedColor
    294:294:int getTextColor() -> getTextColor
    304:304:float getTextSize() -> getTextSize
    864:864:java.lang.CharSequence getTitle(int) -> getTitle
    313:313:float getTitlePadding() -> getTitlePadding
    322:322:float getTopPadding() -> getTopPadding
    345:345:android.graphics.Typeface getTypeface() -> getTypeface
    355:517:void onDraw(android.graphics.Canvas) -> onDraw
    793:812:void onMeasure(int,int) -> onMeasure
    755:758:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    764:769:void onPageScrolled(int,float,int) -> onPageScrolled
    775:781:void onPageSelected(int) -> onPageSelected
    817:820:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    825:827:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    545:556:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    335:336:void setClipPadding(float) -> setClipPadding
    745:746:void setCurrentItem(int) -> setCurrentItem
    224:226:void setFooterColor(int) -> setFooterColor
    244:245:void setFooterIndicatorHeight(float) -> setFooterIndicatorHeight
    253:254:void setFooterIndicatorPadding(float) -> setFooterIndicatorPadding
    262:263:void setFooterIndicatorStyle(com.viewpagerindicator.TitlePageIndicator$IndicatorStyle) -> setFooterIndicatorStyle
    234:236:void setFooterLineHeight(float) -> setFooterLineHeight
    271:272:void setLinePosition(com.viewpagerindicator.TitlePageIndicator$LinePosition) -> setLinePosition
    740:740:void setOnCenterItemClickListener(com.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener) -> setOnCenterItemClickListener
    787:787:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    289:290:void setSelectedBold(boolean) -> setSelectedBold
    280:281:void setSelectedColor(int) -> setSelectedColor
    298:300:void setTextColor(int) -> setTextColor
    308:309:void setTextSize(float) -> setTextSize
    317:318:void setTitlePadding(float) -> setTitlePadding
    326:327:void setTopPadding(float) -> setTopPadding
    340:341:void setTypeface(android.graphics.Typeface) -> setTypeface
    709:716:void setViewPager(androidx.viewpager.widget.ViewPager) -> setViewPager
    725:726:void setViewPager(androidx.viewpager.widget.ViewPager,int) -> setViewPager
com.viewpagerindicator.TitlePageIndicator$1 -> com.viewpagerindicator.TitlePageIndicator$1:
    510:510:void <clinit>() -> <clinit>
com.viewpagerindicator.TitlePageIndicator$IndicatorStyle -> com.viewpagerindicator.TitlePageIndicator$IndicatorStyle:
    80:79:void <clinit>() -> <clinit>
    84:85:void <init>(java.lang.String,int,int) -> <init>
    89:90:com.viewpagerindicator.TitlePageIndicator$IndicatorStyle fromValue(int) -> fromValue
    79:79:com.viewpagerindicator.TitlePageIndicator$IndicatorStyle valueOf(java.lang.String) -> valueOf
    79:79:com.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] values() -> values
com.viewpagerindicator.TitlePageIndicator$LinePosition -> com.viewpagerindicator.TitlePageIndicator$LinePosition:
    99:98:void <clinit>() -> <clinit>
    103:104:void <init>(java.lang.String,int,int) -> <init>
    108:109:com.viewpagerindicator.TitlePageIndicator$LinePosition fromValue(int) -> fromValue
    98:98:com.viewpagerindicator.TitlePageIndicator$LinePosition valueOf(java.lang.String) -> valueOf
    98:98:com.viewpagerindicator.TitlePageIndicator$LinePosition[] values() -> values
com.viewpagerindicator.TitlePageIndicator$SavedState -> com.viewpagerindicator.TitlePageIndicator$SavedState:
    850:850:void <clinit>() -> <clinit>
    831:831:void <init>(android.os.Parcel,com.viewpagerindicator.TitlePageIndicator$1) -> <init>
    835:835:void <init>(android.os.Parcelable) -> <init>
    839:840:void <init>(android.os.Parcel) -> <init>
    845:846:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.TitlePageIndicator$SavedState$1 -> com.viewpagerindicator.TitlePageIndicator$SavedState$1:
    850:850:void <init>() -> <init>
    850:850:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    853:853:com.viewpagerindicator.TitlePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    850:850:java.lang.Object[] newArray(int) -> newArray
    858:858:com.viewpagerindicator.TitlePageIndicator$SavedState[] newArray(int) -> newArray
com.viewpagerindicator.UnderlinePageIndicator -> com.viewpagerindicator.UnderlinePageIndicator:
    74:74:void <init>(android.content.Context) -> <init>
    78:78:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    82:109:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    38:38:boolean access$000(com.viewpagerindicator.UnderlinePageIndicator) -> access$000
    38:38:android.graphics.Paint access$100(com.viewpagerindicator.UnderlinePageIndicator) -> access$100
    38:38:int access$200(com.viewpagerindicator.UnderlinePageIndicator) -> access$200
    38:38:java.lang.Runnable access$300(com.viewpagerindicator.UnderlinePageIndicator) -> access$300
    130:130:int getFadeDelay() -> getFadeDelay
    138:138:int getFadeLength() -> getFadeLength
    113:113:boolean getFades() -> getFades
    147:147:int getSelectedColor() -> getSelectedColor
    157:178:void onDraw(android.graphics.Canvas) -> onDraw
    311:314:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    320:333:void onPageScrolled(int,float,int) -> onPageScrolled
    339:346:void onPageSelected(int) -> onPageSelected
    357:360:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    365:367:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    182:193:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    296:297:void setCurrentItem(int) -> setCurrentItem
    134:134:void setFadeDelay(int) -> setFadeDelay
    142:143:void setFadeLength(int) -> setFadeLength
    117:124:void setFades(boolean) -> setFades
    352:352:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    151:152:void setSelectedColor(int) -> setSelectedColor
    266:274:void setViewPager(androidx.viewpager.widget.ViewPager) -> setViewPager
    290:291:void setViewPager(androidx.viewpager.widget.ViewPager,int) -> setViewPager
com.viewpagerindicator.UnderlinePageIndicator$1 -> com.viewpagerindicator.UnderlinePageIndicator$1:
    60:60:void <init>(com.viewpagerindicator.UnderlinePageIndicator) -> <init>
    62:68:void run() -> run
com.viewpagerindicator.UnderlinePageIndicator$2 -> com.viewpagerindicator.UnderlinePageIndicator$2:
    279:279:void <init>(com.viewpagerindicator.UnderlinePageIndicator) -> <init>
    281:282:void run() -> run
com.viewpagerindicator.UnderlinePageIndicator$SavedState -> com.viewpagerindicator.UnderlinePageIndicator$SavedState:
    390:390:void <clinit>() -> <clinit>
    371:371:void <init>(android.os.Parcel,com.viewpagerindicator.UnderlinePageIndicator$1) -> <init>
    375:375:void <init>(android.os.Parcelable) -> <init>
    379:380:void <init>(android.os.Parcel) -> <init>
    385:386:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.viewpagerindicator.UnderlinePageIndicator$SavedState$1 -> com.viewpagerindicator.UnderlinePageIndicator$SavedState$1:
    390:390:void <init>() -> <init>
    390:390:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    393:393:com.viewpagerindicator.UnderlinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    390:390:java.lang.Object[] newArray(int) -> newArray
    398:398:com.viewpagerindicator.UnderlinePageIndicator$SavedState[] newArray(int) -> newArray
com.vladsch.flexmark.Extension -> com.vladsch.flexmark.Extension:
    22:23:void <clinit>() -> <clinit>
com.vladsch.flexmark.ast.AutoLink -> com.vladsch.flexmark.ast.AutoLink:
    6:15:void <init>() -> <init>
    28:31:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    19:19:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    43:43:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    47:47:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.ast.BlankLine -> com.vladsch.flexmark.ast.BlankLine:
    6:6:void <init>() -> <init>
    10:11:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    16:16:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.Block -> com.vladsch.flexmark.ast.Block:
    8:8:void <init>() -> <init>
    12:12:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    16:16:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,java.util.List) -> <init>
    20:20:void <init>(java.util.List) -> <init>
    7:7:com.vladsch.flexmark.ast.Node getParent() -> getParent
    28:28:com.vladsch.flexmark.ast.Block getParent() -> getParent
    33:34:void setParent(com.vladsch.flexmark.ast.Node) -> setParent
com.vladsch.flexmark.ast.BlockContent -> com.vladsch.flexmark.ast.BlockContent:
    34:12:void <init>() -> <init>
    65:66:void add(com.vladsch.flexmark.util.sequence.BasedSequence,int) -> add
    71:72:void addAll(java.util.List,java.util.List) -> addAll
    80:81:com.vladsch.flexmark.util.sequence.BasedSequence getContents() -> getContents
    89:92:com.vladsch.flexmark.util.sequence.BasedSequence getContents(int,int) -> getContents
    31:31:int getLineCount() -> getLineCount
    27:27:java.util.List getLineIndents() -> getLineIndents
    23:23:java.util.List getLines() -> getLines
    19:19:com.vladsch.flexmark.util.sequence.BasedSequence getSpanningChars() -> getSpanningChars
com.vladsch.flexmark.ast.BlockQuote -> com.vladsch.flexmark.ast.BlockQuote:
    20:8:void <init>() -> <init>
    17:17:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    40:40:void setOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setOpeningMarker
com.vladsch.flexmark.ast.BulletList -> com.vladsch.flexmark.ast.BulletList:
    15:15:void <init>() -> <init>
    31:31:char getOpeningMarker() -> getOpeningMarker
    12:12:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    35:35:void setOpeningMarker(char) -> setOpeningMarker
com.vladsch.flexmark.ast.BulletListItem -> com.vladsch.flexmark.ast.BulletListItem:
    9:9:void <init>() -> <init>
com.vladsch.flexmark.ast.Code -> com.vladsch.flexmark.ast.Code:
    6:6:void <init>() -> <init>
    14:14:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
com.vladsch.flexmark.ast.CodeBlock -> com.vladsch.flexmark.ast.CodeBlock:
    14:14:void <init>() -> <init>
    22:22:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,java.util.List) -> <init>
    11:11:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.ContentNode -> com.vladsch.flexmark.ast.ContentNode:
    12:10:void <init>() -> <init>
    17:10:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    21:22:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,java.util.List) -> <init>
    26:26:void <init>(java.util.List) -> <init>
    79:79:com.vladsch.flexmark.util.sequence.BasedSequence getContentChars() -> getContentChars
    69:69:java.util.List getContentLines() -> getContentLines
    74:74:java.util.List getContentLines(int,int) -> getContentLines
    64:64:com.vladsch.flexmark.util.sequence.BasedSequence getLineChars(int) -> getLineChars
    59:59:int getLineCount() -> getLineCount
    50:50:com.vladsch.flexmark.util.sequence.BasedSequence getSpanningChars() -> getSpanningChars
    54:54:com.vladsch.flexmark.util.sequence.BasedSequence getSpanningChars(java.util.List) -> getSpanningChars
    34:35:void setContent(com.vladsch.flexmark.util.sequence.BasedSequence,java.util.List) -> setContent
    39:40:void setContent(java.util.List) -> setContent
    44:45:void setContent(com.vladsch.flexmark.ast.BlockContent) -> setContent
    88:88:void setContentLines(java.util.List) -> setContentLines
com.vladsch.flexmark.ast.CustomBlock -> com.vladsch.flexmark.ast.CustomBlock:
    8:8:void <init>() -> <init>
    20:20:void <init>(java.util.List) -> <init>
com.vladsch.flexmark.ast.CustomNode -> com.vladsch.flexmark.ast.CustomNode:
    6:6:void <init>() -> <init>
    10:10:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
com.vladsch.flexmark.ast.DelimitedNodeImpl -> com.vladsch.flexmark.ast.DelimitedNodeImpl:
    20:8:void <init>() -> <init>
    28:32:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    17:17:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    44:44:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    48:48:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.ast.DescendantNodeIterable -> com.vladsch.flexmark.ast.DescendantNodeIterable:
    14:18:void <init>(com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterable) -> <init>
    6:6:com.vladsch.flexmark.util.collection.iteration.ReversibleIterator iterator() -> iterator
    6:6:java.util.Iterator iterator() -> iterator
    24:24:com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterator iterator() -> iterator
com.vladsch.flexmark.ast.DescendantNodeIterator -> com.vladsch.flexmark.ast.DescendantNodeIterator:
    19:23:void <init>(com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterator) -> <init>
    33:33:boolean hasNext() -> hasNext
    28:28:boolean isReversed() -> isReversed
    8:8:java.lang.Object next() -> next
    38:56:com.vladsch.flexmark.ast.Node next() -> next
    65:66:void remove() -> remove
com.vladsch.flexmark.ast.Document -> com.vladsch.flexmark.ast.Document:
    21:22:void <init>(com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    32:32:boolean contains(com.vladsch.flexmark.util.options.DataKey) -> contains
    36:36:java.lang.Object get(com.vladsch.flexmark.util.options.DataKey) -> get
    26:26:java.util.Map getAll() -> getAll
    17:17:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    29:29:java.util.Collection keySet() -> keySet
    84:84:com.vladsch.flexmark.util.options.MutableDataHolder set(com.vladsch.flexmark.util.options.DataKey,java.lang.Object) -> set
com.vladsch.flexmark.ast.Emphasis -> com.vladsch.flexmark.ast.Emphasis:
    6:6:void <init>() -> <init>
    14:14:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
com.vladsch.flexmark.ast.FencedCodeBlock -> com.vladsch.flexmark.ast.FencedCodeBlock:
    29:11:void <init>() -> <init>
    73:73:com.vladsch.flexmark.util.sequence.BasedSequence getInfo() -> getInfo
    26:26:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    60:60:void setClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setClosingMarker
    52:52:void setInfo(com.vladsch.flexmark.util.sequence.BasedSequence) -> setInfo
    48:48:void setOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setOpeningMarker
com.vladsch.flexmark.ast.HardLineBreak -> com.vladsch.flexmark.ast.HardLineBreak:
    11:11:void <init>() -> <init>
    15:15:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    8:8:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.Heading -> com.vladsch.flexmark.ast.Heading:
    45:13:void <init>() -> <init>
    37:37:java.lang.String getAnchorRefId() -> getAnchorRefId
    27:27:java.lang.String getAnchorRefText() -> getAnchorRefText
    93:93:int getLevel() -> getLevel
    22:22:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    77:77:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    42:42:void setAnchorRefId(java.lang.String) -> setAnchorRefId
    89:89:void setClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setClosingMarker
    97:97:void setLevel(int) -> setLevel
    73:73:void setOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setOpeningMarker
    81:81:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.ast.HtmlBlock -> com.vladsch.flexmark.ast.HtmlBlock:
    18:18:void <init>() -> <init>
    15:15:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.HtmlBlockBase -> com.vladsch.flexmark.ast.HtmlBlockBase:
    18:18:void <init>() -> <init>
    22:22:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    15:15:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.HtmlCommentBlock -> com.vladsch.flexmark.ast.HtmlCommentBlock:
    13:13:void <init>() -> <init>
com.vladsch.flexmark.ast.HtmlEntity -> com.vladsch.flexmark.ast.HtmlEntity:
    22:22:void <init>() -> <init>
    26:26:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    19:19:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.HtmlInline -> com.vladsch.flexmark.ast.HtmlInline:
    21:21:void <init>() -> <init>
    25:25:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    13:13:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.HtmlInlineBase -> com.vladsch.flexmark.ast.HtmlInlineBase:
    21:21:void <init>() -> <init>
    25:25:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
com.vladsch.flexmark.ast.HtmlInlineComment -> com.vladsch.flexmark.ast.HtmlInlineComment:
    21:21:void <init>() -> <init>
    25:25:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    13:13:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.HtmlInnerBlock -> com.vladsch.flexmark.ast.HtmlInnerBlock:
    21:21:void <init>() -> <init>
    25:25:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    13:13:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.HtmlInnerBlockComment -> com.vladsch.flexmark.ast.HtmlInnerBlockComment:
    21:21:void <init>() -> <init>
    25:25:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    13:13:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.Image -> com.vladsch.flexmark.ast.Image:
    43:6:void <init>() -> <init>
    10:10:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    79:79:com.vladsch.flexmark.util.sequence.BasedSequence getUrlContent() -> getUrlContent
    68:71:void setTextChars(com.vladsch.flexmark.util.sequence.BasedSequence) -> setTextChars
    75:75:void setUrlContent(com.vladsch.flexmark.util.sequence.BasedSequence) -> setUrlContent
com.vladsch.flexmark.ast.ImageRef -> com.vladsch.flexmark.ast.ImageRef:
    6:6:void <init>() -> <init>
com.vladsch.flexmark.ast.IndentedCodeBlock -> com.vladsch.flexmark.ast.IndentedCodeBlock:
    14:14:void <init>() -> <init>
    11:11:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.InlineLinkNode -> com.vladsch.flexmark.ast.InlineLinkNode:
    63:10:void <init>() -> <init>
    83:92:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    155:155:com.vladsch.flexmark.util.sequence.BasedSequence getLinkClosingMarker() -> getLinkClosingMarker
    147:147:com.vladsch.flexmark.util.sequence.BasedSequence getLinkOpeningMarker() -> getLinkOpeningMarker
    14:14:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    123:123:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    139:139:com.vladsch.flexmark.util.sequence.BasedSequence getTextClosingMarker() -> getTextClosingMarker
    127:127:com.vladsch.flexmark.util.sequence.BasedSequence getTextOpeningMarker() -> getTextOpeningMarker
    159:159:void setLinkClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setLinkClosingMarker
    151:151:void setLinkOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setLinkOpeningMarker
    164:164:java.lang.String toStringAttributes() -> toStringAttributes
com.vladsch.flexmark.ast.Link -> com.vladsch.flexmark.ast.Link:
    6:6:void <init>() -> <init>
    31:34:void setTextChars(com.vladsch.flexmark.util.sequence.BasedSequence) -> setTextChars
com.vladsch.flexmark.ast.LinkNode -> com.vladsch.flexmark.ast.LinkNode:
    7:7:void <init>() -> <init>
    11:11:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
com.vladsch.flexmark.ast.LinkNodeBase -> com.vladsch.flexmark.ast.LinkNodeBase:
    16:14:void <init>() -> <init>
    20:14:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    92:92:com.vladsch.flexmark.util.sequence.BasedSequence getTitle() -> getTitle
    128:128:com.vladsch.flexmark.util.sequence.BasedSequence getTitleClosingMarker() -> getTitleClosingMarker
    116:116:com.vladsch.flexmark.util.sequence.BasedSequence getTitleOpeningMarker() -> getTitleOpeningMarker
    88:88:com.vladsch.flexmark.util.sequence.BasedSequence getUrl() -> getUrl
    24:32:void setTitleChars(com.vladsch.flexmark.util.sequence.BasedSequence) -> setTitleChars
    37:59:void setUrlChars(com.vladsch.flexmark.util.sequence.BasedSequence) -> setUrlChars
com.vladsch.flexmark.ast.LinkRef -> com.vladsch.flexmark.ast.LinkRef:
    6:6:void <init>() -> <init>
com.vladsch.flexmark.ast.ListBlock -> com.vladsch.flexmark.ast.ListBlock:
    11:11:void <init>() -> <init>
    44:44:com.vladsch.flexmark.ast.Node getLastBlankLineChild() -> getLastBlankLineChild
    27:27:boolean isTight() -> isTight
    35:35:void setTight(boolean) -> setTight
com.vladsch.flexmark.ast.ListItem -> com.vladsch.flexmark.ast.ListItem:
    115:14:void <init>() -> <init>
    118:125:void <init>(com.vladsch.flexmark.ast.ListItem) -> <init>
    112:112:com.vladsch.flexmark.ast.Node getLastBlankLineChild() -> getLastBlankLineChild
    40:40:com.vladsch.flexmark.util.sequence.BasedSequence getMarkerSuffix() -> getMarkerSuffix
    28:28:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    98:98:boolean isContainsBlankLine() -> isContainsBlankLine
    94:94:boolean isHadBlankAfterItemParagraph() -> isHadBlankAfterItemParagraph
    90:90:boolean isInTightList() -> isInTightList
    78:79:boolean isItemParagraph(com.vladsch.flexmark.ast.Paragraph) -> isItemParagraph
    66:66:boolean isLoose() -> isLoose
    70:73:boolean isParagraphInTightListItem(com.vladsch.flexmark.ast.Paragraph) -> isParagraphInTightListItem
    86:86:boolean isParagraphWrappingDisabled(com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.parser.ListOptions,com.vladsch.flexmark.util.options.DataHolder) -> isParagraphWrappingDisabled
    58:58:boolean isTight() -> isTight
    102:102:void setContainsBlankLine(boolean) -> setContainsBlankLine
    107:107:void setHadBlankAfterItemParagraph(boolean) -> setHadBlankAfterItemParagraph
    54:54:void setLoose(boolean) -> setLoose
    46:46:void setMarkerSuffix(com.vladsch.flexmark.util.sequence.BasedSequence) -> setMarkerSuffix
    36:36:void setOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setOpeningMarker
    50:50:void setTight(boolean) -> setTight
com.vladsch.flexmark.ast.MailLink -> com.vladsch.flexmark.ast.MailLink:
    8:17:void <init>() -> <init>
    34:37:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    21:21:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    49:49:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    53:53:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.ast.Node -> com.vladsch.flexmark.ast.Node:
    13:13:void <clinit>() -> <clinit>
    23:21:void <init>() -> <init>
    26:27:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    334:342:void appendChild(com.vladsch.flexmark.ast.Node) -> appendChild
    31:36:com.vladsch.flexmark.ast.Node getAncestorOfType(java.lang.Class[]) -> getAncestorOfType
    686:699:com.vladsch.flexmark.ast.Node getBlankLineSibling() -> getBlankLineSibling
    177:177:com.vladsch.flexmark.util.sequence.BasedSequence getChars() -> getChars
    677:678:com.vladsch.flexmark.util.sequence.BasedSequence getChildChars() -> getChildChars
    162:165:com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterator getChildIterator() -> getChildIterator
    92:97:com.vladsch.flexmark.ast.Node getChildOfType(java.lang.Class[]) -> getChildOfType
    134:137:com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterable getChildren() -> getChildren
    148:151:com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterable getDescendants() -> getDescendants
    206:210:com.vladsch.flexmark.ast.Document getDocument() -> getDocument
    226:226:int getEndOffset() -> getEndOffset
    278:278:com.vladsch.flexmark.ast.Node getFirstChild() -> getFirstChild
    302:302:com.vladsch.flexmark.ast.Node getLastChild() -> getLastChild
    306:309:com.vladsch.flexmark.ast.Node getLastChildAnyNot(java.lang.Class[]) -> getLastChildAnyNot
    441:445:com.vladsch.flexmark.util.sequence.BasedSequence getLeadSegment(com.vladsch.flexmark.util.sequence.BasedSequence[]) -> getLeadSegment
    218:218:com.vladsch.flexmark.ast.Node getNext() -> getNext
    104:105:int getNodeOfTypeIndex(com.vladsch.flexmark.ast.Node,java.lang.Class[]) -> getNodeOfTypeIndex
    121:121:int getNodeOfTypeIndex(java.lang.Class[]) -> getNodeOfTypeIndex
    326:326:com.vladsch.flexmark.ast.Node getParent() -> getParent
    234:234:com.vladsch.flexmark.ast.Node getPrevious() -> getPrevious
    169:172:com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterator getReversedChildIterator() -> getReversedChildIterator
    222:222:int getStartOffset() -> getStartOffset
    230:230:int getTextLength() -> getTextLength
    449:456:com.vladsch.flexmark.util.sequence.BasedSequence getTrailSegment(com.vladsch.flexmark.util.sequence.BasedSequence[]) -> getTrailSegment
    190:190:boolean hasChildren() -> hasChildren
    376:385:void insertAfter(com.vladsch.flexmark.ast.Node) -> insertAfter
    390:399:void insertBefore(com.vladsch.flexmark.ast.Node) -> insertBefore
    114:115:boolean isOrDescendantOfType(java.lang.Class[]) -> isOrDescendantOfType
    707:719:void moveTrailingBlankLines() -> moveTrailingBlankLines
    214:214:void setChars(com.vladsch.flexmark.util.sequence.BasedSequence) -> setChars
    491:531:void setCharsFromContent() -> setCharsFromContent
    486:487:void setCharsFromContentOnly() -> setCharsFromContentOnly
    330:330:void setParent(com.vladsch.flexmark.ast.Node) -> setParent
    464:481:com.vladsch.flexmark.util.sequence.BasedSequence spanningChars(com.vladsch.flexmark.util.sequence.BasedSequence[]) -> spanningChars
    628:649:void takeChildren(com.vladsch.flexmark.ast.Node) -> takeChildren
    405:405:java.lang.String toString() -> toString
    360:372:void unlink() -> unlink
com.vladsch.flexmark.ast.NodeAdaptedVisitor -> com.vladsch.flexmark.ast.NodeAdaptedVisitor:
    21:22:void <init>(com.vladsch.flexmark.ast.NodeAdaptingVisitHandler[]) -> <init>
    34:35:com.vladsch.flexmark.ast.NodeAdaptedVisitor addHandlers(com.vladsch.flexmark.ast.NodeAdaptingVisitHandler[]) -> addHandlers
com.vladsch.flexmark.ast.NodeAdaptingVisitHandler -> com.vladsch.flexmark.ast.NodeAdaptingVisitHandler:
    12:14:void <init>(java.lang.Class,com.vladsch.flexmark.ast.NodeAdaptingVisitor) -> <init>
    35:40:boolean equals(java.lang.Object) -> equals
    18:18:java.lang.Class getNodeType() -> getNodeType
    45:46:int hashCode() -> hashCode
com.vladsch.flexmark.ast.NodeIterable -> com.vladsch.flexmark.ast.NodeIterable:
    47:47:void <clinit>() -> <clinit>
    13:16:void <init>(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.ast.Node,boolean) -> <init>
    8:8:com.vladsch.flexmark.util.collection.iteration.ReversibleIterator iterator() -> iterator
    8:8:java.util.Iterator iterator() -> iterator
    22:22:com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterator iterator() -> iterator
com.vladsch.flexmark.ast.NodeIterable$1 -> com.vladsch.flexmark.ast.NodeIterable$1:
    47:47:void <init>() -> <init>
    47:47:com.vladsch.flexmark.util.collection.iteration.ReversibleIterator iterator() -> iterator
    47:47:java.util.Iterator iterator() -> iterator
    50:50:com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterator iterator() -> iterator
com.vladsch.flexmark.ast.NodeIterator -> com.vladsch.flexmark.ast.NodeIterator:
    119:119:void <clinit>() -> <clinit>
    19:19:void <init>(com.vladsch.flexmark.ast.Node) -> <init>
    45:47:void <init>(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.ast.Node,boolean) -> <init>
    68:68:boolean hasNext() -> hasNext
    60:60:boolean isReversed() -> isReversed
    8:8:java.lang.Object next() -> next
    76:79:com.vladsch.flexmark.ast.Node next() -> next
    92:92:com.vladsch.flexmark.ast.Node peek() -> peek
    103:104:void remove() -> remove
com.vladsch.flexmark.ast.NodeIterator$1 -> com.vladsch.flexmark.ast.NodeIterator$1:
    119:119:void <init>() -> <init>
    119:119:java.lang.Object next() -> next
    137:137:com.vladsch.flexmark.ast.Node next() -> next
com.vladsch.flexmark.ast.NodeRepository -> com.vladsch.flexmark.ast.NodeRepository:
    17:18:void <init>(com.vladsch.flexmark.util.KeepType) -> <init>
    68:68:void clear() -> clear
    79:79:boolean containsKey(java.lang.Object) -> containsKey
    82:82:boolean containsValue(java.lang.Object) -> containsValue
    94:94:java.util.Set entrySet() -> entrySet
    98:98:boolean equals(java.lang.Object) -> equals
    85:85:java.lang.Object get(java.lang.Object) -> get
    101:101:int hashCode() -> hashCode
    76:76:boolean isEmpty() -> isEmpty
    88:88:java.util.Set keySet() -> keySet
    22:22:java.lang.String normalizeKey(java.lang.CharSequence) -> normalizeKey
    9:9:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    35:37:java.lang.Object put(java.lang.String,java.lang.Object) -> put
    50:50:void putAll(java.util.Map) -> putAll
    62:62:java.lang.Object remove(java.lang.Object) -> remove
    73:73:int size() -> size
    9:9:java.util.Collection values() -> values
    91:91:java.util.List values() -> values
com.vladsch.flexmark.ast.NodeVisitor -> com.vladsch.flexmark.ast.NodeVisitor:
    13:13:void <init>(com.vladsch.flexmark.ast.VisitHandler[]) -> <init>
    36:40:void visit(com.vladsch.flexmark.ast.Node) -> visit
    25:30:void visitChildren(com.vladsch.flexmark.ast.Node) -> visitChildren
com.vladsch.flexmark.ast.NodeVisitorBase -> com.vladsch.flexmark.ast.NodeVisitorBase:
    9:9:void <init>() -> <init>
    13:18:void visitChildren(com.vladsch.flexmark.ast.Node) -> visitChildren
com.vladsch.flexmark.ast.OrderedList -> com.vladsch.flexmark.ast.OrderedList:
    16:16:void <init>() -> <init>
    47:47:char getDelimiter() -> getDelimiter
    13:13:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    39:39:int getStartNumber() -> getStartNumber
    51:51:void setDelimiter(char) -> setDelimiter
    43:43:void setStartNumber(int) -> setStartNumber
com.vladsch.flexmark.ast.OrderedListItem -> com.vladsch.flexmark.ast.OrderedListItem:
    8:8:void <init>() -> <init>
com.vladsch.flexmark.ast.Paragraph -> com.vladsch.flexmark.ast.Paragraph:
    8:8:void <clinit>() -> <clinit>
    24:10:void <init>() -> <init>
    104:104:int getLineIndent(int) -> getLineIndent
    108:108:int[] getLineIndents() -> getLineIndents
    15:15:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    79:80:void setContent(com.vladsch.flexmark.ast.BlockContent) -> setContent
    89:95:void setContent(com.vladsch.flexmark.ast.Paragraph,int,int) -> setContent
    120:120:void setHasTableSeparator(boolean) -> setHasTableSeparator
    51:54:void setLineIndents(java.util.List) -> setLineIndents
    100:100:void setLineIndents(int[]) -> setLineIndents
    116:116:void setTrailingBlankLine(boolean) -> setTrailingBlankLine
com.vladsch.flexmark.ast.RefNode -> com.vladsch.flexmark.ast.RefNode:
    50:14:void <init>() -> <init>
    143:143:com.vladsch.flexmark.util.sequence.BasedSequence getReference() -> getReference
    154:155:com.vladsch.flexmark.ast.Reference getReferenceNode(com.vladsch.flexmark.ast.util.ReferenceRepository) -> getReferenceNode
    18:28:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    138:138:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    121:121:boolean isDefined() -> isDefined
    116:116:boolean isReferenceTextCombined() -> isReferenceTextCombined
    130:130:boolean isTentative() -> isTentative
    125:125:void setDefined(boolean) -> setDefined
    101:105:void setReferenceChars(com.vladsch.flexmark.util.sequence.BasedSequence) -> setReferenceChars
    109:112:void setTextChars(com.vladsch.flexmark.util.sequence.BasedSequence) -> setTextChars
    175:175:void setTextClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setTextClosingMarker
    163:163:void setTextOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setTextOpeningMarker
    207:207:java.lang.String toStringAttributes() -> toStringAttributes
com.vladsch.flexmark.ast.Reference -> com.vladsch.flexmark.ast.Reference:
    66:79:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    7:7:int compareTo(java.lang.Object) -> compareTo
    50:50:int compareTo(com.vladsch.flexmark.ast.Reference) -> compareTo
    131:131:com.vladsch.flexmark.util.sequence.BasedSequence getReference() -> getReference
    14:14:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    171:171:com.vladsch.flexmark.util.sequence.BasedSequence getTitle() -> getTitle
    139:139:com.vladsch.flexmark.util.sequence.BasedSequence getUrl() -> getUrl
    180:180:java.lang.String toStringAttributes() -> toStringAttributes
com.vladsch.flexmark.ast.SoftLineBreak -> com.vladsch.flexmark.ast.SoftLineBreak:
    11:11:void <init>() -> <init>
    15:15:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    8:8:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.StrongEmphasis -> com.vladsch.flexmark.ast.StrongEmphasis:
    6:6:void <init>() -> <init>
    14:14:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
com.vladsch.flexmark.ast.Text -> com.vladsch.flexmark.ast.Text:
    8:8:void <init>() -> <init>
    12:12:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    25:25:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    38:38:java.lang.String toStringAttributes() -> toStringAttributes
com.vladsch.flexmark.ast.TextBase -> com.vladsch.flexmark.ast.TextBase:
    7:7:void <init>() -> <init>
    11:11:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    20:20:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    30:30:java.lang.String toStringAttributes() -> toStringAttributes
com.vladsch.flexmark.ast.ThematicBreak -> com.vladsch.flexmark.ast.ThematicBreak:
    13:13:void <init>() -> <init>
    10:10:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ast.VisitHandler -> com.vladsch.flexmark.ast.VisitHandler:
    5:5:void <init>(java.lang.Class,com.vladsch.flexmark.ast.Visitor) -> <init>
    11:11:void visit(com.vladsch.flexmark.ast.Node) -> visit
com.vladsch.flexmark.ast.WhiteSpace -> com.vladsch.flexmark.ast.WhiteSpace:
    13:13:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    18:18:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    28:28:java.lang.String toStringAttributes() -> toStringAttributes
com.vladsch.flexmark.ast.util.AnchorRefTargetBlockVisitor -> com.vladsch.flexmark.ast.util.AnchorRefTargetBlockVisitor:
    14:14:void <init>() -> <init>
    18:20:void visit(com.vladsch.flexmark.ast.Node) -> visit
com.vladsch.flexmark.ast.util.ClassifyingBlockTracker -> com.vladsch.flexmark.ast.util.ClassifyingBlockTracker:
    16:18:void <init>() -> <init>
    54:54:com.vladsch.flexmark.util.collection.OrderedSet allBlockParsers() -> allBlockParsers
    99:100:void blockAdded(com.vladsch.flexmark.ast.Block) -> blockAdded
    83:83:void blockParserAdded(com.vladsch.flexmark.parser.block.BlockParser) -> blockParserAdded
    88:88:void blockParserRemoved(com.vladsch.flexmark.parser.block.BlockParser) -> blockParserRemoved
    133:134:void blockRemoved(com.vladsch.flexmark.ast.Block) -> blockRemoved
    70:70:boolean containsKey(com.vladsch.flexmark.parser.block.BlockParser) -> containsKey
    66:66:com.vladsch.flexmark.parser.block.BlockParser getKey(com.vladsch.flexmark.ast.Block) -> getKey
    78:78:com.vladsch.flexmark.util.collection.ClassificationBag getNodeClassifier() -> getNodeClassifier
    92:93:void validateLinked(com.vladsch.flexmark.ast.Node) -> validateLinked
    126:127:void validateUnlinked(com.vladsch.flexmark.ast.Node) -> validateUnlinked
com.vladsch.flexmark.ast.util.ClassifyingBlockTracker$1 -> com.vladsch.flexmark.ast.util.ClassifyingBlockTracker$1:
    18:18:void <init>(com.vladsch.flexmark.ast.util.ClassifyingBlockTracker) -> <init>
    18:18:void adding(int,java.lang.Object,java.lang.Object) -> adding
    21:22:void adding(int,com.vladsch.flexmark.util.Paired,java.lang.Object) -> adding
    34:34:void clearing() -> clearing
    49:49:int getIteratorModificationCount() -> getIteratorModificationCount
    18:18:java.lang.Object removing(int,java.lang.Object) -> removing
    27:28:java.lang.Object removing(int,com.vladsch.flexmark.util.Paired) -> removing
com.vladsch.flexmark.ast.util.LineCollectingVisitor -> com.vladsch.flexmark.ast.util.LineCollectingVisitor:
    18:58:void <init>() -> <init>
    11:11:void access$000(com.vladsch.flexmark.ast.util.LineCollectingVisitor,com.vladsch.flexmark.ast.Text) -> access$000
    11:11:void access$100(com.vladsch.flexmark.ast.util.LineCollectingVisitor,com.vladsch.flexmark.ast.TextBase) -> access$100
    11:11:void access$200(com.vladsch.flexmark.ast.util.LineCollectingVisitor,com.vladsch.flexmark.ast.HtmlEntity) -> access$200
    11:11:void access$300(com.vladsch.flexmark.ast.util.LineCollectingVisitor,com.vladsch.flexmark.ast.HtmlInline) -> access$300
    11:11:void access$400(com.vladsch.flexmark.ast.util.LineCollectingVisitor,com.vladsch.flexmark.ast.SoftLineBreak) -> access$400
    11:11:void access$500(com.vladsch.flexmark.ast.util.LineCollectingVisitor,com.vladsch.flexmark.ast.HardLineBreak) -> access$500
    81:85:void collect(com.vladsch.flexmark.ast.Node) -> collect
    89:90:java.util.List collectAndGetRanges(com.vladsch.flexmark.ast.Node) -> collectAndGetRanges
    62:66:void finalizeLines() -> finalizeLines
    76:77:java.util.List getEOLs() -> getEOLs
    71:72:java.util.List getLines() -> getLines
    94:97:void visit(com.vladsch.flexmark.ast.SoftLineBreak) -> visit
    101:104:void visit(com.vladsch.flexmark.ast.HardLineBreak) -> visit
    108:108:void visit(com.vladsch.flexmark.ast.HtmlEntity) -> visit
    112:112:void visit(com.vladsch.flexmark.ast.HtmlInline) -> visit
    116:116:void visit(com.vladsch.flexmark.ast.Text) -> visit
    120:120:void visit(com.vladsch.flexmark.ast.TextBase) -> visit
com.vladsch.flexmark.ast.util.LineCollectingVisitor$1 -> com.vladsch.flexmark.ast.util.LineCollectingVisitor$1:
    20:20:void <init>(com.vladsch.flexmark.ast.util.LineCollectingVisitor) -> <init>
    20:20:void visit(com.vladsch.flexmark.ast.Node) -> visit
    23:23:void visit(com.vladsch.flexmark.ast.Text) -> visit
com.vladsch.flexmark.ast.util.LineCollectingVisitor$2 -> com.vladsch.flexmark.ast.util.LineCollectingVisitor$2:
    26:26:void <init>(com.vladsch.flexmark.ast.util.LineCollectingVisitor) -> <init>
    26:26:void visit(com.vladsch.flexmark.ast.Node) -> visit
    29:29:void visit(com.vladsch.flexmark.ast.TextBase) -> visit
com.vladsch.flexmark.ast.util.LineCollectingVisitor$3 -> com.vladsch.flexmark.ast.util.LineCollectingVisitor$3:
    32:32:void <init>(com.vladsch.flexmark.ast.util.LineCollectingVisitor) -> <init>
    32:32:void visit(com.vladsch.flexmark.ast.Node) -> visit
    35:35:void visit(com.vladsch.flexmark.ast.HtmlEntity) -> visit
com.vladsch.flexmark.ast.util.LineCollectingVisitor$4 -> com.vladsch.flexmark.ast.util.LineCollectingVisitor$4:
    38:38:void <init>(com.vladsch.flexmark.ast.util.LineCollectingVisitor) -> <init>
    38:38:void visit(com.vladsch.flexmark.ast.Node) -> visit
    41:41:void visit(com.vladsch.flexmark.ast.HtmlInline) -> visit
com.vladsch.flexmark.ast.util.LineCollectingVisitor$5 -> com.vladsch.flexmark.ast.util.LineCollectingVisitor$5:
    44:44:void <init>(com.vladsch.flexmark.ast.util.LineCollectingVisitor) -> <init>
    44:44:void visit(com.vladsch.flexmark.ast.Node) -> visit
    47:47:void visit(com.vladsch.flexmark.ast.SoftLineBreak) -> visit
com.vladsch.flexmark.ast.util.LineCollectingVisitor$6 -> com.vladsch.flexmark.ast.util.LineCollectingVisitor$6:
    50:50:void <init>(com.vladsch.flexmark.ast.util.LineCollectingVisitor) -> <init>
    50:50:void visit(com.vladsch.flexmark.ast.Node) -> visit
    53:53:void visit(com.vladsch.flexmark.ast.HardLineBreak) -> visit
com.vladsch.flexmark.ast.util.Parsing -> com.vladsch.flexmark.ast.util.Parsing:
    86:197:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    205:205:java.lang.String ADDITIONAL_CHARS() -> ADDITIONAL_CHARS
    201:201:java.lang.String EXCLUDED_0_TO_SPACE() -> EXCLUDED_0_TO_SPACE
    214:214:int columnsToNextTabStop(int) -> columnsToNextTabStop
    218:219:int findLineBreak(java.lang.CharSequence,int) -> findLineBreak
    233:234:boolean isLetter(java.lang.CharSequence,int) -> isLetter
    238:239:boolean isSpaceOrTab(java.lang.CharSequence,int) -> isSpaceOrTab
com.vladsch.flexmark.ast.util.ReferenceRepository -> com.vladsch.flexmark.ast.util.ReferenceRepository:
    13:13:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    28:28:java.lang.String normalizeKey(java.lang.CharSequence) -> normalizeKey
com.vladsch.flexmark.ast.util.TextCollectingVisitor -> com.vladsch.flexmark.ast.util.TextCollectingVisitor:
    12:13:void <init>() -> <init>
    8:8:void access$000(com.vladsch.flexmark.ast.util.TextCollectingVisitor,com.vladsch.flexmark.ast.Text) -> access$000
    8:8:void access$100(com.vladsch.flexmark.ast.util.TextCollectingVisitor,com.vladsch.flexmark.ast.TextBase) -> access$100
    8:8:void access$200(com.vladsch.flexmark.ast.util.TextCollectingVisitor,com.vladsch.flexmark.ast.HtmlEntity) -> access$200
    8:8:void access$300(com.vladsch.flexmark.ast.util.TextCollectingVisitor,com.vladsch.flexmark.ast.SoftLineBreak) -> access$300
    8:8:void access$400(com.vladsch.flexmark.ast.util.TextCollectingVisitor,com.vladsch.flexmark.ast.HardLineBreak) -> access$400
    52:53:void collect(com.vladsch.flexmark.ast.Node) -> collect
    57:58:java.lang.String collectAndGetText(com.vladsch.flexmark.ast.Node) -> collectAndGetText
    72:72:void visit(com.vladsch.flexmark.ast.SoftLineBreak) -> visit
    76:77:void visit(com.vladsch.flexmark.ast.HardLineBreak) -> visit
    81:81:void visit(com.vladsch.flexmark.ast.HtmlEntity) -> visit
    85:86:void visit(com.vladsch.flexmark.ast.Text) -> visit
    91:91:void visit(com.vladsch.flexmark.ast.TextBase) -> visit
com.vladsch.flexmark.ast.util.TextCollectingVisitor$1 -> com.vladsch.flexmark.ast.util.TextCollectingVisitor$1:
    14:14:void <init>(com.vladsch.flexmark.ast.util.TextCollectingVisitor) -> <init>
    14:14:void visit(com.vladsch.flexmark.ast.Node) -> visit
    17:17:void visit(com.vladsch.flexmark.ast.Text) -> visit
com.vladsch.flexmark.ast.util.TextCollectingVisitor$2 -> com.vladsch.flexmark.ast.util.TextCollectingVisitor$2:
    20:20:void <init>(com.vladsch.flexmark.ast.util.TextCollectingVisitor) -> <init>
    20:20:void visit(com.vladsch.flexmark.ast.Node) -> visit
    23:23:void visit(com.vladsch.flexmark.ast.TextBase) -> visit
com.vladsch.flexmark.ast.util.TextCollectingVisitor$3 -> com.vladsch.flexmark.ast.util.TextCollectingVisitor$3:
    26:26:void <init>(com.vladsch.flexmark.ast.util.TextCollectingVisitor) -> <init>
    26:26:void visit(com.vladsch.flexmark.ast.Node) -> visit
    29:29:void visit(com.vladsch.flexmark.ast.HtmlEntity) -> visit
com.vladsch.flexmark.ast.util.TextCollectingVisitor$4 -> com.vladsch.flexmark.ast.util.TextCollectingVisitor$4:
    32:32:void <init>(com.vladsch.flexmark.ast.util.TextCollectingVisitor) -> <init>
    32:32:void visit(com.vladsch.flexmark.ast.Node) -> visit
    35:35:void visit(com.vladsch.flexmark.ast.SoftLineBreak) -> visit
com.vladsch.flexmark.ast.util.TextCollectingVisitor$5 -> com.vladsch.flexmark.ast.util.TextCollectingVisitor$5:
    38:38:void <init>(com.vladsch.flexmark.ast.util.TextCollectingVisitor) -> <init>
    38:38:void visit(com.vladsch.flexmark.ast.Node) -> visit
    41:41:void visit(com.vladsch.flexmark.ast.HardLineBreak) -> visit
com.vladsch.flexmark.ast.util.TextNodeConverter -> com.vladsch.flexmark.ast.util.TextNodeConverter:
    15:17:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    38:41:void addChildrenOf(com.vladsch.flexmark.ast.Node) -> addChildrenOf
    21:33:void appendChild(com.vladsch.flexmark.ast.Node) -> appendChild
    47:51:void appendMergedTo(com.vladsch.flexmark.ast.Node) -> appendMergedTo
    55:56:void clear() -> clear
    61:65:void insertMergedBefore(com.vladsch.flexmark.ast.Node) -> insertMergedBefore
    95:97:void mergeList() -> mergeList
    71:77:void mergeTextNodes(com.vladsch.flexmark.ast.Node) -> mergeTextNodes
com.vladsch.flexmark.ext.abbreviation.Abbreviation -> com.vladsch.flexmark.ext.abbreviation.Abbreviation:
    14:15:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    19:19:com.vladsch.flexmark.util.sequence.BasedSequence getAbbreviation() -> getAbbreviation
    24:24:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    34:34:java.lang.String toStringAttributes() -> toStringAttributes
com.vladsch.flexmark.ext.abbreviation.AbbreviationBlock -> com.vladsch.flexmark.ext.abbreviation.AbbreviationBlock:
    41:16:void <init>() -> <init>
    12:12:int compareTo(java.lang.Object) -> compareTo
    25:25:int compareTo(com.vladsch.flexmark.ext.abbreviation.AbbreviationBlock) -> compareTo
    73:73:com.vladsch.flexmark.util.sequence.BasedSequence getAbbreviation() -> getAbbreviation
    38:38:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    57:57:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    77:77:void setAbbreviation(com.vladsch.flexmark.util.sequence.BasedSequence) -> setAbbreviation
    69:69:void setClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setClosingMarker
    53:53:void setOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setOpeningMarker
    61:61:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.ext.abbreviation.AbbreviationExtension -> com.vladsch.flexmark.ext.abbreviation.AbbreviationExtension:
    31:50:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    53:53:com.vladsch.flexmark.Extension create() -> create
    81:82:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    87:89:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
com.vladsch.flexmark.ext.abbreviation.AbbreviationExtension$1 -> com.vladsch.flexmark.ext.abbreviation.AbbreviationExtension$1:
    36:36:void <init>() -> <init>
    36:36:java.lang.Object create(java.lang.Object) -> create
    39:39:com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationRepository create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodePostProcessor -> com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodePostProcessor:
    20:20:void <init>(com.vladsch.flexmark.ast.Document,com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodePostProcessor$1) -> <init>
    28:58:void <init>(com.vladsch.flexmark.ast.Document) -> <init>
    64:119:void process(com.vladsch.flexmark.util.NodeTracker,com.vladsch.flexmark.ast.Node) -> process
com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodePostProcessor$1 -> com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodePostProcessor$1:
    37:37:void <init>(com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodePostProcessor) -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    40:40:int compare(java.lang.String,java.lang.String) -> compare
com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodePostProcessor$Factory -> com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodePostProcessor$Factory:
    132:134:void <init>() -> <init>
    123:123:com.vladsch.flexmark.parser.PostProcessor create(com.vladsch.flexmark.ast.Document) -> create
    123:123:java.lang.Object create(java.lang.Object) -> create
    139:139:com.vladsch.flexmark.parser.block.NodePostProcessor create(com.vladsch.flexmark.ast.Document) -> create
    126:127:java.util.Set getAfterDependents() -> getAfterDependents
com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer -> com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer:
    21:22:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    18:18:void access$000(com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer,com.vladsch.flexmark.ext.abbreviation.Abbreviation,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    18:18:void access$100(com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer,com.vladsch.flexmark.ext.abbreviation.AbbreviationBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$100
    27:27:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    48:62:void render(com.vladsch.flexmark.ext.abbreviation.Abbreviation,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer$1 -> com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer$1:
    28:28:void <init>(com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer) -> <init>
    28:28:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    31:31:void render(com.vladsch.flexmark.ext.abbreviation.Abbreviation,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer$2 -> com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer$2:
    34:34:void <init>(com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer) -> <init>
    34:34:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    37:37:void render(com.vladsch.flexmark.ext.abbreviation.AbbreviationBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer$Factory -> com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationNodeRenderer$Factory:
    65:65:void <init>() -> <init>
    68:68:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationOptions -> com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationOptions:
    9:10:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationParagraphPreProcessor -> com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationParagraphPreProcessor:
    19:19:void <clinit>() -> <clinit>
    18:18:void <init>(com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationParagraphPreProcessor$1) -> <init>
    25:27:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    64:64:com.vladsch.flexmark.parser.block.ParagraphPreProcessorFactory Factory() -> Factory
    32:58:int preProcessBlock(com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.parser.block.ParserState) -> preProcessBlock
com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationParagraphPreProcessor$1 -> com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationParagraphPreProcessor$1:
    64:64:void <init>() -> <init>
    64:64:java.lang.Object create(java.lang.Object) -> create
    84:84:com.vladsch.flexmark.parser.block.ParagraphPreProcessor create(com.vladsch.flexmark.parser.block.ParserState) -> create
    77:78:java.util.Set getBeforeDependents() -> getBeforeDependents
com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationRepository -> com.vladsch.flexmark.ext.abbreviation.internal.AbbreviationRepository:
    14:14:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
com.vladsch.flexmark.ext.attributes.AttributeNode -> com.vladsch.flexmark.ext.attributes.AttributeNode:
    34:16:void <init>() -> <init>
    42:47:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    67:67:com.vladsch.flexmark.util.sequence.BasedSequence getName() -> getName
    21:21:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    83:83:com.vladsch.flexmark.util.sequence.BasedSequence getValue() -> getValue
    59:59:boolean isClass() -> isClass
    63:63:boolean isId() -> isId
    51:51:boolean isImplicitName(java.lang.CharSequence) -> isImplicitName
    55:55:boolean isImplicitName() -> isImplicitName
com.vladsch.flexmark.ext.attributes.AttributesExtension -> com.vladsch.flexmark.ext.attributes.AttributesExtension:
    28:32:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    38:38:com.vladsch.flexmark.Extension create() -> create
    48:49:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    63:63:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
    54:56:void rendererOptions(com.vladsch.flexmark.util.options.MutableDataHolder) -> rendererOptions
com.vladsch.flexmark.ext.attributes.AttributesExtension$1 -> com.vladsch.flexmark.ext.attributes.AttributesExtension$1:
    28:28:void <init>() -> <init>
    28:28:java.lang.Object create(java.lang.Object) -> create
    30:30:com.vladsch.flexmark.ext.attributes.internal.NodeAttributeRepository create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.attributes.AttributesNode -> com.vladsch.flexmark.ext.attributes.AttributesNode:
    27:14:void <init>() -> <init>
    35:38:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    19:19:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    58:58:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.ext.attributes.internal.AttributeParsing -> com.vladsch.flexmark.ext.attributes.internal.AttributeParsing:
    12:15:void <init>(com.vladsch.flexmark.ast.util.Parsing) -> <init>
com.vladsch.flexmark.ext.attributes.internal.AttributesAttributeProvider -> com.vladsch.flexmark.ext.attributes.internal.AttributesAttributeProvider:
    24:26:void <init>(com.vladsch.flexmark.html.renderer.NodeRendererContext) -> <init>
    31:62:void setAttributes(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.AttributablePart,com.vladsch.flexmark.util.html.Attributes) -> setAttributes
com.vladsch.flexmark.ext.attributes.internal.AttributesAttributeProvider$Factory -> com.vladsch.flexmark.ext.attributes.internal.AttributesAttributeProvider$Factory:
    70:70:void <init>() -> <init>
    70:70:java.lang.Object create(java.lang.Object) -> create
    88:88:com.vladsch.flexmark.html.AttributeProvider create(com.vladsch.flexmark.html.renderer.NodeRendererContext) -> create
com.vladsch.flexmark.ext.attributes.internal.AttributesInlineParserExtension -> com.vladsch.flexmark.ext.attributes.internal.AttributesInlineParserExtension:
    16:17:void <init>(com.vladsch.flexmark.parser.InlineParser) -> <init>
    31:77:boolean parse(com.vladsch.flexmark.parser.InlineParser) -> parse
com.vladsch.flexmark.ext.attributes.internal.AttributesInlineParserExtension$Factory -> com.vladsch.flexmark.ext.attributes.internal.AttributesInlineParserExtension$Factory:
    83:83:void <init>() -> <init>
    83:83:java.lang.Object create(java.lang.Object) -> create
    101:101:com.vladsch.flexmark.parser.InlineParserExtension create(com.vladsch.flexmark.parser.InlineParser) -> create
com.vladsch.flexmark.ext.attributes.internal.AttributesNodePostProcessor -> com.vladsch.flexmark.ext.attributes.internal.AttributesNodePostProcessor:
    14:15:void <init>(com.vladsch.flexmark.ast.Document) -> <init>
    20:49:void process(com.vladsch.flexmark.util.NodeTracker,com.vladsch.flexmark.ast.Node) -> process
com.vladsch.flexmark.ext.attributes.internal.AttributesNodePostProcessor$Factory -> com.vladsch.flexmark.ext.attributes.internal.AttributesNodePostProcessor$Factory:
    59:60:void <init>() -> <init>
    57:57:com.vladsch.flexmark.parser.PostProcessor create(com.vladsch.flexmark.ast.Document) -> create
    57:57:java.lang.Object create(java.lang.Object) -> create
    65:65:com.vladsch.flexmark.parser.block.NodePostProcessor create(com.vladsch.flexmark.ast.Document) -> create
com.vladsch.flexmark.ext.attributes.internal.NodeAttributeRepository -> com.vladsch.flexmark.ext.attributes.internal.NodeAttributeRepository:
    16:14:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    79:79:void clear() -> clear
    39:39:boolean containsKey(java.lang.Object) -> containsKey
    44:44:boolean containsValue(java.lang.Object) -> containsValue
    94:94:java.util.Set entrySet() -> entrySet
    12:12:java.lang.Object get(java.lang.Object) -> get
    49:49:java.util.ArrayList get(java.lang.Object) -> get
    34:34:boolean isEmpty() -> isEmpty
    84:84:java.util.Set keySet() -> keySet
    12:12:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    54:54:java.util.ArrayList put(com.vladsch.flexmark.ast.Node,java.util.ArrayList) -> put
    58:63:java.util.ArrayList put(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.ext.attributes.AttributesNode) -> put
    74:74:void putAll(java.util.Map) -> putAll
    12:12:java.lang.Object remove(java.lang.Object) -> remove
    69:69:java.util.ArrayList remove(java.lang.Object) -> remove
    29:29:int size() -> size
    89:89:java.util.Collection values() -> values
com.vladsch.flexmark.ext.autolink.AutolinkExtension -> com.vladsch.flexmark.ext.autolink.AutolinkExtension:
    21:21:void <init>() -> <init>
    25:25:com.vladsch.flexmark.Extension create() -> create
    34:34:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
com.vladsch.flexmark.ext.autolink.internal.AutolinkNodePostProcessor -> com.vladsch.flexmark.ext.autolink.internal.AutolinkNodePostProcessor:
    22:20:void <init>(com.vladsch.flexmark.ast.Document) -> <init>
    28:83:void process(com.vladsch.flexmark.util.NodeTracker,com.vladsch.flexmark.ast.Node) -> process
com.vladsch.flexmark.ext.autolink.internal.AutolinkNodePostProcessor$Factory -> com.vladsch.flexmark.ext.autolink.internal.AutolinkNodePostProcessor$Factory:
    89:90:void <init>() -> <init>
    87:87:com.vladsch.flexmark.parser.PostProcessor create(com.vladsch.flexmark.ast.Document) -> create
    87:87:java.lang.Object create(java.lang.Object) -> create
    95:95:com.vladsch.flexmark.parser.block.NodePostProcessor create(com.vladsch.flexmark.ast.Document) -> create
com.vladsch.flexmark.ext.footnotes.Footnote -> com.vladsch.flexmark.ext.footnotes.Footnote:
    60:13:void <init>() -> <init>
    68:71:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    38:38:com.vladsch.flexmark.ext.footnotes.FootnoteBlock getFootnoteBlock(com.vladsch.flexmark.ext.footnotes.internal.FootnoteRepository) -> getFootnoteBlock
    42:42:com.vladsch.flexmark.ext.footnotes.FootnoteBlock getFootnoteBlock() -> getFootnoteBlock
    51:51:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    83:83:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    34:34:boolean isDefined() -> isDefined
    46:46:void setFootnoteBlock(com.vladsch.flexmark.ext.footnotes.FootnoteBlock) -> setFootnoteBlock
    87:87:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.ext.footnotes.FootnoteBlock -> com.vladsch.flexmark.ext.footnotes.FootnoteBlock:
    68:18:void <init>() -> <init>
    12:12:int compareTo(java.lang.Object) -> compareTo
    22:22:int compareTo(com.vladsch.flexmark.ext.footnotes.FootnoteBlock) -> compareTo
    92:92:com.vladsch.flexmark.util.sequence.BasedSequence getClosingMarker() -> getClosingMarker
    31:31:int getFirstReferenceOffset() -> getFirstReferenceOffset
    47:47:int getFootnoteOrdinal() -> getFootnoteOrdinal
    65:65:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    84:84:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    43:43:boolean isReferenced() -> isReferenced
    96:96:void setClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setClosingMarker
    35:35:void setFirstReferenceOffset(int) -> setFirstReferenceOffset
    104:104:void setFootnote(com.vladsch.flexmark.util.sequence.BasedSequence) -> setFootnote
    51:51:void setFootnoteOrdinal(int) -> setFootnoteOrdinal
    80:80:void setOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setOpeningMarker
    88:88:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.ext.footnotes.FootnoteExtension -> com.vladsch.flexmark.ext.footnotes.FootnoteExtension:
    29:45:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    51:51:com.vladsch.flexmark.Extension create() -> create
    79:80:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    85:87:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
com.vladsch.flexmark.ext.footnotes.FootnoteExtension$1 -> com.vladsch.flexmark.ext.footnotes.FootnoteExtension$1:
    31:31:void <init>() -> <init>
    31:31:java.lang.Object create(java.lang.Object) -> create
    34:34:com.vladsch.flexmark.ext.footnotes.internal.FootnoteRepository create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.footnotes.internal.FootnoteBlockParser -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteBlockParser:
    17:18:void <clinit>() -> <clinit>
    25:27:void <init>(com.vladsch.flexmark.ext.footnotes.internal.FootnoteOptions,int) -> <init>
    15:15:com.vladsch.flexmark.ext.footnotes.FootnoteBlock access$100(com.vladsch.flexmark.ext.footnotes.internal.FootnoteBlockParser) -> access$100
    61:61:void addLine(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.util.sequence.BasedSequence) -> addLine
    67:72:void closeBlock(com.vladsch.flexmark.parser.block.ParserState) -> closeBlock
    36:36:com.vladsch.flexmark.ast.Block getBlock() -> getBlock
    31:31:com.vladsch.flexmark.ast.BlockContent getBlockContent() -> getBlockContent
    41:55:com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState) -> tryContinue
com.vladsch.flexmark.ext.footnotes.internal.FootnoteBlockParser$BlockFactory -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteBlockParser$BlockFactory:
    107:107:void <init>(com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.ext.footnotes.internal.FootnoteBlockParser$1) -> <init>
    111:112:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    117:144:com.vladsch.flexmark.parser.block.BlockStart tryStart(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.parser.block.MatchedBlockParser) -> tryStart
com.vladsch.flexmark.ext.footnotes.internal.FootnoteBlockParser$Factory -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteBlockParser$Factory:
    85:85:void <init>() -> <init>
    85:85:java.lang.Object create(java.lang.Object) -> create
    103:103:com.vladsch.flexmark.parser.block.BlockParserFactory create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.footnotes.internal.FootnoteLinkRefProcessor -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteLinkRefProcessor:
    19:20:void <init>(com.vladsch.flexmark.ast.Document) -> <init>
    55:55:com.vladsch.flexmark.util.sequence.BasedSequence adjustInlineText(com.vladsch.flexmark.ast.Document,com.vladsch.flexmark.ast.Node) -> adjustInlineText
    40:47:com.vladsch.flexmark.ast.Node createNode(com.vladsch.flexmark.util.sequence.BasedSequence) -> createNode
    35:35:boolean isMatch(com.vladsch.flexmark.util.sequence.BasedSequence) -> isMatch
com.vladsch.flexmark.ext.footnotes.internal.FootnoteLinkRefProcessor$Factory -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteLinkRefProcessor$Factory:
    68:68:void <init>() -> <init>
    68:68:java.lang.Object create(java.lang.Object) -> create
    71:71:com.vladsch.flexmark.parser.LinkRefProcessor create(com.vladsch.flexmark.ast.Document) -> create
com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer:
    23:27:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    17:17:void access$000(com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer,com.vladsch.flexmark.ext.footnotes.Footnote,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    17:17:void access$100(com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer,com.vladsch.flexmark.ext.footnotes.FootnoteBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$100
    17:17:com.vladsch.flexmark.ext.footnotes.internal.FootnoteRepository access$200(com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer) -> access$200
    17:17:com.vladsch.flexmark.ext.footnotes.internal.FootnoteOptions access$300(com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer) -> access$300
    32:32:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    50:52:java.util.Set getRenderingPhases() -> getRenderingPhases
    124:133:void render(com.vladsch.flexmark.ext.footnotes.Footnote,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    58:89:void renderDocument(com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter,com.vladsch.flexmark.ast.Document,com.vladsch.flexmark.html.renderer.RenderingPhase) -> renderDocument
com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$1 -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$1:
    33:33:void <init>(com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer) -> <init>
    33:33:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    36:36:void render(com.vladsch.flexmark.ext.footnotes.Footnote,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$2 -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$2:
    39:39:void <init>(com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer) -> <init>
    39:39:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    42:42:void render(com.vladsch.flexmark.ext.footnotes.FootnoteBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$3 -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$3:
    63:63:void <init>(com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer,boolean[]) -> <init>
    63:63:void visit(com.vladsch.flexmark.ast.Node) -> visit
    66:72:void visit(com.vladsch.flexmark.ext.footnotes.Footnote) -> visit
com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$4 -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$4:
    89:89:void <init>(com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer,com.vladsch.flexmark.html.HtmlWriter,com.vladsch.flexmark.html.renderer.NodeRendererContext) -> <init>
    92:93:void run() -> run
com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$4$1 -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$4$1:
    93:93:void <init>(com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$4) -> <init>
    96:99:void run() -> run
com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$4$1$1 -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$4$1$1:
    99:99:void <init>(com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$4$1,com.vladsch.flexmark.ext.footnotes.FootnoteBlock,int) -> <init>
    102:107:void run() -> run
com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$5 -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$5:
    133:133:void <init>(com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer,com.vladsch.flexmark.html.HtmlWriter,int) -> <init>
    136:140:void run() -> run
com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$Factory -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteNodeRenderer$Factory:
    146:146:void <init>() -> <init>
    149:149:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.footnotes.internal.FootnoteOptions -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteOptions:
    15:21:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
com.vladsch.flexmark.ext.footnotes.internal.FootnoteRepository -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteRepository:
    48:18:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    21:25:void addFootnoteReference(com.vladsch.flexmark.ext.footnotes.FootnoteBlock,com.vladsch.flexmark.ext.footnotes.Footnote) -> addFootnoteReference
    44:44:java.util.List getReferencedFootnoteBlocks() -> getReferencedFootnoteBlocks
    30:39:void resolveFootnoteOrdinals() -> resolveFootnoteOrdinals
com.vladsch.flexmark.ext.footnotes.internal.FootnoteRepository$1 -> com.vladsch.flexmark.ext.footnotes.internal.FootnoteRepository$1:
    30:30:void <init>(com.vladsch.flexmark.ext.footnotes.internal.FootnoteRepository) -> <init>
    30:30:int compare(java.lang.Object,java.lang.Object) -> compare
    33:33:int compare(com.vladsch.flexmark.ext.footnotes.FootnoteBlock,com.vladsch.flexmark.ext.footnotes.FootnoteBlock) -> compare
com.vladsch.flexmark.ext.gfm.strikethrough.Strikethrough -> com.vladsch.flexmark.ext.gfm.strikethrough.Strikethrough:
    25:13:void <init>() -> <init>
    33:36:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    17:17:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    48:48:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    52:52:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.ext.gfm.strikethrough.StrikethroughSubscriptExtension -> com.vladsch.flexmark.ext.gfm.strikethrough.StrikethroughSubscriptExtension:
    28:31:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    37:37:com.vladsch.flexmark.Extension create() -> create
    52:52:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    57:62:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
com.vladsch.flexmark.ext.gfm.strikethrough.Subscript -> com.vladsch.flexmark.ext.gfm.strikethrough.Subscript:
    25:13:void <init>() -> <init>
    33:36:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    17:17:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    48:48:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    52:52:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer:
    18:18:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    16:16:void access$000(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer,com.vladsch.flexmark.ext.gfm.strikethrough.Strikethrough,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    16:16:void access$100(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer,com.vladsch.flexmark.ext.gfm.strikethrough.Subscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$100
    23:30:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    41:43:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Strikethrough,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    47:49:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Subscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer$1 -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer$1:
    24:24:void <init>(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer) -> <init>
    24:24:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    27:27:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Strikethrough,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer$2 -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer$2:
    30:30:void <init>(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer) -> <init>
    30:30:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    33:33:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Subscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer$Factory -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughJiraRenderer$Factory:
    52:52:void <init>() -> <init>
    55:55:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer:
    25:29:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    18:18:void access$000(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer,com.vladsch.flexmark.ext.gfm.strikethrough.Strikethrough,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    18:18:void access$100(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer,com.vladsch.flexmark.ext.gfm.strikethrough.Subscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$100
    34:41:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    52:59:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Strikethrough,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    68:75:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Subscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer$1 -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer$1:
    35:35:void <init>(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer) -> <init>
    35:35:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    38:38:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Strikethrough,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer$2 -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer$2:
    41:41:void <init>(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer) -> <init>
    41:41:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    44:44:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Subscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer$Factory -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughNodeRenderer$Factory:
    83:83:void <init>() -> <init>
    86:86:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughSubscriptDelimiterProcessor -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughSubscriptDelimiterProcessor:
    13:13:void <init>() -> <init>
    48:54:int getDelimiterUse(com.vladsch.flexmark.parser.delimiter.DelimiterRun,com.vladsch.flexmark.parser.delimiter.DelimiterRun) -> getDelimiterUse
    68:72:void process(com.vladsch.flexmark.internal.Delimiter,com.vladsch.flexmark.internal.Delimiter,int) -> process
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer:
    18:18:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    16:16:void access$000(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer,com.vladsch.flexmark.ext.gfm.strikethrough.Strikethrough,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    16:16:void access$100(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer,com.vladsch.flexmark.ext.gfm.strikethrough.Subscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$100
    23:30:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    41:43:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Strikethrough,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    47:49:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Subscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer$1 -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer$1:
    24:24:void <init>(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer) -> <init>
    24:24:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    27:27:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Strikethrough,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer$2 -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer$2:
    30:30:void <init>(com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer) -> <init>
    30:30:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    33:33:void render(com.vladsch.flexmark.ext.gfm.strikethrough.Subscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer$Factory -> com.vladsch.flexmark.ext.gfm.strikethrough.internal.StrikethroughYouTrackRenderer$Factory:
    52:52:void <init>() -> <init>
    55:55:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.gfm.tasklist.TaskListExtension -> com.vladsch.flexmark.ext.gfm.tasklist.TaskListExtension:
    33:41:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
    47:47:com.vladsch.flexmark.Extension create() -> create
    72:72:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    77:79:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
    67:67:void parserOptions(com.vladsch.flexmark.util.options.MutableDataHolder) -> parserOptions
com.vladsch.flexmark.ext.gfm.tasklist.TaskListItem -> com.vladsch.flexmark.ext.gfm.tasklist.TaskListItem:
    33:14:void <init>() -> <init>
    49:50:void <init>(com.vladsch.flexmark.ast.ListItem) -> <init>
    59:59:boolean isItemDoneMarker() -> isItemDoneMarker
    28:29:boolean isParagraphWrappingDisabled(com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.parser.ListOptions,com.vladsch.flexmark.util.options.DataHolder) -> isParagraphWrappingDisabled
    55:55:void setOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setOpeningMarker
com.vladsch.flexmark.ext.gfm.tasklist.TaskListItemCase -> com.vladsch.flexmark.ext.gfm.tasklist.TaskListItemCase:
    4:3:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.vladsch.flexmark.ext.gfm.tasklist.TaskListItemCase valueOf(java.lang.String) -> valueOf
    3:3:com.vladsch.flexmark.ext.gfm.tasklist.TaskListItemCase[] values() -> values
com.vladsch.flexmark.ext.gfm.tasklist.TaskListItemPlacement -> com.vladsch.flexmark.ext.gfm.tasklist.TaskListItemPlacement:
    4:3:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.vladsch.flexmark.ext.gfm.tasklist.TaskListItemPlacement valueOf(java.lang.String) -> valueOf
    3:3:com.vladsch.flexmark.ext.gfm.tasklist.TaskListItemPlacement[] values() -> values
com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListItemBlockPreProcessor -> com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListItemBlockPreProcessor:
    19:19:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    24:37:void preProcess(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.ast.Block) -> preProcess
com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListItemBlockPreProcessor$Factory -> com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListItemBlockPreProcessor$Factory:
    42:42:void <init>() -> <init>
    42:42:java.lang.Object create(java.lang.Object) -> create
    68:68:com.vladsch.flexmark.parser.block.BlockPreProcessor create(com.vladsch.flexmark.parser.block.ParserState) -> create
    45:47:java.util.Set getBlockTypes() -> getBlockTypes
com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer -> com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer:
    16:16:void <clinit>() -> <clinit>
    25:31:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    15:15:void access$000(com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer,com.vladsch.flexmark.ext.gfm.tasklist.TaskListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    15:15:java.lang.String access$100(com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer) -> access$100
    15:15:java.lang.String access$200(com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer) -> access$200
    15:15:java.lang.String access$300(com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer) -> access$300
    37:38:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    51:63:void render(com.vladsch.flexmark.ext.gfm.tasklist.TaskListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer$1 -> com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer$1:
    39:39:void <init>(com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer) -> <init>
    39:39:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    42:42:void render(com.vladsch.flexmark.ext.gfm.tasklist.TaskListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer$2 -> com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer$2:
    54:54:void <init>(com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer,com.vladsch.flexmark.html.HtmlWriter,com.vladsch.flexmark.ext.gfm.tasklist.TaskListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext) -> <init>
    57:58:void run() -> run
com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer$3 -> com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer$3:
    63:63:void <init>(com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer,com.vladsch.flexmark.html.HtmlWriter,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.ext.gfm.tasklist.TaskListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext) -> <init>
    66:67:void run() -> run
com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer$3$1 -> com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer$3$1:
    67:67:void <init>(com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer$3) -> <init>
    70:71:void run() -> run
com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer$Factory -> com.vladsch.flexmark.ext.gfm.tasklist.internal.TaskListNodeRenderer$Factory:
    79:79:void <init>() -> <init>
    82:82:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.tables.TableBlock -> com.vladsch.flexmark.ext.tables.TableBlock:
    14:14:void <init>() -> <init>
    26:26:void <init>(java.util.List) -> <init>
    35:35:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ext.tables.TableBody -> com.vladsch.flexmark.ext.tables.TableBody:
    15:15:void <init>() -> <init>
    12:12:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ext.tables.TableCaption -> com.vladsch.flexmark.ext.tables.TableCaption:
    15:18:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    60:60:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    40:40:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    45:45:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.ext.tables.TableCell -> com.vladsch.flexmark.ext.tables.TableCell:
    115:18:void <init>() -> <init>
    137:137:com.vladsch.flexmark.ext.tables.TableCell$Alignment getAlignment() -> getAlignment
    104:104:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    95:95:int getSpan() -> getSpan
    76:76:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    126:126:boolean isHeader() -> isHeader
    38:60:void mergeWhiteSpace() -> mergeWhiteSpace
    141:141:void setAlignment(com.vladsch.flexmark.ext.tables.TableCell$Alignment) -> setAlignment
    91:91:void setClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setClosingMarker
    130:130:void setHeader(boolean) -> setHeader
    71:71:void setOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence) -> setOpeningMarker
    99:99:void setSpan(int) -> setSpan
    81:81:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
    21:31:void trimWhiteSpace() -> trimWhiteSpace
com.vladsch.flexmark.ext.tables.TableCell$Alignment -> com.vladsch.flexmark.ext.tables.TableCell$Alignment:
    148:147:void <clinit>() -> <clinit>
    147:147:void <init>(java.lang.String,int) -> <init>
    147:147:com.vladsch.flexmark.ext.tables.TableCell$Alignment valueOf(java.lang.String) -> valueOf
    147:147:com.vladsch.flexmark.ext.tables.TableCell$Alignment[] values() -> values
com.vladsch.flexmark.ext.tables.TableHead -> com.vladsch.flexmark.ext.tables.TableHead:
    15:15:void <init>() -> <init>
    12:12:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ext.tables.TableRow -> com.vladsch.flexmark.ext.tables.TableRow:
    26:26:void <init>() -> <init>
    30:30:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    34:34:int getRowNumber() -> getRowNumber
    23:23:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    38:38:void setRowNumber(int) -> setRowNumber
com.vladsch.flexmark.ext.tables.TableSeparator -> com.vladsch.flexmark.ext.tables.TableSeparator:
    15:15:void <init>() -> <init>
    12:12:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
com.vladsch.flexmark.ext.tables.TablesExtension -> com.vladsch.flexmark.ext.tables.TablesExtension:
    30:52:void <clinit>() -> <clinit>
    29:29:void <init>() -> <init>
    55:55:com.vladsch.flexmark.Extension create() -> create
    75:75:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    80:83:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
com.vladsch.flexmark.ext.tables.internal.TableColumnSeparator -> com.vladsch.flexmark.ext.tables.internal.TableColumnSeparator:
    13:13:void <init>() -> <init>
    26:26:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    36:36:java.lang.String toStringAttributes() -> toStringAttributes
com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer -> com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer:
    20:20:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    16:16:void access$000(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer,com.vladsch.flexmark.ext.tables.TableBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    16:16:void access$100(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer,com.vladsch.flexmark.ext.tables.TableHead,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$100
    16:16:void access$200(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer,com.vladsch.flexmark.ext.tables.TableSeparator,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$200
    16:16:void access$300(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer,com.vladsch.flexmark.ext.tables.TableBody,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$300
    16:16:void access$400(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer,com.vladsch.flexmark.ext.tables.TableRow,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$400
    16:16:void access$500(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer,com.vladsch.flexmark.ext.tables.TableCell,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$500
    26:26:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    67:68:void render(com.vladsch.flexmark.ext.tables.TableBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    72:72:void render(com.vladsch.flexmark.ext.tables.TableHead,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    80:80:void render(com.vladsch.flexmark.ext.tables.TableBody,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    84:90:void render(com.vladsch.flexmark.ext.tables.TableRow,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    94:98:void render(com.vladsch.flexmark.ext.tables.TableCell,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$1 -> com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$1:
    27:27:void <init>(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer) -> <init>
    27:27:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    30:30:void render(com.vladsch.flexmark.ext.tables.TableBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$2 -> com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$2:
    33:33:void <init>(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer) -> <init>
    33:33:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    36:36:void render(com.vladsch.flexmark.ext.tables.TableHead,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$3 -> com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$3:
    39:39:void <init>(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer) -> <init>
    39:39:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    42:42:void render(com.vladsch.flexmark.ext.tables.TableSeparator,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$4 -> com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$4:
    45:45:void <init>(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer) -> <init>
    45:45:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    48:48:void render(com.vladsch.flexmark.ext.tables.TableBody,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$5 -> com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$5:
    51:51:void <init>(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer) -> <init>
    51:51:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    54:54:void render(com.vladsch.flexmark.ext.tables.TableRow,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$6 -> com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$6:
    57:57:void <init>(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer) -> <init>
    57:57:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    60:60:void render(com.vladsch.flexmark.ext.tables.TableCell,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$Factory -> com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer$Factory:
    114:114:void <init>() -> <init>
    117:117:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer:
    20:21:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    16:16:void access$000(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.ext.tables.TableBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    16:16:void access$100(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.ext.tables.TableHead,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$100
    16:16:void access$200(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.ext.tables.TableSeparator,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$200
    16:16:void access$300(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.ext.tables.TableBody,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$300
    16:16:void access$400(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.ext.tables.TableRow,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$400
    16:16:void access$500(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.ext.tables.TableCell,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$500
    16:16:void access$600(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.ext.tables.TableCaption,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$600
    141:149:java.lang.String getAlignValue(com.vladsch.flexmark.ext.tables.TableCell$Alignment) -> getAlignValue
    26:26:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    73:77:void render(com.vladsch.flexmark.ext.tables.TableBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    86:86:void render(com.vladsch.flexmark.ext.tables.TableHead,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    99:99:void render(com.vladsch.flexmark.ext.tables.TableBody,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    108:108:void render(com.vladsch.flexmark.ext.tables.TableRow,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    117:117:void render(com.vladsch.flexmark.ext.tables.TableCaption,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    126:137:void render(com.vladsch.flexmark.ext.tables.TableCell,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$1 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$1:
    27:27:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer) -> <init>
    27:27:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    30:30:void render(com.vladsch.flexmark.ext.tables.TableBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$10 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$10:
    99:99:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.ext.tables.TableBody) -> <init>
    102:102:void run() -> run
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$11 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$11:
    108:108:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.ext.tables.TableRow) -> <init>
    111:111:void run() -> run
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$12 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$12:
    117:117:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.ext.tables.TableCaption) -> <init>
    120:120:void run() -> run
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$13 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$13:
    141:141:void <clinit>() -> <clinit>
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$2 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$2:
    33:33:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer) -> <init>
    33:33:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    36:36:void render(com.vladsch.flexmark.ext.tables.TableHead,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$3 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$3:
    39:39:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer) -> <init>
    39:39:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    42:42:void render(com.vladsch.flexmark.ext.tables.TableSeparator,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$4 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$4:
    45:45:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer) -> <init>
    45:45:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    48:48:void render(com.vladsch.flexmark.ext.tables.TableBody,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$5 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$5:
    51:51:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer) -> <init>
    51:51:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    54:54:void render(com.vladsch.flexmark.ext.tables.TableRow,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$6 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$6:
    57:57:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer) -> <init>
    57:57:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    60:60:void render(com.vladsch.flexmark.ext.tables.TableCell,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$7 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$7:
    63:63:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer) -> <init>
    63:63:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    66:66:void render(com.vladsch.flexmark.ext.tables.TableCaption,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$8 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$8:
    77:77:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.ext.tables.TableBlock) -> <init>
    80:80:void run() -> run
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$9 -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$9:
    86:86:void <init>(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.ext.tables.TableHead) -> <init>
    89:89:void run() -> run
com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$Factory -> com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer$Factory:
    152:152:void <init>() -> <init>
    155:155:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.ext.tables.internal.TableParagraphPreProcessor -> com.vladsch.flexmark.ext.tables.internal.TableParagraphPreProcessor:
    22:39:void <clinit>() -> <clinit>
    20:20:void <init>(com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.ext.tables.internal.TableParagraphPreProcessor$1) -> <init>
    107:109:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    64:64:com.vladsch.flexmark.parser.block.ParagraphPreProcessorFactory Factory() -> Factory
    381:385:com.vladsch.flexmark.ext.tables.TableCell$Alignment getAlignment(boolean,boolean) -> getAlignment
    95:100:java.util.regex.Pattern getTableHeaderSeparator(int) -> getTableHeaderSeparator
    323:330:java.util.List parseAlignment(com.vladsch.flexmark.util.sequence.BasedSequence) -> parseAlignment
    118:319:int preProcessBlock(com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.parser.block.ParserState) -> preProcessBlock
    336:374:java.util.List split(com.vladsch.flexmark.util.sequence.BasedSequence,boolean,boolean) -> split
com.vladsch.flexmark.ext.tables.internal.TableParagraphPreProcessor$1 -> com.vladsch.flexmark.ext.tables.internal.TableParagraphPreProcessor$1:
    39:39:void <init>() -> <init>
    39:39:java.lang.Object create() -> create
    59:59:com.vladsch.flexmark.ast.Node create() -> create
com.vladsch.flexmark.ext.tables.internal.TableParagraphPreProcessor$2 -> com.vladsch.flexmark.ext.tables.internal.TableParagraphPreProcessor$2:
    64:64:void <init>() -> <init>
    64:64:java.lang.Object create(java.lang.Object) -> create
    84:84:com.vladsch.flexmark.parser.block.ParagraphPreProcessor create(com.vladsch.flexmark.parser.block.ParserState) -> create
    72:73:java.util.Set getAfterDependents() -> getAfterDependents
com.vladsch.flexmark.ext.tables.internal.TableParserOptions -> com.vladsch.flexmark.ext.tables.internal.TableParserOptions:
    19:30:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
com.vladsch.flexmark.html.DelegatingNodeRendererFactoryWrapper -> com.vladsch.flexmark.html.DelegatingNodeRendererFactoryWrapper:
    22:24:void <init>(java.util.List,com.vladsch.flexmark.html.renderer.NodeRendererFactory) -> <init>
    17:17:java.lang.Object create(java.lang.Object) -> create
    29:29:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
    48:62:java.util.Set getBeforeDependents() -> getBeforeDependents
    38:38:java.util.Set getDelegates() -> getDelegates
    33:33:com.vladsch.flexmark.html.renderer.NodeRendererFactory getFactory() -> getFactory
com.vladsch.flexmark.html.HtmlRenderer -> com.vladsch.flexmark.html.HtmlRenderer:
    35:90:void <clinit>() -> <clinit>
    106:131:void <init>(com.vladsch.flexmark.html.HtmlRenderer$Builder) -> <init>
    34:34:java.util.List access$200(com.vladsch.flexmark.html.HtmlRenderer) -> access$200
    34:34:java.util.List access$300(com.vladsch.flexmark.html.HtmlRenderer) -> access$300
    34:34:com.vladsch.flexmark.html.HtmlRendererOptions access$400(com.vladsch.flexmark.html.HtmlRenderer) -> access$400
    34:34:com.vladsch.flexmark.html.renderer.HeaderIdGeneratorFactory access$500(com.vladsch.flexmark.html.HtmlRenderer) -> access$500
    34:34:java.util.List access$600(com.vladsch.flexmark.html.HtmlRenderer) -> access$600
    150:150:com.vladsch.flexmark.html.HtmlRenderer$Builder builder(com.vladsch.flexmark.util.options.DataHolder) -> builder
    160:162:void render(com.vladsch.flexmark.ast.Node,java.lang.Appendable) -> render
    184:186:java.lang.String render(com.vladsch.flexmark.ast.Node) -> render
com.vladsch.flexmark.html.HtmlRenderer$1 -> com.vladsch.flexmark.html.HtmlRenderer$1:
    70:70:void <init>() -> <init>
    70:70:java.lang.Object create(java.lang.Object) -> create
    73:73:java.util.ArrayList create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.html.HtmlRenderer$Builder -> com.vladsch.flexmark.html.HtmlRenderer$Builder:
    208:211:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    216:222:void <init>(com.vladsch.flexmark.html.HtmlRenderer$Builder) -> <init>
    328:328:com.vladsch.flexmark.html.HtmlRenderer$Builder attributeProviderFactory(com.vladsch.flexmark.html.AttributeProviderFactory) -> attributeProviderFactory
    257:257:com.vladsch.flexmark.html.HtmlRenderer build() -> build
    297:297:com.vladsch.flexmark.html.HtmlRenderer$Builder escapeHtml(boolean) -> escapeHtml
    382:396:com.vladsch.flexmark.html.HtmlRenderer$Builder extensions(java.lang.Iterable) -> extensions
    343:343:com.vladsch.flexmark.html.HtmlRenderer$Builder nodeRendererFactory(com.vladsch.flexmark.html.renderer.NodeRendererFactory) -> nodeRendererFactory
com.vladsch.flexmark.html.HtmlRenderer$MainNodeRenderer -> com.vladsch.flexmark.html.HtmlRenderer$MainNodeRenderer:
    489:524:void <init>(com.vladsch.flexmark.html.HtmlRenderer,com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.html.HtmlWriter,com.vladsch.flexmark.ast.Document) -> <init>
    618:620:com.vladsch.flexmark.util.html.Attributes extendRenderingNodeAttributes(com.vladsch.flexmark.html.renderer.AttributablePart,com.vladsch.flexmark.util.html.Attributes) -> extendRenderingNodeAttributes
    530:530:com.vladsch.flexmark.ast.Node getCurrentNode() -> getCurrentNode
    599:599:com.vladsch.flexmark.ast.Document getDocument() -> getDocument
    594:594:com.vladsch.flexmark.html.HtmlRendererOptions getHtmlOptions() -> getHtmlOptions
    573:582:java.lang.String getNodeId(com.vladsch.flexmark.ast.Node) -> getNodeId
    589:589:com.vladsch.flexmark.util.options.DataHolder getOptions() -> getOptions
    604:604:com.vladsch.flexmark.html.renderer.RenderingPhase getRenderingPhase() -> getRenderingPhase
    627:627:void render(com.vladsch.flexmark.ast.Node) -> render
    732:732:void renderChildren(com.vladsch.flexmark.ast.Node) -> renderChildren
    737:740:void renderChildrenNode(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.NodeRendererSubContext) -> renderChildrenNode
    673:725:void renderNode(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.NodeRendererSubContext) -> renderNode
    535:535:com.vladsch.flexmark.html.renderer.ResolvedLink resolveLink(com.vladsch.flexmark.html.renderer.LinkType,java.lang.CharSequence,java.lang.Boolean) -> resolveLink
    540:565:com.vladsch.flexmark.html.renderer.ResolvedLink resolveLink(com.vladsch.flexmark.html.renderer.LinkType,java.lang.CharSequence,com.vladsch.flexmark.util.html.Attributes,java.lang.Boolean) -> resolveLink
com.vladsch.flexmark.html.HtmlRenderer$RendererDependencies -> com.vladsch.flexmark.html.HtmlRenderer$RendererDependencies:
    446:451:void <init>(java.util.List) -> <init>
    455:455:java.util.List getNodeRendererFactories() -> getNodeRendererFactories
com.vladsch.flexmark.html.HtmlRenderer$RendererDependencyHandler -> com.vladsch.flexmark.html.HtmlRenderer$RendererDependencyHandler:
    459:459:void <init>() -> <init>
    459:459:void <init>(com.vladsch.flexmark.html.HtmlRenderer$1) -> <init>
    459:459:com.vladsch.flexmark.util.dependency.ResolvedDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    467:467:com.vladsch.flexmark.html.HtmlRenderer$RendererDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    459:459:java.lang.Object createStage(java.util.List) -> createStage
    472:472:com.vladsch.flexmark.html.HtmlRenderer$RendererDependencyStage createStage(java.util.List) -> createStage
    459:459:java.lang.Class getDependentClass(com.vladsch.flexmark.util.dependency.Dependent) -> getDependentClass
    462:462:java.lang.Class getDependentClass(com.vladsch.flexmark.html.DelegatingNodeRendererFactoryWrapper) -> getDependentClass
com.vladsch.flexmark.html.HtmlRenderer$RendererDependencyStage -> com.vladsch.flexmark.html.HtmlRenderer$RendererDependencyStage:
    437:438:void <init>(java.util.List) -> <init>
    434:434:java.util.List access$100(com.vladsch.flexmark.html.HtmlRenderer$RendererDependencyStage) -> access$100
com.vladsch.flexmark.html.HtmlRendererOptions -> com.vladsch.flexmark.html.HtmlRendererOptions:
    43:78:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
com.vladsch.flexmark.html.HtmlWriter -> com.vladsch.flexmark.html.HtmlWriter:
    41:43:void <init>(java.lang.Appendable,int,int,boolean,boolean) -> <init>
    47:47:void setContext(com.vladsch.flexmark.html.renderer.NodeRendererContext) -> setContext
    67:69:com.vladsch.flexmark.html.HtmlWriter srcPos(com.vladsch.flexmark.util.sequence.BasedSequence) -> srcPos
    107:108:com.vladsch.flexmark.html.HtmlWriter srcPos(int,int) -> srcPos
    76:77:com.vladsch.flexmark.html.HtmlWriter srcPosWithEOL(com.vladsch.flexmark.util.sequence.BasedSequence) -> srcPosWithEOL
    84:101:com.vladsch.flexmark.html.HtmlWriter srcPosWithTrailingEOL(com.vladsch.flexmark.util.sequence.BasedSequence) -> srcPosWithTrailingEOL
    15:15:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase tag(java.lang.CharSequence,boolean) -> tag
    134:168:com.vladsch.flexmark.html.HtmlWriter tag(java.lang.CharSequence,boolean) -> tag
    114:114:com.vladsch.flexmark.html.HtmlWriter withAttr() -> withAttr
    118:119:com.vladsch.flexmark.html.HtmlWriter withAttr(com.vladsch.flexmark.html.renderer.AttributablePart) -> withAttr
    124:125:com.vladsch.flexmark.html.HtmlWriter withAttr(com.vladsch.flexmark.html.renderer.LinkStatus) -> withAttr
    129:129:com.vladsch.flexmark.html.HtmlWriter withAttr(com.vladsch.flexmark.html.renderer.ResolvedLink) -> withAttr
com.vladsch.flexmark.html.IndependentAttributeProviderFactory -> com.vladsch.flexmark.html.IndependentAttributeProviderFactory:
    5:5:void <init>() -> <init>
com.vladsch.flexmark.html.NodeRendererSubContext -> com.vladsch.flexmark.html.NodeRendererSubContext:
    12:15:void <init>(com.vladsch.flexmark.html.HtmlWriter) -> <init>
    27:27:void flush(int) -> flush
    31:31:int getDoNotRenderLinksNesting() -> getDoNotRenderLinksNesting
    35:35:boolean isDoNotRenderLinks() -> isDoNotRenderLinks
com.vladsch.flexmark.html.NodeRenderingHandlerWrapper -> com.vladsch.flexmark.html.NodeRenderingHandlerWrapper:
    9:11:void <init>(com.vladsch.flexmark.html.renderer.NodeRenderingHandler,com.vladsch.flexmark.html.NodeRenderingHandlerWrapper) -> <init>
com.vladsch.flexmark.html.renderer.AttributablePart -> com.vladsch.flexmark.html.renderer.AttributablePart:
    7:10:void <clinit>() -> <clinit>
    14:15:void <init>(java.lang.String) -> <init>
    19:19:java.lang.String getName() -> getName
    29:29:int hashCode() -> hashCode
com.vladsch.flexmark.html.renderer.CoreNodeRenderer -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer:
    32:35:void <clinit>() -> <clinit>
    50:61:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    31:31:void access$000(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.AutoLink,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    31:31:void access$100(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.BlockQuote,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$100
    31:31:void access$1000(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.HtmlBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$1000
    31:31:void access$1100(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.HtmlCommentBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$1100
    31:31:void access$1200(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.HtmlInnerBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$1200
    31:31:void access$1300(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.HtmlInnerBlockComment,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$1300
    31:31:void access$1400(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.HtmlEntity,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$1400
    31:31:void access$1500(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.HtmlInline,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$1500
    31:31:void access$1600(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.HtmlInlineComment,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$1600
    31:31:void access$1700(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.Image,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$1700
    31:31:void access$1800(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.ImageRef,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$1800
    31:31:void access$1900(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.IndentedCodeBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$1900
    31:31:void access$200(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.BulletList,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$200
    31:31:void access$2000(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.Link,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$2000
    31:31:void access$2100(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.LinkRef,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$2100
    31:31:void access$2200(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.BulletListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$2200
    31:31:void access$2300(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.OrderedListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$2300
    31:31:void access$2400(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.MailLink,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$2400
    31:31:void access$2500(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.OrderedList,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$2500
    31:31:void access$2600(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$2600
    31:31:void access$2700(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.Reference,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$2700
    31:31:void access$2800(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.SoftLineBreak,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$2800
    31:31:void access$2900(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.StrongEmphasis,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$2900
    31:31:void access$300(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.Code,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$300
    31:31:void access$3000(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.Text,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$3000
    31:31:void access$3100(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.TextBase,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$3100
    31:31:void access$3200(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.ThematicBreak,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$3200
    31:31:void access$400(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.CodeBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$400
    31:31:void access$500(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.Document,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$500
    31:31:void access$600(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.Emphasis,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$600
    31:31:void access$700(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.FencedCodeBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$700
    31:31:void access$800(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.HardLineBreak,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$800
    31:31:void access$900(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.Heading,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$900
    66:66:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    471:486:void outputNextLineBreakSpan(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.HtmlWriter,boolean) -> outputNextLineBreakSpan
    448:467:void outputSourceLineSpan(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.HtmlWriter) -> outputSourceLineSpan
    270:270:void render(com.vladsch.flexmark.ast.Document,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    274:291:void render(com.vladsch.flexmark.ast.Heading,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    301:301:void render(com.vladsch.flexmark.ast.BlockQuote,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    310:338:void render(com.vladsch.flexmark.ast.FencedCodeBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    342:342:void render(com.vladsch.flexmark.ast.ThematicBreak,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    346:362:void render(com.vladsch.flexmark.ast.IndentedCodeBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    366:369:void render(com.vladsch.flexmark.ast.CodeBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    374:374:void render(com.vladsch.flexmark.ast.BulletList,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    383:385:void render(com.vladsch.flexmark.ast.OrderedList,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    394:394:void render(com.vladsch.flexmark.ast.BulletListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    398:398:void render(com.vladsch.flexmark.ast.OrderedListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    499:501:void render(com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    544:550:void render(com.vladsch.flexmark.ast.SoftLineBreak,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    554:559:void render(com.vladsch.flexmark.ast.HardLineBreak,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    563:571:void render(com.vladsch.flexmark.ast.Emphasis,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    580:588:void render(com.vladsch.flexmark.ast.StrongEmphasis,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    597:597:void render(com.vladsch.flexmark.ast.Text,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    601:601:void render(com.vladsch.flexmark.ast.TextBase,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    605:623:void render(com.vladsch.flexmark.ast.Code,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    642:659:void render(com.vladsch.flexmark.ast.HtmlBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    663:663:void render(com.vladsch.flexmark.ast.HtmlCommentBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    667:667:void render(com.vladsch.flexmark.ast.HtmlInnerBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    671:671:void render(com.vladsch.flexmark.ast.HtmlInnerBlockComment,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    709:709:void render(com.vladsch.flexmark.ast.HtmlInline,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    716:716:void render(com.vladsch.flexmark.ast.HtmlInlineComment,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    734:737:void render(com.vladsch.flexmark.ast.HtmlEntity,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    742:749:void render(com.vladsch.flexmark.ast.AutoLink,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    759:779:void render(com.vladsch.flexmark.ast.MailLink,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    785:807:void render(com.vladsch.flexmark.ast.Image,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    812:829:void render(com.vladsch.flexmark.ast.Link,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    856:891:void render(com.vladsch.flexmark.ast.ImageRef,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    899:942:void render(com.vladsch.flexmark.ast.LinkRef,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    840:849:void renderChildrenSourceLineWrapped(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> renderChildrenSourceLineWrapped
    677:701:void renderHtmlBlock(com.vladsch.flexmark.ast.HtmlBlockBase,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter,boolean,boolean,boolean) -> renderHtmlBlock
    723:725:void renderInlineHtml(com.vladsch.flexmark.ast.HtmlInlineBase,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter,boolean,boolean) -> renderInlineHtml
    508:535:boolean renderLineBreak(java.lang.String,java.lang.String,com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> renderLineBreak
    402:411:void renderListItem(com.vladsch.flexmark.ast.ListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> renderListItem
    490:490:void renderLooseParagraph(com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> renderLooseParagraph
    422:443:void renderTextBlockParagraphLines(com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter,boolean) -> renderTextBlockParagraphLines
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$1 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$1:
    67:67:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    67:67:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    70:70:void render(com.vladsch.flexmark.ast.AutoLink,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$10 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$10:
    121:121:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    121:121:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    124:124:void render(com.vladsch.flexmark.ast.Heading,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$11 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$11:
    127:127:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    127:127:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    130:130:void render(com.vladsch.flexmark.ast.HtmlBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$12 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$12:
    133:133:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    133:133:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    136:136:void render(com.vladsch.flexmark.ast.HtmlCommentBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$13 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$13:
    139:139:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    139:139:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    142:142:void render(com.vladsch.flexmark.ast.HtmlInnerBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$14 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$14:
    145:145:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    145:145:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    148:148:void render(com.vladsch.flexmark.ast.HtmlInnerBlockComment,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$15 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$15:
    151:151:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    151:151:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    154:154:void render(com.vladsch.flexmark.ast.HtmlEntity,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$16 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$16:
    157:157:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    157:157:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    160:160:void render(com.vladsch.flexmark.ast.HtmlInline,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$17 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$17:
    163:163:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    163:163:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    166:166:void render(com.vladsch.flexmark.ast.HtmlInlineComment,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$18 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$18:
    169:169:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    169:169:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    172:172:void render(com.vladsch.flexmark.ast.Image,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$19 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$19:
    175:175:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    175:175:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    178:178:void render(com.vladsch.flexmark.ast.ImageRef,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$2 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$2:
    73:73:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    73:73:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    76:76:void render(com.vladsch.flexmark.ast.BlockQuote,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$20 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$20:
    181:181:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    181:181:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    184:184:void render(com.vladsch.flexmark.ast.IndentedCodeBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$21 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$21:
    187:187:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    187:187:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    190:190:void render(com.vladsch.flexmark.ast.Link,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$22 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$22:
    193:193:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    193:193:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    196:196:void render(com.vladsch.flexmark.ast.LinkRef,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$23 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$23:
    199:199:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    199:199:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    202:202:void render(com.vladsch.flexmark.ast.BulletListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$24 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$24:
    205:205:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    205:205:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    208:208:void render(com.vladsch.flexmark.ast.OrderedListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$25 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$25:
    211:211:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    211:211:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    214:214:void render(com.vladsch.flexmark.ast.MailLink,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$26 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$26:
    217:217:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    217:217:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    220:220:void render(com.vladsch.flexmark.ast.OrderedList,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$27 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$27:
    223:223:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    223:223:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    226:226:void render(com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$28 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$28:
    229:229:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    229:229:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    232:232:void render(com.vladsch.flexmark.ast.Reference,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$29 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$29:
    235:235:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    235:235:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    238:238:void render(com.vladsch.flexmark.ast.SoftLineBreak,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$3 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$3:
    79:79:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    79:79:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    82:82:void render(com.vladsch.flexmark.ast.BulletList,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$30 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$30:
    241:241:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    241:241:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    244:244:void render(com.vladsch.flexmark.ast.StrongEmphasis,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$31 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$31:
    247:247:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    247:247:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    250:250:void render(com.vladsch.flexmark.ast.Text,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$32 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$32:
    253:253:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    253:253:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    256:256:void render(com.vladsch.flexmark.ast.TextBase,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$33 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$33:
    259:259:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    259:259:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    262:262:void render(com.vladsch.flexmark.ast.ThematicBreak,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$34 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$34:
    282:282:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.html.HtmlWriter,com.vladsch.flexmark.ast.Heading,com.vladsch.flexmark.html.renderer.NodeRendererContext) -> <init>
    285:287:void run() -> run
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$35 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$35:
    291:291:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.ast.Heading) -> <init>
    294:294:void run() -> run
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$36 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$36:
    301:301:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.ast.BlockQuote) -> <init>
    304:304:void run() -> run
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$37 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$37:
    374:374:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.ast.BulletList) -> <init>
    377:377:void run() -> run
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$38 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$38:
    385:385:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.ast.OrderedList) -> <init>
    388:388:void run() -> run
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$39 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$39:
    403:403:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.html.HtmlWriter,com.vladsch.flexmark.ast.ListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext) -> <init>
    406:407:void run() -> run
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$4 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$4:
    85:85:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    85:85:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    88:88:void render(com.vladsch.flexmark.ast.Code,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$40 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$40:
    411:411:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.html.HtmlWriter,com.vladsch.flexmark.ast.ListItem,com.vladsch.flexmark.html.renderer.NodeRendererContext) -> <init>
    414:415:void run() -> run
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$41 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$41:
    436:436:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.ast.Paragraph) -> <init>
    439:439:void run() -> run
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$42 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$42:
    490:490:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> <init>
    493:493:void run() -> run
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$43 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$43:
    749:749:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer,com.vladsch.flexmark.html.HtmlWriter,java.lang.String) -> <init>
    752:752:void run() -> run
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$5 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$5:
    91:91:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    91:91:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    94:94:void render(com.vladsch.flexmark.ast.CodeBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$6 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$6:
    97:97:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    97:97:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    100:100:void render(com.vladsch.flexmark.ast.Document,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$7 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$7:
    103:103:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    103:103:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    106:106:void render(com.vladsch.flexmark.ast.Emphasis,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$8 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$8:
    109:109:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    109:109:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    112:112:void render(com.vladsch.flexmark.ast.FencedCodeBlock,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$9 -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$9:
    115:115:void <init>(com.vladsch.flexmark.html.renderer.CoreNodeRenderer) -> <init>
    115:115:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    118:118:void render(com.vladsch.flexmark.ast.HardLineBreak,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.CoreNodeRenderer$Factory -> com.vladsch.flexmark.html.renderer.CoreNodeRenderer$Factory:
    947:947:void <init>() -> <init>
    950:950:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.html.renderer.HeaderIdGenerator -> com.vladsch.flexmark.html.renderer.HeaderIdGenerator:
    11:11:void <init>() -> <init>
    54:67:java.lang.String generateId(java.lang.CharSequence,java.lang.String,boolean) -> generateId
    14:44:void generateIds(com.vladsch.flexmark.ast.Document) -> generateIds
    49:49:java.lang.String getId(com.vladsch.flexmark.ast.Node) -> getId
    76:76:boolean isAlphabetic(char) -> isAlphabetic
com.vladsch.flexmark.html.renderer.HeaderIdGenerator$1 -> com.vladsch.flexmark.html.renderer.HeaderIdGenerator$1:
    19:19:void <init>(com.vladsch.flexmark.html.renderer.HeaderIdGenerator,java.lang.String,boolean,boolean,java.util.HashMap) -> <init>
    22:40:void visit(com.vladsch.flexmark.ast.AnchorRefTarget) -> visit
com.vladsch.flexmark.html.renderer.HeaderIdGenerator$Factory -> com.vladsch.flexmark.html.renderer.HeaderIdGenerator$Factory:
    79:79:void <init>() -> <init>
    82:82:com.vladsch.flexmark.html.renderer.HtmlIdGenerator create(com.vladsch.flexmark.html.renderer.NodeRendererContext) -> create
com.vladsch.flexmark.html.renderer.HtmlIdGenerator -> com.vladsch.flexmark.html.renderer.HtmlIdGenerator:
    7:7:void <clinit>() -> <clinit>
com.vladsch.flexmark.html.renderer.HtmlIdGenerator$1 -> com.vladsch.flexmark.html.renderer.HtmlIdGenerator$1:
    7:7:void <init>() -> <init>
com.vladsch.flexmark.html.renderer.LinkStatus -> com.vladsch.flexmark.html.renderer.LinkStatus:
    4:7:void <clinit>() -> <clinit>
    11:12:void <init>(java.lang.String) -> <init>
    22:26:boolean equals(java.lang.Object) -> equals
    16:16:java.lang.String getName() -> getName
    31:31:int hashCode() -> hashCode
com.vladsch.flexmark.html.renderer.LinkType -> com.vladsch.flexmark.html.renderer.LinkType:
    4:7:void <clinit>() -> <clinit>
    11:12:void <init>(java.lang.String) -> <init>
    26:26:int hashCode() -> hashCode
com.vladsch.flexmark.html.renderer.NodeRenderingHandler -> com.vladsch.flexmark.html.renderer.NodeRenderingHandler:
    10:10:void <init>(java.lang.Class,com.vladsch.flexmark.html.CustomNodeRenderer) -> <init>
    16:16:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.html.renderer.RenderingPhase -> com.vladsch.flexmark.html.renderer.RenderingPhase:
    4:3:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.vladsch.flexmark.html.renderer.RenderingPhase valueOf(java.lang.String) -> valueOf
    3:3:com.vladsch.flexmark.html.renderer.RenderingPhase[] values() -> values
com.vladsch.flexmark.html.renderer.ResolvedLink -> com.vladsch.flexmark.html.renderer.ResolvedLink:
    17:17:void <init>(com.vladsch.flexmark.html.renderer.LinkType,java.lang.CharSequence,com.vladsch.flexmark.util.html.Attributes) -> <init>
    31:36:void <init>(com.vladsch.flexmark.html.renderer.LinkType,java.lang.CharSequence,com.vladsch.flexmark.util.html.Attributes,com.vladsch.flexmark.html.renderer.LinkStatus) -> <init>
    101:107:boolean equals(java.lang.Object) -> equals
    21:21:com.vladsch.flexmark.util.html.Attributes getAttributes() -> getAttributes
    25:28:com.vladsch.flexmark.util.html.Attributes getNonNullAttributes() -> getNonNullAttributes
    50:50:com.vladsch.flexmark.html.renderer.LinkStatus getStatus() -> getStatus
    59:59:java.lang.String getUrl() -> getUrl
    112:114:int hashCode() -> hashCode
    54:55:com.vladsch.flexmark.html.renderer.ResolvedLink withUrl(java.lang.CharSequence) -> withUrl
com.vladsch.flexmark.internal.BlockContinueImpl -> com.vladsch.flexmark.internal.BlockContinueImpl:
    11:14:void <init>(int,int,boolean) -> <init>
    22:22:int getNewColumn() -> getNewColumn
    18:18:int getNewIndex() -> getNewIndex
    26:26:boolean isFinalize() -> isFinalize
com.vladsch.flexmark.internal.BlockQuoteParser -> com.vladsch.flexmark.internal.BlockQuoteParser:
    28:35:void <init>(com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    60:60:void closeBlock(com.vladsch.flexmark.parser.block.ParserState) -> closeBlock
    17:17:com.vladsch.flexmark.ast.Block getBlock() -> getBlock
    55:55:com.vladsch.flexmark.ast.BlockQuote getBlock() -> getBlock
    99:105:boolean isMarker(com.vladsch.flexmark.parser.block.ParserState,int,boolean,boolean,boolean,boolean,boolean,boolean) -> isMarker
    65:85:com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState) -> tryContinue
com.vladsch.flexmark.internal.BlockQuoteParser$BlockFactory -> com.vladsch.flexmark.internal.BlockQuoteParser$BlockFactory:
    157:161:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    165:178:com.vladsch.flexmark.parser.block.BlockStart tryStart(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.parser.block.MatchedBlockParser) -> tryStart
com.vladsch.flexmark.internal.BlockQuoteParser$Factory -> com.vladsch.flexmark.internal.BlockQuoteParser$Factory:
    112:112:void <init>() -> <init>
    112:112:java.lang.Object create(java.lang.Object) -> create
    147:147:com.vladsch.flexmark.parser.block.BlockParserFactory create(com.vladsch.flexmark.util.options.DataHolder) -> create
    115:115:java.util.Set getAfterDependents() -> getAfterDependents
    129:129:java.util.Set getBeforeDependents() -> getBeforeDependents
com.vladsch.flexmark.internal.BlockStartImpl -> com.vladsch.flexmark.internal.BlockStartImpl:
    13:14:void <init>(com.vladsch.flexmark.parser.block.BlockParser[]) -> <init>
    41:41:com.vladsch.flexmark.parser.block.BlockStart atColumn(int) -> atColumn
    35:35:com.vladsch.flexmark.parser.block.BlockStart atIndex(int) -> atIndex
    18:18:com.vladsch.flexmark.parser.block.BlockParser[] getBlockParsers() -> getBlockParsers
    26:26:int getNewColumn() -> getNewColumn
    22:22:int getNewIndex() -> getNewIndex
    30:30:boolean isReplaceActiveBlockParser() -> isReplaceActiveBlockParser
    47:47:com.vladsch.flexmark.parser.block.BlockStart replaceActiveBlockParser() -> replaceActiveBlockParser
com.vladsch.flexmark.internal.Bracket -> com.vladsch.flexmark.internal.Bracket:
    52:58:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.ast.Text,int,com.vladsch.flexmark.internal.Bracket,com.vladsch.flexmark.internal.Delimiter,boolean) -> <init>
    49:49:com.vladsch.flexmark.internal.Bracket image(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.ast.Text,int,com.vladsch.flexmark.internal.Bracket,com.vladsch.flexmark.internal.Delimiter) -> image
    63:73:boolean isStraddling(com.vladsch.flexmark.util.sequence.BasedSequence) -> isStraddling
    45:45:com.vladsch.flexmark.internal.Bracket link(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.ast.Text,int,com.vladsch.flexmark.internal.Bracket,com.vladsch.flexmark.internal.Delimiter) -> link
com.vladsch.flexmark.internal.CommonmarkInlineParser -> com.vladsch.flexmark.internal.CommonmarkInlineParser:
    16:16:void <init>(com.vladsch.flexmark.util.options.DataHolder,java.util.BitSet,java.util.BitSet,java.util.Map,com.vladsch.flexmark.internal.LinkRefProcessorData,java.util.List) -> <init>
    21:21:void initializeDocument(com.vladsch.flexmark.ast.util.Parsing,com.vladsch.flexmark.ast.Document) -> initializeDocument
com.vladsch.flexmark.internal.Delimiter -> com.vladsch.flexmark.internal.Delimiter:
    91:98:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.ast.Text,char,boolean,boolean,com.vladsch.flexmark.internal.Delimiter,int) -> <init>
    148:148:boolean canClose() -> canClose
    143:143:boolean canOpen() -> canOpen
    132:138:void convertDelimitersToText(int,com.vladsch.flexmark.internal.Delimiter) -> convertDelimitersToText
    72:72:int getEndIndex() -> getEndIndex
    76:76:int getIndex() -> getIndex
    64:64:com.vladsch.flexmark.util.sequence.BasedSequence getInput() -> getInput
    88:88:com.vladsch.flexmark.util.sequence.BasedSequence getLeadChars(int) -> getLeadChars
    111:113:com.vladsch.flexmark.ast.Text getNextNonDelimiterTextNode() -> getNextNonDelimiterTextNode
    60:60:com.vladsch.flexmark.ast.Text getNode() -> getNode
    102:104:com.vladsch.flexmark.ast.Text getPreviousNonDelimiterTextNode() -> getPreviousNonDelimiterTextNode
    68:68:int getStartIndex() -> getStartIndex
    84:84:com.vladsch.flexmark.util.sequence.BasedSequence getTailChars(int) -> getTailChars
    153:153:int length() -> length
    120:128:void moveNodesBetweenDelimitersTo(com.vladsch.flexmark.ast.DelimitedNode,com.vladsch.flexmark.internal.Delimiter) -> moveNodesBetweenDelimitersTo
    80:80:void setIndex(int) -> setIndex
com.vladsch.flexmark.internal.DocumentBlockParser -> com.vladsch.flexmark.internal.DocumentBlockParser:
    18:18:void <init>() -> <init>
    51:52:void closeBlock(com.vladsch.flexmark.parser.block.ParserState) -> closeBlock
    15:15:com.vladsch.flexmark.ast.Block getBlock() -> getBlock
    37:37:com.vladsch.flexmark.ast.Document getBlock() -> getBlock
    22:22:void initializeDocument(com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.util.sequence.BasedSequence) -> initializeDocument
    42:42:com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState) -> tryContinue
com.vladsch.flexmark.internal.DocumentParser -> com.vladsch.flexmark.internal.DocumentParser:
    35:76:void <clinit>() -> <clinit>
    326:344:void <init>(com.vladsch.flexmark.util.options.DataHolder,java.util.List,com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorDependencies,com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencies,com.vladsch.flexmark.parser.InlineParser) -> <init>
    894:896:void activateBlockParser(com.vladsch.flexmark.parser.block.BlockParser) -> activateBlockParser
    883:888:com.vladsch.flexmark.parser.block.BlockParser addChild(com.vladsch.flexmark.parser.block.BlockParser) -> addChild
    787:802:void addLine() -> addLine
    772:778:void advance() -> advance
    151:151:void blockAdded(com.vladsch.flexmark.ast.Block) -> blockAdded
    143:143:void blockParserAdded(com.vladsch.flexmark.parser.block.BlockParser) -> blockParserAdded
    147:147:void blockParserRemoved(com.vladsch.flexmark.parser.block.BlockParser) -> blockParserRemoved
    163:163:void blockRemoved(com.vladsch.flexmark.ast.Block) -> blockRemoved
    862:870:void breakOutOfLists(java.util.List) -> breakOutOfLists
    358:374:java.util.List calculateBlockParserFactories(com.vladsch.flexmark.util.options.DataHolder,java.util.List) -> calculateBlockParserFactories
    407:421:com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencies calculateBlockPreProcessors(com.vladsch.flexmark.util.options.DataHolder,java.util.List,com.vladsch.flexmark.parser.InlineParserFactory) -> calculateBlockPreProcessors
    384:399:com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorDependencies calculateParagraphPreProcessors(com.vladsch.flexmark.util.options.DataHolder,java.util.List,com.vladsch.flexmark.parser.InlineParserFactory) -> calculateParagraphPreProcessors
    901:901:void deactivateBlockParser() -> deactivateBlockParser
    846:849:boolean endsWithBlankLine(com.vladsch.flexmark.ast.Node) -> endsWithBlankLine
    826:831:void finalize(com.vladsch.flexmark.parser.block.BlockParser) -> finalize
    1064:1094:com.vladsch.flexmark.ast.Document finalizeAndProcess() -> finalizeAndProcess
    948:950:boolean finalizeBlocks(java.util.List) -> finalizeBlocks
    806:811:com.vladsch.flexmark.internal.BlockStartImpl findBlockStart(com.vladsch.flexmark.parser.block.BlockParser) -> findBlockStart
    714:736:void findNextNonSpace() -> findNextNonSpace
    557:557:com.vladsch.flexmark.parser.block.BlockParser getActiveBlockParser() -> getActiveBlockParser
    562:563:com.vladsch.flexmark.parser.block.BlockParser getActiveBlockParser(com.vladsch.flexmark.ast.Block) -> getActiveBlockParser
    542:542:int getColumn() -> getColumn
    547:547:int getIndent() -> getIndent
    532:532:int getIndex() -> getIndex
    426:426:com.vladsch.flexmark.parser.InlineParser getInlineParser() -> getInlineParser
    517:517:com.vladsch.flexmark.util.sequence.BasedSequence getLine() -> getLine
    139:139:java.util.List getLineSegments() -> getLineSegments
    522:522:com.vladsch.flexmark.util.sequence.BasedSequence getLineWithEOL() -> getLineWithEOL
    537:537:int getNextNonSpaceIndex() -> getNextNonSpaceIndex
    349:349:com.vladsch.flexmark.ast.util.Parsing getParsing() -> getParsing
    354:354:com.vladsch.flexmark.util.options.MutableDataHolder getProperties() -> getProperties
    578:708:void incorporateLine(com.vladsch.flexmark.util.sequence.BasedSequence) -> incorporateLine
    552:552:boolean isBlank() -> isBlank
    938:939:boolean isLastLineBlank(com.vladsch.flexmark.ast.Node) -> isLastLineBlank
    436:475:com.vladsch.flexmark.ast.Document parse(java.lang.CharSequence) -> parse
    1048:1056:void preProcessBlocks() -> preProcessBlocks
    976:1029:void preProcessParagraph(com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorDependencyStage,com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorCache) -> preProcessParagraph
    1035:1040:void preProcessParagraphs() -> preProcessParagraphs
    838:839:void processInlines() -> processInlines
    913:928:void propagateLastLineBlank(com.vladsch.flexmark.parser.block.BlockParser,com.vladsch.flexmark.parser.block.BlockParser) -> propagateLastLineBlank
    905:909:void removeActiveBlockParser() -> removeActiveBlockParser
    933:933:void setLastLineBlank(com.vladsch.flexmark.ast.Node,boolean) -> setLastLineBlank
    753:767:void setNewColumn(int) -> setNewColumn
    740:749:void setNewIndex(int) -> setNewIndex
com.vladsch.flexmark.internal.DocumentParser$1 -> com.vladsch.flexmark.internal.DocumentParser$1:
    35:35:void <init>() -> <init>
    45:45:com.vladsch.flexmark.parser.InlineParser inlineParser(com.vladsch.flexmark.util.options.DataHolder,java.util.BitSet,java.util.BitSet,java.util.Map,com.vladsch.flexmark.internal.LinkRefProcessorData,java.util.List) -> inlineParser
com.vladsch.flexmark.internal.DocumentParser$BlockDependencyHandler -> com.vladsch.flexmark.internal.DocumentParser$BlockDependencyHandler:
    301:301:void <init>() -> <init>
    301:301:void <init>(com.vladsch.flexmark.internal.DocumentParser$1) -> <init>
    301:301:com.vladsch.flexmark.util.dependency.ResolvedDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    309:309:com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    301:301:java.lang.Object createStage(java.util.List) -> createStage
    314:314:com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencyStage createStage(java.util.List) -> createStage
    301:301:java.lang.Class getDependentClass(com.vladsch.flexmark.util.dependency.Dependent) -> getDependentClass
    304:304:java.lang.Class getDependentClass(com.vladsch.flexmark.parser.block.BlockPreProcessorFactory) -> getDependentClass
com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencies -> com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencies:
    281:289:void <init>(java.util.List) -> <init>
    276:276:java.util.Set access$700(com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencies) -> access$700
com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencyStage -> com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencyStage:
    263:272:void <init>(java.util.List) -> <init>
    259:259:java.util.Set access$000(com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencyStage) -> access$000
    259:259:java.util.List access$100(com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencyStage) -> access$100
com.vladsch.flexmark.internal.DocumentParser$CustomBlockParserDependencies -> com.vladsch.flexmark.internal.DocumentParser$CustomBlockParserDependencies:
    229:229:void <init>(java.util.List) -> <init>
com.vladsch.flexmark.internal.DocumentParser$CustomBlockParserDependencyHandler -> com.vladsch.flexmark.internal.DocumentParser$CustomBlockParserDependencyHandler:
    242:242:void <init>() -> <init>
    242:242:void <init>(com.vladsch.flexmark.internal.DocumentParser$1) -> <init>
    242:242:com.vladsch.flexmark.util.dependency.ResolvedDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    250:250:com.vladsch.flexmark.internal.DocumentParser$CustomBlockParserDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    242:242:java.lang.Object createStage(java.util.List) -> createStage
    255:255:com.vladsch.flexmark.internal.DocumentParser$CustomBlockParserDependencyStage createStage(java.util.List) -> createStage
    242:242:java.lang.Class getDependentClass(com.vladsch.flexmark.util.dependency.Dependent) -> getDependentClass
    245:245:java.lang.Class getDependentClass(com.vladsch.flexmark.parser.block.CustomBlockParserFactory) -> getDependentClass
com.vladsch.flexmark.internal.DocumentParser$CustomBlockParserDependencyStage -> com.vladsch.flexmark.internal.DocumentParser$CustomBlockParserDependencyStage:
    236:238:void <init>(java.util.List) -> <init>
    233:233:java.util.List access$300(com.vladsch.flexmark.internal.DocumentParser$CustomBlockParserDependencyStage) -> access$300
com.vladsch.flexmark.internal.DocumentParser$ParagraphDependencyHandler -> com.vladsch.flexmark.internal.DocumentParser$ParagraphDependencyHandler:
    210:210:void <init>() -> <init>
    210:210:void <init>(com.vladsch.flexmark.internal.DocumentParser$1) -> <init>
    210:210:com.vladsch.flexmark.util.dependency.ResolvedDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    218:218:com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    210:210:java.lang.Object createStage(java.util.List) -> createStage
    223:223:com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorDependencyStage createStage(java.util.List) -> createStage
    210:210:java.lang.Class getDependentClass(com.vladsch.flexmark.util.dependency.Dependent) -> getDependentClass
    213:213:java.lang.Class getDependentClass(com.vladsch.flexmark.parser.block.ParagraphPreProcessorFactory) -> getDependentClass
com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorCache -> com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorCache:
    957:957:void <init>(com.vladsch.flexmark.parser.block.ParserState) -> <init>
com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorDependencies -> com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorDependencies:
    197:197:void <init>(java.util.List) -> <init>
com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorDependencyStage -> com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorDependencyStage:
    204:206:void <init>(java.util.List) -> <init>
    201:201:java.util.List access$600(com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorDependencyStage) -> access$600
com.vladsch.flexmark.internal.FencedCodeBlockParser -> com.vladsch.flexmark.internal.FencedCodeBlockParser:
    19:20:void <clinit>() -> <clinit>
    31:37:void <init>(com.vladsch.flexmark.util.options.DataHolder,char,int,int,int) -> <init>
    17:17:java.util.regex.Pattern access$100() -> access$100
    17:17:com.vladsch.flexmark.ast.FencedCodeBlock access$200(com.vladsch.flexmark.internal.FencedCodeBlockParser) -> access$200
    87:87:void addLine(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.util.sequence.BasedSequence) -> addLine
    98:129:void closeBlock(com.vladsch.flexmark.parser.block.ParserState) -> closeBlock
    42:42:com.vladsch.flexmark.ast.Block getBlock() -> getBlock
    50:50:int getFenceMarkerIndent() -> getFenceMarkerIndent
    55:82:com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState) -> tryContinue
com.vladsch.flexmark.internal.FencedCodeBlockParser$BlockFactory -> com.vladsch.flexmark.internal.FencedCodeBlockParser$BlockFactory:
    170:170:void <init>(com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.internal.FencedCodeBlockParser$1) -> <init>
    172:172:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    177:190:com.vladsch.flexmark.parser.block.BlockStart tryStart(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.parser.block.MatchedBlockParser) -> tryStart
com.vladsch.flexmark.internal.FencedCodeBlockParser$Factory -> com.vladsch.flexmark.internal.FencedCodeBlockParser$Factory:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object create(java.lang.Object) -> create
    166:166:com.vladsch.flexmark.parser.block.BlockParserFactory create(com.vladsch.flexmark.util.options.DataHolder) -> create
    135:135:java.util.Set getAfterDependents() -> getAfterDependents
    148:148:java.util.Set getBeforeDependents() -> getBeforeDependents
com.vladsch.flexmark.internal.HeadingOptions -> com.vladsch.flexmark.internal.HeadingOptions:
    13:18:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
com.vladsch.flexmark.internal.HeadingParser -> com.vladsch.flexmark.internal.HeadingParser:
    40:41:void <init>(int) -> <init>
    46:46:com.vladsch.flexmark.ast.Block getBlock() -> getBlock
    57:57:void parseInlines(com.vladsch.flexmark.parser.InlineParser) -> parseInlines
    52:52:com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState) -> tryContinue
com.vladsch.flexmark.internal.HeadingParser$BlockFactory -> com.vladsch.flexmark.internal.HeadingParser$BlockFactory:
    111:113:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    118:119:com.vladsch.flexmark.parser.block.BlockStart tryStart(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.parser.block.MatchedBlockParser) -> tryStart
com.vladsch.flexmark.internal.HeadingParser$Factory -> com.vladsch.flexmark.internal.HeadingParser$Factory:
    64:64:void <init>() -> <init>
    64:64:java.lang.Object create(java.lang.Object) -> create
    102:102:com.vladsch.flexmark.parser.block.BlockParserFactory create(com.vladsch.flexmark.util.options.DataHolder) -> create
    67:68:java.util.Set getAfterDependents() -> getAfterDependents
    84:84:java.util.Set getBeforeDependents() -> getBeforeDependents
com.vladsch.flexmark.internal.HeadingParser$HeadingParsing -> com.vladsch.flexmark.internal.HeadingParser$HeadingParsing:
    28:34:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    22:22:java.util.regex.Pattern access$000(com.vladsch.flexmark.internal.HeadingParser$HeadingParsing) -> access$000
    22:22:java.util.regex.Pattern access$100(com.vladsch.flexmark.internal.HeadingParser$HeadingParsing) -> access$100
    22:22:java.util.regex.Pattern access$200(com.vladsch.flexmark.internal.HeadingParser$HeadingParsing) -> access$200
com.vladsch.flexmark.internal.HtmlBlockParser -> com.vladsch.flexmark.internal.HtmlBlockParser:
    95:105:void <init>(com.vladsch.flexmark.util.options.DataHolder,java.util.regex.Pattern,boolean,com.vladsch.flexmark.internal.HtmlDeepParser) -> <init>
    140:151:void addLine(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.util.sequence.BasedSequence) -> addLine
    156:160:boolean canInterruptBy(com.vladsch.flexmark.parser.block.BlockParserFactory) -> canInterruptBy
    180:227:void closeBlock(com.vladsch.flexmark.parser.block.ParserState) -> closeBlock
    111:111:com.vladsch.flexmark.ast.Block getBlock() -> getBlock
    170:170:boolean isInterruptible() -> isInterruptible
    116:133:com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState) -> tryContinue
com.vladsch.flexmark.internal.HtmlBlockParser$BlockFactory -> com.vladsch.flexmark.internal.HtmlBlockParser$BlockFactory:
    271:271:void <init>(com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.internal.HtmlBlockParser$1) -> <init>
    281:287:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    292:341:com.vladsch.flexmark.parser.block.BlockStart tryStart(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.parser.block.MatchedBlockParser) -> tryStart
com.vladsch.flexmark.internal.HtmlBlockParser$Factory -> com.vladsch.flexmark.internal.HtmlBlockParser$Factory:
    233:233:void <init>() -> <init>
    233:233:java.lang.Object create(java.lang.Object) -> create
    267:267:com.vladsch.flexmark.parser.block.BlockParserFactory create(com.vladsch.flexmark.util.options.DataHolder) -> create
    236:236:java.util.Set getAfterDependents() -> getAfterDependents
    249:249:java.util.Set getBeforeDependents() -> getBeforeDependents
com.vladsch.flexmark.internal.HtmlBlockParser$Patterns -> com.vladsch.flexmark.internal.HtmlBlockParser$Patterns:
    28:73:void <init>(com.vladsch.flexmark.ast.util.Parsing) -> <init>
com.vladsch.flexmark.internal.HtmlDeepParser -> com.vladsch.flexmark.internal.HtmlDeepParser:
    38:97:void <clinit>() -> <clinit>
    105:109:void <init>() -> <init>
    121:121:com.vladsch.flexmark.internal.HtmlDeepParser$HtmlMatch getHtmlMatch() -> getHtmlMatch
    141:141:boolean hadHtml() -> hadHtml
    137:137:boolean haveOpenRawTag() -> haveOpenRawTag
    133:133:boolean isBlankLineIterruptible() -> isBlankLineIterruptible
    129:129:boolean isHtmlClosed() -> isHtmlClosed
    146:156:void openTag(java.lang.String) -> openTag
    160:305:void parseHtmlChunk(java.lang.CharSequence,boolean,boolean,boolean) -> parseHtmlChunk
com.vladsch.flexmark.internal.HtmlDeepParser$HtmlMatch -> com.vladsch.flexmark.internal.HtmlDeepParser$HtmlMatch:
    11:10:void <clinit>() -> <clinit>
    25:28:void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean) -> <init>
    10:10:com.vladsch.flexmark.internal.HtmlDeepParser$HtmlMatch valueOf(java.lang.String) -> valueOf
    10:10:com.vladsch.flexmark.internal.HtmlDeepParser$HtmlMatch[] values() -> values
com.vladsch.flexmark.internal.IndentedCodeBlockParser -> com.vladsch.flexmark.internal.IndentedCodeBlockParser:
    19:21:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    42:42:void addLine(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.util.sequence.BasedSequence) -> addLine
    48:66:void closeBlock(com.vladsch.flexmark.parser.block.ParserState) -> closeBlock
    26:26:com.vladsch.flexmark.ast.Block getBlock() -> getBlock
    31:36:com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState) -> tryContinue
com.vladsch.flexmark.internal.IndentedCodeBlockParser$BlockFactory -> com.vladsch.flexmark.internal.IndentedCodeBlockParser$BlockFactory:
    108:108:void <init>(com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.internal.IndentedCodeBlockParser$1) -> <init>
    110:110:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    116:119:com.vladsch.flexmark.parser.block.BlockStart tryStart(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.parser.block.MatchedBlockParser) -> tryStart
com.vladsch.flexmark.internal.IndentedCodeBlockParser$Factory -> com.vladsch.flexmark.internal.IndentedCodeBlockParser$Factory:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object create(java.lang.Object) -> create
    104:104:com.vladsch.flexmark.parser.block.BlockParserFactory create(com.vladsch.flexmark.util.options.DataHolder) -> create
    72:72:java.util.Set getAfterDependents() -> getAfterDependents
    85:85:java.util.Set getBeforeDependents() -> getBeforeDependents
com.vladsch.flexmark.internal.InlineParserImpl -> com.vladsch.flexmark.internal.InlineParserImpl:
    196:204:void <init>(com.vladsch.flexmark.util.options.DataHolder,java.util.BitSet,java.util.BitSet,java.util.Map,com.vladsch.flexmark.internal.LinkRefProcessorData,java.util.List) -> <init>
    1105:1108:void addBracket(com.vladsch.flexmark.internal.Bracket) -> addBracket
    308:310:void addDelimiterProcessorForChar(char,com.vladsch.flexmark.parser.delimiter.DelimiterProcessor,java.util.Map) -> addDelimiterProcessorForChar
    297:302:void addDelimiterProcessors(java.util.List,java.util.Map) -> addDelimiterProcessors
    583:584:void appendNode(com.vladsch.flexmark.ast.Node) -> appendNode
    590:591:com.vladsch.flexmark.ast.Text appendSeparateText(com.vladsch.flexmark.util.sequence.BasedSequence) -> appendSeparateText
    573:573:void appendText(com.vladsch.flexmark.util.sequence.BasedSequence) -> appendText
    578:578:void appendText(com.vladsch.flexmark.util.sequence.BasedSequence,int,int) -> appendText
    208:210:java.util.BitSet calculateDelimiterCharacters(com.vladsch.flexmark.util.options.DataHolder,java.util.Set) -> calculateDelimiterCharacters
    230:239:java.util.Map calculateDelimiterProcessors(com.vladsch.flexmark.util.options.DataHolder,java.util.List) -> calculateDelimiterProcessors
    60:90:java.util.Map calculateInlineParserExtensions(com.vladsch.flexmark.util.options.DataHolder,java.util.List) -> calculateInlineParserExtensions
    245:292:com.vladsch.flexmark.internal.LinkRefProcessorData calculateLinkRefProcessors(com.vladsch.flexmark.util.options.DataHolder,java.util.List) -> calculateLinkRefProcessors
    216:225:java.util.BitSet calculateSpecialCharacters(com.vladsch.flexmark.util.options.DataHolder,java.util.BitSet) -> calculateSpecialCharacters
    1713:1713:java.lang.Object clone() -> clone
    1530:1551:void collapseLinkRefChildren(com.vladsch.flexmark.ast.Node,java.lang.Boolean) -> collapseLinkRefChildren
    1518:1524:boolean containsLinkRefs(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.ast.Node,java.lang.Boolean) -> containsLinkRefs
    170:173:void finalizeDocument(com.vladsch.flexmark.ast.Document) -> finalizeDocument
    597:599:void flushTextNode() -> flushTextNode
    356:356:com.vladsch.flexmark.ast.Node getBlock() -> getBlock
    180:184:java.util.ArrayList getCurrentText() -> getCurrentText
    321:321:int getIndex() -> getIndex
    316:316:com.vladsch.flexmark.util.sequence.BasedSequence getInput() -> getInput
    351:351:com.vladsch.flexmark.ast.util.Parsing getParsing() -> getParsing
    139:161:void initializeDocument(com.vladsch.flexmark.ast.util.Parsing,com.vladsch.flexmark.ast.Document) -> initializeDocument
    748:757:com.vladsch.flexmark.util.sequence.BasedSequence match(java.util.regex.Pattern) -> match
    1128:1161:com.vladsch.flexmark.internal.InlineParserImpl$ReferenceProcessorMatch matchLinkRef(com.vladsch.flexmark.internal.Bracket,int,int,int) -> matchLinkRef
    804:811:java.util.regex.Matcher matcher(java.util.regex.Pattern) -> matcher
    435:446:void mergeIfNeeded(com.vladsch.flexmark.ast.Text,com.vladsch.flexmark.ast.Text) -> mergeIfNeeded
    410:429:void mergeTextNodes(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.ast.Node) -> mergeTextNodes
    377:400:void parse(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.ast.Node) -> parse
    1636:1642:boolean parseAutolink() -> parseAutolink
    949:953:boolean parseBackslash() -> parseBackslash
    969:1023:boolean parseBackticks() -> parseBackticks
    1089:1099:boolean parseBang() -> parseBang
    1177:1507:boolean parseCloseBracket() -> parseCloseBracket
    361:369:java.util.List parseCustom(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.ast.Node,java.util.BitSet,java.util.Map) -> parseCustom
    1047:1061:boolean parseDelimiters(com.vladsch.flexmark.parser.delimiter.DelimiterProcessor,char) -> parseDelimiters
    1680:1682:boolean parseEntity() -> parseEntity
    1656:1665:boolean parseHtmlInline() -> parseHtmlInline
    612:689:boolean parseInline() -> parseInline
    1561:1596:com.vladsch.flexmark.util.sequence.BasedSequence parseLinkDestination() -> parseLinkDestination
    1624:1625:int parseLinkLabel() -> parseLinkLabel
    1608:1608:com.vladsch.flexmark.util.sequence.BasedSequence parseLinkTitle() -> parseLinkTitle
    899:937:boolean parseNewline() -> parseNewline
    1072:1078:boolean parseOpenBracket() -> parseOpenBracket
    499:569:int parseReference(com.vladsch.flexmark.ast.Block,com.vladsch.flexmark.util.sequence.BasedSequence) -> parseReference
    1695:1704:boolean parseString() -> parseString
    823:824:char peek() -> peek
    832:833:char peek(int) -> peek
    455:474:int preProcessBlock(com.vladsch.flexmark.ast.Paragraph,com.vladsch.flexmark.parser.block.ParserState) -> preProcessBlock
    696:734:boolean processCustomCharacters() -> processCustomCharacters
    1786:1884:void processDelimiters(com.vladsch.flexmark.internal.Delimiter) -> processDelimiters
    1960:1967:void removeDelimiter(com.vladsch.flexmark.internal.Delimiter) -> removeDelimiter
    1905:1915:void removeDelimiterAndNode(com.vladsch.flexmark.internal.Delimiter) -> removeDelimiterAndNode
    1926:1955:void removeDelimiterKeepNode(com.vladsch.flexmark.internal.Delimiter) -> removeDelimiterKeepNode
    1890:1893:void removeDelimitersBetween(com.vladsch.flexmark.internal.Delimiter,com.vladsch.flexmark.internal.Delimiter) -> removeDelimitersBetween
    1112:1112:void removeLastBracket() -> removeLastBracket
    1725:1778:com.vladsch.flexmark.internal.InlineParserImpl$DelimiterData scanDelimiters(com.vladsch.flexmark.parser.delimiter.DelimiterProcessor,char) -> scanDelimiters
    326:326:void setIndex(int) -> setIndex
    868:868:boolean sp() -> sp
    846:846:boolean spnl() -> spnl
    879:879:boolean spnlUrl() -> spnlUrl
    889:889:com.vladsch.flexmark.util.sequence.BasedSequence toEOL() -> toEOL
com.vladsch.flexmark.internal.InlineParserImpl$1 -> com.vladsch.flexmark.internal.InlineParserImpl$1:
    251:251:void <init>(com.vladsch.flexmark.util.options.DataHolder,int[]) -> <init>
    251:251:int compare(java.lang.Object,java.lang.Object) -> compare
    254:264:int compare(com.vladsch.flexmark.parser.LinkRefProcessorFactory,com.vladsch.flexmark.parser.LinkRefProcessorFactory) -> compare
com.vladsch.flexmark.internal.InlineParserImpl$DelimiterData -> com.vladsch.flexmark.internal.InlineParserImpl$DelimiterData:
    1032:1035:void <init>(int,boolean,boolean) -> <init>
com.vladsch.flexmark.internal.InlineParserImpl$InlineParserDependencyStage -> com.vladsch.flexmark.internal.InlineParserImpl$InlineParserDependencyStage:
    36:38:void <init>(java.util.List) -> <init>
    33:33:java.util.List access$000(com.vladsch.flexmark.internal.InlineParserImpl$InlineParserDependencyStage) -> access$000
com.vladsch.flexmark.internal.InlineParserImpl$InlineParserExtensionDependencies -> com.vladsch.flexmark.internal.InlineParserImpl$InlineParserExtensionDependencies:
    29:29:void <init>(java.util.List) -> <init>
com.vladsch.flexmark.internal.InlineParserImpl$InlineParserExtensionDependencyHandler -> com.vladsch.flexmark.internal.InlineParserImpl$InlineParserExtensionDependencyHandler:
    42:42:void <init>() -> <init>
    42:42:com.vladsch.flexmark.util.dependency.ResolvedDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    50:50:com.vladsch.flexmark.internal.InlineParserImpl$InlineParserExtensionDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    42:42:java.lang.Object createStage(java.util.List) -> createStage
    55:55:com.vladsch.flexmark.internal.InlineParserImpl$InlineParserDependencyStage createStage(java.util.List) -> createStage
    42:42:java.lang.Class getDependentClass(com.vladsch.flexmark.util.dependency.Dependent) -> getDependentClass
    45:45:java.lang.Class getDependentClass(com.vladsch.flexmark.parser.InlineParserExtensionFactory) -> getDependentClass
com.vladsch.flexmark.internal.InlineParserImpl$ReferenceProcessorMatch -> com.vladsch.flexmark.internal.InlineParserImpl$ReferenceProcessorMatch:
    1120:1123:void <init>(com.vladsch.flexmark.parser.LinkRefProcessor,boolean,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
com.vladsch.flexmark.internal.LinkRefProcessorData -> com.vladsch.flexmark.internal.LinkRefProcessorData:
    12:15:void <init>(java.util.List,int,int[]) -> <init>
com.vladsch.flexmark.internal.ListBlockParser -> com.vladsch.flexmark.internal.ListBlockParser:
    30:38:void <init>(com.vladsch.flexmark.parser.ListOptions,com.vladsch.flexmark.internal.ListBlockParser$ListData,com.vladsch.flexmark.internal.ListItemParser) -> <init>
    20:20:com.vladsch.flexmark.util.sequence.BasedSequence access$000(com.vladsch.flexmark.internal.ListBlockParser) -> access$000
    20:20:com.vladsch.flexmark.util.sequence.BasedSequence access$002(com.vladsch.flexmark.internal.ListBlockParser,com.vladsch.flexmark.util.sequence.BasedSequence) -> access$002
    20:20:boolean access$100(com.vladsch.flexmark.internal.ListBlockParser) -> access$100
    20:20:boolean access$200(com.vladsch.flexmark.internal.ListBlockParser) -> access$200
    20:20:com.vladsch.flexmark.internal.ListItemParser access$302(com.vladsch.flexmark.internal.ListBlockParser,com.vladsch.flexmark.internal.ListItemParser) -> access$302
    20:20:boolean access$400(com.vladsch.flexmark.internal.ListBlockParser) -> access$400
    137:137:boolean breakOutOnDoubleBlankLine() -> breakOutOnDoubleBlankLine
    104:104:boolean canContain(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.parser.block.BlockParser,com.vladsch.flexmark.ast.Block) -> canContain
    119:132:void closeBlock(com.vladsch.flexmark.parser.block.ParserState) -> closeBlock
    380:390:com.vladsch.flexmark.ast.ListBlock createListBlock(java.util.regex.Matcher) -> createListBlock
    154:276:void finalizeListTight(com.vladsch.flexmark.parser.block.ParserState) -> finalizeListTight
    20:20:com.vladsch.flexmark.ast.Block getBlock() -> getBlock
    109:109:com.vladsch.flexmark.ast.ListBlock getBlock() -> getBlock
    86:86:com.vladsch.flexmark.internal.ListBlockParser$ListData getListData() -> getListData
    141:144:boolean hasNonItemChildren(com.vladsch.flexmark.ast.ListItem) -> hasNonItemChildren
    286:376:com.vladsch.flexmark.internal.ListBlockParser$ListData parseListMarker(com.vladsch.flexmark.parser.ListOptions,int,com.vladsch.flexmark.parser.block.ParserState) -> parseListMarker
    46:49:void setItemHandledLine(com.vladsch.flexmark.util.sequence.BasedSequence) -> setItemHandledLine
    67:70:void setItemHandledLineSkipActive(com.vladsch.flexmark.util.sequence.BasedSequence) -> setItemHandledLineSkipActive
    60:63:void setItemHandledNewItemLine(com.vladsch.flexmark.util.sequence.BasedSequence) -> setItemHandledNewItemLine
    53:56:void setItemHandledNewListLine(com.vladsch.flexmark.util.sequence.BasedSequence) -> setItemHandledNewListLine
    114:114:void setTight(boolean) -> setTight
    399:399:com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState) -> tryContinue
com.vladsch.flexmark.internal.ListBlockParser$BlockFactory -> com.vladsch.flexmark.internal.ListBlockParser$BlockFactory:
    447:448:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    453:550:com.vladsch.flexmark.parser.block.BlockStart tryStart(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.parser.block.MatchedBlockParser) -> tryStart
com.vladsch.flexmark.internal.ListBlockParser$Factory -> com.vladsch.flexmark.internal.ListBlockParser$Factory:
    402:402:void <init>() -> <init>
    402:402:java.lang.Object create(java.lang.Object) -> create
    439:439:com.vladsch.flexmark.parser.block.BlockParserFactory create(com.vladsch.flexmark.util.options.DataHolder) -> create
    405:405:java.util.Set getAfterDependents() -> getAfterDependents
    418:419:java.util.Set getBeforeDependents() -> getBeforeDependents
com.vladsch.flexmark.internal.ListBlockParser$ListData -> com.vladsch.flexmark.internal.ListBlockParser$ListData:
    577:587:void <init>(com.vladsch.flexmark.ast.ListBlock,boolean,int,int,int,int,com.vladsch.flexmark.util.sequence.BasedSequence,boolean,com.vladsch.flexmark.util.sequence.BasedSequence,int) -> <init>
com.vladsch.flexmark.internal.ListItemParser -> com.vladsch.flexmark.internal.ListItemParser:
    24:30:void <init>(com.vladsch.flexmark.parser.ListOptions,com.vladsch.flexmark.ast.util.Parsing,com.vladsch.flexmark.internal.ListBlockParser$ListData) -> <init>
    55:60:boolean canContain(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.parser.block.BlockParser,com.vladsch.flexmark.ast.Block) -> canContain
    78:78:void closeBlock(com.vladsch.flexmark.parser.block.ParserState) -> closeBlock
    83:87:com.vladsch.flexmark.parser.block.BlockContinue continueAtColumn(int) -> continueAtColumn
    73:73:com.vladsch.flexmark.ast.Block getBlock() -> getBlock
    40:40:int getContentIndent() -> getContentIndent
    68:68:boolean isPropagatingLastBlankLine(com.vladsch.flexmark.parser.block.BlockParser) -> isPropagatingLastBlankLine
    92:578:com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState) -> tryContinue
com.vladsch.flexmark.internal.MatchedBlockParserImpl -> com.vladsch.flexmark.internal.MatchedBlockParserImpl:
    28:29:void <init>(com.vladsch.flexmark.parser.block.BlockParser) -> <init>
    34:34:com.vladsch.flexmark.parser.block.BlockParser getBlockParser() -> getBlockParser
    39:40:com.vladsch.flexmark.util.sequence.BasedSequence getParagraphContent() -> getParagraphContent
    22:23:java.util.List getParagraphEolLengths() -> getParagraphEolLengths
    15:16:java.util.List getParagraphLines() -> getParagraphLines
com.vladsch.flexmark.internal.ParagraphParser -> com.vladsch.flexmark.internal.ParagraphParser:
    9:12:void <init>() -> <init>
    35:35:void addLine(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.util.sequence.BasedSequence) -> addLine
    50:51:void closeBlock(com.vladsch.flexmark.parser.block.ParserState) -> closeBlock
    9:9:com.vladsch.flexmark.ast.Block getBlock() -> getBlock
    20:20:com.vladsch.flexmark.ast.Paragraph getBlock() -> getBlock
    15:15:com.vladsch.flexmark.ast.BlockContent getBlockContent() -> getBlockContent
    56:56:void parseInlines(com.vladsch.flexmark.parser.InlineParser) -> parseInlines
    25:29:com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState) -> tryContinue
com.vladsch.flexmark.internal.PostProcessorManager -> com.vladsch.flexmark.internal.PostProcessorManager:
    21:21:void <clinit>() -> <clinit>
    29:30:void <init>(com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencies) -> <init>
    34:48:com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencies calculatePostProcessors(com.vladsch.flexmark.util.options.DataHolder,java.util.List) -> calculatePostProcessors
    64:116:com.vladsch.flexmark.ast.Document postProcess(com.vladsch.flexmark.ast.Document) -> postProcess
    52:54:com.vladsch.flexmark.ast.Document processDocument(com.vladsch.flexmark.ast.Document,com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencies) -> processDocument
com.vladsch.flexmark.internal.PostProcessorManager$PostProcessDependencyHandler -> com.vladsch.flexmark.internal.PostProcessorManager$PostProcessDependencyHandler:
    185:185:void <init>() -> <init>
    185:185:void <init>(com.vladsch.flexmark.internal.PostProcessorManager$1) -> <init>
    185:185:com.vladsch.flexmark.util.dependency.ResolvedDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    193:193:com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    185:185:java.lang.Object createStage(java.util.List) -> createStage
    198:198:com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencyStage createStage(java.util.List) -> createStage
    185:185:java.lang.Class getDependentClass(com.vladsch.flexmark.util.dependency.Dependent) -> getDependentClass
    188:188:java.lang.Class getDependentClass(com.vladsch.flexmark.parser.PostProcessorFactory) -> getDependentClass
    204:220:com.vladsch.flexmark.util.dependency.DependentItemMap prioritize(com.vladsch.flexmark.util.dependency.DependentItemMap) -> prioritize
com.vladsch.flexmark.internal.PostProcessorManager$PostProcessDependencyHandler$1 -> com.vladsch.flexmark.internal.PostProcessorManager$PostProcessDependencyHandler$1:
    205:205:void <init>(com.vladsch.flexmark.internal.PostProcessorManager$PostProcessDependencyHandler) -> <init>
    205:205:int compare(java.lang.Object,java.lang.Object) -> compare
    208:209:int compare(java.util.Map$Entry,java.util.Map$Entry) -> compare
com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencies -> com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencies:
    169:177:void <init>(java.util.List) -> <init>
com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencyStage -> com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencyStage:
    130:161:void <init>(java.util.List) -> <init>
    125:125:java.util.List access$100(com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencyStage) -> access$100
    125:125:java.util.Map access$200(com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencyStage) -> access$200
    125:125:boolean access$300(com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencyStage) -> access$300
com.vladsch.flexmark.internal.ReferencePreProcessorFactory -> com.vladsch.flexmark.internal.ReferencePreProcessorFactory:
    9:9:void <init>() -> <init>
    9:9:java.lang.Object create(java.lang.Object) -> create
    27:27:com.vladsch.flexmark.parser.block.ParagraphPreProcessor create(com.vladsch.flexmark.parser.block.ParserState) -> create
com.vladsch.flexmark.internal.ThematicBreakOptions -> com.vladsch.flexmark.internal.ThematicBreakOptions:
    9:10:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
com.vladsch.flexmark.internal.ThematicBreakParser -> com.vladsch.flexmark.internal.ThematicBreakParser:
    16:16:void <clinit>() -> <clinit>
    20:21:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    14:14:java.util.regex.Pattern access$100() -> access$100
    31:31:void closeBlock(com.vladsch.flexmark.parser.block.ParserState) -> closeBlock
    26:26:com.vladsch.flexmark.ast.Block getBlock() -> getBlock
    37:37:com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState) -> tryContinue
com.vladsch.flexmark.internal.ThematicBreakParser$BlockFactory -> com.vladsch.flexmark.internal.ThematicBreakParser$BlockFactory:
    78:78:void <init>(com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.internal.ThematicBreakParser$1) -> <init>
    82:83:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    88:89:com.vladsch.flexmark.parser.block.BlockStart tryStart(com.vladsch.flexmark.parser.block.ParserState,com.vladsch.flexmark.parser.block.MatchedBlockParser) -> tryStart
com.vladsch.flexmark.internal.ThematicBreakParser$Factory -> com.vladsch.flexmark.internal.ThematicBreakParser$Factory:
    40:40:void <init>() -> <init>
    40:40:java.lang.Object create(java.lang.Object) -> create
    74:74:com.vladsch.flexmark.parser.block.BlockParserFactory create(com.vladsch.flexmark.util.options.DataHolder) -> create
    43:43:java.util.Set getAfterDependents() -> getAfterDependents
    56:56:java.util.Set getBeforeDependents() -> getBeforeDependents
com.vladsch.flexmark.internal.inline.AsteriskDelimiterProcessor -> com.vladsch.flexmark.internal.inline.AsteriskDelimiterProcessor:
    6:6:void <init>(boolean) -> <init>
com.vladsch.flexmark.internal.inline.EmphasisDelimiterProcessor -> com.vladsch.flexmark.internal.inline.EmphasisDelimiterProcessor:
    18:20:void <init>(char,boolean) -> <init>
    30:30:char getClosingCharacter() -> getClosingCharacter
    61:67:int getDelimiterUse(com.vladsch.flexmark.parser.delimiter.DelimiterRun,com.vladsch.flexmark.parser.delimiter.DelimiterRun) -> getDelimiterUse
    25:25:char getOpeningCharacter() -> getOpeningCharacter
    76:80:void process(com.vladsch.flexmark.internal.Delimiter,com.vladsch.flexmark.internal.Delimiter,int) -> process
com.vladsch.flexmark.internal.inline.UnderscoreDelimiterProcessor -> com.vladsch.flexmark.internal.inline.UnderscoreDelimiterProcessor:
    5:5:void <init>(boolean) -> <init>
com.vladsch.flexmark.parser.InlineParserOptions -> com.vladsch.flexmark.parser.InlineParserOptions:
    15:23:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
com.vladsch.flexmark.parser.ListOptions -> com.vladsch.flexmark.parser.ListOptions:
    39:39:void <init>() -> <init>
    42:69:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    211:238:void addItemMarkerSuffixes(com.vladsch.flexmark.util.options.MutableDataHolder,java.lang.String[]) -> addItemMarkerSuffixes
    139:142:boolean canInterrupt(com.vladsch.flexmark.ast.ListBlock,boolean,boolean) -> canInterrupt
    146:149:boolean canStartSubList(com.vladsch.flexmark.ast.ListBlock,boolean) -> canStartSubList
    589:617:boolean equals(java.lang.Object) -> equals
    327:327:int getCodeIndent() -> getCodeIndent
    103:103:com.vladsch.flexmark.parser.ListOptions getFrom(com.vladsch.flexmark.util.options.DataHolder) -> getFrom
    331:331:int getItemIndent() -> getItemIndent
    247:247:com.vladsch.flexmark.parser.ListOptions$ItemInterrupt getItemInterrupt() -> getItemInterrupt
    339:339:java.lang.String[] getItemMarkerSuffixes() -> getItemMarkerSuffixes
    335:335:int getNewItemCodeIndent() -> getNewItemCodeIndent
    243:243:com.vladsch.flexmark.parser.ParserEmulationProfile getParserEmulationProfile() -> getParserEmulationProfile
    622:646:int hashCode() -> hashCode
    251:251:boolean isAutoLoose() -> isAutoLoose
    255:255:boolean isAutoLooseOneLevelLists() -> isAutoLooseOneLevelLists
    259:259:boolean isDelimiterMismatchToNewList() -> isDelimiterMismatchToNewList
    263:263:boolean isEndOnDoubleBlank() -> isEndOnDoubleBlank
    125:135:boolean isInTightListItem(com.vladsch.flexmark.ast.Paragraph) -> isInTightListItem
    275:275:boolean isItemContentAfterSuffix() -> isItemContentAfterSuffix
    267:267:boolean isItemMarkerSpace() -> isItemMarkerSpace
    271:271:boolean isItemTypeMismatchToNewList() -> isItemTypeMismatchToNewList
    283:283:boolean isItemTypeMismatchToSubList() -> isItemTypeMismatchToSubList
    311:311:boolean isLooseWhenBlankLineFollowsItemParagraph() -> isLooseWhenBlankLineFollowsItemParagraph
    307:307:boolean isLooseWhenContainsBlankLine() -> isLooseWhenContainsBlankLine
    299:299:boolean isLooseWhenHasLooseSubItem() -> isLooseWhenHasLooseSubItem
    295:295:boolean isLooseWhenHasNonListChildren() -> isLooseWhenHasNonListChildren
    303:303:boolean isLooseWhenHasTrailingBlankLine() -> isLooseWhenHasTrailingBlankLine
    291:291:boolean isLooseWhenLastItemPrevHasTrailingBlankLine() -> isLooseWhenLastItemPrevHasTrailingBlankLine
    287:287:boolean isLooseWhenPrevHasTrailingBlankLine() -> isLooseWhenPrevHasTrailingBlankLine
    323:323:boolean isNumberedItemMarkerSuffixed() -> isNumberedItemMarkerSuffixed
    319:319:boolean isOrderedListManualStart() -> isOrderedListManualStart
    111:120:boolean isTightListItem(com.vladsch.flexmark.ast.ListItem) -> isTightListItem
    153:163:boolean startNewList(com.vladsch.flexmark.ast.ListBlock,com.vladsch.flexmark.ast.ListBlock) -> startNewList
    168:171:boolean startSubList(com.vladsch.flexmark.ast.ListBlock,com.vladsch.flexmark.ast.ListBlock) -> startSubList
com.vladsch.flexmark.parser.ListOptions$ItemInterrupt -> com.vladsch.flexmark.parser.ListOptions$ItemInterrupt:
    363:382:void <init>() -> <init>
    385:404:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    455:470:boolean canInterrupt(boolean,boolean,boolean,boolean) -> canInterrupt
    477:481:boolean canStartSubList(boolean,boolean,boolean) -> canStartSubList
    488:506:boolean equals(java.lang.Object) -> equals
    511:525:int hashCode() -> hashCode
com.vladsch.flexmark.parser.Parser -> com.vladsch.flexmark.parser.Parser:
    39:222:void <clinit>() -> <clinit>
    38:38:void <init>(com.vladsch.flexmark.parser.Parser$Builder,com.vladsch.flexmark.parser.Parser$1) -> <init>
    237:249:void <init>(com.vladsch.flexmark.parser.Parser$Builder) -> <init>
    262:262:com.vladsch.flexmark.parser.Parser$Builder builder(com.vladsch.flexmark.util.options.DataHolder) -> builder
    289:292:com.vladsch.flexmark.ast.Document parse(java.lang.String) -> parse
    312:312:com.vladsch.flexmark.ast.Document postProcess(com.vladsch.flexmark.ast.Document) -> postProcess
com.vladsch.flexmark.parser.Parser$1 -> com.vladsch.flexmark.parser.Parser$1:
    41:41:void <init>() -> <init>
    41:41:java.lang.Object create(java.lang.Object) -> create
    44:44:com.vladsch.flexmark.ast.util.ReferenceRepository create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.parser.Parser$Builder -> com.vladsch.flexmark.parser.Parser$Builder:
    373:376:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    385:394:void <init>(com.vladsch.flexmark.parser.Parser$Builder) -> <init>
    361:361:java.util.List access$000(com.vladsch.flexmark.parser.Parser$Builder) -> access$000
    361:361:com.vladsch.flexmark.parser.InlineParserFactory access$100(com.vladsch.flexmark.parser.Parser$Builder) -> access$100
    361:361:java.util.List access$200(com.vladsch.flexmark.parser.Parser$Builder) -> access$200
    361:361:java.util.List access$300(com.vladsch.flexmark.parser.Parser$Builder) -> access$300
    361:361:java.util.List access$400(com.vladsch.flexmark.parser.Parser$Builder) -> access$400
    361:361:java.util.List access$500(com.vladsch.flexmark.parser.Parser$Builder) -> access$500
    361:361:java.util.List access$600(com.vladsch.flexmark.parser.Parser$Builder) -> access$600
    361:361:java.util.List access$700(com.vladsch.flexmark.parser.Parser$Builder) -> access$700
    502:502:com.vladsch.flexmark.parser.Parser$Builder blockPreProcessorFactory(com.vladsch.flexmark.parser.block.BlockPreProcessorFactory) -> blockPreProcessorFactory
    429:429:com.vladsch.flexmark.parser.Parser build() -> build
    469:469:com.vladsch.flexmark.parser.Parser$Builder customBlockParserFactory(com.vladsch.flexmark.parser.block.CustomBlockParserFactory) -> customBlockParserFactory
    487:487:com.vladsch.flexmark.parser.Parser$Builder customDelimiterProcessor(com.vladsch.flexmark.parser.delimiter.DelimiterProcessor) -> customDelimiterProcessor
    474:474:com.vladsch.flexmark.parser.Parser$Builder customInlineParserExtensionFactory(com.vladsch.flexmark.parser.InlineParserExtensionFactory) -> customInlineParserExtensionFactory
    438:451:com.vladsch.flexmark.parser.Parser$Builder extensions(java.lang.Iterable) -> extensions
    507:507:com.vladsch.flexmark.parser.Parser$Builder linkRefProcessorFactory(com.vladsch.flexmark.parser.LinkRefProcessorFactory) -> linkRefProcessorFactory
    497:497:com.vladsch.flexmark.parser.Parser$Builder paragraphPreProcessorFactory(com.vladsch.flexmark.parser.block.ParagraphPreProcessorFactory) -> paragraphPreProcessorFactory
    492:492:com.vladsch.flexmark.parser.Parser$Builder postProcessorFactory(com.vladsch.flexmark.parser.PostProcessorFactory) -> postProcessorFactory
com.vladsch.flexmark.parser.ParserEmulationProfile -> com.vladsch.flexmark.parser.ParserEmulationProfile:
    11:10:void <clinit>() -> <clinit>
    25:26:void <init>(java.lang.String,int,com.vladsch.flexmark.parser.ParserEmulationProfile) -> <init>
    10:10:com.vladsch.flexmark.parser.ParserEmulationProfile valueOf(java.lang.String) -> valueOf
    10:10:com.vladsch.flexmark.parser.ParserEmulationProfile[] values() -> values
com.vladsch.flexmark.parser.block.AbstractBlockParser -> com.vladsch.flexmark.parser.block.AbstractBlockParser:
    10:12:void <init>() -> <init>
    74:75:void finalizeClosedBlock() -> finalizeClosedBlock
    16:16:boolean isClosed() -> isClosed
com.vladsch.flexmark.parser.block.AbstractBlockParserFactory -> com.vladsch.flexmark.parser.block.AbstractBlockParserFactory:
    6:6:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
com.vladsch.flexmark.parser.block.BlockContinue -> com.vladsch.flexmark.parser.block.BlockContinue:
    10:10:void <init>() -> <init>
    22:22:com.vladsch.flexmark.parser.block.BlockContinue atColumn(int) -> atColumn
    18:18:com.vladsch.flexmark.parser.block.BlockContinue atIndex(int) -> atIndex
    26:26:com.vladsch.flexmark.parser.block.BlockContinue finished() -> finished
com.vladsch.flexmark.parser.block.BlockStart -> com.vladsch.flexmark.parser.block.BlockStart:
    10:10:void <init>() -> <init>
    18:18:com.vladsch.flexmark.parser.block.BlockStart of(com.vladsch.flexmark.parser.block.BlockParser[]) -> of
com.vladsch.flexmark.parser.block.NodePostProcessor -> com.vladsch.flexmark.parser.block.NodePostProcessor:
    6:6:void <init>() -> <init>
com.vladsch.flexmark.parser.block.NodePostProcessorFactory -> com.vladsch.flexmark.parser.block.NodePostProcessorFactory:
    13:10:void <init>(boolean) -> <init>
    32:36:void addNodeWithExclusions(java.lang.Class,java.lang.Class[]) -> addNodeWithExclusions
    41:43:void addNodes(java.lang.Class[]) -> addNodes
    49:49:java.util.Map getNodeTypes() -> getNodeTypes
com.vladsch.flexmark.parser.block.ParserPhase -> com.vladsch.flexmark.parser.block.ParserPhase:
    9:8:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    8:8:com.vladsch.flexmark.parser.block.ParserPhase valueOf(java.lang.String) -> valueOf
    8:8:com.vladsch.flexmark.parser.block.ParserPhase[] values() -> values
com.vladsch.flexmark.superscript.Superscript -> com.vladsch.flexmark.superscript.Superscript:
    28:14:void <init>() -> <init>
    36:39:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    20:20:com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments() -> getSegments
    56:56:com.vladsch.flexmark.util.sequence.BasedSequence getText() -> getText
    60:60:void setText(com.vladsch.flexmark.util.sequence.BasedSequence) -> setText
com.vladsch.flexmark.superscript.SuperscriptExtension -> com.vladsch.flexmark.superscript.SuperscriptExtension:
    24:25:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    31:31:com.vladsch.flexmark.Extension create() -> create
    46:46:void extend(com.vladsch.flexmark.parser.Parser$Builder) -> extend
    51:54:void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder,java.lang.String) -> extend
com.vladsch.flexmark.superscript.internal.SuperscriptDelimiterProcessor -> com.vladsch.flexmark.superscript.internal.SuperscriptDelimiterProcessor:
    11:11:void <init>() -> <init>
    45:45:int getDelimiterUse(com.vladsch.flexmark.parser.delimiter.DelimiterRun,com.vladsch.flexmark.parser.delimiter.DelimiterRun) -> getDelimiterUse
    60:61:void process(com.vladsch.flexmark.internal.Delimiter,com.vladsch.flexmark.internal.Delimiter,int) -> process
com.vladsch.flexmark.superscript.internal.SuperscriptJiraRenderer -> com.vladsch.flexmark.superscript.internal.SuperscriptJiraRenderer:
    16:16:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    15:15:void access$000(com.vladsch.flexmark.superscript.internal.SuperscriptJiraRenderer,com.vladsch.flexmark.superscript.Superscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    22:24:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    30:32:void render(com.vladsch.flexmark.superscript.Superscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.superscript.internal.SuperscriptJiraRenderer$1 -> com.vladsch.flexmark.superscript.internal.SuperscriptJiraRenderer$1:
    24:24:void <init>(com.vladsch.flexmark.superscript.internal.SuperscriptJiraRenderer) -> <init>
    24:24:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    24:24:void render(com.vladsch.flexmark.superscript.Superscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.superscript.internal.SuperscriptJiraRenderer$Factory -> com.vladsch.flexmark.superscript.internal.SuperscriptJiraRenderer$Factory:
    35:35:void <init>() -> <init>
    38:38:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.superscript.internal.SuperscriptNodeRenderer -> com.vladsch.flexmark.superscript.internal.SuperscriptNodeRenderer:
    20:22:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    16:16:void access$000(com.vladsch.flexmark.superscript.internal.SuperscriptNodeRenderer,com.vladsch.flexmark.superscript.Superscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> access$000
    27:29:java.util.Set getNodeRenderingHandlers() -> getNodeRenderingHandlers
    35:42:void render(com.vladsch.flexmark.superscript.Superscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.superscript.internal.SuperscriptNodeRenderer$1 -> com.vladsch.flexmark.superscript.internal.SuperscriptNodeRenderer$1:
    29:29:void <init>(com.vladsch.flexmark.superscript.internal.SuperscriptNodeRenderer) -> <init>
    29:29:void render(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
    29:29:void render(com.vladsch.flexmark.superscript.Superscript,com.vladsch.flexmark.html.renderer.NodeRendererContext,com.vladsch.flexmark.html.HtmlWriter) -> render
com.vladsch.flexmark.superscript.internal.SuperscriptNodeRenderer$Factory -> com.vladsch.flexmark.superscript.internal.SuperscriptNodeRenderer$Factory:
    50:50:void <init>() -> <init>
    53:53:com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.util.KeepType -> com.vladsch.flexmark.util.KeepType:
    4:3:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.vladsch.flexmark.util.KeepType valueOf(java.lang.String) -> valueOf
    3:3:com.vladsch.flexmark.util.KeepType[] values() -> values
com.vladsch.flexmark.util.Pair -> com.vladsch.flexmark.util.Pair:
    11:13:void <init>(java.lang.Object,java.lang.Object) -> <init>
    48:53:boolean equals(java.lang.Object) -> equals
    23:23:java.lang.Object getSecond() -> getSecond
    58:59:int hashCode() -> hashCode
    28:42:java.lang.String toString() -> toString
com.vladsch.flexmark.util.Ref -> com.vladsch.flexmark.util.Ref:
    6:7:void <init>(java.lang.Object) -> <init>
com.vladsch.flexmark.util.Utils -> com.vladsch.flexmark.util.Utils:
    140:140:boolean endsWith(java.lang.String,java.lang.String[]) -> endsWith
    147:154:boolean endsWith(java.lang.String,boolean,java.lang.String[]) -> endsWith
    60:62:boolean isWhiteSpaceNoEOL(java.lang.String) -> isWhiteSpaceNoEOL
    339:339:int max(int,int[]) -> max
    358:358:int maxLimit(int,int[]) -> maxLimit
    347:347:int min(int,int[]) -> min
    325:334:java.lang.String splice(java.util.Collection,java.lang.String,boolean) -> splice
com.vladsch.flexmark.util.collection.ClassificationBag -> com.vladsch.flexmark.util.collection.ClassificationBag:
    18:18:void <init>(com.vladsch.flexmark.util.Computable) -> <init>
    26:26:void <init>(int,com.vladsch.flexmark.util.Computable) -> <init>
    29:68:void <init>(int,com.vladsch.flexmark.util.Computable,com.vladsch.flexmark.util.collection.CollectionHost) -> <init>
    12:12:com.vladsch.flexmark.util.collection.CollectionHost access$000(com.vladsch.flexmark.util.collection.ClassificationBag) -> access$000
    12:12:com.vladsch.flexmark.util.collection.IndexedItemBitSetMap access$100(com.vladsch.flexmark.util.collection.ClassificationBag) -> access$100
    81:81:boolean add(java.lang.Object) -> add
    145:148:java.util.BitSet categoriesBitSet(java.lang.Object[]) -> categoriesBitSet
    155:158:java.util.BitSet categoriesBitSet(java.util.Collection) -> categoriesBitSet
    116:116:void clear() -> clear
    97:98:boolean containsCategory(java.lang.Object) -> containsCategory
    120:120:com.vladsch.flexmark.util.collection.iteration.ReversibleIterable getCategoryItems(java.lang.Class,java.lang.Object[]) -> getCategoryItems
    124:124:com.vladsch.flexmark.util.collection.iteration.ReversibleIterable getCategoryItems(java.lang.Class,java.util.Collection) -> getCategoryItems
    72:72:com.vladsch.flexmark.util.collection.OrderedSet getItems() -> getItems
    77:77:int getModificationCount() -> getModificationCount
    85:85:boolean remove(java.lang.Object) -> remove
com.vladsch.flexmark.util.collection.ClassificationBag$1 -> com.vladsch.flexmark.util.collection.ClassificationBag$1:
    31:31:void <init>(com.vladsch.flexmark.util.collection.ClassificationBag) -> <init>
    34:35:void adding(int,java.lang.Object,java.lang.Object) -> adding
    54:54:void addingNulls(int) -> addingNulls
    47:48:void clearing() -> clearing
    64:64:int getIteratorModificationCount() -> getIteratorModificationCount
    40:41:java.lang.Object removing(int,java.lang.Object) -> removing
com.vladsch.flexmark.util.collection.ClassifyingNodeTracker -> com.vladsch.flexmark.util.collection.ClassifyingNodeTracker:
    22:35:void <init>(com.vladsch.flexmark.util.NodeTracker,java.util.Map) -> <init>
    84:85:void addNodes(com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterable) -> addNodes
    131:131:com.vladsch.flexmark.util.collection.iteration.ReversibleIterable getCategoryItems(java.lang.Class,java.util.Set) -> getCategoryItems
    39:39:com.vladsch.flexmark.util.collection.OrderedMap getExclusionMap() -> getExclusionMap
    47:47:com.vladsch.flexmark.util.collection.OrderedSet getExclusionSet() -> getExclusionSet
    127:127:com.vladsch.flexmark.util.collection.OrderedSet getItems() -> getItems
    43:43:java.util.HashMap getNodeAncestryMap() -> getNodeAncestryMap
    62:64:void nodeAdded(com.vladsch.flexmark.ast.Node) -> nodeAdded
    69:72:void nodeAddedWithChildren(com.vladsch.flexmark.ast.Node) -> nodeAddedWithChildren
    97:97:void nodeRemoved(com.vladsch.flexmark.ast.Node) -> nodeRemoved
    114:117:void nodeRemovedWithDescendants(com.vladsch.flexmark.ast.Node) -> nodeRemovedWithDescendants
    121:122:void removeNodes(com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterable) -> removeNodes
    55:56:void validateLinked(com.vladsch.flexmark.ast.Node) -> validateLinked
    90:91:void validateUnlinked(com.vladsch.flexmark.ast.Node) -> validateUnlinked
com.vladsch.flexmark.util.collection.CopyOnWriteRef -> com.vladsch.flexmark.util.collection.CopyOnWriteRef:
    11:14:void <init>(java.lang.Object,com.vladsch.flexmark.util.Computable) -> <init>
    22:23:java.lang.Object getImmutable() -> getImmutable
    27:31:java.lang.Object getMutable() -> getMutable
    18:18:java.lang.Object getPeek() -> getPeek
    40:40:boolean isMutable() -> isMutable
    35:36:void setValue(java.lang.Object) -> setValue
com.vladsch.flexmark.util.collection.DynamicDefaultKey -> com.vladsch.flexmark.util.collection.DynamicDefaultKey:
    13:13:void <init>(java.lang.String,com.vladsch.flexmark.util.collection.DataValueFactory) -> <init>
    23:23:void <init>(java.lang.String,com.vladsch.flexmark.util.options.DataKey) -> <init>
    33:33:java.lang.Object getDefaultValue(com.vladsch.flexmark.util.options.DataHolder) -> getDefaultValue
com.vladsch.flexmark.util.collection.DynamicDefaultKey$1 -> com.vladsch.flexmark.util.collection.DynamicDefaultKey$1:
    23:23:void <init>(com.vladsch.flexmark.util.options.DataKey) -> <init>
    23:23:java.lang.Object create(java.lang.Object) -> create
    26:26:java.lang.Object create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.util.collection.IndexedItemBitSetMap -> com.vladsch.flexmark.util.collection.IndexedItemBitSetMap:
    11:11:void <init>(com.vladsch.flexmark.util.Computable) -> <init>
    15:16:void <init>(com.vladsch.flexmark.util.Computable,int) -> <init>
    7:7:boolean addSetItem(java.lang.Object,int) -> addSetItem
    35:36:boolean addSetItem(java.util.BitSet,int) -> addSetItem
    25:25:java.lang.Object mapKey(java.lang.Object) -> mapKey
    7:7:java.lang.Object newSet() -> newSet
    30:30:java.util.BitSet newSet() -> newSet
    7:7:boolean removeSetItem(java.lang.Object,int) -> removeSetItem
    42:43:boolean removeSetItem(java.util.BitSet,int) -> removeSetItem
com.vladsch.flexmark.util.collection.IndexedItemSetMapBase -> com.vladsch.flexmark.util.collection.IndexedItemSetMapBase:
    15:16:void <init>(int) -> <init>
    32:38:boolean addItem(java.lang.Object,int) -> addItem
    97:97:void clear() -> clear
    67:67:boolean containsKey(java.lang.Object) -> containsKey
    72:72:boolean containsValue(java.lang.Object) -> containsValue
    112:112:java.util.Set entrySet() -> entrySet
    77:77:java.lang.Object get(java.lang.Object) -> get
    62:62:boolean isEmpty() -> isEmpty
    102:102:java.util.Set keySet() -> keySet
    82:82:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    92:92:void putAll(java.util.Map) -> putAll
    87:87:java.lang.Object remove(java.lang.Object) -> remove
    43:45:boolean removeItem(java.lang.Object,int) -> removeItem
    57:57:int size() -> size
    107:107:java.util.Collection values() -> values
com.vladsch.flexmark.util.collection.ItemFactoryMap -> com.vladsch.flexmark.util.collection.ItemFactoryMap:
    15:15:void <init>(java.lang.Object) -> <init>
    18:20:void <init>(java.lang.Object,int) -> <init>
    59:59:void clear() -> clear
    47:47:boolean containsKey(java.lang.Object) -> containsKey
    62:62:boolean containsValue(java.lang.Object) -> containsValue
    71:71:java.util.Set entrySet() -> entrySet
    34:35:java.lang.Object get(java.lang.Object) -> get
    24:27:java.lang.Object getItem(com.vladsch.flexmark.util.ComputableFactory) -> getItem
    44:44:boolean isEmpty() -> isEmpty
    65:65:java.util.Set keySet() -> keySet
    10:10:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    50:50:java.lang.Object put(com.vladsch.flexmark.util.ComputableFactory,java.lang.Object) -> put
    53:53:void putAll(java.util.Map) -> putAll
    56:56:java.lang.Object remove(java.lang.Object) -> remove
    41:41:int size() -> size
    68:68:java.util.Collection values() -> values
com.vladsch.flexmark.util.collection.MapEntry -> com.vladsch.flexmark.util.collection.MapEntry:
    9:11:void <init>(java.lang.Object,java.lang.Object) -> <init>
    32:37:boolean equals(java.lang.Object) -> equals
    16:16:java.lang.Object getKey() -> getKey
    21:21:java.lang.Object getValue() -> getValue
    42:43:int hashCode() -> hashCode
    26:26:java.lang.Object setValue(java.lang.Object) -> setValue
com.vladsch.flexmark.util.collection.NodeClassifierVisitor -> com.vladsch.flexmark.util.collection.NodeClassifierVisitor:
    21:21:void <clinit>() -> <clinit>
    26:30:void <init>(java.util.Map) -> <init>
    36:38:com.vladsch.flexmark.util.collection.ClassifyingNodeTracker classify(com.vladsch.flexmark.ast.Node) -> classify
    56:58:void nodeAdded(com.vladsch.flexmark.ast.Node) -> nodeAdded
    50:50:void nodeAddedWithChildren(com.vladsch.flexmark.ast.Node) -> nodeAddedWithChildren
    84:84:void popNodeAncestry() -> popNodeAncestry
    78:79:void pushNodeAncestry() -> pushNodeAncestry
    88:96:boolean updateNodeAncestry(com.vladsch.flexmark.ast.Node,com.vladsch.flexmark.util.collection.CopyOnWriteRef) -> updateNodeAncestry
    43:43:void visit(com.vladsch.flexmark.ast.Node) -> visit
    141:157:void visitChildren(com.vladsch.flexmark.ast.Node) -> visitChildren
com.vladsch.flexmark.util.collection.NodeClassifierVisitor$1 -> com.vladsch.flexmark.util.collection.NodeClassifierVisitor$1:
    16:16:void <init>(com.vladsch.flexmark.util.collection.NodeClassifierVisitor) -> <init>
    16:16:java.lang.Object compute(java.lang.Object) -> compute
    18:18:java.util.BitSet compute(java.util.BitSet) -> compute
com.vladsch.flexmark.util.collection.OrderedMap -> com.vladsch.flexmark.util.collection.OrderedMap:
    18:18:void <init>() -> <init>
    22:22:void <init>(int) -> <init>
    29:34:void <init>(int,com.vladsch.flexmark.util.collection.CollectionHost) -> <init>
    9:9:boolean access$000(com.vladsch.flexmark.util.collection.OrderedMap) -> access$000
    9:9:java.util.Map$Entry access$100(com.vladsch.flexmark.util.collection.OrderedMap,int) -> access$100
    9:9:com.vladsch.flexmark.util.collection.OrderedSet access$200(com.vladsch.flexmark.util.collection.OrderedMap) -> access$200
    247:248:void addAll(java.util.Collection) -> addAll
    198:199:void addNulls(int) -> addNulls
    142:141:void adding(int,java.lang.Object,java.lang.Object) -> adding
    150:153:void addingNull(int) -> addingNull
    254:254:void clear() -> clear
    164:167:void clearing() -> clearing
    183:183:boolean containsKey(java.lang.Object) -> containsKey
    189:190:boolean containsValue(java.lang.Object) -> containsValue
    304:307:java.util.List entries() -> entries
    334:334:com.vladsch.flexmark.util.collection.iteration.ReversibleIndexedIterator entryIterator() -> entryIterator
    8:8:java.util.Set entrySet() -> entrySet
    289:297:com.vladsch.flexmark.util.collection.OrderedSet entrySet() -> entrySet
    392:397:boolean equals(java.lang.Object) -> equals
    205:206:java.lang.Object get(java.lang.Object) -> get
    133:133:java.util.Map$Entry getEntry(int) -> getEntry
    69:97:com.vladsch.flexmark.util.collection.iteration.Indexed getIndexedEntryProxy() -> getIndexedEntryProxy
    101:129:com.vladsch.flexmark.util.collection.iteration.Indexed getIndexedValueProxy() -> getIndexedValueProxy
    137:137:int getModificationCount() -> getModificationCount
    282:283:java.lang.Object getValue(int) -> getValue
    403:404:int hashCode() -> hashCode
    177:177:boolean isEmpty() -> isEmpty
    8:8:java.util.Iterator iterator() -> iterator
    379:379:com.vladsch.flexmark.util.collection.iteration.ReversibleIndexedIterator iterator() -> iterator
    8:8:java.util.Set keySet() -> keySet
    259:259:com.vladsch.flexmark.util.collection.OrderedSet keySet() -> keySet
    211:218:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    241:242:void putAll(java.util.Map) -> putAll
    236:236:java.lang.Object remove(java.lang.Object) -> remove
    157:160:java.lang.Object removing(int,java.lang.Object) -> removing
    172:172:int size() -> size
    346:346:com.vladsch.flexmark.util.collection.iteration.ReversibleIterable valueIterable() -> valueIterable
    318:318:com.vladsch.flexmark.util.collection.iteration.ReversibleIndexedIterator valueIterator() -> valueIterator
    264:271:java.util.Collection values() -> values
com.vladsch.flexmark.util.collection.OrderedMap$1 -> com.vladsch.flexmark.util.collection.OrderedMap$1:
    34:34:void <init>(com.vladsch.flexmark.util.collection.OrderedMap) -> <init>
    37:37:void adding(int,java.lang.Object,java.lang.Object) -> adding
    53:53:void addingNulls(int) -> addingNulls
    47:47:void clearing() -> clearing
    63:63:int getIteratorModificationCount() -> getIteratorModificationCount
    42:42:java.lang.Object removing(int,java.lang.Object) -> removing
    58:58:boolean skipHostUpdate() -> skipHostUpdate
com.vladsch.flexmark.util.collection.OrderedMap$2 -> com.vladsch.flexmark.util.collection.OrderedMap$2:
    70:70:void <init>(com.vladsch.flexmark.util.collection.OrderedMap) -> <init>
    70:70:java.lang.Object get(int) -> get
    73:73:java.util.Map$Entry get(int) -> get
    93:93:int modificationCount() -> modificationCount
    83:83:void removeAt(int) -> removeAt
com.vladsch.flexmark.util.collection.OrderedMap$3 -> com.vladsch.flexmark.util.collection.OrderedMap$3:
    102:102:void <init>(com.vladsch.flexmark.util.collection.OrderedMap) -> <init>
    105:105:java.lang.Object get(int) -> get
    125:125:int modificationCount() -> modificationCount
    115:115:void removeAt(int) -> removeAt
com.vladsch.flexmark.util.collection.OrderedMap$EntryCollectionHost -> com.vladsch.flexmark.util.collection.OrderedMap$EntryCollectionHost:
    408:408:void <init>(com.vladsch.flexmark.util.collection.OrderedMap) -> <init>
    408:408:void <init>(com.vladsch.flexmark.util.collection.OrderedMap,com.vladsch.flexmark.util.collection.OrderedMap$1) -> <init>
    408:408:void adding(int,java.lang.Object,java.lang.Object) -> adding
    412:412:void adding(int,java.util.Map$Entry,java.lang.Object) -> adding
    428:428:void addingNulls(int) -> addingNulls
    423:423:void clearing() -> clearing
    438:438:int getIteratorModificationCount() -> getIteratorModificationCount
    408:408:java.lang.Object removing(int,java.lang.Object) -> removing
    417:417:java.lang.Object removing(int,java.util.Map$Entry) -> removing
    433:433:boolean skipHostUpdate() -> skipHostUpdate
com.vladsch.flexmark.util.collection.OrderedMultiMap -> com.vladsch.flexmark.util.collection.OrderedMultiMap:
    18:18:void <init>() -> <init>
    26:26:void <init>(com.vladsch.flexmark.util.collection.CollectionHost) -> <init>
    29:64:void <init>(int,com.vladsch.flexmark.util.collection.CollectionHost) -> <init>
    9:9:void access$000(com.vladsch.flexmark.util.collection.OrderedMultiMap,int,java.lang.Object,java.lang.Object) -> access$000
    9:9:java.lang.Object access$100(com.vladsch.flexmark.util.collection.OrderedMultiMap,int,java.lang.Object) -> access$100
    9:9:boolean access$1000(com.vladsch.flexmark.util.collection.OrderedMultiMap,int,java.lang.Object,java.lang.Object) -> access$1000
    9:9:void access$200(com.vladsch.flexmark.util.collection.OrderedMultiMap,int) -> access$200
    9:9:boolean access$300(com.vladsch.flexmark.util.collection.OrderedMultiMap) -> access$300
    9:9:void access$400(com.vladsch.flexmark.util.collection.OrderedMultiMap,int,java.lang.Object,java.lang.Object) -> access$400
    9:9:java.lang.Object access$500(com.vladsch.flexmark.util.collection.OrderedMultiMap,int,java.lang.Object) -> access$500
    9:9:void access$600(com.vladsch.flexmark.util.collection.OrderedMultiMap,int) -> access$600
    9:9:boolean access$700(com.vladsch.flexmark.util.collection.OrderedMultiMap) -> access$700
    9:9:java.util.Map$Entry access$800(com.vladsch.flexmark.util.collection.OrderedMultiMap,int) -> access$800
    9:9:boolean access$900(com.vladsch.flexmark.util.collection.OrderedMultiMap,int) -> access$900
    293:347:boolean addKeyValue(java.lang.Object,java.lang.Object) -> addKeyValue
    251:261:void addNullEntry(int) -> addNullEntry
    141:147:void addingKey(int,java.lang.Object,java.lang.Object) -> addingKey
    153:158:void addingNullKey(int) -> addingNullKey
    189:194:void addingNullValue(int) -> addingNullValue
    177:183:void addingValue(int,java.lang.Object,java.lang.Object) -> addingValue
    439:449:void clear() -> clear
    221:221:boolean containsKey(java.lang.Object) -> containsKey
    226:227:boolean containsValue(java.lang.Object) -> containsValue
    9:9:java.util.Set entrySet() -> entrySet
    500:500:com.vladsch.flexmark.util.collection.OrderedSet entrySet() -> entrySet
    536:537:com.vladsch.flexmark.util.collection.iteration.ReversibleIndexedIterator entrySetIterator() -> entrySetIterator
    639:644:boolean equals(java.lang.Object) -> equals
    232:232:java.lang.Object get(java.lang.Object) -> get
    130:130:java.util.Map$Entry getEntry(int) -> getEntry
    98:126:com.vladsch.flexmark.util.collection.iteration.Indexed getIndexedProxy() -> getIndexedProxy
    236:237:java.lang.Object getKeyValue(java.lang.Object) -> getKeyValue
    556:558:java.util.BitSet getKeyValueUnionSet() -> getKeyValueUnionSet
    134:134:int getModificationCount() -> getModificationCount
    241:242:java.lang.Object getValueKey(java.lang.Object) -> getValueKey
    650:651:int hashCode() -> hashCode
    216:216:boolean isEmpty() -> isEmpty
    575:575:java.util.Iterator iterator() -> iterator
    9:9:java.util.Set keySet() -> keySet
    454:454:com.vladsch.flexmark.util.collection.OrderedSet keySet() -> keySet
    587:631:com.vladsch.flexmark.util.collection.OrderedSet keyValueEntrySet() -> keyValueEntrySet
    247:247:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    422:422:void putAll(java.util.Map) -> putAll
    426:427:void putAllKeyValues(java.util.Map) -> putAllKeyValues
    285:285:java.lang.Object putKeyValue(java.lang.Object,java.lang.Object) -> putKeyValue
    289:289:java.lang.Object putValueKey(java.lang.Object,java.lang.Object) -> putValueKey
    355:355:java.lang.Object remove(java.lang.Object) -> remove
    364:364:boolean removeEntryIndex(int) -> removeEntryIndex
    368:372:boolean removeEntryIndex(int,java.lang.Object,java.lang.Object) -> removeEntryIndex
    395:403:java.lang.Object removeKey(java.lang.Object) -> removeKey
    408:416:java.lang.Object removeValue(java.lang.Object) -> removeValue
    164:169:java.lang.Object removingKey(int,java.lang.Object) -> removingKey
    200:205:java.lang.Object removingValue(int,java.lang.Object) -> removingValue
    211:211:int size() -> size
    472:472:com.vladsch.flexmark.util.collection.OrderedSet valueSet() -> valueSet
    459:466:java.util.Collection values() -> values
com.vladsch.flexmark.util.collection.OrderedMultiMap$1 -> com.vladsch.flexmark.util.collection.OrderedMultiMap$1:
    32:32:void <init>(com.vladsch.flexmark.util.collection.OrderedMultiMap) -> <init>
    35:35:void adding(int,java.lang.Object,java.lang.Object) -> adding
    50:50:void addingNulls(int) -> addingNulls
    45:45:void clearing() -> clearing
    60:60:int getIteratorModificationCount() -> getIteratorModificationCount
    40:40:java.lang.Object removing(int,java.lang.Object) -> removing
    55:55:boolean skipHostUpdate() -> skipHostUpdate
com.vladsch.flexmark.util.collection.OrderedMultiMap$2 -> com.vladsch.flexmark.util.collection.OrderedMultiMap$2:
    64:64:void <init>(com.vladsch.flexmark.util.collection.OrderedMultiMap) -> <init>
    67:67:void adding(int,java.lang.Object,java.lang.Object) -> adding
    82:82:void addingNulls(int) -> addingNulls
    77:77:void clearing() -> clearing
    92:92:int getIteratorModificationCount() -> getIteratorModificationCount
    72:72:java.lang.Object removing(int,java.lang.Object) -> removing
    87:87:boolean skipHostUpdate() -> skipHostUpdate
com.vladsch.flexmark.util.collection.OrderedMultiMap$3 -> com.vladsch.flexmark.util.collection.OrderedMultiMap$3:
    99:99:void <init>(com.vladsch.flexmark.util.collection.OrderedMultiMap) -> <init>
    99:99:java.lang.Object get(int) -> get
    102:102:java.util.Map$Entry get(int) -> get
    122:122:int modificationCount() -> modificationCount
    112:112:void removeAt(int) -> removeAt
com.vladsch.flexmark.util.collection.OrderedMultiMap$4 -> com.vladsch.flexmark.util.collection.OrderedMultiMap$4:
    590:590:void <init>(com.vladsch.flexmark.util.collection.OrderedMultiMap) -> <init>
    590:590:void adding(int,java.lang.Object,java.lang.Object) -> adding
    594:594:void adding(int,java.util.Map$Entry,java.lang.Object) -> adding
    610:610:void addingNulls(int) -> addingNulls
    605:605:void clearing() -> clearing
    620:620:int getIteratorModificationCount() -> getIteratorModificationCount
    590:590:java.lang.Object removing(int,java.lang.Object) -> removing
    599:599:java.lang.Object removing(int,java.util.Map$Entry) -> removing
    615:615:boolean skipHostUpdate() -> skipHostUpdate
com.vladsch.flexmark.util.collection.OrderedSet -> com.vladsch.flexmark.util.collection.OrderedSet:
    18:18:void <init>() -> <init>
    22:22:void <init>(int) -> <init>
    29:36:void <init>(int,com.vladsch.flexmark.util.collection.CollectionHost) -> <init>
    8:8:int access$100(com.vladsch.flexmark.util.collection.OrderedSet) -> access$100
    338:338:boolean add(java.lang.Object) -> add
    342:353:boolean add(java.lang.Object,java.lang.Object) -> add
    414:418:boolean addAll(java.util.Collection) -> addAll
    252:252:void addNull() -> addNull
    258:267:void addNulls(int) -> addNulls
    481:488:void clear() -> clear
    201:201:boolean contains(java.lang.Object) -> contains
    404:405:boolean containsAll(java.util.Collection) -> containsAll
    494:502:boolean equals(java.lang.Object) -> equals
    145:147:com.vladsch.flexmark.util.collection.iteration.Indexed getConcurrentModsIndexedProxy() -> getConcurrentModsIndexedProxy
    139:141:com.vladsch.flexmark.util.collection.iteration.Indexed getIndexedProxy() -> getIndexedProxy
    155:155:int getIteratorModificationCount() -> getIteratorModificationCount
    151:151:int getModificationCount() -> getModificationCount
    516:516:java.util.BitSet getValidIndices() -> getValidIndices
    181:182:java.lang.Object getValue(int) -> getValue
    205:205:java.util.List getValueList() -> getValueList
    186:186:java.lang.Object getValueOrNull(int) -> getValueOrNull
    509:511:int hashCode() -> hashCode
    40:44:java.util.BitSet indexBitSet(java.lang.Iterable) -> indexBitSet
    279:279:com.vladsch.flexmark.util.collection.iteration.ReversibleIterable indexIterable() -> indexIterable
    271:271:com.vladsch.flexmark.util.collection.iteration.ReversibleIterator indexIterator() -> indexIterator
    167:167:int indexOf(java.lang.Object) -> indexOf
    196:196:boolean isEmpty() -> isEmpty
    248:248:boolean isSparse() -> isSparse
    171:171:boolean isValidIndex(int) -> isValidIndex
    8:8:java.util.Iterator iterator() -> iterator
    288:288:com.vladsch.flexmark.util.collection.iteration.ReversibleIndexedIterator iterator() -> iterator
    70:70:java.util.BitSet keyDifferenceBitSet(java.lang.Iterable) -> keyDifferenceBitSet
    74:80:java.util.BitSet keyDifferenceBitSet(java.util.Iterator) -> keyDifferenceBitSet
    393:393:boolean remove(java.lang.Object) -> remove
    471:473:boolean removeAll(java.util.Collection) -> removeAll
    397:399:java.lang.Object removeHosted(java.lang.Object) -> removeHosted
    358:358:boolean removeIndex(int) -> removeIndex
    362:385:java.lang.Object removeIndexHosted(int) -> removeIndexHosted
    423:461:boolean retainAll(java.util.Collection) -> retainAll
    217:242:boolean setValueAt(int,java.lang.Object,java.lang.Object) -> setValueAt
    191:191:int size() -> size
    305:310:java.lang.Object[] toArray() -> toArray
    319:331:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    175:176:void validateIndex(int) -> validateIndex
com.vladsch.flexmark.util.collection.OrderedSet$IndexedProxy -> com.vladsch.flexmark.util.collection.OrderedSet$IndexedProxy:
    108:109:void <init>(com.vladsch.flexmark.util.collection.OrderedSet,boolean) -> <init>
    114:114:java.lang.Object get(int) -> get
    134:134:int modificationCount() -> modificationCount
    124:124:void removeAt(int) -> removeAt
com.vladsch.flexmark.util.collection.iteration.BitSetIterable -> com.vladsch.flexmark.util.collection.iteration.BitSetIterable:
    10:10:void <init>(java.util.BitSet) -> <init>
    13:15:void <init>(java.util.BitSet,boolean) -> <init>
    5:5:java.util.Iterator iterator() -> iterator
    25:25:com.vladsch.flexmark.util.collection.iteration.ReversibleIterator iterator() -> iterator
com.vladsch.flexmark.util.collection.iteration.BitSetIterator -> com.vladsch.flexmark.util.collection.iteration.BitSetIterator:
    15:15:void <init>(java.util.BitSet) -> <init>
    18:22:void <init>(java.util.BitSet,boolean) -> <init>
    32:32:boolean hasNext() -> hasNext
    8:8:java.lang.Object next() -> next
    37:38:java.lang.Integer next() -> next
    48:49:void remove() -> remove
com.vladsch.flexmark.util.collection.iteration.IndexedIterable -> com.vladsch.flexmark.util.collection.iteration.IndexedIterable:
    7:9:void <init>(com.vladsch.flexmark.util.collection.iteration.Indexed,com.vladsch.flexmark.util.collection.iteration.ReversibleIterable) -> <init>
    3:3:com.vladsch.flexmark.util.collection.iteration.ReversibleIterator iterator() -> iterator
    3:3:java.util.Iterator iterator() -> iterator
    19:19:com.vladsch.flexmark.util.collection.iteration.ReversibleIndexedIterator iterator() -> iterator
com.vladsch.flexmark.util.collection.iteration.IndexedIterator -> com.vladsch.flexmark.util.collection.iteration.IndexedIterator:
    14:18:void <init>(com.vladsch.flexmark.util.collection.iteration.Indexed,com.vladsch.flexmark.util.collection.iteration.ReversibleIterator) -> <init>
    28:28:boolean hasNext() -> hasNext
    33:34:java.lang.Object next() -> next
    43:44:void remove() -> remove
com.vladsch.flexmark.util.collection.iteration.Reverse -> com.vladsch.flexmark.util.collection.iteration.Reverse:
    11:11:void <init>(java.util.List) -> <init>
    14:16:void <init>(java.util.List,boolean) -> <init>
    5:5:java.util.Iterator iterator() -> iterator
    74:74:com.vladsch.flexmark.util.collection.iteration.ReversibleIterator iterator() -> iterator
com.vladsch.flexmark.util.collection.iteration.Reverse$ReversedListIterator -> com.vladsch.flexmark.util.collection.iteration.Reverse$ReversedListIterator:
    28:34:void <init>(java.util.List,boolean) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:63:java.lang.Object next() -> next
com.vladsch.flexmark.util.dependency.DependencyHandler -> com.vladsch.flexmark.util.dependency.DependencyHandler:
    9:9:void <init>() -> <init>
    15:127:com.vladsch.flexmark.util.dependency.ResolvedDependencies resolveDependencies(java.util.List) -> resolveDependencies
com.vladsch.flexmark.util.dependency.DependentItem -> com.vladsch.flexmark.util.dependency.DependentItem:
    13:17:void <init>(int,java.lang.Object,java.lang.Class,boolean) -> <init>
    21:22:void addDependency(com.vladsch.flexmark.util.dependency.DependentItem) -> addDependency
    45:46:void addDependent(com.vladsch.flexmark.util.dependency.DependentItem) -> addDependent
    67:67:boolean hasDependencies() -> hasDependencies
    71:71:boolean hasDependents() -> hasDependents
    31:34:boolean removeDependency(com.vladsch.flexmark.util.dependency.DependentItem) -> removeDependency
com.vladsch.flexmark.util.dependency.DependentItemMap -> com.vladsch.flexmark.util.dependency.DependentItemMap:
    11:11:void <init>(int) -> <init>
com.vladsch.flexmark.util.dependency.FlatDependencies -> com.vladsch.flexmark.util.dependency.FlatDependencies:
    10:16:void <init>(java.util.List) -> <init>
com.vladsch.flexmark.util.dependency.FlatDependencyHandler -> com.vladsch.flexmark.util.dependency.FlatDependencyHandler:
    5:5:void <init>() -> <init>
    29:30:java.util.List computeDependencies(java.util.List) -> computeDependencies
    5:5:com.vladsch.flexmark.util.dependency.ResolvedDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    25:25:com.vladsch.flexmark.util.dependency.FlatDependencies createResolvedDependencies(java.util.List) -> createResolvedDependencies
    5:5:java.lang.Object createStage(java.util.List) -> createStage
    14:14:com.vladsch.flexmark.util.dependency.FlatDependencyStage createStage(java.util.List) -> createStage
    20:20:java.lang.Class getDependentClass(com.vladsch.flexmark.util.dependency.Dependent) -> getDependentClass
    8:9:java.util.List resolvedDependencies(java.util.List) -> resolvedDependencies
com.vladsch.flexmark.util.dependency.FlatDependencyStage -> com.vladsch.flexmark.util.dependency.FlatDependencyStage:
    8:10:void <init>(java.util.List) -> <init>
    14:14:java.util.List getDependents() -> getDependents
com.vladsch.flexmark.util.dependency.ResolvedDependencies -> com.vladsch.flexmark.util.dependency.ResolvedDependencies:
    8:9:void <init>(java.util.List) -> <init>
    13:13:java.util.List getDependentStages() -> getDependentStages
    17:17:boolean isEmpty() -> isEmpty
com.vladsch.flexmark.util.format.TableFormatOptions -> com.vladsch.flexmark.util.format.TableFormatOptions:
    12:21:void <clinit>() -> <clinit>
com.vladsch.flexmark.util.format.options.DiscretionaryText -> com.vladsch.flexmark.util.format.options.DiscretionaryText:
    4:3:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.vladsch.flexmark.util.format.options.DiscretionaryText valueOf(java.lang.String) -> valueOf
    3:3:com.vladsch.flexmark.util.format.options.DiscretionaryText[] values() -> values
com.vladsch.flexmark.util.format.options.ElementPlacement -> com.vladsch.flexmark.util.format.options.ElementPlacement:
    4:3:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.vladsch.flexmark.util.format.options.ElementPlacement valueOf(java.lang.String) -> valueOf
    3:3:com.vladsch.flexmark.util.format.options.ElementPlacement[] values() -> values
com.vladsch.flexmark.util.format.options.ElementPlacementSort -> com.vladsch.flexmark.util.format.options.ElementPlacementSort:
    4:3:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:com.vladsch.flexmark.util.format.options.ElementPlacementSort valueOf(java.lang.String) -> valueOf
    3:3:com.vladsch.flexmark.util.format.options.ElementPlacementSort[] values() -> values
com.vladsch.flexmark.util.html.Attribute -> com.vladsch.flexmark.util.html.Attribute:
    17:18:void <clinit>() -> <clinit>
com.vladsch.flexmark.util.html.AttributeImpl -> com.vladsch.flexmark.util.html.AttributeImpl:
    12:16:void <init>(java.lang.CharSequence,java.lang.CharSequence,char,char) -> <init>
    104:109:boolean equals(java.lang.Object) -> equals
    36:36:java.lang.String getName() -> getName
    41:41:java.lang.String getValue() -> getValue
    26:26:char getValueListDelimiter() -> getValueListDelimiter
    31:31:char getValueNameDelimiter() -> getValueNameDelimiter
    115:116:int hashCode() -> hashCode
    46:46:boolean isNonRendering() -> isNonRendering
    129:129:com.vladsch.flexmark.util.html.AttributeImpl of(com.vladsch.flexmark.util.html.Attribute) -> of
    137:137:com.vladsch.flexmark.util.html.AttributeImpl of(java.lang.CharSequence,java.lang.CharSequence) -> of
    145:150:com.vladsch.flexmark.util.html.AttributeImpl of(java.lang.CharSequence,java.lang.CharSequence,char,char) -> of
    86:86:com.vladsch.flexmark.util.html.Attribute replaceValue(java.lang.CharSequence) -> replaceValue
    91:92:com.vladsch.flexmark.util.html.Attribute setValue(java.lang.CharSequence) -> setValue
    21:21:com.vladsch.flexmark.util.html.MutableAttribute toMutable() -> toMutable
    122:122:java.lang.String toString() -> toString
com.vladsch.flexmark.util.html.Attributes -> com.vladsch.flexmark.util.html.Attributes:
    9:9:void <clinit>() -> <clinit>
    13:14:void <init>() -> <init>
    17:18:void <init>(com.vladsch.flexmark.util.html.Attributes) -> <init>
    75:83:com.vladsch.flexmark.util.html.Attribute addValue(java.lang.CharSequence,java.lang.CharSequence) -> addValue
    67:68:com.vladsch.flexmark.util.html.Attributes addValues(com.vladsch.flexmark.util.html.Attributes) -> addValues
    22:25:java.util.LinkedHashMap getAttributes() -> getAttributes
    36:41:java.lang.String getValue(java.lang.CharSequence) -> getValue
    120:120:boolean isEmpty() -> isEmpty
    155:159:com.vladsch.flexmark.util.html.Attribute remove(java.lang.CharSequence) -> remove
    49:58:com.vladsch.flexmark.util.html.Attribute replaceValue(java.lang.CharSequence,java.lang.CharSequence) -> replaceValue
    134:134:java.util.Collection values() -> values
com.vladsch.flexmark.util.html.Escaping -> com.vladsch.flexmark.util.html.Escaping:
    18:434:void <clinit>() -> <clinit>
    493:508:java.lang.String collapseWhitespace(java.lang.CharSequence,boolean) -> collapseWhitespace
    177:178:java.lang.String escapeHtml(java.lang.CharSequence,boolean) -> escapeHtml
    288:288:java.lang.String normalizeEOL(java.lang.CharSequence) -> normalizeEOL
    299:320:java.lang.String normalizeEOL(java.lang.CharSequence,boolean) -> normalizeEOL
    278:278:java.lang.String normalizeEndWithEOL(java.lang.CharSequence) -> normalizeEndWithEOL
    414:415:java.lang.String normalizeReference(java.lang.CharSequence,boolean) -> normalizeReference
    477:482:java.lang.String normalizeReferenceChars(java.lang.CharSequence,boolean) -> normalizeReferenceChars
    443:463:java.lang.String obfuscate(java.lang.String,boolean) -> obfuscate
    403:403:java.lang.String percentEncodeUrl(java.lang.CharSequence) -> percentEncodeUrl
    516:533:java.lang.String replaceAll(java.util.regex.Pattern,java.lang.CharSequence,com.vladsch.flexmark.util.html.Escaping$Replacer) -> replaceAll
    537:555:com.vladsch.flexmark.util.sequence.BasedSequence replaceAll(java.util.regex.Pattern,com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.html.Escaping$Replacer,com.vladsch.flexmark.util.sequence.ReplacedTextMapper) -> replaceAll
    231:233:com.vladsch.flexmark.util.sequence.BasedSequence unescape(com.vladsch.flexmark.util.sequence.BasedSequence,com.vladsch.flexmark.util.sequence.ReplacedTextMapper) -> unescape
    193:196:java.lang.String unescapeString(java.lang.CharSequence) -> unescapeString
    209:218:java.lang.String unescapeString(java.lang.CharSequence,boolean) -> unescapeString
com.vladsch.flexmark.util.html.Escaping$1 -> com.vladsch.flexmark.util.html.Escaping$1:
    51:51:void <init>() -> <init>
    54:63:void replace(java.lang.String,java.lang.StringBuilder) -> replace
    69:79:void replace(com.vladsch.flexmark.util.sequence.BasedSequence,int,int,com.vladsch.flexmark.util.sequence.ReplacedTextMapper) -> replace
com.vladsch.flexmark.util.html.Escaping$2 -> com.vladsch.flexmark.util.html.Escaping$2:
    84:84:void <init>() -> <init>
    87:87:void replace(java.lang.String,java.lang.StringBuilder) -> replace
    92:92:void replace(com.vladsch.flexmark.util.sequence.BasedSequence,int,int,com.vladsch.flexmark.util.sequence.ReplacedTextMapper) -> replace
com.vladsch.flexmark.util.html.Escaping$3 -> com.vladsch.flexmark.util.html.Escaping$3:
    96:96:void <init>() -> <init>
    99:102:void replace(java.lang.String,java.lang.StringBuilder) -> replace
    108:111:void replace(com.vladsch.flexmark.util.sequence.BasedSequence,int,int,com.vladsch.flexmark.util.sequence.ReplacedTextMapper) -> replace
com.vladsch.flexmark.util.html.Escaping$4 -> com.vladsch.flexmark.util.html.Escaping$4:
    116:116:void <init>() -> <init>
    119:119:void replace(java.lang.String,java.lang.StringBuilder) -> replace
    124:124:void replace(com.vladsch.flexmark.util.sequence.BasedSequence,int,int,com.vladsch.flexmark.util.sequence.ReplacedTextMapper) -> replace
com.vladsch.flexmark.util.html.Escaping$5 -> com.vladsch.flexmark.util.html.Escaping$5:
    128:128:void <init>() -> <init>
    131:145:void replace(java.lang.String,java.lang.StringBuilder) -> replace
    152:171:void replace(com.vladsch.flexmark.util.sequence.BasedSequence,int,int,com.vladsch.flexmark.util.sequence.ReplacedTextMapper) -> replace
com.vladsch.flexmark.util.html.FormattingAppendableImpl -> com.vladsch.flexmark.util.html.FormattingAppendableImpl:
    73:97:void <init>(java.lang.Appendable,int) -> <init>
    155:161:void addPendingSpaces(int) -> addPendingSpaces
    15:15:java.lang.Appendable append(char) -> append
    15:15:java.lang.Appendable append(java.lang.CharSequence) -> append
    15:15:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    450:452:com.vladsch.flexmark.util.html.FormattingAppendable append(java.lang.CharSequence) -> append
    460:462:com.vladsch.flexmark.util.html.FormattingAppendable append(java.lang.CharSequence,int,int) -> append
    470:472:com.vladsch.flexmark.util.html.FormattingAppendable append(char) -> append
    219:250:void appendEOL(boolean,boolean) -> appendEOL
    320:348:void appendImpl(char) -> appendImpl
    356:424:void appendImpl(java.lang.CharSequence,int,int) -> appendImpl
    142:148:void appendIndent() -> appendIndent
    168:174:void appendSpaces() -> appendSpaces
    255:293:void beforeAppendText(boolean,boolean,boolean) -> beforeAppendText
    308:316:void beforePre() -> beforePre
    659:659:com.vladsch.flexmark.util.html.FormattingAppendable blankLine() -> blankLine
    800:800:com.vladsch.flexmark.util.html.FormattingAppendable closeConditional(com.vladsch.flexmark.util.html.ConditionalFormatter) -> closeConditional
    765:765:com.vladsch.flexmark.util.html.FormattingAppendable closePreFormatted() -> closePreFormatted
    535:545:com.vladsch.flexmark.util.html.FormattingAppendable flush(int) -> flush
    122:122:boolean haveEolOptions(int) -> haveEolOptions
    118:118:boolean haveOptions(int) -> haveOptions
    688:688:com.vladsch.flexmark.util.html.FormattingAppendable indent() -> indent
    134:134:boolean isCollapseWhitespace() -> isCollapseWhitespace
    126:126:boolean isConvertingTabs() -> isConvertingTabs
    773:773:boolean isPendingSpace() -> isPendingSpace
    617:617:com.vladsch.flexmark.util.html.FormattingAppendable line() -> line
    629:629:com.vladsch.flexmark.util.html.FormattingAppendable lineIf(boolean) -> lineIf
    793:794:com.vladsch.flexmark.util.html.FormattingAppendable openConditional(com.vladsch.flexmark.util.html.ConditionalFormatter) -> openConditional
    748:759:com.vladsch.flexmark.util.html.FormattingAppendable openPreFormatted(boolean) -> openPreFormatted
    191:194:void resetPendingEOL() -> resetPendingEOL
    209:214:void runAllAfterEol() -> runAllAfterEol
    442:443:void setIOException(java.io.IOException) -> setIOException
    557:557:com.vladsch.flexmark.util.html.FormattingAppendable setIndentPrefix(java.lang.CharSequence) -> setIndentPrefix
    297:303:void setOffsetBefore(int) -> setOffsetBefore
    179:185:void setPendingEOL(int) -> setPendingEOL
    101:102:void setWhitespace() -> setWhitespace
    704:704:com.vladsch.flexmark.util.html.FormattingAppendable unIndent() -> unIndent
    698:698:com.vladsch.flexmark.util.html.FormattingAppendable willIndent() -> willIndent
com.vladsch.flexmark.util.html.FormattingAppendableImpl$ConditionalFrame -> com.vladsch.flexmark.util.html.FormattingAppendableImpl$ConditionalFrame:
    818:826:void <init>(com.vladsch.flexmark.util.html.ConditionalFormatter,int,int,int) -> <init>
com.vladsch.flexmark.util.html.Html5Entities -> com.vladsch.flexmark.util.html.Html5Entities:
    19:20:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    49:67:com.vladsch.flexmark.util.sequence.BasedSequence entityToSequence(com.vladsch.flexmark.util.sequence.BasedSequence) -> entityToSequence
    24:39:java.lang.String entityToString(java.lang.String) -> entityToString
    75:93:java.util.Map readEntities() -> readEntities
com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase -> com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase:
    38:40:void <init>(java.lang.Appendable,int,int) -> <init>
    14:14:com.vladsch.flexmark.util.html.FormattingAppendable access$000(com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase) -> access$000
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable append(char) -> append
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable append(java.lang.CharSequence) -> append
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable append(java.lang.CharSequence,int,int) -> append
    13:13:java.lang.Appendable append(char) -> append
    13:13:java.lang.Appendable append(java.lang.CharSequence) -> append
    13:13:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    465:465:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase append(java.lang.CharSequence) -> append
    471:471:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase append(java.lang.CharSequence,int,int) -> append
    477:477:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase append(char) -> append
    120:123:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase attr(java.lang.CharSequence,java.lang.CharSequence) -> attr
    140:144:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase attr(com.vladsch.flexmark.util.html.Attributes) -> attr
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable blankLine() -> blankLine
    425:425:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase blankLine() -> blankLine
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable closeConditional(com.vladsch.flexmark.util.html.ConditionalFormatter) -> closeConditional
    639:639:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase closeConditional(com.vladsch.flexmark.util.html.ConditionalFormatter) -> closeConditional
    68:68:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase closePre() -> closePre
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable closePreFormatted() -> closePreFormatted
    629:629:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase closePreFormatted() -> closePreFormatted
    276:276:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase closeTag(java.lang.CharSequence) -> closeTag
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable flush(int) -> flush
    502:502:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase flush(int) -> flush
    158:158:com.vladsch.flexmark.util.html.Attributes getAttributes() -> getAttributes
    190:190:java.lang.String getOpenTagText() -> getOpenTagText
    220:232:java.util.List getOpenTagsAfterLast(java.lang.CharSequence) -> getOpenTagsAfterLast
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable indent() -> indent
    445:445:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase indent() -> indent
    583:583:boolean isPendingSpace() -> isPendingSpace
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable line() -> line
    410:410:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase line() -> line
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable lineIf(boolean) -> lineIf
    440:440:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase lineIf(boolean) -> lineIf
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable openConditional(com.vladsch.flexmark.util.html.ConditionalFormatter) -> openConditional
    634:634:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase openConditional(com.vladsch.flexmark.util.html.ConditionalFormatter) -> openConditional
    62:62:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase openPre() -> openPre
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable openPreFormatted(boolean) -> openPreFormatted
    623:623:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase openPreFormatted(boolean) -> openPreFormatted
    198:198:void popTag(java.lang.CharSequence) -> popTag
    194:194:void pushTag(java.lang.CharSequence) -> pushTag
    83:83:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase raw(java.lang.CharSequence) -> raw
    95:97:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase rawPre(java.lang.CharSequence) -> rawPre
    163:163:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase setAttributes(com.vladsch.flexmark.util.html.Attributes) -> setAttributes
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable setIndentPrefix(java.lang.CharSequence) -> setIndentPrefix
    511:511:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase setIndentPrefix(java.lang.CharSequence) -> setIndentPrefix
    56:56:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase setSuppressCloseTagLine(boolean) -> setSuppressCloseTagLine
    48:48:void setSuppressOpenTagLine(boolean) -> setSuppressOpenTagLine
    181:181:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase tag(java.lang.CharSequence) -> tag
    237:237:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase tag(java.lang.CharSequence,boolean) -> tag
    290:346:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase tag(java.lang.CharSequence,boolean,boolean,java.lang.Runnable) -> tag
    210:210:void tagClosed(java.lang.CharSequence) -> tagClosed
    377:377:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase tagIndent(java.lang.CharSequence,java.lang.Runnable) -> tagIndent
    371:371:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase tagLine(java.lang.CharSequence,java.lang.Runnable) -> tagLine
    383:383:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase tagLineIndent(java.lang.CharSequence,java.lang.Runnable) -> tagLineIndent
    206:206:void tagOpened(java.lang.CharSequence) -> tagOpened
    186:186:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase tagVoid(java.lang.CharSequence) -> tagVoid
    353:353:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase tagVoidLine(java.lang.CharSequence) -> tagVoidLine
    114:114:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase text(java.lang.CharSequence) -> text
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable unIndent() -> unIndent
    455:455:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase unIndent() -> unIndent
    13:13:com.vladsch.flexmark.util.html.FormattingAppendable willIndent() -> willIndent
    450:450:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase willIndent() -> willIndent
    152:152:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase withAttr() -> withAttr
    175:175:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase withCondIndent() -> withCondIndent
    169:169:com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase withCondLine() -> withCondLine
com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase$1 -> com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase$1:
    305:305:void <init>(com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase,boolean,boolean) -> <init>
    309:316:void apply(boolean,boolean,boolean,boolean) -> apply
com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase$2 -> com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase$2:
    326:326:void <init>(com.vladsch.flexmark.util.html.HtmlFormattingAppendableBase,boolean,boolean) -> <init>
    330:333:void apply(boolean,boolean,boolean,boolean) -> apply
com.vladsch.flexmark.util.html.LengthTrackingAppendableImpl -> com.vladsch.flexmark.util.html.LengthTrackingAppendableImpl:
    9:11:void <init>(java.lang.Appendable) -> <init>
    5:5:java.lang.Appendable append(char) -> append
    5:5:java.lang.Appendable append(java.lang.CharSequence) -> append
    5:5:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    21:22:com.vladsch.flexmark.util.html.LengthTrackingAppendable append(java.lang.CharSequence) -> append
    28:29:com.vladsch.flexmark.util.html.LengthTrackingAppendable append(java.lang.CharSequence,int,int) -> append
    35:36:com.vladsch.flexmark.util.html.LengthTrackingAppendable append(char) -> append
    16:16:int getLength() -> getLength
    50:50:java.lang.String toString() -> toString
com.vladsch.flexmark.util.html.MutableAttributeImpl -> com.vladsch.flexmark.util.html.MutableAttributeImpl:
    16:21:void <init>(java.lang.CharSequence,java.lang.CharSequence,char,char) -> <init>
    8:8:char access$000(com.vladsch.flexmark.util.html.MutableAttributeImpl) -> access$000
    231:236:boolean equals(java.lang.Object) -> equals
    176:189:void forEachValue(java.lang.CharSequence,com.vladsch.flexmark.util.BiConsumer) -> forEachValue
    51:51:java.lang.String getName() -> getName
    56:59:java.lang.String getValue() -> getValue
    26:26:char getValueListDelimiter() -> getValueListDelimiter
    69:96:java.util.Map getValueMap() -> getValueMap
    31:31:char getValueNameDelimiter() -> getValueNameDelimiter
    242:243:int hashCode() -> hashCode
    135:135:boolean isNonRendering() -> isNonRendering
    256:256:com.vladsch.flexmark.util.html.MutableAttributeImpl of(com.vladsch.flexmark.util.html.Attribute) -> of
    272:277:com.vladsch.flexmark.util.html.MutableAttributeImpl of(java.lang.CharSequence,java.lang.CharSequence,char,char) -> of
    8:8:com.vladsch.flexmark.util.html.Attribute replaceValue(java.lang.CharSequence) -> replaceValue
    139:142:com.vladsch.flexmark.util.html.MutableAttributeImpl replaceValue(java.lang.CharSequence) -> replaceValue
    8:8:com.vladsch.flexmark.util.html.Attribute setValue(java.lang.CharSequence) -> setValue
    8:8:com.vladsch.flexmark.util.html.MutableAttribute setValue(java.lang.CharSequence) -> setValue
    148:168:com.vladsch.flexmark.util.html.MutableAttributeImpl setValue(java.lang.CharSequence) -> setValue
    8:8:com.vladsch.flexmark.util.Immutable toImmutable() -> toImmutable
    36:36:com.vladsch.flexmark.util.html.Attribute toImmutable() -> toImmutable
    249:251:java.lang.String toString() -> toString
    108:130:java.lang.String valueFromMap() -> valueFromMap
com.vladsch.flexmark.util.html.MutableAttributeImpl$1 -> com.vladsch.flexmark.util.html.MutableAttributeImpl$1:
    152:152:void <init>(com.vladsch.flexmark.util.html.MutableAttributeImpl,java.util.Map) -> <init>
    152:152:void accept(java.lang.Object,java.lang.Object) -> accept
    155:158:void accept(java.lang.String,java.lang.String) -> accept
com.vladsch.flexmark.util.mappers.CharWidthProvider -> com.vladsch.flexmark.util.mappers.CharWidthProvider:
    8:8:void <clinit>() -> <clinit>
com.vladsch.flexmark.util.mappers.CharWidthProvider$1 -> com.vladsch.flexmark.util.mappers.CharWidthProvider$1:
    8:8:void <init>() -> <init>
com.vladsch.flexmark.util.mappers.NodeClassifier -> com.vladsch.flexmark.util.mappers.NodeClassifier:
    7:7:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
    6:6:java.lang.Object compute(java.lang.Object) -> compute
    14:14:java.lang.Class compute(com.vladsch.flexmark.ast.Node) -> compute
com.vladsch.flexmark.util.options.DataKey -> com.vladsch.flexmark.util.options.DataKey:
    10:13:void <init>(java.lang.String,com.vladsch.flexmark.util.collection.DataValueFactory) -> <init>
    36:39:void <init>(java.lang.String,java.lang.Object) -> <init>
    56:56:java.lang.Object getDefaultValue(com.vladsch.flexmark.util.options.DataHolder) -> getDefaultValue
    52:52:com.vladsch.flexmark.util.collection.DataValueFactory getFactory() -> getFactory
    64:64:java.lang.Object getFrom(com.vladsch.flexmark.util.options.DataHolder) -> getFrom
    89:92:int hashCode() -> hashCode
    69:76:java.lang.String toString() -> toString
com.vladsch.flexmark.util.options.DataKey$2 -> com.vladsch.flexmark.util.options.DataKey$2:
    39:39:void <init>(com.vladsch.flexmark.util.options.DataKey,java.lang.Object) -> <init>
    39:39:java.lang.Object create(java.lang.Object) -> create
    42:42:java.lang.Object create(com.vladsch.flexmark.util.options.DataHolder) -> create
com.vladsch.flexmark.util.options.DataSet -> com.vladsch.flexmark.util.options.DataSet:
    10:11:void <init>() -> <init>
    14:16:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    31:31:boolean contains(com.vladsch.flexmark.util.options.DataKey) -> contains
    36:39:java.lang.Object get(com.vladsch.flexmark.util.options.DataKey) -> get
    21:21:java.util.Map getAll() -> getAll
    26:26:java.util.Collection keySet() -> keySet
com.vladsch.flexmark.util.options.MutableDataSet -> com.vladsch.flexmark.util.options.MutableDataSet:
    7:7:void <init>() -> <init>
    11:11:void <init>(com.vladsch.flexmark.util.options.DataHolder) -> <init>
    41:41:java.lang.Object get(com.vladsch.flexmark.util.options.DataKey) -> get
    52:56:java.lang.Object getOrCompute(com.vladsch.flexmark.util.options.DataKey,com.vladsch.flexmark.util.collection.DataValueFactory) -> getOrCompute
    5:5:com.vladsch.flexmark.util.options.MutableDataHolder set(com.vladsch.flexmark.util.options.DataKey,java.lang.Object) -> set
    16:16:com.vladsch.flexmark.util.options.MutableDataSet set(com.vladsch.flexmark.util.options.DataKey,java.lang.Object) -> set
com.vladsch.flexmark.util.options.ScopedDataSet -> com.vladsch.flexmark.util.options.ScopedDataSet:
    21:22:void <init>(com.vladsch.flexmark.util.options.DataHolder,com.vladsch.flexmark.util.options.DataHolder) -> <init>
    69:69:boolean contains(com.vladsch.flexmark.util.options.DataKey) -> contains
    74:75:java.lang.Object get(com.vladsch.flexmark.util.options.DataKey) -> get
    31:44:java.util.Map getAll() -> getAll
    50:63:java.util.Collection keySet() -> keySet
com.vladsch.flexmark.util.sequence.BasedSequence -> com.vladsch.flexmark.util.sequence.BasedSequence:
    15:27:void <clinit>() -> <clinit>
com.vladsch.flexmark.util.sequence.BasedSequence$EmptyBasedSequence -> com.vladsch.flexmark.util.sequence.BasedSequence$EmptyBasedSequence:
    1061:1061:void <init>() -> <init>
    1086:1086:com.vladsch.flexmark.util.sequence.BasedSequence baseSubSequence(int,int) -> baseSubSequence
    1069:1069:char charAt(int) -> charAt
    1061:1061:java.lang.Object getBase() -> getBase
    1096:1096:com.vladsch.flexmark.util.sequence.BasedSequence getBase() -> getBase
    1091:1091:com.vladsch.flexmark.util.sequence.BasedSequence getBaseSequence() -> getBaseSequence
    1075:1075:int getIndexOffset(int) -> getIndexOffset
    1111:1111:com.vladsch.flexmark.util.sequence.Range getSourceRange() -> getSourceRange
    1061:1061:java.lang.CharSequence subSequence(int,int) -> subSequence
    1081:1081:com.vladsch.flexmark.util.sequence.BasedSequence subSequence(int,int) -> subSequence
com.vladsch.flexmark.util.sequence.BasedSequenceImpl -> com.vladsch.flexmark.util.sequence.BasedSequenceImpl:
    19:27:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    1403:1403:com.vladsch.flexmark.util.sequence.BasedSequence appendTo(java.lang.StringBuilder) -> appendTo
    1413:1413:com.vladsch.flexmark.util.sequence.BasedSequence appendTo(java.lang.StringBuilder,int,int) -> appendTo
    18:18:int compareTo(java.lang.Object) -> compareTo
    1514:1519:int compareTo(java.lang.CharSequence) -> compareTo
    1247:1247:boolean containsAllOf(com.vladsch.flexmark.util.sequence.BasedSequence) -> containsAllOf
    1252:1252:boolean containsSomeOf(com.vladsch.flexmark.util.sequence.BasedSequence) -> containsSomeOf
    641:643:int countChars(java.lang.CharSequence,int,int) -> countChars
    676:678:int countCharsReversed(java.lang.CharSequence,int,int) -> countCharsReversed
    613:613:int countLeading(java.lang.CharSequence) -> countLeading
    620:620:int countTrailing(java.lang.CharSequence) -> countTrailing
    85:86:char endCharAt(int) -> endCharAt
    53:67:com.vladsch.flexmark.util.sequence.BasedSequence endSequence(int,int) -> endSequence
    73:79:com.vladsch.flexmark.util.sequence.BasedSequence endSequence(int) -> endSequence
    922:922:boolean endsWith(java.lang.CharSequence) -> endsWith
    758:765:int eolLength() -> eolLength
    1499:1499:boolean equals(java.lang.Object) -> equals
    145:145:int indexOf(java.lang.CharSequence,int) -> indexOf
    150:160:int indexOf(java.lang.CharSequence,int,int) -> indexOf
    169:169:int indexOf(char) -> indexOf
    173:173:int indexOf(char,int) -> indexOf
    182:184:int indexOf(char,int,int) -> indexOf
    170:170:int indexOfAny(char,char) -> indexOfAny
    172:172:int indexOfAny(java.lang.CharSequence) -> indexOfAny
    176:176:int indexOfAny(java.lang.CharSequence,int) -> indexOfAny
    192:194:int indexOfAny(char,char,int,int) -> indexOfAny
    203:205:int indexOfAny(char,char,char,int,int) -> indexOfAny
    213:217:int indexOfAny(java.lang.CharSequence,int,int) -> indexOfAny
    259:261:int indexOfAnyNot(char,char,int,int) -> indexOfAnyNot
    270:272:int indexOfAnyNot(char,char,char,int,int) -> indexOfAnyNot
    280:284:int indexOfAnyNot(java.lang.CharSequence,int,int) -> indexOfAnyNot
    249:251:int indexOfNot(char,int,int) -> indexOfNot
    1257:1260:com.vladsch.flexmark.util.sequence.BasedSequence intersect(com.vladsch.flexmark.util.sequence.BasedSequence) -> intersect
    906:907:boolean isBlank() -> isBlank
    1231:1231:boolean isContinuedBy(com.vladsch.flexmark.util.sequence.BasedSequence) -> isContinuedBy
    901:901:boolean isEmpty() -> isEmpty
    917:917:boolean isNotNull() -> isNotNull
    912:912:boolean isNull() -> isNull
    426:429:int lastIndexOfAnyNot(char,char,int,int) -> lastIndexOfAnyNot
    438:441:int lastIndexOfAnyNot(char,char,char,int,int) -> lastIndexOfAnyNot
    449:453:int lastIndexOfAnyNot(java.lang.CharSequence,int,int) -> lastIndexOfAnyNot
    415:418:int lastIndexOfNot(char,int,int) -> lastIndexOfNot
    1067:1067:boolean matchChars(java.lang.CharSequence,int) -> matchChars
    1077:1102:boolean matchChars(java.lang.CharSequence,int,boolean) -> matchChars
    1120:1120:boolean matchCharsReversed(java.lang.CharSequence,int,boolean) -> matchCharsReversed
    1037:1037:boolean matches(java.lang.CharSequence) -> matches
    123:124:char midCharAt(int) -> midCharAt
    91:104:com.vladsch.flexmark.util.sequence.BasedSequence midSequence(int,int) -> midSequence
    1194:1194:java.lang.String normalizeEOL() -> normalizeEOL
    1204:1204:java.lang.String normalizeEndWithEOL() -> normalizeEndWithEOL
    1528:1530:com.vladsch.flexmark.util.sequence.BasedSequence of(java.lang.CharSequence) -> of
    1540:1542:com.vladsch.flexmark.util.sequence.BasedSequence of(java.lang.CharSequence,int,int) -> of
    1265:1268:com.vladsch.flexmark.util.sequence.BasedSequence prefixOf(com.vladsch.flexmark.util.sequence.BasedSequence) -> prefixOf
    932:932:com.vladsch.flexmark.util.sequence.BasedSequence removeSuffix(java.lang.CharSequence) -> removeSuffix
    1242:1242:com.vladsch.flexmark.util.sequence.BasedSequence spliceAtEnd(com.vladsch.flexmark.util.sequence.BasedSequence) -> spliceAtEnd
    927:927:boolean startsWith(java.lang.CharSequence) -> startsWith
    1130:1130:com.vladsch.flexmark.util.sequence.BasedSequence subSequence(int) -> subSequence
    1273:1276:com.vladsch.flexmark.util.sequence.BasedSequence suffixOf(com.vladsch.flexmark.util.sequence.BasedSequence) -> suffixOf
    1167:1174:java.lang.String toString() -> toString
    812:818:com.vladsch.flexmark.util.sequence.BasedSequence trim() -> trim
    800:801:com.vladsch.flexmark.util.sequence.BasedSequence trimEOL() -> trimEOL
    714:715:com.vladsch.flexmark.util.sequence.BasedSequence trimEnd(java.lang.CharSequence) -> trimEnd
    746:747:com.vladsch.flexmark.util.sequence.BasedSequence trimEnd() -> trimEnd
    734:735:com.vladsch.flexmark.util.sequence.BasedSequence trimStart() -> trimStart
    1135:1145:com.vladsch.flexmark.util.sequence.BasedSequence trimTailBlankLines() -> trimTailBlankLines
    1179:1179:java.lang.String unescape() -> unescape
    1184:1184:java.lang.String unescapeNoEntities() -> unescapeNoEntities
com.vladsch.flexmark.util.sequence.CharSubSequence -> com.vladsch.flexmark.util.sequence.CharSubSequence:
    31:40:void <init>(char[]) -> <init>
    43:48:void <init>(com.vladsch.flexmark.util.sequence.CharSubSequence,int,int) -> <init>
    111:111:com.vladsch.flexmark.util.sequence.BasedSequence appendTo(java.lang.StringBuilder,int,int) -> appendTo
    7:7:com.vladsch.flexmark.util.sequence.BasedSequence baseSubSequence(int,int) -> baseSubSequence
    100:104:com.vladsch.flexmark.util.sequence.CharSubSequence baseSubSequence(int,int) -> baseSubSequence
    71:72:char charAt(int) -> charAt
    122:122:boolean equals(java.lang.Object) -> equals
    7:7:java.lang.Object getBase() -> getBase
    20:20:char[] getBase() -> getBase
    7:7:com.vladsch.flexmark.util.sequence.BasedSequence getBaseSequence() -> getBaseSequence
    15:15:com.vladsch.flexmark.util.sequence.CharSubSequence getBaseSequence() -> getBaseSequence
    28:28:int getEndOffset() -> getEndOffset
    63:64:int getIndexOffset(int) -> getIndexOffset
    58:58:com.vladsch.flexmark.util.sequence.Range getSourceRange() -> getSourceRange
    24:24:int getStartOffset() -> getStartOffset
    117:117:int hashCode() -> hashCode
    53:53:int length() -> length
    131:131:com.vladsch.flexmark.util.sequence.CharSubSequence of(java.lang.CharSequence) -> of
    145:160:com.vladsch.flexmark.util.sequence.CharSubSequence of(java.lang.CharSequence,int,int) -> of
    7:7:com.vladsch.flexmark.util.sequence.BasedSequence subSequence(int) -> subSequence
    7:7:com.vladsch.flexmark.util.sequence.BasedSequence subSequence(int,int) -> subSequence
    7:7:java.lang.CharSequence subSequence(int,int) -> subSequence
    84:84:com.vladsch.flexmark.util.sequence.CharSubSequence subSequence(int) -> subSequence
    89:93:com.vladsch.flexmark.util.sequence.CharSubSequence subSequence(int,int) -> subSequence
    127:127:java.lang.String toString() -> toString
com.vladsch.flexmark.util.sequence.PrefixedSubSequence -> com.vladsch.flexmark.util.sequence.PrefixedSubSequence:
    42:45:void <init>(java.lang.String,com.vladsch.flexmark.util.sequence.BasedSequence,int,int,boolean) -> <init>
    39:39:com.vladsch.flexmark.util.sequence.BasedSequence baseSubSequence(int,int) -> baseSubSequence
    64:71:char charAt(int) -> charAt
    108:108:boolean equals(java.lang.Object) -> equals
    14:14:java.lang.Object getBase() -> getBase
    19:19:com.vladsch.flexmark.util.sequence.BasedSequence getBaseSequence() -> getBaseSequence
    29:29:int getEndOffset() -> getEndOffset
    55:59:int getIndexOffset(int) -> getIndexOffset
    34:34:com.vladsch.flexmark.util.sequence.Range getSourceRange() -> getSourceRange
    24:24:int getStartOffset() -> getStartOffset
    103:103:int hashCode() -> hashCode
    50:50:int length() -> length
    116:116:com.vladsch.flexmark.util.sequence.PrefixedSubSequence of(java.lang.String,com.vladsch.flexmark.util.sequence.BasedSequence) -> of
    124:124:com.vladsch.flexmark.util.sequence.PrefixedSubSequence of(java.lang.String,com.vladsch.flexmark.util.sequence.BasedSequence,int,int) -> of
    7:7:java.lang.CharSequence subSequence(int,int) -> subSequence
    76:91:com.vladsch.flexmark.util.sequence.BasedSequence subSequence(int,int) -> subSequence
    98:98:java.lang.String toString() -> toString
com.vladsch.flexmark.util.sequence.Range -> com.vladsch.flexmark.util.sequence.Range:
    4:4:void <clinit>() -> <clinit>
    25:27:void <init>(int,int) -> <init>
    52:52:boolean contains(int) -> contains
    217:219:boolean equals(java.lang.Object) -> equals
    15:15:int getEnd() -> getEnd
    13:13:int getStart() -> getStart
    224:225:int hashCode() -> hashCode
    175:175:java.lang.String toString() -> toString
com.vladsch.flexmark.util.sequence.RepeatedCharSequence -> com.vladsch.flexmark.util.sequence.RepeatedCharSequence:
    11:11:void <clinit>() -> <clinit>
    18:21:void <init>(java.lang.CharSequence,int,int) -> <init>
    31:31:char charAt(int) -> charAt
    63:63:boolean equals(java.lang.Object) -> equals
    51:56:int hashCode() -> hashCode
    26:26:int length() -> length
    78:78:com.vladsch.flexmark.util.sequence.RepeatedCharSequence of(java.lang.CharSequence,int) -> of
    37:41:java.lang.CharSequence subSequence(int,int) -> subSequence
    68:70:java.lang.String toString() -> toString
com.vladsch.flexmark.util.sequence.ReplacedTextMapper -> com.vladsch.flexmark.util.sequence.ReplacedTextMapper:
    11:12:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    23:26:void addOriginalText(int,int) -> addOriginalText
    16:18:void addReplacedText(int,int,com.vladsch.flexmark.util.sequence.BasedSequence) -> addReplacedText
    39:39:com.vladsch.flexmark.util.sequence.BasedSequence getReplacedSequence() -> getReplacedSequence
    47:56:int originalOffset(int) -> originalOffset
com.vladsch.flexmark.util.sequence.ReplacedTextRegion -> com.vladsch.flexmark.util.sequence.ReplacedTextRegion:
    8:11:void <init>(com.vladsch.flexmark.util.sequence.Range,com.vladsch.flexmark.util.sequence.Range,com.vladsch.flexmark.util.sequence.Range) -> <init>
    27:27:boolean containsReplacedIndex(int) -> containsReplacedIndex
    19:19:com.vladsch.flexmark.util.sequence.Range getOriginalRange() -> getOriginalRange
    23:23:com.vladsch.flexmark.util.sequence.Range getReplacedRange() -> getReplacedRange
com.vladsch.flexmark.util.sequence.SegmentedSequence -> com.vladsch.flexmark.util.sequence.SegmentedSequence:
    149:191:void <init>(java.util.List) -> <init>
    195:200:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence,int[],int,char[],int) -> <init>
    230:231:com.vladsch.flexmark.util.sequence.BasedSequence baseSubSequence(int,int) -> baseSubSequence
    215:216:char charAt(int) -> charAt
    264:264:boolean equals(java.lang.Object) -> equals
    21:21:java.lang.Object getBase() -> getBase
    26:26:com.vladsch.flexmark.util.sequence.BasedSequence getBaseSequence() -> getBaseSequence
    42:53:int getEndOffset() -> getEndOffset
    87:88:int getIndexOffset(int) -> getIndexOffset
    210:210:com.vladsch.flexmark.util.sequence.Range getSourceRange() -> getSourceRange
    30:38:int getStartOffset() -> getStartOffset
    259:259:int hashCode() -> hashCode
    205:205:int length() -> length
    107:146:com.vladsch.flexmark.util.sequence.BasedSequence of(java.util.List,com.vladsch.flexmark.util.sequence.BasedSequence) -> of
    12:12:java.lang.CharSequence subSequence(int,int) -> subSequence
    242:243:com.vladsch.flexmark.util.sequence.BasedSequence subSequence(int,int) -> subSequence
com.vladsch.flexmark.util.sequence.SegmentedSequenceBuilder -> com.vladsch.flexmark.util.sequence.SegmentedSequenceBuilder:
    13:15:void <init>(com.vladsch.flexmark.util.sequence.BasedSequence) -> <init>
    24:24:com.vladsch.flexmark.util.sequence.SegmentedSequenceBuilder append(com.vladsch.flexmark.util.sequence.BasedSequence) -> append
    29:29:com.vladsch.flexmark.util.sequence.SegmentedSequenceBuilder append(java.lang.String) -> append
    43:46:java.lang.String toString() -> toString
com.vladsch.flexmark.util.sequence.SubSequence -> com.vladsch.flexmark.util.sequence.SubSequence:
    31:36:void <init>(java.lang.CharSequence) -> <init>
    39:45:void <init>(com.vladsch.flexmark.util.sequence.SubSequence,int,int) -> <init>
    109:109:com.vladsch.flexmark.util.sequence.BasedSequence appendTo(java.lang.StringBuilder,int,int) -> appendTo
    7:7:com.vladsch.flexmark.util.sequence.BasedSequence baseSubSequence(int,int) -> baseSubSequence
    98:102:com.vladsch.flexmark.util.sequence.SubSequence baseSubSequence(int,int) -> baseSubSequence
    68:72:char charAt(int) -> charAt
    120:120:boolean equals(java.lang.Object) -> equals
    20:20:java.lang.Object getBase() -> getBase
    7:7:com.vladsch.flexmark.util.sequence.BasedSequence getBaseSequence() -> getBaseSequence
    15:15:com.vladsch.flexmark.util.sequence.SubSequence getBaseSequence() -> getBaseSequence
    28:28:int getEndOffset() -> getEndOffset
    60:63:int getIndexOffset(int) -> getIndexOffset
    55:55:com.vladsch.flexmark.util.sequence.Range getSourceRange() -> getSourceRange
    24:24:int getStartOffset() -> getStartOffset
    115:115:int hashCode() -> hashCode
    50:50:int length() -> length
    131:133:com.vladsch.flexmark.util.sequence.BasedSequence of(java.lang.CharSequence) -> of
    145:147:com.vladsch.flexmark.util.sequence.BasedSequence of(java.lang.CharSequence,int,int) -> of
    7:7:com.vladsch.flexmark.util.sequence.BasedSequence subSequence(int) -> subSequence
    7:7:com.vladsch.flexmark.util.sequence.BasedSequence subSequence(int,int) -> subSequence
    7:7:java.lang.CharSequence subSequence(int,int) -> subSequence
    82:82:com.vladsch.flexmark.util.sequence.SubSequence subSequence(int) -> subSequence
    87:91:com.vladsch.flexmark.util.sequence.SubSequence subSequence(int,int) -> subSequence
    125:127:java.lang.String toString() -> toString
com.vladsch.flexmark.util.sequence.TagRange -> com.vladsch.flexmark.util.sequence.TagRange:
    16:17:void <init>(java.lang.CharSequence,int,int) -> <init>
com.yydcdut.markdown.MarkdownConfiguration -> com.yydcdut.markdown.MarkdownConfiguration:
    68:77:void <init>(com.yydcdut.markdown.config.Header,com.yydcdut.markdown.config.BlockQuote,com.yydcdut.markdown.config.HorizontalRule,com.yydcdut.markdown.config.Code,com.yydcdut.markdown.theme.Theme,com.yydcdut.markdown.config.Todo,com.yydcdut.markdown.config.UnOrderList,com.yydcdut.markdown.config.Link,com.yydcdut.markdown.config.Image) -> <init>
    140:140:int getBlockQuotesLineColor() -> getBlockQuotesLineColor
    194:194:int getCodeBgColor() -> getCodeBgColor
    86:86:float getHeader1RelativeSize() -> getHeader1RelativeSize
    95:95:float getHeader2RelativeSize() -> getHeader2RelativeSize
    104:104:float getHeader3RelativeSize() -> getHeader3RelativeSize
    113:113:float getHeader4RelativeSize() -> getHeader4RelativeSize
    122:122:float getHeader5RelativeSize() -> getHeader5RelativeSize
    131:131:float getHeader6RelativeSize() -> getHeader6RelativeSize
    167:167:int getHorizontalRulesColor() -> getHorizontalRulesColor
    176:176:int getHorizontalRulesHeight() -> getHorizontalRulesHeight
    203:203:com.yydcdut.markdown.theme.Theme getTheme() -> getTheme
    239:239:int getUnOrderListColor() -> getUnOrderListColor
com.yydcdut.markdown.MarkdownConfiguration$Builder -> com.yydcdut.markdown.MarkdownConfiguration$Builder:
    307:316:void <init>(android.content.Context) -> <init>
    587:587:com.yydcdut.markdown.MarkdownConfiguration build() -> build
    392:392:com.yydcdut.markdown.MarkdownConfiguration$Builder setBlockQuotesLineColor(int) -> setBlockQuotesLineColor
    465:465:com.yydcdut.markdown.MarkdownConfiguration$Builder setCodeBgColor(int) -> setCodeBgColor
    577:577:com.yydcdut.markdown.MarkdownConfiguration$Builder setDefaultImageSize(int,int) -> setDefaultImageSize
    326:326:com.yydcdut.markdown.MarkdownConfiguration$Builder setHeader1RelativeSize(float) -> setHeader1RelativeSize
    337:337:com.yydcdut.markdown.MarkdownConfiguration$Builder setHeader2RelativeSize(float) -> setHeader2RelativeSize
    348:348:com.yydcdut.markdown.MarkdownConfiguration$Builder setHeader3RelativeSize(float) -> setHeader3RelativeSize
    359:359:com.yydcdut.markdown.MarkdownConfiguration$Builder setHeader4RelativeSize(float) -> setHeader4RelativeSize
    370:370:com.yydcdut.markdown.MarkdownConfiguration$Builder setHeader5RelativeSize(float) -> setHeader5RelativeSize
    381:381:com.yydcdut.markdown.MarkdownConfiguration$Builder setHeader6RelativeSize(float) -> setHeader6RelativeSize
    432:432:com.yydcdut.markdown.MarkdownConfiguration$Builder setHorizontalRulesColor(int) -> setHorizontalRulesColor
    487:487:com.yydcdut.markdown.MarkdownConfiguration$Builder setTodoColor(int) -> setTodoColor
    498:498:com.yydcdut.markdown.MarkdownConfiguration$Builder setTodoDoneColor(int) -> setTodoDoneColor
    520:520:com.yydcdut.markdown.MarkdownConfiguration$Builder setUnOrderListColor(int) -> setUnOrderListColor
com.yydcdut.markdown.MarkdownEditText -> com.yydcdut.markdown.MarkdownEditText:
    77:78:void <init>(android.content.Context) -> <init>
    88:89:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    100:101:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:44:boolean access$000(com.yydcdut.markdown.MarkdownEditText) -> access$000
    44:44:void access$100(com.yydcdut.markdown.MarkdownEditText,java.lang.CharSequence,int,int,int) -> access$100
    44:44:void access$200(com.yydcdut.markdown.MarkdownEditText,int,java.lang.CharSequence,int,int,int) -> access$200
    44:44:void access$300(com.yydcdut.markdown.MarkdownEditText,java.lang.CharSequence,int,int,int) -> access$300
    44:44:void access$400(com.yydcdut.markdown.MarkdownEditText,android.text.Editable) -> access$400
    44:44:boolean access$500(com.yydcdut.markdown.MarkdownEditText) -> access$500
    44:44:boolean access$502(com.yydcdut.markdown.MarkdownEditText,boolean) -> access$502
    44:44:void access$600(com.yydcdut.markdown.MarkdownEditText,java.lang.CharSequence,int,int,int) -> access$600
    44:44:void access$700(com.yydcdut.markdown.MarkdownEditText,java.lang.CharSequence,int,int,int) -> access$700
    44:44:java.lang.CharSequence access$800(com.yydcdut.markdown.MarkdownEditText) -> access$800
    44:44:void access$900(com.yydcdut.markdown.MarkdownEditText,java.lang.CharSequence) -> access$900
    203:209:void addTextChangedListener(android.text.TextWatcher) -> addTextChangedListener
    238:238:void beforeTextChanged4Controller(java.lang.CharSequence,int,int,int) -> beforeTextChanged4Controller
    281:286:java.lang.CharSequence format() -> format
    444:447:com.yydcdut.markdown.span.MDImageSpan[] getImages() -> getImages
    305:312:boolean handleMessage(android.os.Message) -> handleMessage
    105:107:void init() -> init
    423:426:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    300:300:boolean isMainThread() -> isMainThread
    403:405:void onAttach() -> onAttach
    398:399:void onAttachedToWindow() -> onAttachedToWindow
    431:431:void onDetach() -> onDetach
    411:412:void onDetachedFromWindow() -> onDetachedFromWindow
    372:374:void onSelectionChanged(int,int) -> onSelectionChanged
    417:418:void onStartTemporaryDetach() -> onStartTemporaryDetach
    252:252:void onTextChanged4Controller(java.lang.CharSequence,int,int,int) -> onTextChanged4Controller
    215:221:void removeTextChangedListener(android.text.TextWatcher) -> removeTextChangedListener
    256:260:void sendAfterTextChanged(android.text.Editable) -> sendAfterTextChanged
    228:232:void sendBeforeTextChanged(java.lang.CharSequence,int,int,int) -> sendBeforeTextChanged
    359:367:void sendMessage(int,java.lang.CharSequence,int,int,int) -> sendMessage
    242:246:void sendOnTextChanged(java.lang.CharSequence,int,int,int) -> sendOnTextChanged
    291:296:void setEditableText(java.lang.CharSequence) -> setEditableText
    267:276:void setFactoryAndConfig(com.yydcdut.markdown.syntax.SyntaxFactory,com.yydcdut.markdown.MarkdownConfiguration) -> setFactoryAndConfig
    380:393:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
com.yydcdut.markdown.MarkdownEditText$EditTextWatcher -> com.yydcdut.markdown.MarkdownEditText$EditTextWatcher:
    122:122:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    184:196:void afterTextChanged(android.text.Editable) -> afterTextChanged
    150:161:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    141:144:void doAfterTextChanged(android.text.Editable) -> doAfterTextChanged
    125:128:void doBeforeTextChanged(java.lang.CharSequence,int,int,int) -> doBeforeTextChanged
    133:136:void doOnTextChanged(java.lang.CharSequence,int,int,int) -> doOnTextChanged
    167:178:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.yydcdut.markdown.MarkdownProcessor -> com.yydcdut.markdown.MarkdownProcessor:
    31:33:void <init>(android.content.Context) -> <init>
    64:64:void checkNULL(java.lang.Object) -> checkNULL
    37:37:void config(com.yydcdut.markdown.MarkdownConfiguration) -> config
    41:42:void factory(com.yydcdut.markdown.syntax.SyntaxFactory) -> factory
    56:59:com.yydcdut.markdown.MarkdownConfiguration getMarkdownConfiguration() -> getMarkdownConfiguration
    51:51:void live(com.yydcdut.markdown.MarkdownEditText) -> live
com.yydcdut.markdown.MarkdownTextView -> com.yydcdut.markdown.MarkdownTextView:
    41:41:void <init>(android.content.Context) -> <init>
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    62:62:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    117:120:com.yydcdut.markdown.span.MDImageSpan[] getImages() -> getImages
    98:101:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    106:112:void onDetach() -> onDetach
    84:85:void onDetachedFromWindow() -> onDetachedFromWindow
    91:92:void onStartTemporaryDetach() -> onStartTemporaryDetach
    67:78:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
com.yydcdut.markdown.config.BlockQuote -> com.yydcdut.markdown.config.BlockQuote:
    26:29:void <init>() -> <init>
com.yydcdut.markdown.config.BlockQuote$1 -> com.yydcdut.markdown.config.BlockQuote$1:
    29:30:void <init>(com.yydcdut.markdown.config.BlockQuote) -> <init>
com.yydcdut.markdown.config.Code -> com.yydcdut.markdown.config.Code:
    23:25:void <init>() -> <init>
com.yydcdut.markdown.config.Header -> com.yydcdut.markdown.config.Header:
    21:27:void <init>() -> <init>
com.yydcdut.markdown.config.HorizontalRule -> com.yydcdut.markdown.config.HorizontalRule:
    23:25:void <init>() -> <init>
com.yydcdut.markdown.config.Image -> com.yydcdut.markdown.config.Image:
    31:32:void <init>(android.content.Context) -> <init>
com.yydcdut.markdown.config.Link -> com.yydcdut.markdown.config.Link:
    25:27:void <init>() -> <init>
com.yydcdut.markdown.config.Todo -> com.yydcdut.markdown.config.Todo:
    25:27:void <init>() -> <init>
com.yydcdut.markdown.config.UnOrderList -> com.yydcdut.markdown.config.UnOrderList:
    23:24:void <init>() -> <init>
com.yydcdut.markdown.live.BlockQuotesLive -> com.yydcdut.markdown.live.BlockQuotesLive:
    34:34:void <init>() -> <init>
    38:53:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    85:88:void format(android.text.Editable,int) -> format
    59:80:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.yydcdut.markdown.live.CenterAlignLive -> com.yydcdut.markdown.live.CenterAlignLive:
    34:34:void <init>() -> <init>
    38:43:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    65:68:void format(android.text.Editable,int) -> format
    72:72:boolean isNeedFormat(java.lang.String) -> isNeedFormat
    49:60:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.yydcdut.markdown.live.CodeBlockLive -> com.yydcdut.markdown.live.CodeBlockLive:
    34:34:void <init>() -> <init>
    38:53:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    86:89:void format(android.text.Editable,int) -> format
    59:80:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.yydcdut.markdown.live.CodeLive -> com.yydcdut.markdown.live.CodeLive:
    34:34:void <init>() -> <init>
    38:44:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    67:70:void format(android.text.Editable,int) -> format
    50:62:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.yydcdut.markdown.live.EditLive -> com.yydcdut.markdown.live.EditLive:
    27:30:void <init>() -> <init>
    39:39:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    34:34:void setMarkdownConfiguration(com.yydcdut.markdown.MarkdownConfiguration) -> setMarkdownConfiguration
com.yydcdut.markdown.live.EditToken -> com.yydcdut.markdown.live.EditToken:
    40:40:void <init>(java.lang.Object,int,int) -> <init>
    51:55:void <init>(java.lang.Object,int,int,int) -> <init>
    67:67:int getEnd() -> getEnd
    71:71:int getFlag() -> getFlag
    59:59:java.lang.Object getSpan() -> getSpan
    63:63:int getStart() -> getStart
com.yydcdut.markdown.live.HeaderLive -> com.yydcdut.markdown.live.HeaderLive:
    34:34:void <init>() -> <init>
    38:53:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    90:93:void format(android.text.Editable,int) -> format
    59:84:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.yydcdut.markdown.live.HorizontalRulesLive -> com.yydcdut.markdown.live.HorizontalRulesLive:
    50:51:void <init>(com.yydcdut.markdown.MarkdownEditText) -> <init>
    56:72:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    152:153:boolean existForegroundColorSpan(int,int) -> existForegroundColorSpan
    106:109:void format(android.text.Editable,int) -> format
    114:115:void onSelectionChanged(int,int) -> onSelectionChanged
    78:101:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    136:146:void removeCurrentHorizontalRulesTextColor(int,int) -> removeCurrentHorizontalRulesTextColor
    119:127:void setAllHorizontalRulesTextColor() -> setAllHorizontalRulesTextColor
com.yydcdut.markdown.live.ListLive -> com.yydcdut.markdown.live.ListLive:
    53:55:void <init>(com.yydcdut.markdown.MarkdownEditText,com.yydcdut.markdown.MarkdownEditText$EditTextWatcher) -> <init>
    73:104:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    656:660:int calculateNested(java.lang.CharSequence,int,int) -> calculateNested
    675:683:int calculateOrderListNumber(java.lang.CharSequence,int,int) -> calculateOrderListNumber
    819:824:boolean checkDeleteOrderListSpan(android.text.Editable,int,int,int) -> checkDeleteOrderListSpan
    845:850:boolean checkDeleteUnOrderListSpan(android.text.Editable,int,int,int) -> checkDeleteUnOrderListSpan
    355:355:boolean checkLineDelete(android.text.Editable,int,int,int) -> checkLineDelete
    373:386:boolean checkLineHeaderPosition(android.text.Editable,int,int,int) -> checkLineHeaderPosition
    333:336:boolean checkNewLineInput(android.text.Editable,int,int,int) -> checkNewLineInput
    257:275:void deleteOrderListByEnter(android.text.Editable,com.yydcdut.markdown.span.MDOrderListSpan,int,int,int,int,int,int) -> deleteOrderListByEnter
    219:237:void deleteUnOrderListByEnter(android.text.Editable,com.yydcdut.markdown.span.MDUnOrderListSpan,int,int,int,int,int,int) -> deleteUnOrderListByEnter
    796:800:void formatOrderList(android.text.Editable,int) -> formatOrderList
    556:568:com.yydcdut.markdown.span.MDOrderListSpan getOrderListBeginning(android.text.Editable,int,int,int) -> getOrderListBeginning
    194:200:java.lang.String getOrderListNestedString(int,int) -> getOrderListNestedString
    434:439:com.yydcdut.markdown.span.MDOrderListSpan getOrderListSpan(android.text.Editable,int,boolean) -> getOrderListSpan
    168:183:java.lang.String getUnOderListNestedString(int,int) -> getUnOderListNestedString
    586:597:com.yydcdut.markdown.span.MDUnOrderListSpan getUnOrderListBeginning(android.text.Editable,int,int,int) -> getUnOrderListBeginning
    503:508:com.yydcdut.markdown.span.MDUnOrderListSpan getUnOrderListSpan(android.text.Editable,int,boolean) -> getUnOrderListSpan
    751:762:int getUnOrderListType(java.lang.CharSequence,int) -> getUnOrderListType
    287:298:void insertOrderList(android.text.Editable,com.yydcdut.markdown.span.MDOrderListSpan,int) -> insertOrderList
    309:320:void insertUnOrderList(android.text.Editable,com.yydcdut.markdown.span.MDUnOrderListSpan,int) -> insertUnOrderList
    527:537:boolean isBeginningOfListSpan(android.text.Editable,int,int,int) -> isBeginningOfListSpan
    698:713:boolean isOrderList(java.lang.CharSequence,int,boolean) -> isOrderList
    777:786:boolean isSatisfiedOrderListFormat(android.text.Editable,int) -> isSatisfiedOrderListFormat
    728:741:boolean isUnOrderList(java.lang.CharSequence,int,boolean) -> isUnOrderList
    118:149:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    60:60:void setMarkdownConfiguration(com.yydcdut.markdown.MarkdownConfiguration) -> setMarkdownConfiguration
    402:415:void updateLineHeaderList(android.text.Editable,int,int,int) -> updateLineHeaderList
    613:642:void updateListSpanBeginning(android.text.Editable,int,int,int) -> updateListSpanBeginning
    452:463:void updateOrderListSpanBeforeNewLine(android.text.Editable,int,com.yydcdut.markdown.span.MDOrderListSpan,boolean) -> updateOrderListSpanBeforeNewLine
    476:487:void updateUnOrderListSpanBeforeNewLine(android.text.Editable,int,com.yydcdut.markdown.span.MDUnOrderListSpan,boolean) -> updateUnOrderListSpanBeforeNewLine
com.yydcdut.markdown.live.LivePrepare -> com.yydcdut.markdown.live.LivePrepare:
    32:33:void <init>(com.yydcdut.markdown.MarkdownEditText,com.yydcdut.markdown.MarkdownEditText$EditTextWatcher) -> <init>
    68:72:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    51:54:void config(com.yydcdut.markdown.MarkdownConfiguration) -> config
    59:63:void onSelectionChanged(int,int) -> onSelectionChanged
    77:81:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    37:46:void prepare(com.yydcdut.markdown.MarkdownEditText,com.yydcdut.markdown.MarkdownEditText$EditTextWatcher) -> prepare
com.yydcdut.markdown.live.StrikeThroughLive -> com.yydcdut.markdown.live.StrikeThroughLive:
    34:34:void <init>() -> <init>
    38:53:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    85:88:void format(android.text.Editable,int) -> format
    59:80:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.yydcdut.markdown.live.StyleLive -> com.yydcdut.markdown.live.StyleLive:
    35:35:void <init>() -> <init>
    39:55:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    88:94:void format(android.text.Editable,int) -> format
    61:83:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.yydcdut.markdown.loader.DefaultLoader -> com.yydcdut.markdown.loader.DefaultLoader:
    45:46:void <init>(android.content.Context) -> <init>
com.yydcdut.markdown.span.MDBaseListSpan -> com.yydcdut.markdown.span.MDBaseListSpan:
    29:29:void <init>(int,int) -> <init>
    38:38:int getNested() -> getNested
com.yydcdut.markdown.span.MDCodeBlockSpan -> com.yydcdut.markdown.span.MDCodeBlockSpan:
    45:46:void <init>(int) -> <init>
    107:118:void drawBackground(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,int) -> drawBackground
    100:100:com.yydcdut.markdown.span.MDCodeBlockSpan getNext() -> getNext
    91:91:void setNext(com.yydcdut.markdown.span.MDCodeBlockSpan) -> setNext
com.yydcdut.markdown.span.MDHorizontalRulesSpan -> com.yydcdut.markdown.span.MDHorizontalRulesSpan:
    37:39:void <init>() -> <init>
    49:51:void <init>(int,int) -> <init>
    58:76:void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout) -> drawLeadingMargin
com.yydcdut.markdown.span.MDImageSpan -> com.yydcdut.markdown.span.MDImageSpan:
    48:48:void <clinit>() -> <clinit>
    106:106:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    243:245:boolean handleMessage(android.os.Message) -> handleMessage
    115:125:void onAttach(android.view.View) -> onAttach
    207:213:void onDetach() -> onDetach
    159:160:void setImageWithIntrinsicBounds(android.graphics.drawable.Drawable) -> setImageWithIntrinsicBounds
    133:134:void submitRequest() -> submitRequest
com.yydcdut.markdown.span.MDOrderListSpan -> com.yydcdut.markdown.span.MDOrderListSpan:
    41:43:void <init>(int,int,int) -> <init>
    48:48:int getLeadingMargin(boolean) -> getLeadingMargin
    61:61:int getNumber() -> getNumber
com.yydcdut.markdown.span.MDQuoteSpan -> com.yydcdut.markdown.span.MDQuoteSpan:
    41:42:void <init>(int,int) -> <init>
    47:49:void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout) -> drawLeadingMargin
com.yydcdut.markdown.span.MDTodoDoneSpan -> com.yydcdut.markdown.span.MDTodoDoneSpan:
    44:76:void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout) -> drawLeadingMargin
com.yydcdut.markdown.span.MDTodoSpan -> com.yydcdut.markdown.span.MDTodoSpan:
    60:78:void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout) -> drawLeadingMargin
    51:51:int getLeadingMargin(boolean) -> getLeadingMargin
com.yydcdut.markdown.span.MDURLSpan -> com.yydcdut.markdown.span.MDURLSpan:
    49:52:void onClick(android.view.View) -> onClick
    43:44:void updateDrawState(android.text.TextPaint) -> updateDrawState
com.yydcdut.markdown.span.MDUnOrderListSpan -> com.yydcdut.markdown.span.MDUnOrderListSpan:
    46:49:void <init>(int,int,int,int) -> <init>
    59:59:void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout) -> drawLeadingMargin
    68:68:int getColor() -> getColor
    54:54:int getLeadingMargin(boolean) -> getLeadingMargin
    77:77:int getType() -> getType
com.yydcdut.markdown.syntax.edit.BlockQuotesSyntax -> com.yydcdut.markdown.syntax.edit.BlockQuotesSyntax:
    45:46:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    81:85:int calculateNested(java.lang.String) -> calculateNested
    52:67:java.util.List format(android.text.Editable) -> format
com.yydcdut.markdown.syntax.edit.BoldSyntax -> com.yydcdut.markdown.syntax.edit.BoldSyntax:
    43:43:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    49:51:java.util.List format(android.text.Editable) -> format
    57:57:java.lang.Object whatSpan() -> whatSpan
com.yydcdut.markdown.syntax.edit.CenterAlignSyntax -> com.yydcdut.markdown.syntax.edit.CenterAlignSyntax:
    41:41:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    47:47:java.util.List format(android.text.Editable) -> format
    52:52:java.lang.Object whatSpan() -> whatSpan
com.yydcdut.markdown.syntax.edit.CodeBlockSyntax -> com.yydcdut.markdown.syntax.edit.CodeBlockSyntax:
    47:48:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    54:82:java.util.List format(android.text.Editable) -> format
com.yydcdut.markdown.syntax.edit.CodeSyntax -> com.yydcdut.markdown.syntax.edit.CodeSyntax:
    42:43:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    49:49:java.util.List format(android.text.Editable) -> format
    54:54:java.lang.Object whatSpan() -> whatSpan
com.yydcdut.markdown.syntax.edit.EditFactory -> com.yydcdut.markdown.syntax.edit.EditFactory:
    40:40:void <init>() -> <init>
    49:49:com.yydcdut.markdown.syntax.SyntaxFactory create() -> create
    59:59:com.yydcdut.markdown.syntax.Syntax getBlockQuotesSyntax(com.yydcdut.markdown.MarkdownConfiguration) -> getBlockQuotesSyntax
    99:99:com.yydcdut.markdown.syntax.Syntax getBoldSyntax(com.yydcdut.markdown.MarkdownConfiguration) -> getBoldSyntax
    89:89:com.yydcdut.markdown.syntax.Syntax getCenterAlignSyntax(com.yydcdut.markdown.MarkdownConfiguration) -> getCenterAlignSyntax
    134:134:com.yydcdut.markdown.syntax.Syntax getCodeBlockSyntax(com.yydcdut.markdown.MarkdownConfiguration) -> getCodeBlockSyntax
    109:109:com.yydcdut.markdown.syntax.Syntax getCodeSyntax(com.yydcdut.markdown.MarkdownConfiguration) -> getCodeSyntax
    94:94:com.yydcdut.markdown.syntax.Syntax getHeaderSyntax(com.yydcdut.markdown.MarkdownConfiguration) -> getHeaderSyntax
    54:54:com.yydcdut.markdown.syntax.Syntax getHorizontalRulesSyntax(com.yydcdut.markdown.MarkdownConfiguration) -> getHorizontalRulesSyntax
    104:104:com.yydcdut.markdown.syntax.Syntax getItalicSyntax(com.yydcdut.markdown.MarkdownConfiguration) -> getItalicSyntax
    74:74:com.yydcdut.markdown.syntax.Syntax getOrderListSyntax(com.yydcdut.markdown.MarkdownConfiguration) -> getOrderListSyntax
    114:114:com.yydcdut.markdown.syntax.Syntax getStrikeThroughSyntax(com.yydcdut.markdown.MarkdownConfiguration) -> getStrikeThroughSyntax
    79:79:com.yydcdut.markdown.syntax.Syntax getUnOrderListSyntax(com.yydcdut.markdown.MarkdownConfiguration) -> getUnOrderListSyntax
    143:155:void init(com.yydcdut.markdown.MarkdownConfiguration) -> init
    161:177:java.lang.CharSequence parse(java.lang.CharSequence,com.yydcdut.markdown.MarkdownConfiguration) -> parse
com.yydcdut.markdown.syntax.edit.EditSyntaxAdapter -> com.yydcdut.markdown.syntax.edit.EditSyntaxAdapter:
    31:31:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
com.yydcdut.markdown.syntax.edit.HeaderSyntax -> com.yydcdut.markdown.syntax.edit.HeaderSyntax:
    65:71:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    168:173:void addSpecial(java.lang.String,java.util.Map) -> addSpecial
    77:102:java.util.List format(android.text.Editable) -> format
    127:140:java.lang.Object getRealSpan(java.lang.String) -> getRealSpan
    113:116:java.lang.Object getSpan(java.lang.String) -> getSpan
    150:155:boolean matchSpecial(java.lang.String) -> matchSpecial
    185:188:void replace(java.lang.StringBuilder,java.lang.String,java.util.List) -> replace
    199:221:void replaceSpecial(java.util.Map,java.lang.StringBuilder,java.util.List) -> replaceSpecial
com.yydcdut.markdown.syntax.edit.HorizontalRulesSyntax -> com.yydcdut.markdown.syntax.edit.HorizontalRulesSyntax:
    50:52:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    58:60:java.util.List format(android.text.Editable) -> format
    66:66:java.lang.Object whatSpan() -> whatSpan
com.yydcdut.markdown.syntax.edit.ItalicSyntax -> com.yydcdut.markdown.syntax.edit.ItalicSyntax:
    44:44:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    50:52:java.util.List format(android.text.Editable) -> format
    58:58:java.lang.Object whatSpan() -> whatSpan
com.yydcdut.markdown.syntax.edit.OrderListSyntax -> com.yydcdut.markdown.syntax.edit.OrderListSyntax:
    45:45:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    71:80:int calculateNested(java.lang.String) -> calculateNested
    97:106:int calculateNumber(java.lang.String,int) -> calculateNumber
    126:136:int findTrueIndex(java.lang.String,java.lang.StringBuilder) -> findTrueIndex
    51:65:java.util.List format(android.text.Editable) -> format
com.yydcdut.markdown.syntax.edit.StrikeThroughSyntax -> com.yydcdut.markdown.syntax.edit.StrikeThroughSyntax:
    40:40:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    46:46:java.util.List format(android.text.Editable) -> format
    51:51:java.lang.Object whatSpan() -> whatSpan
com.yydcdut.markdown.syntax.edit.UnOrderListSyntax -> com.yydcdut.markdown.syntax.edit.UnOrderListSyntax:
    50:51:void <init>(com.yydcdut.markdown.MarkdownConfiguration) -> <init>
    99:108:int calculateNested(java.lang.String) -> calculateNested
    58:84:java.util.List format(android.text.Editable) -> format
    89:94:void replace(java.util.List,int,java.lang.StringBuilder,java.util.List) -> replace
    119:123:void replaceTodo(java.lang.StringBuilder) -> replaceTodo
com.yydcdut.markdown.theme.ThemeDefault -> com.yydcdut.markdown.theme.ThemeDefault:
    25:25:void <init>() -> <init>
com.yydcdut.markdown.utils.SyntaxUtils -> com.yydcdut.markdown.utils.SyntaxUtils:
    338:343:java.util.List getMatchedEditTokenList(android.text.Editable,java.util.List,int) -> getMatchedEditTokenList
    176:177:java.util.List parse(android.text.Editable,java.lang.String,java.lang.String,com.yydcdut.markdown.utils.SyntaxUtils$OnWhatSpanCallback) -> parse
    190:191:java.util.List parse(android.text.Editable,java.lang.String,com.yydcdut.markdown.utils.SyntaxUtils$OnWhatSpanCallback) -> parse
    203:213:java.util.List parse(java.lang.StringBuilder,java.lang.String,com.yydcdut.markdown.utils.SyntaxUtils$OnWhatSpanCallback) -> parse
    281:294:void removeSpans(android.text.Editable,int,java.lang.Class) -> removeSpans
    318:326:void setCodeSpan(android.text.Editable,java.util.List) -> setCodeSpan
    306:307:void setSpans(android.text.Editable,java.util.List) -> setSpans
com.yydcdut.markdown.utils.TextHelper -> com.yydcdut.markdown.utils.TextHelper:
    106:124:java.util.List find(java.lang.String,java.lang.String) -> find
    77:77:int findBeforeNewLineChar(java.lang.CharSequence,int) -> findBeforeNewLineChar
    44:45:int findNextNewLineChar(java.lang.CharSequence,int) -> findNextNewLineChar
    61:63:int findNextNewLineCharCompat(java.lang.CharSequence,int) -> findNextNewLineCharCompat
    138:141:java.util.List getNewLineCharPosition(android.text.SpannableStringBuilder,int,int) -> getNewLineCharPosition
    154:159:java.lang.String getPlaceHolder(java.lang.String) -> getPlaceHolder
    94:94:boolean isNeedFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> isNeedFormat
    234:234:int safePosition(int,java.lang.CharSequence) -> safePosition
<<<<<<< HEAD
junit.runner.BaseTestRunner -> junit.runner.BaseTestRunner:
    324:324:void <clinit>() -> <clinit>
    247:247:java.lang.String getPreference(java.lang.String) -> getPreference
    251:257:int getPreference(java.lang.String,int) -> getPreference
    47:53:java.util.Properties getPreferences() -> getPreferences
    225:226:java.io.File getPreferencesFile() -> getPreferencesFile
    232:242:void readPreferences() -> readPreferences
    43:43:void setPreferences(java.util.Properties) -> setPreferences
=======
>>>>>>> rename package name,fix action event info list same time crash
moe.codeest.enviews.ENDownloadView -> moe.codeest.enviews.ENDownloadView:
    52:52:void <clinit>() -> <clinit>
    96:96:void <init>(android.content.Context) -> <init>
    100:133:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    24:24:float access$000(moe.codeest.enviews.ENDownloadView) -> access$000
    24:24:float access$002(moe.codeest.enviews.ENDownloadView,float) -> access$002
    24:24:int access$102(moe.codeest.enviews.ENDownloadView,int) -> access$102
    24:24:void access$200(moe.codeest.enviews.ENDownloadView) -> access$200
    24:24:moe.codeest.enviews.ENDownloadView$DownloadUnit access$300(moe.codeest.enviews.ENDownloadView) -> access$300
    24:24:double access$400(moe.codeest.enviews.ENDownloadView) -> access$400
    24:24:double access$502(moe.codeest.enviews.ENDownloadView,double) -> access$502
    268:297:void downloadAnim() -> downloadAnim
    364:364:int getCurrentState() -> getCurrentState
    344:344:java.lang.String getUnitStr(moe.codeest.enviews.ENDownloadView$DownloadUnit) -> getUnitStr
    153:174:void onDraw(android.graphics.Canvas) -> onDraw
    138:148:void onSizeChanged(int,int,int,int) -> onSizeChanged
    332:339:void reset() -> reset
    358:360:void setDownloadConfig(int,double,moe.codeest.enviews.ENDownloadView$DownloadUnit) -> setDownloadConfig
    375:375:void setOnDownloadStateListener(moe.codeest.enviews.ENDownloadView$OnDownloadStateListener) -> setOnDownloadStateListener
    239:264:void start() -> start
moe.codeest.enviews.ENDownloadView$1 -> moe.codeest.enviews.ENDownloadView$1:
    250:250:void <init>(moe.codeest.enviews.ENDownloadView) -> <init>
    253:254:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
moe.codeest.enviews.ENDownloadView$2 -> moe.codeest.enviews.ENDownloadView$2:
    257:257:void <init>(moe.codeest.enviews.ENDownloadView) -> <init>
    260:261:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
moe.codeest.enviews.ENDownloadView$3 -> moe.codeest.enviews.ENDownloadView$3:
    281:281:void <init>(moe.codeest.enviews.ENDownloadView) -> <init>
    284:287:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
moe.codeest.enviews.ENDownloadView$4 -> moe.codeest.enviews.ENDownloadView$4:
    290:290:void <init>(moe.codeest.enviews.ENDownloadView) -> <init>
    293:294:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
moe.codeest.enviews.ENDownloadView$7 -> moe.codeest.enviews.ENDownloadView$7:
    344:344:void <clinit>() -> <clinit>
moe.codeest.enviews.ENDownloadView$DownloadUnit -> moe.codeest.enviews.ENDownloadView$DownloadUnit:
    85:84:void <clinit>() -> <clinit>
    91:91:void <init>(java.lang.String,int) -> <init>
    84:84:moe.codeest.enviews.ENDownloadView$DownloadUnit valueOf(java.lang.String) -> valueOf
    84:84:moe.codeest.enviews.ENDownloadView$DownloadUnit[] values() -> values
moe.codeest.enviews.ENPlayView -> moe.codeest.enviews.ENPlayView:
    64:53:void <init>(android.content.Context) -> <init>
    68:96:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    25:25:float access$002(moe.codeest.enviews.ENPlayView,float) -> access$002
    220:219:int dp2px(int) -> dp2px
    211:211:int getCurrentState() -> getCurrentState
    120:166:void onDraw(android.graphics.Canvas) -> onDraw
    101:115:void onSizeChanged(int,int,int,int) -> onSizeChanged
    191:206:void pause() -> pause
    171:186:void play() -> play
    215:215:void setDuration(int) -> setDuration
moe.codeest.enviews.ENPlayView$1 -> moe.codeest.enviews.ENPlayView$1:
    178:178:void <init>(moe.codeest.enviews.ENPlayView) -> <init>
    181:182:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
moe.codeest.enviews.ENPlayView$2 -> moe.codeest.enviews.ENPlayView$2:
    198:198:void <init>(moe.codeest.enviews.ENPlayView) -> <init>
    201:202:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
okhttp3.Address -> okhttp3.Address:
    55:62:void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector) -> <init>
    151:151:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    120:120:java.util.List connectionSpecs() -> connectionSpecs
    98:98:okhttp3.Dns dns() -> dns
    155:157:boolean equals(java.lang.Object) -> equals
    176:185:boolean equalsNonHost(okhttp3.Address) -> equalsNonHost
    162:171:int hashCode() -> hashCode
    146:146:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    116:116:java.util.List protocols() -> protocols
    136:136:java.net.Proxy proxy() -> proxy
    108:108:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    128:128:java.net.ProxySelector proxySelector() -> proxySelector
    103:103:javax.net.SocketFactory socketFactory() -> socketFactory
    141:141:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    189:200:java.lang.String toString() -> toString
    93:93:okhttp3.HttpUrl url() -> url
okhttp3.Authenticator -> okhttp3.Authenticator:
    64:64:void <clinit>() -> <clinit>
okhttp3.Authenticator$1 -> okhttp3.Authenticator$1:
    64:64:void <init>() -> <init>
okhttp3.CacheControl -> okhttp3.CacheControl:
    18:28:void <clinit>() -> <clinit>
    48:61:void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String) -> <init>
    64:76:void <init>(okhttp3.CacheControl$Builder) -> <init>
    259:274:java.lang.String headerValue() -> headerValue
    145:145:boolean immutable() -> immutable
    111:111:boolean isPrivate() -> isPrivate
    115:115:boolean isPublic() -> isPublic
    99:99:int maxAgeSeconds() -> maxAgeSeconds
    123:123:int maxStaleSeconds() -> maxStaleSeconds
    127:127:int minFreshSeconds() -> minFreshSeconds
    119:119:boolean mustRevalidate() -> mustRevalidate
    87:87:boolean noCache() -> noCache
    92:92:boolean noStore() -> noStore
    137:137:boolean onlyIfCached() -> onlyIfCached
    169:248:okhttp3.CacheControl parse(okhttp3.Headers) -> parse
    254:255:java.lang.String toString() -> toString
okhttp3.CacheControl$Builder -> okhttp3.CacheControl$Builder:
    278:283:void <init>() -> <init>
    370:370:okhttp3.CacheControl build() -> build
    325:324:okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit) -> maxStale
    290:290:okhttp3.CacheControl$Builder noCache() -> noCache
    354:354:okhttp3.CacheControl$Builder onlyIfCached() -> onlyIfCached
okhttp3.CertificatePinner -> okhttp3.CertificatePinner:
    129:129:void <clinit>() -> <clinit>
    134:136:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner) -> <init>
    162:204:void check(java.lang.String,java.util.List) -> check
    141:143:boolean equals(java.lang.Object) -> equals
    218:222:java.util.List findMatchingPins(java.lang.String) -> findMatchingPins
    147:148:int hashCode() -> hashCode
    243:244:java.lang.String pin(java.security.cert.Certificate) -> pin
    250:250:okio.ByteString sha1(java.security.cert.X509Certificate) -> sha1
    254:254:okio.ByteString sha256(java.security.cert.X509Certificate) -> sha256
    231:233:okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner) -> withCertificateChainCleaner
okhttp3.CertificatePinner$Builder -> okhttp3.CertificatePinner$Builder:
    320:321:void <init>() -> <init>
    341:341:okhttp3.CertificatePinner build() -> build
okhttp3.CertificatePinner$Pin -> okhttp3.CertificatePinner$Pin:
    300:303:boolean equals(java.lang.Object) -> equals
    308:310:int hashCode() -> hashCode
    289:296:boolean matches(java.lang.String) -> matches
    315:315:java.lang.String toString() -> toString
okhttp3.CipherSuite -> okhttp3.CipherSuite:
    43:385:void <clinit>() -> <clinit>
    415:417:void <init>(java.lang.String) -> <init>
    399:404:okhttp3.CipherSuite forJavaName(java.lang.String) -> forJavaName
    408:412:java.util.List forJavaNames(java.lang.String[]) -> forJavaNames
    428:428:okhttp3.CipherSuite of(java.lang.String,int) -> of
    442:442:java.lang.String toString() -> toString
okhttp3.CipherSuite$1 -> okhttp3.CipherSuite$1:
    43:43:void <init>() -> <init>
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
    45:51:int compare(java.lang.String,java.lang.String) -> compare
okhttp3.ConnectionPool -> okhttp3.ConnectionPool:
    50:52:void <clinit>() -> <clinit>
    86:86:void <init>() -> <init>
    89:95:void <init>(int,long,java.util.concurrent.TimeUnit) -> <init>
    206:242:long cleanup(long) -> cleanup
    164:165:boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection) -> connectionBecameIdle
    139:143:java.net.Socket deduplicate(okhttp3.Address,okhttp3.internal.connection.StreamAllocation) -> deduplicate
    124:126:okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route) -> get
    257:283:int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long) -> pruneAndGetAllocationCount
    151:155:void put(okhttp3.internal.connection.RealConnection) -> put
okhttp3.ConnectionPool$1 -> okhttp3.ConnectionPool$1:
    57:57:void <init>(okhttp3.ConnectionPool) -> <init>
    60:70:void run() -> run
okhttp3.ConnectionSpec -> okhttp3.ConnectionSpec:
    46:80:void <clinit>() -> <clinit>
    87:91:void <init>(okhttp3.ConnectionSpec$Builder) -> <init>
    120:126:void apply(javax.net.ssl.SSLSocket,boolean) -> apply
    103:103:java.util.List cipherSuites() -> cipherSuites
    188:197:boolean equals(java.lang.Object) -> equals
    205:208:int hashCode() -> hashCode
    170:179:boolean isCompatible(javax.net.ssl.SSLSocket) -> isCompatible
    95:95:boolean isTls() -> isTls
    135:155:okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean) -> supportedSpec
    115:115:boolean supportsTlsExtensions() -> supportsTlsExtensions
    111:111:java.util.List tlsVersions() -> tlsVersions
    214:220:java.lang.String toString() -> toString
okhttp3.ConnectionSpec$Builder -> okhttp3.ConnectionSpec$Builder:
    233:234:void <init>(boolean) -> <init>
    237:241:void <init>(okhttp3.ConnectionSpec) -> <init>
    306:306:okhttp3.ConnectionSpec build() -> build
    251:251:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> cipherSuites
    261:261:okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]) -> cipherSuites
    300:300:okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean) -> supportsTlsExtensions
    278:278:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> tlsVersions
    289:289:okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]) -> tlsVersions
okhttp3.Cookie -> okhttp3.Cookie:
    48:54:void <clinit>() -> <clinit>
    68:77:void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> <init>
    390:390:int dateCharacterOffset(java.lang.String,int,int,boolean) -> dateCharacterOffset
    186:192:boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    586:591:boolean equals(java.lang.Object) -> equals
    601:609:int hashCode() -> hashCode
    98:98:java.lang.String name() -> name
    219:219:okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String) -> parse
    224:323:okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String) -> parse
    441:453:java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers) -> parseAll
    426:427:java.lang.String parseDomain(java.lang.String) -> parseDomain
    329:365:long parseExpires(java.lang.String,int,int) -> parseExpires
    410:417:long parseMaxAge(java.lang.String) -> parseMaxAge
    542:542:java.lang.String toString() -> toString
    551:582:java.lang.String toString(boolean) -> toString
    103:103:java.lang.String value() -> value
okhttp3.CookieJar -> okhttp3.CookieJar:
    36:36:void <clinit>() -> <clinit>
okhttp3.CookieJar$1 -> okhttp3.CookieJar$1:
    36:36:void <init>() -> <init>
    41:41:java.util.List loadForRequest(okhttp3.HttpUrl) -> loadForRequest
okhttp3.Dispatcher -> okhttp3.Dispatcher:
    60:54:void <init>() -> <init>
    185:186:void executed(okhttp3.RealCall) -> executed
    64:68:java.util.concurrent.ExecutorService executorService() -> executorService
    190:190:void finished(okhttp3.RealCall$AsyncCall) -> finished
    195:195:void finished(okhttp3.RealCall) -> finished
    201:206:void finished(java.util.Deque,java.lang.Object,boolean) -> finished
    157:169:void promoteCalls() -> promoteCalls
    237:237:int runningCallsCount() -> runningCallsCount
    176:178:int runningCallsForHost(okhttp3.RealCall$AsyncCall) -> runningCallsForHost
okhttp3.Dns -> okhttp3.Dns:
    36:36:void <clinit>() -> <clinit>
okhttp3.Dns$1 -> okhttp3.Dns$1:
    36:36:void <init>() -> <init>
    40:38:java.util.List lookup(java.lang.String) -> lookup
okhttp3.EventListener -> okhttp3.EventListener:
    59:59:void <clinit>() -> <clinit>
    58:58:void <init>() -> <init>
    63:63:okhttp3.EventListener$Factory factory(okhttp3.EventListener) -> factory
okhttp3.EventListener$1 -> okhttp3.EventListener$1:
    59:59:void <init>() -> <init>
okhttp3.EventListener$2 -> okhttp3.EventListener$2:
    63:63:void <init>(okhttp3.EventListener) -> <init>
    65:65:okhttp3.EventListener create(okhttp3.Call) -> create
okhttp3.Handshake -> okhttp3.Handshake:
    42:46:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List) -> <init>
    94:94:okhttp3.CipherSuite cipherSuite() -> cipherSuite
    122:127:boolean equals(java.lang.Object) -> equals
    50:51:okhttp3.Handshake get(javax.net.ssl.SSLSession) -> get
    132:135:int hashCode() -> hashCode
    99:99:java.util.List peerCertificates() -> peerCertificates
okhttp3.Headers -> okhttp3.Headers:
    53:54:void <init>(okhttp3.Headers$Builder) -> <init>
    57:58:void <init>(java.lang.String[]) -> <init>
    163:164:boolean equals(java.lang.Object) -> equals
    63:63:java.lang.String get(java.lang.String) -> get
    194:196:java.lang.String get(java.lang.String[],java.lang.String) -> get
    168:168:int hashCode() -> hashCode
    82:82:java.lang.String name(int) -> name
    131:132:okhttp3.Headers$Builder newBuilder() -> newBuilder
    208:207:okhttp3.Headers of(java.lang.String[]) -> of
    77:77:int size() -> size
    172:176:java.lang.String toString() -> toString
    87:87:java.lang.String value(int) -> value
    102:110:java.util.List values(java.lang.String) -> values
okhttp3.Headers$Builder -> okhttp3.Headers$Builder:
    257:258:void <init>() -> <init>
    288:289:okhttp3.Headers$Builder add(java.lang.String,java.lang.String) -> add
    265:273:okhttp3.Headers$Builder addLenient(java.lang.String) -> addLenient
    297:298:okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String) -> addLenient
    355:355:okhttp3.Headers build() -> build
    326:325:void checkNameAndValue(java.lang.String,java.lang.String) -> checkNameAndValue
    303:306:okhttp3.Headers$Builder removeAll(java.lang.String) -> removeAll
    318:320:okhttp3.Headers$Builder set(java.lang.String,java.lang.String) -> set
okhttp3.HttpUrl -> okhttp3.HttpUrl:
    289:289:void <clinit>() -> <clinit>
    338:351:void <init>(okhttp3.HttpUrl$Builder) -> <init>
    1687:1704:java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> canonicalize
    1713:1712:void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> canonicalize
    1759:1758:java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> canonicalize
    510:512:int defaultPort(java.lang.String) -> defaultPort
    828:830:java.lang.String encodedFragment() -> encodedFragment
    445:448:java.lang.String encodedPassword() -> encodedPassword
    546:548:java.lang.String encodedPath() -> encodedPath
    570:576:java.util.List encodedPathSegments() -> encodedPathSegments
    613:616:java.lang.String encodedQuery() -> encodedQuery
    412:415:java.lang.String encodedUsername() -> encodedUsername
    942:942:boolean equals(java.lang.Object) -> equals
    946:946:int hashCode() -> hashCode
    486:486:java.lang.String host() -> host
    397:397:boolean isHttps() -> isHttps
    620:627:void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List) -> namesAndValuesToQueryString
    872:882:okhttp3.HttpUrl$Builder newBuilder() -> newBuilder
    891:893:okhttp3.HttpUrl$Builder newBuilder(java.lang.String) -> newBuilder
    901:903:okhttp3.HttpUrl parse(java.lang.String) -> parse
    552:554:void pathSegmentsToString(java.lang.StringBuilder,java.util.List) -> pathSegmentsToString
    1609:1609:java.lang.String percentDecode(java.lang.String,boolean) -> percentDecode
    1613:1619:java.util.List percentDecode(java.util.List,boolean) -> percentDecode
    1624:1635:java.lang.String percentDecode(java.lang.String,int,int,boolean) -> percentDecode
    1641:1640:void percentDecode(okio.Buffer,java.lang.String,int,int,boolean) -> percentDecode
    1660:1662:boolean percentEncoded(java.lang.String,int,int) -> percentEncoded
    502:502:int port() -> port
    673:676:java.lang.String query() -> query
    639:647:java.util.List queryStringToNamesAndValues(java.lang.String) -> queryStringToNamesAndValues
    855:859:java.lang.String redact() -> redact
    867:868:okhttp3.HttpUrl resolve(java.lang.String) -> resolve
    393:393:java.lang.String scheme() -> scheme
    950:950:java.lang.String toString() -> toString
    377:386:java.net.URI uri() -> uri
okhttp3.HttpUrl$Builder -> okhttp3.HttpUrl$Builder:
    987:988:void <init>() -> <init>
    1264:1264:okhttp3.HttpUrl build() -> build
    1591:1592:java.lang.String canonicalizeHost(java.lang.String,int,int) -> canonicalizeHost
    1049:1049:int effectivePort() -> effectivePort
    1152:1153:okhttp3.HttpUrl$Builder encodedQuery(java.lang.String) -> encodedQuery
    1036:1035:okhttp3.HttpUrl$Builder host(java.lang.String) -> host
    1496:1496:boolean isDot(java.lang.String) -> isDot
    1500:1503:boolean isDotDot(java.lang.String) -> isDotDot
    1322:1340:okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String) -> parse
    1598:1599:int parsePort(java.lang.String,int,int) -> parsePort
    1019:1018:okhttp3.HttpUrl$Builder password(java.lang.String) -> password
    1517:1523:void pop() -> pop
    1044:1043:okhttp3.HttpUrl$Builder port(int) -> port
    1575:1578:int portColonOffset(java.lang.String,int,int) -> portColonOffset
    1476:1491:void push(java.lang.String,int,int,boolean,boolean) -> push
    1242:1257:okhttp3.HttpUrl$Builder reencodeForUri() -> reencodeForUri
    1452:1467:void resolvePath(java.lang.String,int,int) -> resolvePath
    994:993:okhttp3.HttpUrl$Builder scheme(java.lang.String) -> scheme
    1534:1538:int schemeDelimiterOffset(java.lang.String,int,int) -> schemeDelimiterOffset
    1561:1561:int slashCount(java.lang.String,int,int) -> slashCount
    1270:1310:java.lang.String toString() -> toString
    1006:1005:okhttp3.HttpUrl$Builder username(java.lang.String) -> username
okhttp3.HttpUrl$Builder$ParseResult -> okhttp3.HttpUrl$Builder$ParseResult:
    1314:1313:void <clinit>() -> <clinit>
    1313:1313:void <init>(java.lang.String,int) -> <init>
    1313:1313:okhttp3.HttpUrl$Builder$ParseResult valueOf(java.lang.String) -> valueOf
    1313:1313:okhttp3.HttpUrl$Builder$ParseResult[] values() -> values
okhttp3.MediaType -> okhttp3.MediaType:
    31:32:void <clinit>() -> <clinit>
    40:44:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    104:104:java.nio.charset.Charset charset() -> charset
    113:113:java.nio.charset.Charset charset(java.nio.charset.Charset) -> charset
    128:128:boolean equals(java.lang.Object) -> equals
    132:132:int hashCode() -> hashCode
    52:82:okhttp3.MediaType parse(java.lang.String) -> parse
    124:124:java.lang.String toString() -> toString
    90:90:java.lang.String type() -> type
okhttp3.MultipartBody -> okhttp3.MultipartBody:
    35:66:void <clinit>() -> <clinit>
    74:78:void <init>(okio.ByteString,okhttp3.MediaType,java.util.List) -> <init>
    203:221:java.lang.StringBuilder appendQuotedString(java.lang.StringBuilder,java.lang.String) -> appendQuotedString
    108:110:long contentLength() -> contentLength
    104:104:okhttp3.MediaType contentType() -> contentType
    129:186:long writeOrCountBytes(okio.BufferedSink,boolean) -> writeOrCountBytes
    114:114:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.MultipartBody$Builder -> okhttp3.MultipartBody$Builder:
    285:285:void <init>() -> <init>
    288:289:void <init>(java.lang.String) -> <init>
    319:319:okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String) -> addFormDataPart
    324:324:okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody) -> addFormDataPart
    330:329:okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part) -> addPart
    336:337:okhttp3.MultipartBody build() -> build
    300:298:okhttp3.MultipartBody$Builder setType(okhttp3.MediaType) -> setType
okhttp3.MultipartBody$Part -> okhttp3.MultipartBody$Part:
    265:267:void <init>(okhttp3.Headers,okhttp3.RequestBody) -> <init>
    234:232:okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody) -> create
    244:244:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String) -> createFormData
    251:249:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody) -> createFormData
okhttp3.OkHttpClient -> okhttp3.OkHttpClient:
    128:135:void <clinit>() -> <clinit>
    228:228:void <init>() -> <init>
    231:275:void <init>(okhttp3.OkHttpClient$Builder) -> <init>
    369:369:okhttp3.Authenticator authenticator() -> authenticator
    365:365:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    310:310:int connectTimeoutMillis() -> connectTimeoutMillis
    377:377:okhttp3.ConnectionPool connectionPool() -> connectionPool
    401:401:java.util.List connectionSpecs() -> connectionSpecs
    337:337:okhttp3.CookieJar cookieJar() -> cookieJar
    393:393:okhttp3.Dispatcher dispatcher() -> dispatcher
    349:349:okhttp3.Dns dns() -> dns
    423:423:okhttp3.EventListener$Factory eventListenerFactory() -> eventListenerFactory
    385:385:boolean followRedirects() -> followRedirects
    381:381:boolean followSslRedirects() -> followSslRedirects
    361:361:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    410:410:java.util.List interceptors() -> interceptors
    345:345:okhttp3.internal.cache.InternalCache internalCache() -> internalCache
    419:419:java.util.List networkInterceptors() -> networkInterceptors
    430:430:okhttp3.Call newCall(okhttp3.Request) -> newCall
    325:325:int pingIntervalMillis() -> pingIntervalMillis
    397:397:java.util.List protocols() -> protocols
    329:329:java.net.Proxy proxy() -> proxy
    373:373:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    333:333:java.net.ProxySelector proxySelector() -> proxySelector
    315:315:int readTimeoutMillis() -> readTimeoutMillis
    389:389:boolean retryOnConnectionFailure() -> retryOnConnectionFailure
    353:353:javax.net.SocketFactory socketFactory() -> socketFactory
    357:357:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    300:304:javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager) -> systemDefaultSslSocketFactory
    285:294:javax.net.ssl.X509TrustManager systemDefaultTrustManager() -> systemDefaultTrustManager
    320:320:int writeTimeoutMillis() -> writeTimeoutMillis
okhttp3.OkHttpClient$1 -> okhttp3.OkHttpClient$1:
    135:135:void <init>() -> <init>
    137:137:void addLenient(okhttp3.Headers$Builder,java.lang.String) -> addLenient
    141:141:void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String) -> addLenient
    181:181:void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean) -> apply
    176:176:int code(okhttp3.Response$Builder) -> code
    150:150:boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> connectionBecameIdle
    164:164:java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation) -> deduplicate
    159:159:boolean equalsNonHost(okhttp3.Address,okhttp3.Address) -> equalsNonHost
    155:155:okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route) -> get
    168:168:void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> put
    172:172:okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool) -> routeDatabase
okhttp3.OkHttpClient$Builder -> okhttp3.OkHttpClient$Builder:
    475:495:void <init>() -> <init>
    889:888:okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor) -> addInterceptor
    935:935:okhttp3.OkHttpClient build() -> build
    537:537:okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit) -> connectTimeout
    724:723:okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier) -> hostnameVerifier
    552:552:okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit) -> readTimeout
    810:810:okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean) -> retryOnConnectionFailure
    711:709:okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager) -> sslSocketFactory
    566:566:okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit) -> writeTimeout
okhttp3.Protocol -> okhttp3.Protocol:
    33:29:void <clinit>() -> <clinit>
    76:77:void <init>(java.lang.String,int,java.lang.String) -> <init>
    87:92:okhttp3.Protocol get(java.lang.String) -> get
    103:103:java.lang.String toString() -> toString
    29:29:okhttp3.Protocol valueOf(java.lang.String) -> valueOf
    29:29:okhttp3.Protocol[] values() -> values
okhttp3.RealCall -> okhttp3.RealCall:
    50:54:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> <init>
    33:33:okhttp3.EventListener access$000(okhttp3.RealCall) -> access$000
    89:90:void captureCallStackTrace() -> captureCallStackTrace
    33:33:java.lang.Object clone() -> clone
    117:117:okhttp3.RealCall clone() -> clone
    69:72:okhttp3.Response execute() -> execute
    185:200:okhttp3.Response getResponseWithInterceptorChain() -> getResponseWithInterceptorChain
    112:112:boolean isCanceled() -> isCanceled
    59:60:okhttp3.RealCall newRealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> newRealCall
    180:180:java.lang.String redactedUrl() -> redactedUrl
    174:176:java.lang.String toLoggableString() -> toLoggableString
okhttp3.RealCall$AsyncCall -> okhttp3.RealCall$AsyncCall:
    147:164:void execute() -> execute
    141:141:okhttp3.RealCall get() -> get
    133:133:java.lang.String host() -> host
okhttp3.Request -> okhttp3.Request:
    37:42:void <init>(okhttp3.Request$Builder) -> <init>
    66:66:okhttp3.RequestBody body() -> body
    82:83:okhttp3.CacheControl cacheControl() -> cacheControl
    58:58:java.lang.String header(java.lang.String) -> header
    54:54:okhttp3.Headers headers() -> headers
    87:87:boolean isHttps() -> isHttps
    50:50:java.lang.String method() -> method
    74:74:okhttp3.Request$Builder newBuilder() -> newBuilder
    91:96:java.lang.String toString() -> toString
    46:46:okhttp3.HttpUrl url() -> url
okhttp3.Request$Builder -> okhttp3.Request$Builder:
    107:109:void <init>() -> <init>
    112:117:void <init>(okhttp3.Request) -> <init>
    256:256:okhttp3.Request build() -> build
    165:165:okhttp3.Request$Builder header(java.lang.String,java.lang.String) -> header
    189:189:okhttp3.Request$Builder headers(okhttp3.Headers) -> headers
    234:233:okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody) -> method
    213:213:okhttp3.Request$Builder post(okhttp3.RequestBody) -> post
    183:183:okhttp3.Request$Builder removeHeader(java.lang.String) -> removeHeader
    122:121:okhttp3.Request$Builder url(okhttp3.HttpUrl) -> url
    136:133:okhttp3.Request$Builder url(java.lang.String) -> url
okhttp3.RequestBody -> okhttp3.RequestBody:
    28:28:void <init>() -> <init>
    48:57:okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String) -> create
<<<<<<< HEAD
    80:80:okhttp3.RequestBody create(okhttp3.MediaType,byte[]) -> create
    87:86:okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int) -> create
=======
    63:63:okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString) -> create
    80:80:okhttp3.RequestBody create(okhttp3.MediaType,byte[]) -> create
    87:86:okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int) -> create
    107:105:okhttp3.RequestBody create(okhttp3.MediaType,java.io.File) -> create
okhttp3.RequestBody$1 -> okhttp3.RequestBody$1:
    63:63:void <init>(okhttp3.MediaType,okio.ByteString) -> <init>
    69:69:long contentLength() -> contentLength
    65:65:okhttp3.MediaType contentType() -> contentType
    73:73:void writeTo(okio.BufferedSink) -> writeTo
>>>>>>> rename package name,fix action event info list same time crash
okhttp3.RequestBody$2 -> okhttp3.RequestBody$2:
    88:88:void <init>(okhttp3.MediaType,int,byte[],int) -> <init>
    94:94:long contentLength() -> contentLength
    90:90:okhttp3.MediaType contentType() -> contentType
    98:98:void writeTo(okio.BufferedSink) -> writeTo
<<<<<<< HEAD
=======
okhttp3.RequestBody$3 -> okhttp3.RequestBody$3:
    107:107:void <init>(okhttp3.MediaType,java.io.File) -> <init>
    113:113:long contentLength() -> contentLength
    109:109:okhttp3.MediaType contentType() -> contentType
    119:122:void writeTo(okio.BufferedSink) -> writeTo
>>>>>>> rename package name,fix action event info list same time crash
okhttp3.Response -> okhttp3.Response:
    59:71:void <init>(okhttp3.Response$Builder) -> <init>
    177:177:okhttp3.ResponseBody body() -> body
    250:251:okhttp3.CacheControl cacheControl() -> cacheControl
    280:281:void close() -> close
    98:98:int code() -> code
    119:119:okhttp3.Handshake handshake() -> handshake
    127:127:java.lang.String header(java.lang.String) -> header
    131:131:java.lang.String header(java.lang.String,java.lang.String) -> header
    136:136:okhttp3.Headers headers() -> headers
    106:106:boolean isSuccessful() -> isSuccessful
    111:111:java.lang.String message() -> message
    181:181:okhttp3.Response$Builder newBuilder() -> newBuilder
    224:224:okhttp3.Response priorResponse() -> priorResponse
    269:269:long receivedResponseAtMillis() -> receivedResponseAtMillis
    86:86:okhttp3.Request request() -> request
    260:260:long sentRequestAtMillis() -> sentRequestAtMillis
    287:294:java.lang.String toString() -> toString
okhttp3.Response$Builder -> okhttp3.Response$Builder:
    312:313:void <init>() -> <init>
    316:328:void <init>(okhttp3.Response) -> <init>
    370:370:okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    386:386:okhttp3.Response$Builder body(okhttp3.ResponseBody) -> body
    437:437:okhttp3.Response build() -> build
    397:398:okhttp3.Response$Builder cacheResponse(okhttp3.Response) -> cacheResponse
    421:422:void checkPriorResponse(okhttp3.Response) -> checkPriorResponse
    403:404:void checkSupportResponse(java.lang.String,okhttp3.Response) -> checkSupportResponse
    342:342:okhttp3.Response$Builder code(int) -> code
    352:352:okhttp3.Response$Builder handshake(okhttp3.Handshake) -> handshake
    381:381:okhttp3.Response$Builder headers(okhttp3.Headers) -> headers
    347:347:okhttp3.Response$Builder message(java.lang.String) -> message
    391:392:okhttp3.Response$Builder networkResponse(okhttp3.Response) -> networkResponse
    415:416:okhttp3.Response$Builder priorResponse(okhttp3.Response) -> priorResponse
    337:337:okhttp3.Response$Builder protocol(okhttp3.Protocol) -> protocol
    432:432:okhttp3.Response$Builder receivedResponseAtMillis(long) -> receivedResponseAtMillis
    332:332:okhttp3.Response$Builder request(okhttp3.Request) -> request
    427:427:okhttp3.Response$Builder sentRequestAtMillis(long) -> sentRequestAtMillis
okhttp3.ResponseBody -> okhttp3.ResponseBody:
    102:102:void <init>() -> <init>
    182:183:java.nio.charset.Charset charset() -> charset
    187:187:void close() -> close
    195:204:okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String) -> create
    209:210:okhttp3.ResponseBody create(okhttp3.MediaType,byte[]) -> create
    217:216:okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource) -> create
    172:177:java.lang.String string() -> string
okhttp3.ResponseBody$1 -> okhttp3.ResponseBody$1:
    217:217:void <init>(okhttp3.MediaType,long,okio.BufferedSource) -> <init>
    223:223:long contentLength() -> contentLength
    219:219:okhttp3.MediaType contentType() -> contentType
    227:227:okio.BufferedSource source() -> source
okhttp3.Route -> okhttp3.Route:
    42:44:void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress) -> <init>
    58:58:okhttp3.Address address() -> address
    84:87:boolean equals(java.lang.Object) -> equals
    92:94:int hashCode() -> hashCode
    68:68:java.net.Proxy proxy() -> proxy
    80:80:boolean requiresTunnel() -> requiresTunnel
    72:72:java.net.InetSocketAddress socketAddress() -> socketAddress
    99:99:java.lang.String toString() -> toString
okhttp3.TlsVersion -> okhttp3.TlsVersion:
    27:26:void <clinit>() -> <clinit>
    36:37:void <init>(java.lang.String,int,java.lang.String) -> <init>
    41:43:okhttp3.TlsVersion forJavaName(java.lang.String) -> forJavaName
    57:61:java.util.List forJavaNames(java.lang.String[]) -> forJavaNames
    26:26:okhttp3.TlsVersion valueOf(java.lang.String) -> valueOf
    26:26:okhttp3.TlsVersion[] values() -> values
okhttp3.internal.Internal -> okhttp3.internal.Internal:
    41:41:void <init>() -> <init>
okhttp3.internal.NamedRunnable -> okhttp3.internal.NamedRunnable:
    24:25:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    29:34:void run() -> run
okhttp3.internal.Util -> okhttp3.internal.Util:
    48:86:void <clinit>() -> <clinit>
    465:467:java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception) -> assertionError
    432:450:java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset) -> bomAwareCharset
    361:377:java.lang.String canonicalizeHost(java.lang.String) -> canonicalizeHost
    458:456:int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit) -> checkDuration
    94:94:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    110:112:void closeQuietly(java.io.Closeable) -> closeQuietly
    125:127:void closeQuietly(java.net.Socket) -> closeQuietly
    276:278:java.lang.String[] concat(java.lang.String[],java.lang.String) -> concat
    388:399:boolean containsInvalidHostnameAsciiCodes(java.lang.String) -> containsInvalidHostnameAsciiCodes
    558:580:boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int) -> decodeIpv4Suffix
    483:548:java.net.InetAddress decodeIpv6(java.lang.String,int,int) -> decodeIpv6
    335:335:int delimiterOffset(java.lang.String,int,int,java.lang.String) -> delimiterOffset
    346:346:int delimiterOffset(java.lang.String,int,int,char) -> delimiterOffset
    157:157:boolean discard(okio.Source,int,java.util.concurrent.TimeUnit) -> discard
    100:100:boolean equal(java.lang.Object,java.lang.Object) -> equal
    428:428:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    251:255:java.lang.String hostHeader(okhttp3.HttpUrl,boolean) -> hostHeader
    192:192:java.util.List immutableList(java.util.List) -> immutableList
    197:197:java.util.List immutableList(java.lang.Object[]) -> immutableList
    269:270:int indexOf(java.util.Comparator,java.lang.String[],java.lang.String) -> indexOf
    412:413:int indexOfControlOrNonAscii(java.lang.String) -> indexOfControlOrNonAscii
    594:620:java.lang.String inet6AddressToAscii(byte[]) -> inet6AddressToAscii
    217:226:java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[]) -> intersect
    264:265:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    237:242:boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[]) -> nonEmptyIntersection
    168:185:boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit) -> skipAll
    288:288:int skipLeadingAsciiWhitespace(java.lang.String,int,int) -> skipLeadingAsciiWhitespace
    308:308:int skipTrailingAsciiWhitespace(java.lang.String,int,int) -> skipTrailingAsciiWhitespace
    201:201:java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean) -> threadFactory
    324:326:java.lang.String trimSubstring(java.lang.String,int,int) -> trimSubstring
    423:423:boolean verifyAsIpAddress(java.lang.String) -> verifyAsIpAddress
okhttp3.internal.Util$1 -> okhttp3.internal.Util$1:
    70:70:void <init>() -> <init>
    70:70:int compare(java.lang.Object,java.lang.Object) -> compare
    72:72:int compare(java.lang.String,java.lang.String) -> compare
okhttp3.internal.Util$2 -> okhttp3.internal.Util$2:
    201:201:void <init>(java.lang.String,boolean) -> <init>
    203:204:java.lang.Thread newThread(java.lang.Runnable) -> newThread
okhttp3.internal.cache.CacheInterceptor -> okhttp3.internal.cache.CacheInterceptor:
    48:49:void <init>(okhttp3.internal.cache.InternalCache) -> <init>
    162:214:okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response) -> cacheWritingResponse
    219:240:okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers) -> combine
    53:97:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    263:265:boolean isContentSpecificHeader(java.lang.String) -> isContentSpecificHeader
    248:255:boolean isEndToEnd(java.lang.String) -> isEndToEnd
    148:149:okhttp3.Response stripBody(okhttp3.Response) -> stripBody
okhttp3.internal.cache.CacheInterceptor$1 -> okhttp3.internal.cache.CacheInterceptor$1:
    168:168:void <init>(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink) -> <init>
    201:206:void close() -> close
    174:180:long read(okio.Buffer,long) -> read
    197:197:okio.Timeout timeout() -> timeout
okhttp3.internal.cache.CacheStrategy -> okhttp3.internal.cache.CacheStrategy:
    57:59:void <init>(okhttp3.Request,okhttp3.Response) -> <init>
    66:100:boolean isCacheable(okhttp3.Response,okhttp3.Request) -> isCacheable
okhttp3.internal.cache.CacheStrategy$Factory -> okhttp3.internal.cache.CacheStrategy$Factory:
    140:163:void <init>(long,okhttp3.Request,okhttp3.Response) -> <init>
    301:308:long cacheResponseAge() -> cacheResponseAge
    272:291:long computeFreshnessLifetime() -> computeFreshnessLifetime
    173:177:okhttp3.internal.cache.CacheStrategy get() -> get
    186:204:okhttp3.internal.cache.CacheStrategy getCandidate() -> getCandidate
    326:326:boolean hasConditions(okhttp3.Request) -> hasConditions
    317:317:boolean isFreshnessLifetimeHeuristic() -> isFreshnessLifetimeHeuristic
okhttp3.internal.connection.ConnectInterceptor -> okhttp3.internal.connection.ConnectInterceptor:
    31:32:void <init>(okhttp3.OkHttpClient) -> <init>
    36:45:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.connection.ConnectionSpecSelector -> okhttp3.internal.connection.ConnectionSpecSelector:
    44:46:void <init>(java.util.List) -> <init>
    57:73:okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket) -> configureSecureSocket
    92:126:boolean connectionFailed(java.io.IOException) -> connectionFailed
    135:136:boolean isFallbackPossible(javax.net.ssl.SSLSocket) -> isFallbackPossible
okhttp3.internal.connection.RealConnection -> okhttp3.internal.connection.RealConnection:
    117:119:void <init>(okhttp3.ConnectionPool,okhttp3.Route) -> <init>
    133:133:void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener) -> connect
    230:244:void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener) -> connectSocket
    285:343:void connectTls(okhttp3.internal.connection.ConnectionSpecSelector) -> connectTls
    209:223:void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener) -> connectTunnel
    361:388:okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl) -> createTunnel
    414:419:okhttp3.Request createTunnelRequest() -> createTunnelRequest
    263:280:void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener) -> establishProtocol
    560:560:okhttp3.Handshake handshake() -> handshake
    428:460:boolean isEligible(okhttp3.Address,okhttp3.Route) -> isEligible
    517:535:boolean isHealthy(boolean) -> isHealthy
    568:568:boolean isMultiplexed() -> isMultiplexed
    350:350:boolean isValid(javax.net.ssl.SSLSession) -> isValid
    484:490:okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation) -> newCodec
    554:556:void onSettings(okhttp3.internal.http2.Http2Connection) -> onSettings
    549:549:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
    503:503:okhttp3.Route route() -> route
    512:512:java.net.Socket socket() -> socket
    469:475:boolean supportsUrl(okhttp3.HttpUrl) -> supportsUrl
    576:583:java.lang.String toString() -> toString
okhttp3.internal.connection.RouteDatabase -> okhttp3.internal.connection.RouteDatabase:
    28:29:void <init>() -> <init>
    38:39:void connected(okhttp3.Route) -> connected
    33:34:void failed(okhttp3.Route) -> failed
    43:43:boolean shouldPostpone(okhttp3.Route) -> shouldPostpone
okhttp3.internal.connection.RouteException -> okhttp3.internal.connection.RouteException:
    32:36:void <clinit>() -> <clinit>
    42:43:void <init>(java.io.IOException) -> <init>
    51:52:void addConnectException(java.io.IOException) -> addConnectException
    56:58:void addSuppressedIfPossible(java.io.IOException,java.io.IOException) -> addSuppressedIfPossible
    47:47:java.io.IOException getLastConnectException() -> getLastConnectException
okhttp3.internal.connection.RouteSelector -> okhttp3.internal.connection.RouteSelector:
    57:63:void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener) -> <init>
    113:119:void connectFailed(okhttp3.Route,java.io.IOException) -> connectFailed
    205:214:java.lang.String getHostString(java.net.InetSocketAddress) -> getHostString
    70:70:boolean hasNext() -> hasNext
    139:139:boolean hasNextProxy() -> hasNextProxy
    74:75:okhttp3.internal.connection.RouteSelector$Selection next() -> next
    144:145:java.net.Proxy nextProxy() -> nextProxy
    156:175:void resetNextInetSocketAddress(java.net.Proxy) -> resetNextInetSocketAddress
    126:134:void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy) -> resetNextProxy
okhttp3.internal.connection.RouteSelector$Selection -> okhttp3.internal.connection.RouteSelector$Selection:
    222:223:void <init>(java.util.List) -> <init>
    238:238:java.util.List getAll() -> getAll
    227:227:boolean hasNext() -> hasNext
    231:232:okhttp3.Route next() -> next
okhttp3.internal.connection.StreamAllocation -> okhttp3.internal.connection.StreamAllocation:
    96:102:void <init>(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.Call,okhttp3.EventListener,java.lang.Object) -> <init>
    469:469:void acquire(okhttp3.internal.connection.RealConnection,boolean) -> acquire
    327:329:okhttp3.internal.http.HttpCodec codec() -> codec
    341:341:okhttp3.internal.connection.RealConnection connection() -> connection
    384:402:java.net.Socket deallocate(boolean,boolean,boolean) -> deallocate
    167:196:okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean) -> findConnection
    135:143:okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean) -> findHealthyConnection
    512:514:boolean hasMoreRoutes() -> hasMoreRoutes
    107:123:okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,boolean) -> newStream
    362:366:void noNewStreams() -> noNewStreams
    347:351:void release() -> release
    478:485:void release(okhttp3.internal.connection.RealConnection) -> release
    498:498:java.net.Socket releaseAndAcquire(okhttp3.internal.connection.RealConnection) -> releaseAndAcquire
    289:291:java.net.Socket releaseIfNoNewStreams() -> releaseIfNoNewStreams
    337:337:okhttp3.Route route() -> route
    333:333:okhttp3.internal.connection.RouteDatabase routeDatabase() -> routeDatabase
    428:455:void streamFailed(java.io.IOException) -> streamFailed
    297:313:void streamFinished(boolean,okhttp3.internal.http.HttpCodec,long,java.io.IOException) -> streamFinished
    518:519:java.lang.String toString() -> toString
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference -> okhttp3.internal.connection.StreamAllocation$StreamAllocationReference:
    530:531:void <init>(okhttp3.internal.connection.StreamAllocation,java.lang.Object) -> <init>
okhttp3.internal.http.BridgeInterceptor -> okhttp3.internal.http.BridgeInterceptor:
    43:44:void <init>(okhttp3.CookieJar) -> <init>
    118:126:java.lang.String cookieHeader(java.util.List) -> cookieHeader
    48:113:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.CallServerInterceptor -> okhttp3.internal.http.CallServerInterceptor:
    36:37:void <init>(boolean) -> <init>
    41:135:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.CallServerInterceptor$CountingSink -> okhttp3.internal.http.CallServerInterceptor$CountingSink:
    145:145:void <init>(okio.Sink) -> <init>
    149:150:void write(okio.Buffer,long) -> write
okhttp3.internal.http.HttpDate -> okhttp3.internal.http.HttpDate:
    37:71:void <clinit>() -> <clinit>
    114:114:java.lang.String format(java.util.Date) -> format
    76:108:java.util.Date parse(java.lang.String) -> parse
okhttp3.internal.http.HttpDate$1 -> okhttp3.internal.http.HttpDate$1:
    38:38:void <init>() -> <init>
    38:38:java.lang.Object initialValue() -> initialValue
    41:43:java.text.DateFormat initialValue() -> initialValue
okhttp3.internal.http.HttpHeaders -> okhttp3.internal.http.HttpHeaders:
    44:44:void <clinit>() -> <clinit>
    50:50:long contentLength(okhttp3.Response) -> contentLength
    54:54:long contentLength(okhttp3.Headers) -> contentLength
    210:224:boolean hasBody(okhttp3.Response) -> hasBody
    264:264:int parseSeconds(java.lang.String,int) -> parseSeconds
    199:204:void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers) -> receiveHeaders
    236:237:int skipUntil(java.lang.String,int,java.lang.String) -> skipUntil
    249:250:int skipWhitespace(java.lang.String,int) -> skipWhitespace
    60:60:long stringToLong(java.lang.String) -> stringToLong
okhttp3.internal.http.HttpMethod -> okhttp3.internal.http.HttpMethod:
    20:24:boolean invalidatesCache(java.lang.String) -> invalidatesCache
    36:36:boolean permitsRequestBody(java.lang.String) -> permitsRequestBody
    45:45:boolean redirectsToGet(java.lang.String) -> redirectsToGet
    40:40:boolean redirectsWithBody(java.lang.String) -> redirectsWithBody
    28:32:boolean requiresRequestBody(java.lang.String) -> requiresRequestBody
okhttp3.internal.http.RealInterceptorChain -> okhttp3.internal.http.RealInterceptorChain:
    52:63:void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int) -> <init>
    109:109:okhttp3.Call call() -> call
    71:71:int connectTimeoutMillis() -> connectTimeoutMillis
    67:67:okhttp3.Connection connection() -> connection
    113:113:okhttp3.EventListener eventListener() -> eventListener
    105:105:okhttp3.internal.http.HttpCodec httpStream() -> httpStream
    121:121:okhttp3.Response proceed(okhttp3.Request) -> proceed
    126:126:okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection) -> proceed
    81:81:int readTimeoutMillis() -> readTimeoutMillis
    117:117:okhttp3.Request request() -> request
    101:101:okhttp3.internal.connection.StreamAllocation streamAllocation() -> streamAllocation
    91:91:int writeTimeoutMillis() -> writeTimeoutMillis
okhttp3.internal.http.RealResponseBody -> okhttp3.internal.http.RealResponseBody:
    33:36:void <init>(java.lang.String,long,okio.BufferedSource) -> <init>
    44:44:long contentLength() -> contentLength
    40:40:okhttp3.MediaType contentType() -> contentType
    48:48:okio.BufferedSource source() -> source
okhttp3.internal.http.RequestLine -> okhttp3.internal.http.RequestLine:
    33:44:java.lang.String get(okhttp3.Request,java.net.Proxy$Type) -> get
    52:52:boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type) -> includeAuthorityInRequestLine
    60:62:java.lang.String requestPath(okhttp3.HttpUrl) -> requestPath
okhttp3.internal.http.RetryAndFollowUpInterceptor -> okhttp3.internal.http.RetryAndFollowUpInterceptor:
    73:75:void <init>(okhttp3.OkHttpClient,boolean) -> <init>
    198:206:okhttp3.Address createAddress(okhttp3.HttpUrl) -> createAddress
    274:273:okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.Route) -> followUpRequest
    106:120:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    94:94:boolean isCanceled() -> isCanceled
    237:256:boolean isRecoverable(java.io.IOException,boolean) -> isRecoverable
    217:229:boolean recover(java.io.IOException,okhttp3.internal.connection.StreamAllocation,boolean,okhttp3.Request) -> recover
    387:396:int retryAfter(okhttp3.Response,int) -> retryAfter
    407:410:boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl) -> sameConnection
    98:98:void setCallStackTrace(java.lang.Object) -> setCallStackTrace
okhttp3.internal.http.StatusLine -> okhttp3.internal.http.StatusLine:
    34:37:void <init>(okhttp3.Protocol,int,java.lang.String) -> <init>
    51:69:okhttp3.internal.http.StatusLine parse(java.lang.String) -> parse
    97:103:java.lang.String toString() -> toString
okhttp3.internal.http1.Http1Codec -> okhttp3.internal.http1.Http1Codec:
    90:94:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink) -> <init>
    98:108:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    268:271:void detachTimeout(okio.ForwardingTimeout) -> detachTimeout
    166:166:void finishRequest() -> finishRequest
    162:162:void flushRequest() -> flushRequest
    231:231:okio.Sink newChunkedSink() -> newChunkedSink
    249:249:okio.Source newChunkedSource(okhttp3.HttpUrl) -> newChunkedSource
    237:237:okio.Sink newFixedLengthSink(long) -> newFixedLengthSink
    243:243:okio.Source newFixedLengthSource(long) -> newFixedLengthSource
    255:255:okio.Source newUnknownLengthSource() -> newUnknownLengthSource
    134:153:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    215:216:java.lang.String readHeaderLine() -> readHeaderLine
    222:227:okhttp3.Headers readHeaders() -> readHeaders
    184:210:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    171:171:void writeRequest(okhttp3.Headers,java.lang.String) -> writeRequest
    128:130:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http1.Http1Codec$AbstractSource -> okhttp3.internal.http1.Http1Codec$AbstractSource:
    352:355:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    352:352:void <init>(okhttp3.internal.http1.Http1Codec,okhttp3.internal.http1.Http1Codec$1) -> <init>
    379:380:void endOfInput(boolean,java.io.IOException) -> endOfInput
    363:370:long read(okio.Buffer,long) -> read
    358:358:okio.Timeout timeout() -> timeout
okhttp3.internal.http1.Http1Codec$ChunkedSink -> okhttp3.internal.http1.Http1Codec$ChunkedSink:
    321:318:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    344:349:void close() -> close
    339:341:void flush() -> flush
    325:325:okio.Timeout timeout() -> timeout
    329:329:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1Codec$ChunkedSource -> okhttp3.internal.http1.Http1Codec$ChunkedSource:
    439:440:void <init>(okhttp3.internal.http1.Http1Codec,okhttp3.HttpUrl) -> <init>
    486:490:void close() -> close
    445:444:long read(okio.Buffer,long) -> read
    465:476:void readChunkSize() -> readChunkSize
okhttp3.internal.http1.Http1Codec$FixedLengthSink -> okhttp3.internal.http1.Http1Codec$FixedLengthSink:
    280:281:void <init>(okhttp3.internal.http1.Http1Codec,long) -> <init>
    305:307:void close() -> close
    300:301:void flush() -> flush
    285:285:okio.Timeout timeout() -> timeout
    289:289:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1Codec$FixedLengthSource -> okhttp3.internal.http1.Http1Codec$FixedLengthSource:
    395:398:void <init>(okhttp3.internal.http1.Http1Codec,long) -> <init>
    422:428:void close() -> close
    404:403:long read(okio.Buffer,long) -> read
okhttp3.internal.http1.Http1Codec$UnknownLengthSource -> okhttp3.internal.http1.Http1Codec$UnknownLengthSource:
    498:498:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    517:521:void close() -> close
    504:503:long read(okio.Buffer,long) -> read
okhttp3.internal.http2.ConnectionShutdownException -> okhttp3.internal.http2.ConnectionShutdownException:
    24:24:void <init>() -> <init>
okhttp3.internal.http2.ErrorCode -> okhttp3.internal.http2.ErrorCode:
    21:19:void <clinit>() -> <clinit>
    45:46:void <init>(java.lang.String,int,int) -> <init>
    50:51:okhttp3.internal.http2.ErrorCode fromHttp2(int) -> fromHttp2
    19:19:okhttp3.internal.http2.ErrorCode valueOf(java.lang.String) -> valueOf
    19:19:okhttp3.internal.http2.ErrorCode[] values() -> values
okhttp3.internal.http2.Header -> okhttp3.internal.http2.Header:
    24:29:void <clinit>() -> <clinit>
    39:39:void <init>(java.lang.String,java.lang.String) -> <init>
    43:43:void <init>(okio.ByteString,java.lang.String) -> <init>
    46:49:void <init>(okio.ByteString,okio.ByteString) -> <init>
    53:56:boolean equals(java.lang.Object) -> equals
    63:64:int hashCode() -> hashCode
    69:69:java.lang.String toString() -> toString
okhttp3.internal.http2.Hpack -> okhttp3.internal.http2.Hpack:
    47:354:void <clinit>() -> <clinit>
    596:599:okio.ByteString checkLowercase(okio.ByteString) -> checkLowercase
    357:363:java.util.Map nameToFirstIndex() -> nameToFirstIndex
okhttp3.internal.http2.Hpack$Reader -> okhttp3.internal.http2.Hpack$Reader:
    131:131:void <init>(int,okio.Source) -> <init>
    134:137:void <init>(int,int,okio.Source) -> <init>
    145:149:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    155:158:void clearDynamicTable() -> clearDynamicTable
    233:233:int dynamicTableIndex(int) -> dynamicTableIndex
    166:174:int evictToRecoverBytes(int) -> evictToRecoverBytes
    213:214:java.util.List getAndResetHeaderList() -> getAndResetHeaderList
    262:267:okio.ByteString getName(int) -> getName
    280:311:void insertIntoDynamicTable(int,okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    275:275:boolean isStaticHeader(int) -> isStaticHeader
    315:315:int readByte() -> readByte
    342:349:okio.ByteString readByteString() -> readByteString
    184:187:void readHeaders() -> readHeaders
    219:225:void readIndexedHeader(int) -> readIndexedHeader
    328:328:int readInt(int,int) -> readInt
    250:252:void readLiteralHeaderWithIncrementalIndexingIndexedName(int) -> readLiteralHeaderWithIncrementalIndexingIndexedName
    256:258:void readLiteralHeaderWithIncrementalIndexingNewName() -> readLiteralHeaderWithIncrementalIndexingNewName
    237:239:void readLiteralHeaderWithoutIndexingIndexedName(int) -> readLiteralHeaderWithoutIndexingIndexedName
    243:245:void readLiteralHeaderWithoutIndexingNewName() -> readLiteralHeaderWithoutIndexingNewName
okhttp3.internal.http2.Hpack$Writer -> okhttp3.internal.http2.Hpack$Writer:
    397:397:void <init>(okio.Buffer) -> <init>
    400:404:void <init>(int,boolean,okio.Buffer) -> <init>
    581:585:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    408:411:void clearDynamicTable() -> clearDynamicTable
    419:428:int evictToRecoverBytes(int) -> evictToRecoverBytes
    434:455:void insertIntoDynamicTable(okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    565:577:void setHeaderTableSizeSetting(int) -> setHeaderTableSizeSetting
    552:560:void writeByteString(okio.ByteString) -> writeByteString
    461:525:void writeHeaders(java.util.List) -> writeHeaders
    534:548:void writeInt(int,int,int) -> writeInt
okhttp3.internal.http2.Http2 -> okhttp3.internal.http2.Http2:
    25:101:void <clinit>() -> <clinit>
    105:105:void <init>() -> <init>
    158:156:java.lang.String formatFlags(byte,byte) -> formatFlags
    135:137:java.lang.String frameLog(boolean,int,int,byte,byte) -> frameLog
    109:109:java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]) -> illegalArgument
    113:113:java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> ioException
okhttp3.internal.http2.Http2Codec -> okhttp3.internal.http2.Http2Codec:
    55:78:void <clinit>() -> <clinit>
    95:99:void <init>(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http2.Http2Connection) -> <init>
    103:103:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    121:121:void finishRequest() -> finishRequest
    117:117:void flushRequest() -> flushRequest
    134:148:java.util.List http2HeadersList(okhttp3.Request) -> http2HeadersList
    189:193:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    157:179:okhttp3.Response$Builder readHttp2HeadersList(java.util.List) -> readHttp2HeadersList
    125:127:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    107:113:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http2.Http2Codec$StreamFinishingSource -> okhttp3.internal.http2.Http2Codec$StreamFinishingSource:
    204:202:void <init>(okhttp3.internal.http2.Http2Codec,okio.Source) -> <init>
    222:223:void close() -> close
    227:229:void endOfInput(java.io.IOException) -> endOfInput
    210:217:long read(okio.Buffer,long) -> read
okhttp3.internal.http2.Http2Connection -> okhttp3.internal.http2.Http2Connection:
    80:82:void <clinit>() -> <clinit>
    137:174:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> <init>
    60:60:void access$000(okhttp3.internal.http2.Http2Connection) -> access$000
    60:60:java.util.concurrent.ExecutorService access$100() -> access$100
    60:60:java.util.concurrent.ScheduledExecutorService access$200(okhttp3.internal.http2.Http2Connection) -> access$200
    60:60:boolean access$302(okhttp3.internal.http2.Http2Connection,boolean) -> access$302
    319:320:void addBytesToWriteWindow(long) -> addBytesToWriteWindow
    440:440:void close() -> close
    447:458:void close(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode) -> close
    493:493:void failConnection() -> failConnection
    411:411:void flush() -> flush
    190:190:okhttp3.internal.http2.Http2Stream getStream(int) -> getStream
    536:536:boolean isShutdown() -> isShutdown
    200:200:int maxConcurrentStreams() -> maxConcurrentStreams
    222:222:okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean) -> newStream
    233:256:okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean) -> newStream
    886:889:void pushDataLater(int,okio.BufferedSource,int,boolean) -> pushDataLater
    861:861:void pushHeadersLater(int,java.util.List,boolean) -> pushHeadersLater
    831:837:void pushRequestLater(int,java.util.List) -> pushRequestLater
    907:907:void pushResetLater(int,okhttp3.internal.http2.ErrorCode) -> pushResetLater
    194:196:okhttp3.internal.http2.Http2Stream removeStream(int) -> removeStream
    420:432:void shutdown(okhttp3.internal.http2.ErrorCode) -> shutdown
    503:503:void start() -> start
    512:519:void start(boolean) -> start
    285:308:void writeData(int,boolean,okio.Buffer,long) -> writeData
    380:393:void writePing(boolean,int,int) -> writePing
    340:340:void writeSynReset(int,okhttp3.internal.http2.ErrorCode) -> writeSynReset
    325:325:void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode) -> writeSynResetLater
    345:345:void writeWindowUpdateLater(int,long) -> writeWindowUpdateLater
okhttp3.internal.http2.Http2Connection$1 -> okhttp3.internal.http2.Http2Connection$1:
    325:325:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode) -> <init>
    328:330:void execute() -> execute
okhttp3.internal.http2.Http2Connection$2 -> okhttp3.internal.http2.Http2Connection$2:
    346:346:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,long) -> <init>
    349:351:void execute() -> execute
okhttp3.internal.http2.Http2Connection$3 -> okhttp3.internal.http2.Http2Connection$3:
    839:839:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List) -> <init>
    841:847:void execute() -> execute
okhttp3.internal.http2.Http2Connection$4 -> okhttp3.internal.http2.Http2Connection$4:
    861:861:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List,boolean) -> <init>
    863:869:void execute() -> execute
okhttp3.internal.http2.Http2Connection$5 -> okhttp3.internal.http2.Http2Connection$5:
    890:890:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean) -> <init>
    893:898:void execute() -> execute
okhttp3.internal.http2.Http2Connection$6 -> okhttp3.internal.http2.Http2Connection$6:
    907:907:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode) -> <init>
    909:912:void execute() -> execute
okhttp3.internal.http2.Http2Connection$Builder -> okhttp3.internal.http2.Http2Connection$Builder:
    553:554:void <init>(boolean) -> <init>
    587:587:okhttp3.internal.http2.Http2Connection build() -> build
    572:572:okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener) -> listener
    582:582:okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int) -> pingIntervalMillis
    564:567:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink) -> socket
okhttp3.internal.http2.Http2Connection$Listener -> okhttp3.internal.http2.Http2Connection$Listener:
    919:919:void <clinit>() -> <clinit>
    918:918:void <init>() -> <init>
okhttp3.internal.http2.Http2Connection$Listener$1 -> okhttp3.internal.http2.Http2Connection$Listener$1:
    919:919:void <init>() -> <init>
    921:921:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
okhttp3.internal.http2.Http2Connection$PingRunnable -> okhttp3.internal.http2.Http2Connection$PingRunnable:
    365:369:void <init>(okhttp3.internal.http2.Http2Connection,boolean,int,int) -> <init>
    373:373:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable -> okhttp3.internal.http2.Http2Connection$ReaderRunnable:
    598:600:void <init>(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader) -> <init>
    736:736:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> applyAndAckSettings
    626:638:void data(boolean,int,okio.BufferedSource,int) -> data
    604:620:void execute() -> execute
    771:779:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> goAway
    644:682:void headers(boolean,int,int,java.util.List) -> headers
    756:763:void ping(boolean,int,int) -> ping
    813:813:void pushPromise(int,int,java.util.List) -> pushPromise
    690:696:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    703:724:void settings(boolean,okhttp3.internal.http2.Settings) -> settings
    792:801:void windowUpdate(int,long) -> windowUpdate
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$1:
    667:667:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Http2Stream) -> <init>
    670:674:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$2:
    719:719:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[]) -> <init>
    721:721:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$3:
    736:736:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Settings) -> <init>
    739:741:void execute() -> execute
okhttp3.internal.http2.Http2Reader -> okhttp3.internal.http2.Http2Reader:
    60:60:void <clinit>() -> <clinit>
    70:74:void <init>(okio.BufferedSource,boolean) -> <init>
    342:342:void close() -> close
    408:408:int lengthWithoutPadding(int,byte,short) -> lengthWithoutPadding
    95:113:boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler) -> nextFrame
    78:88:void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler) -> readConnectionPreface
    211:202:void readData(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readData
    319:317:void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readGoAway
    189:197:java.util.List readHeaderBlock(int,short,byte,int) -> readHeaderBlock
    173:169:void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readHeaders
    399:401:int readMedium(okio.BufferedSource) -> readMedium
    309:307:void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPing
    222:220:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPriority
    226:230:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int) -> readPriority
    297:295:void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPushPromise
    237:235:void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readRstStream
    250:247:void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readSettings
    336:335:void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readWindowUpdate
okhttp3.internal.http2.Http2Reader$ContinuationSource -> okhttp3.internal.http2.Http2Reader$ContinuationSource:
    359:360:void <init>(okio.BufferedSource) -> <init>
    364:374:long read(okio.Buffer,long) -> read
    386:393:void readContinuationHeader() -> readContinuationHeader
    379:379:okio.Timeout timeout() -> timeout
okhttp3.internal.http2.Http2Stream -> okhttp3.internal.http2.Http2Stream:
    76:77:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,java.util.List) -> <init>
    557:558:void addBytesToWriteWindow(long) -> addBytesToWriteWindow
    445:448:void cancelStreamIfNecessary() -> cancelStreamIfNecessary
    562:563:void checkOutNotClosed() -> checkOutNotClosed
    223:226:void close(okhttp3.internal.http2.ErrorCode) -> close
    243:252:boolean closeInternal(okhttp3.internal.http2.ErrorCode) -> closeInternal
    234:237:void closeLater(okhttp3.internal.http2.ErrorCode) -> closeLater
    91:91:int getId() -> getId
    210:214:okio.Sink getSink() -> getSink
    200:200:okio.Source getSource() -> getSource
    119:120:boolean isLocallyInitiated() -> isLocallyInitiated
    106:114:boolean isOpen() -> isOpen
    191:191:okio.Timeout readTimeout() -> readTimeout
    281:281:void receiveData(okio.BufferedSource,int) -> receiveData
    287:291:void receiveFin() -> receiveFin
    260:273:void receiveHeaders(java.util.List) -> receiveHeaders
    298:302:void receiveRstStream(okhttp3.internal.http2.ErrorCode) -> receiveRstStream
    137:138:java.util.List takeResponseHeaders() -> takeResponseHeaders
    577:579:void waitForIo() -> waitForIo
    195:195:okio.Timeout writeTimeout() -> writeTimeout
okhttp3.internal.http2.Http2Stream$FramingSink -> okhttp3.internal.http2.Http2Stream$FramingSink:
    461:468:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    531:533:void close() -> close
    491:504:void emitFrame(boolean) -> emitFrame
    516:518:void flush() -> flush
    526:526:okio.Timeout timeout() -> timeout
    479:481:void write(okio.Buffer,long) -> write
okhttp3.internal.http2.Http2Stream$FramingSource -> okhttp3.internal.http2.Http2Stream$FramingSource:
    328:329:void <init>(okhttp3.internal.http2.Http2Stream,long) -> <init>
    432:433:void checkNotClosed() -> checkNotClosed
    423:427:void close() -> close
    336:333:long read(okio.Buffer,long) -> read
    384:387:void receive(okio.BufferedSource,long) -> receive
    419:419:okio.Timeout timeout() -> timeout
    368:374:void waitUntilReadable() -> waitUntilReadable
okhttp3.internal.http2.Http2Stream$StreamTimeout -> okhttp3.internal.http2.Http2Stream$StreamTimeout:
    587:587:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    601:601:void exitAndThrowIfTimedOut() -> exitAndThrowIfTimedOut
    593:595:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    589:589:void timedOut() -> timedOut
okhttp3.internal.http2.Http2Writer -> okhttp3.internal.http2.Http2Writer:
    47:47:void <clinit>() -> <clinit>
    57:62:void <init>(okio.BufferedSink,boolean) -> <init>
    77:77:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> applyAndAckSettings
    278:280:void close() -> close
    66:66:void connectionPreface() -> connectionPreface
    170:170:void data(boolean,int,okio.Buffer,int) -> data
    178:180:void dataFrame(int,byte,okio.Buffer,int) -> dataFrame
    120:120:void flush() -> flush
    266:268:void frameHeader(int,int,byte,byte) -> frameHeader
    232:232:void goAway(int,okhttp3.internal.http2.ErrorCode,byte[]) -> goAway
    298:298:void headers(boolean,int,java.util.List) -> headers
    157:157:int maxDataLength() -> maxDataLength
    211:211:void ping(boolean,int,int) -> ping
    105:105:void pushPromise(int,int,java.util.List) -> pushPromise
    144:144:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    186:186:void settings(okhttp3.internal.http2.Settings) -> settings
    126:126:void synStream(boolean,int,int,java.util.List) -> synStream
    252:252:void windowUpdate(int,long) -> windowUpdate
    290:293:void writeContinuationFrames(int,long) -> writeContinuationFrames
    283:285:void writeMedium(okio.BufferedSink,int) -> writeMedium
okhttp3.internal.http2.Huffman -> okhttp3.internal.http2.Huffman:
    37:79:void <clinit>() -> <clinit>
    87:88:void <init>() -> <init>
    173:192:void addCode(int,int,byte) -> addCode
    167:168:void buildTree() -> buildTree
    129:163:byte[] decode(byte[]) -> decode
    95:113:void encode(okio.ByteString,okio.BufferedSink) -> encode
    120:122:int encodedLength(okio.ByteString) -> encodedLength
    82:82:okhttp3.internal.http2.Huffman get() -> get
okhttp3.internal.http2.Huffman$Node -> okhttp3.internal.http2.Huffman$Node:
    208:211:void <init>() -> <init>
    220:224:void <init>(int,int) -> <init>
okhttp3.internal.http2.PushObserver -> okhttp3.internal.http2.PushObserver:
    76:76:void <clinit>() -> <clinit>
okhttp3.internal.http2.PushObserver$1 -> okhttp3.internal.http2.PushObserver$1:
    76:76:void <init>() -> <init>
    88:88:boolean onData(int,okio.BufferedSource,int,boolean) -> onData
okhttp3.internal.http2.Settings -> okhttp3.internal.http2.Settings:
    24:51:void <init>() -> <init>
    54:55:void clear() -> clear
    77:77:int get(int) -> get
    88:88:int getHeaderTableSize() -> getHeaderTableSize
    114:114:int getInitialWindowSize() -> getInitialWindowSize
    99:99:int getMaxConcurrentStreams(int) -> getMaxConcurrentStreams
    104:104:int getMaxFrameSize(int) -> getMaxFrameSize
    72:72:boolean isSet(int) -> isSet
    123:124:void merge(okhttp3.internal.http2.Settings) -> merge
    59:65:okhttp3.internal.http2.Settings set(int,int) -> set
    82:82:int size() -> size
okhttp3.internal.http2.StreamResetException -> okhttp3.internal.http2.StreamResetException:
    25:26:void <init>(okhttp3.internal.http2.ErrorCode) -> <init>
okhttp3.internal.platform.AndroidPlatform -> okhttp3.internal.platform.AndroidPlatform:
    60:65:void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod) -> <init>
    194:198:boolean api23IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> api23IsCleartextTrafficPermitted
    183:187:boolean api24IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> api24IsCleartextTrafficPermitted
    221:228:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    237:258:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    273:278:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    120:127:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    71:74:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    132:136:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    156:156:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    169:174:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    141:149:void log(int,java.lang.String,java.lang.Throwable) -> log
    160:163:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    208:212:boolean supportsAlpn() -> supportsAlpn
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner -> okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner:
    291:293:void <init>(java.lang.Object,java.lang.reflect.Method) -> <init>
    300:306:java.util.List clean(java.util.List,java.lang.String) -> clean
    313:313:boolean equals(java.lang.Object) -> equals
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex -> okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex:
    393:395:void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method) -> <init>
    417:422:boolean equals(java.lang.Object) -> equals
    400:406:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    427:427:int hashCode() -> hashCode
okhttp3.internal.platform.AndroidPlatform$CloseGuard -> okhttp3.internal.platform.AndroidPlatform$CloseGuard:
    331:334:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    338:341:java.lang.Object createAndOpen(java.lang.String) -> createAndOpen
    367:376:okhttp3.internal.platform.AndroidPlatform$CloseGuard get() -> get
    353:353:boolean warnIfOpen(java.lang.Object) -> warnIfOpen
okhttp3.internal.platform.ConscryptPlatform -> okhttp3.internal.platform.ConscryptPlatform:
    36:36:void <init>() -> <init>
    100:107:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    66:77:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    40:40:java.security.Provider getProvider() -> getProvider
    91:93:javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    82:85:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.Jdk9Platform -> okhttp3.internal.platform.Jdk9Platform:
    37:39:void <init>(java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    88:92:okhttp3.internal.platform.Jdk9Platform buildIfSupported() -> buildIfSupported
    46:55:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    62:72:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.JdkWithJettyBootPlatform -> okhttp3.internal.platform.JdkWithJettyBootPlatform:
    41:46:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class) -> <init>
    64:66:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    89:96:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    51:58:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    72:81:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider -> okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider:
    116:117:void <init>(java.util.List) -> <init>
    121:148:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
okhttp3.internal.platform.OptionalMethod -> okhttp3.internal.platform.OptionalMethod:
    45:48:void <init>(java.lang.Class,java.lang.String,java.lang.Class[]) -> <init>
    148:152:java.lang.reflect.Method getMethod(java.lang.Class) -> getMethod
    164:165:java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getPublicMethod
    106:108:java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
    66:71:java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[]) -> invokeOptional
    86:94:java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> invokeOptionalWithoutCheckedException
    129:137:java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> invokeWithoutCheckedException
    55:55:boolean isSupported(java.lang.Object) -> isSupported
okhttp3.internal.platform.Platform -> okhttp3.internal.platform.Platform:
    78:81:void <clinit>() -> <clinit>
    77:77:void <init>() -> <init>
    162:166:java.util.List alpnProtocolNames(java.util.List) -> alpnProtocolNames
    172:172:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    276:276:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    234:241:byte[] concatLengthPrefixed(java.util.List) -> concatLengthPrefixed
    129:129:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    199:226:okhttp3.internal.platform.Platform findPlatform() -> findPlatform
    84:84:okhttp3.internal.platform.Platform get() -> get
    269:271:javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    147:148:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    188:194:boolean isConscryptPreferred() -> isConscryptPreferred
    133:134:void log(int,java.lang.String,java.lang.Throwable) -> log
    155:158:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
okhttp3.internal.publicsuffix.PublicSuffixDatabase -> okhttp3.internal.publicsuffix.PublicSuffixDatabase:
    39:45:void <clinit>() -> <clinit>
    36:51:void <init>() -> <init>
    196:271:java.lang.String binarySearchBytes(byte[],byte[][],int) -> binarySearchBytes
    109:123:java.lang.String[] findMatchingRule(java.lang.String[]) -> findMatchingRule
    61:61:okhttp3.internal.publicsuffix.PublicSuffixDatabase get() -> get
    81:78:java.lang.String getEffectiveTldPlusOne(java.lang.String) -> getEffectiveTldPlusOne
    309:322:void readTheList() -> readTheList
    289:300:void readTheListUninterruptibly() -> readTheListUninterruptibly
okhttp3.internal.tls.BasicCertificateChainCleaner -> okhttp3.internal.tls.BasicCertificateChainCleaner:
    43:44:void <init>(okhttp3.internal.tls.TrustRootIndex) -> <init>
    56:101:java.util.List clean(java.util.List,java.lang.String) -> clean
    121:122:boolean equals(java.lang.Object) -> equals
    116:116:int hashCode() -> hashCode
    106:108:boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> verifySignature
okhttp3.internal.tls.BasicTrustRootIndex -> okhttp3.internal.tls.BasicTrustRootIndex:
    30:39:void <init>(java.security.cert.X509Certificate[]) -> <init>
    62:63:boolean equals(java.lang.Object) -> equals
    44:51:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    68:68:int hashCode() -> hashCode
okhttp3.internal.tls.CertificateChainCleaner -> okhttp3.internal.tls.CertificateChainCleaner:
    36:36:void <init>() -> <init>
    41:41:okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager) -> get
okhttp3.internal.tls.OkHostnameVerifier -> okhttp3.internal.tls.OkHostnameVerifier:
    37:37:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    85:89:java.util.List allSubjectAltNames(java.security.cert.X509Certificate) -> allSubjectAltNames
    94:118:java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int) -> getSubjectAltNames
    48:49:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    56:58:boolean verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    74:77:boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate) -> verifyHostname
    132:208:boolean verifyHostname(java.lang.String,java.lang.String) -> verifyHostname
    63:65:boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate) -> verifyIpAddress
okio.AsyncTimeout -> okio.AsyncTimeout:
    50:51:void <clinit>() -> <clinit>
    41:41:void <init>() -> <init>
    342:367:okio.AsyncTimeout awaitTimeout() -> awaitTimeout
    128:137:boolean cancelScheduledTimeout(okio.AsyncTimeout) -> cancelScheduledTimeout
    73:73:void enter() -> enter
    120:122:boolean exit() -> exit
    274:275:void exit(boolean) -> exit
    284:285:java.io.IOException exit(java.io.IOException) -> exit
    294:296:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    145:145:long remainingNanos(long) -> remainingNanos
    86:101:void scheduleTimeout(okio.AsyncTimeout,long,boolean) -> scheduleTimeout
    160:160:okio.Sink sink(okio.Sink) -> sink
    232:232:okio.Source source(okio.Source) -> source
okio.AsyncTimeout$1 -> okio.AsyncTimeout$1:
    160:160:void <init>(okio.AsyncTimeout,okio.Sink) -> <init>
    206:213:void close() -> close
    193:200:void flush() -> flush
    218:218:okio.Timeout timeout() -> timeout
    222:222:java.lang.String toString() -> toString
    162:186:void write(okio.Buffer,long) -> write
okio.AsyncTimeout$2 -> okio.AsyncTimeout$2:
    232:232:void <init>(okio.AsyncTimeout,okio.Source) -> <init>
    250:255:void close() -> close
    235:243:long read(okio.Buffer,long) -> read
    260:260:okio.Timeout timeout() -> timeout
    264:264:java.lang.String toString() -> toString
okio.AsyncTimeout$Watchdog -> okio.AsyncTimeout$Watchdog:
    303:304:void <init>() -> <init>
    311:323:void run() -> run
okio.Base64 -> okio.Base64:
    110:117:void <clinit>() -> <clinit>
    125:125:java.lang.String encode(byte[]) -> encode
    133:159:java.lang.String encode(byte[],byte[]) -> encode
okio.Buffer -> okio.Buffer:
    55:55:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    840:842:void clear() -> clear
    54:54:java.lang.Object clone() -> clone
    1724:1732:okio.Buffer clone() -> clone
    267:273:long completeSegmentByteCount() -> completeSegmentByteCount
    175:174:okio.Buffer copyTo(okio.Buffer,long,long) -> copyTo
    54:54:okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    1670:1694:boolean equals(java.lang.Object) -> equals
    105:105:boolean exhausted() -> exhausted
    302:313:byte getByte(long) -> getByte
    1702:1710:int hashCode() -> hashCode
    1323:1323:long indexOf(byte) -> indexOf
    1340:1337:long indexOf(byte,long,long) -> indexOf
    1527:1527:boolean rangeEquals(long,okio.ByteString) -> rangeEquals
    1532:1540:boolean rangeEquals(long,okio.ByteString,int,int) -> rangeEquals
    798:810:int read(byte[],int,int) -> read
    817:828:int read(java.nio.ByteBuffer) -> read
    1316:1314:long read(okio.Buffer,long) -> read
    280:280:byte readByte() -> readByte
    767:769:byte[] readByteArray() -> readByteArray
    774:776:byte[] readByteArray(long) -> readByteArray
    540:540:okio.ByteString readByteString() -> readByteString
    544:544:okio.ByteString readByteString(long) -> readByteString
    790:792:void readFully(byte[]) -> readFully
    484:484:long readHexadecimalUnsignedLong() -> readHexadecimalUnsignedLong
    348:348:int readInt() -> readInt
    418:418:int readIntLe() -> readIntLe
    319:319:short readShort() -> readShort
    414:414:short readShortLe() -> readShortLe
    614:616:java.lang.String readString(java.nio.charset.Charset) -> readString
    621:622:java.lang.String readString(long,java.nio.charset.Charset) -> readString
    602:604:java.lang.String readUtf8() -> readUtf8
    609:609:java.lang.String readUtf8(long) -> readUtf8
    676:685:java.lang.String readUtf8Line(long) -> readUtf8Line
    657:657:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    663:661:java.lang.String readUtf8LineStrict(long) -> readUtf8LineStrict
    109:109:void require(long) -> require
    67:67:long size() -> size
    849:849:void skip(long) -> skip
    1738:1739:okio.ByteString snapshot() -> snapshot
    1748:1749:okio.ByteString snapshot(int) -> snapshot
    1586:1586:okio.Timeout timeout() -> timeout
    1719:1719:java.lang.String toString() -> toString
    1210:1208:okio.Segment writableSegment(int) -> writableSegment
    54:54:okio.BufferedSink write(okio.ByteString) -> write
    54:54:okio.BufferedSink write(byte[]) -> write
    54:54:okio.BufferedSink write(byte[],int,int) -> write
    866:865:okio.Buffer write(okio.ByteString) -> write
    1009:1008:okio.Buffer write(byte[]) -> write
    1014:1013:okio.Buffer write(byte[],int,int) -> write
    1034:1032:int write(java.nio.ByteBuffer) -> write
    1275:1273:void write(okio.Buffer,long) -> write
    1053:1051:long writeAll(okio.Source) -> writeAll
    54:54:okio.BufferedSink writeByte(int) -> writeByte
    1069:1071:okio.Buffer writeByte(int) -> writeByte
    54:54:okio.BufferedSink writeDecimalLong(long) -> writeDecimalLong
    1131:1180:okio.Buffer writeDecimalLong(long) -> writeDecimalLong
    54:54:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    1187:1199:okio.Buffer writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    54:54:okio.BufferedSink writeInt(int) -> writeInt
    1091:1099:okio.Buffer writeInt(int) -> writeInt
    54:54:okio.BufferedSink writeShort(int) -> writeShort
    1076:1082:okio.Buffer writeShort(int) -> writeShort
    987:987:okio.Buffer writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    997:992:okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    54:54:okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    871:871:okio.Buffer writeUtf8(java.lang.String) -> writeUtf8
    880:875:okio.Buffer writeUtf8(java.lang.String,int,int) -> writeUtf8
    953:980:okio.Buffer writeUtf8CodePoint(int) -> writeUtf8CodePoint
okio.ByteString -> okio.ByteString:
    53:58:void <clinit>() -> <clinit>
    64:65:void <init>(byte[]) -> <init>
    131:131:java.lang.String base64() -> base64
    513:524:int codePointIndexToCharIndex(java.lang.String,int) -> codePointIndexToCharIndex
    52:52:int compareTo(java.lang.Object) -> compareTo
    473:477:int compareTo(okio.ByteString) -> compareTo
    221:220:okio.ByteString decodeHex(java.lang.String) -> decodeHex
    236:236:int decodeHexDigit(char) -> decodeHexDigit
    156:158:okio.ByteString digest(java.lang.String) -> digest
    100:99:okio.ByteString encodeUtf8(java.lang.String) -> encodeUtf8
    462:464:boolean equals(java.lang.Object) -> equals
    340:340:byte getByte(int) -> getByte
    468:469:int hashCode() -> hashCode
    209:215:java.lang.String hex() -> hex
    73:72:okio.ByteString of(byte[]) -> of
    386:386:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    395:397:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    141:141:okio.ByteString sha1() -> sha1
    146:146:okio.ByteString sha256() -> sha256
    347:347:int size() -> size
    401:401:boolean startsWith(okio.ByteString) -> startsWith
    322:321:okio.ByteString substring(int,int) -> substring
    264:277:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    354:354:byte[] toByteArray() -> toByteArray
    490:509:java.lang.String toString() -> toString
    114:116:java.lang.String utf8() -> utf8
    377:377:void write(okio.Buffer) -> write
okio.ForwardingSink -> okio.ForwardingSink:
    24:25:void <init>(okio.Sink) -> <init>
    47:47:void close() -> close
    39:39:void flush() -> flush
    43:43:okio.Timeout timeout() -> timeout
    51:51:java.lang.String toString() -> toString
    35:35:void write(okio.Buffer,long) -> write
okio.ForwardingSource -> okio.ForwardingSource:
    24:25:void <init>(okio.Source) -> <init>
    43:43:void close() -> close
    31:31:okio.Source delegate() -> delegate
    39:39:okio.Timeout timeout() -> timeout
    47:47:java.lang.String toString() -> toString
okio.ForwardingTimeout -> okio.ForwardingTimeout:
    25:26:void <init>(okio.Timeout) -> <init>
    66:66:okio.Timeout clearDeadline() -> clearDeadline
    62:62:okio.Timeout clearTimeout() -> clearTimeout
    54:54:long deadlineNanoTime() -> deadlineNanoTime
    58:58:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    32:32:okio.Timeout delegate() -> delegate
    50:50:boolean hasDeadline() -> hasDeadline
    37:36:okio.ForwardingTimeout setDelegate(okio.Timeout) -> setDelegate
    70:70:void throwIfReached() -> throwIfReached
    42:42:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
okio.GzipSource -> okio.GzipSource:
    60:61:void <init>(okio.Source) -> <init>
    205:205:void checkEqual(java.lang.String,int,int) -> checkEqual
    182:182:void close() -> close
    114:164:void consumeHeader() -> consumeHeader
    173:174:void consumeTrailer() -> consumeTrailer
    72:68:long read(okio.Buffer,long) -> read
    178:178:okio.Timeout timeout() -> timeout
    188:194:void updateCrc(okio.Buffer,long,long) -> updateCrc
okio.InflaterSource -> okio.InflaterSource:
    48:49:void <init>(okio.BufferedSource,java.util.zip.Inflater) -> <init>
    124:127:void close() -> close
    58:57:long read(okio.Buffer,long) -> read
    96:99:boolean refill() -> refill
    113:116:void releaseInflatedBytes() -> releaseInflatedBytes
    120:120:okio.Timeout timeout() -> timeout
okio.Okio -> okio.Okio:
    40:40:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    51:51:okio.BufferedSource buffer(okio.Source) -> buffer
    60:60:okio.BufferedSink buffer(okio.Sink) -> buffer
    262:263:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    72:69:okio.Sink sink(java.io.OutputStream,okio.Timeout) -> sink
    117:116:okio.Sink sink(java.net.Socket) -> sink
    125:125:okio.Source source(java.io.InputStream) -> source
    132:129:okio.Source source(java.io.InputStream,okio.Timeout) -> source
    168:167:okio.Source source(java.io.File) -> source
    223:222:okio.Source source(java.net.Socket) -> source
    230:230:okio.AsyncTimeout timeout(java.net.Socket) -> timeout
okio.Okio$1 -> okio.Okio$1:
    72:72:void <init>(okio.Timeout,java.io.OutputStream) -> <init>
    97:97:void close() -> close
    93:93:void flush() -> flush
    101:101:okio.Timeout timeout() -> timeout
    105:105:java.lang.String toString() -> toString
    74:87:void write(okio.Buffer,long) -> write
okio.Okio$2 -> okio.Okio$2:
    132:132:void <init>(okio.Timeout,java.io.InputStream) -> <init>
    152:152:void close() -> close
    137:134:long read(okio.Buffer,long) -> read
    156:156:okio.Timeout timeout() -> timeout
    160:160:java.lang.String toString() -> toString
okio.Okio$4 -> okio.Okio$4:
    230:230:void <init>(java.net.Socket) -> <init>
    232:234:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    241:243:void timedOut() -> timedOut
okio.RealBufferedSink -> okio.RealBufferedSink:
    29:30:void <init>(okio.Sink) -> <init>
    35:35:okio.Buffer buffer() -> buffer
    234:254:void close() -> close
    177:177:okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    222:222:void flush() -> flush
    230:230:boolean isOpen() -> isOpen
    258:258:okio.Timeout timeout() -> timeout
    262:262:java.lang.String toString() -> toString
    40:40:void write(okio.Buffer,long) -> write
    46:46:okio.BufferedSink write(okio.ByteString) -> write
    84:84:okio.BufferedSink write(byte[]) -> write
    90:90:okio.BufferedSink write(byte[],int,int) -> write
    96:96:int write(java.nio.ByteBuffer) -> write
<<<<<<< HEAD
=======
    105:103:long writeAll(okio.Source) -> writeAll
>>>>>>> rename package name,fix action event info list same time crash
    123:123:okio.BufferedSink writeByte(int) -> writeByte
    165:165:okio.BufferedSink writeDecimalLong(long) -> writeDecimalLong
    171:171:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    141:141:okio.BufferedSink writeInt(int) -> writeInt
    129:129:okio.BufferedSink writeShort(int) -> writeShort
    52:52:okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
okio.RealBufferedSource -> okio.RealBufferedSource:
    32:33:void <init>(okio.Source) -> <init>
    38:38:okio.Buffer buffer() -> buffer
    467:470:void close() -> close
    56:56:boolean exhausted() -> exhausted
    334:334:long indexOf(byte) -> indexOf
    342:342:long indexOf(byte,long,long) -> indexOf
    463:463:boolean isOpen() -> isOpen
    402:402:boolean rangeEquals(long,okio.ByteString) -> rangeEquals
    408:408:boolean rangeEquals(long,okio.ByteString,int,int) -> rangeEquals
    44:42:long read(okio.Buffer,long) -> read
    150:155:int read(java.nio.ByteBuffer) -> read
    74:75:byte readByte() -> readByte
    113:114:byte[] readByteArray(long) -> readByteArray
    84:85:okio.ByteString readByteString(long) -> readByteString
    123:132:void readFully(byte[]) -> readFully
    304:318:long readHexadecimalUnsignedLong() -> readHexadecimalUnsignedLong
    266:267:int readInt() -> readInt
    271:272:int readIntLe() -> readIntLe
    256:257:short readShort() -> readShort
    261:262:short readShortLe() -> readShortLe
    200:198:java.lang.String readString(java.nio.charset.Charset) -> readString
    221:221:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    227:225:java.lang.String readUtf8LineStrict(long) -> readUtf8LineStrict
    66:65:boolean request(long) -> request
    61:61:void require(long) -> require
    322:322:void skip(long) -> skip
    474:474:okio.Timeout timeout() -> timeout
    478:478:java.lang.String toString() -> toString
okio.Segment -> okio.Segment:
    62:65:void <init>() -> <init>
    68:73:void <init>(byte[],int,int,boolean,boolean) -> <init>
    151:151:void compact() -> compact
    96:100:okio.Segment pop() -> pop
    109:112:okio.Segment push(okio.Segment) -> push
    82:83:okio.Segment sharedCopy() -> sharedCopy
    125:125:okio.Segment split(int) -> split
    163:163:void writeTo(okio.Segment,int) -> writeTo
okio.SegmentPool -> okio.SegmentPool:
    35:35:void <init>() -> <init>
    52:52:void recycle(okio.Segment) -> recycle
    39:47:okio.Segment take() -> take
okio.SegmentedByteString -> okio.SegmentedByteString:
    57:76:void <init>(okio.Buffer,int) -> <init>
    98:98:java.lang.String base64() -> base64
    266:268:boolean equals(java.lang.Object) -> equals
    146:150:byte getByte(int) -> getByte
    272:288:int hashCode() -> hashCode
    102:102:java.lang.String hex() -> hex
    211:219:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    228:239:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    156:156:int segment(int) -> segment
    118:118:okio.ByteString sha1() -> sha1
    122:122:okio.ByteString sha256() -> sha256
    161:161:int size() -> size
    142:142:okio.ByteString substring(int,int) -> substring
    106:106:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    165:170:byte[] toByteArray() -> toByteArray
    257:257:okio.ByteString toByteString() -> toByteString
    292:292:java.lang.String toString() -> toString
    90:90:java.lang.String utf8() -> utf8
    194:206:void write(okio.Buffer) -> write
okio.Timeout -> okio.Timeout:
    48:48:void <clinit>() -> <clinit>
    69:69:void <init>() -> <init>
    134:134:okio.Timeout clearDeadline() -> clearDeadline
    128:128:okio.Timeout clearTimeout() -> clearTimeout
    104:104:long deadlineNanoTime() -> deadlineNanoTime
    114:115:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    94:94:boolean hasDeadline() -> hasDeadline
    144:145:void throwIfReached() -> throwIfReached
    83:81:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    89:89:long timeoutNanos() -> timeoutNanos
okio.Timeout$1 -> okio.Timeout$1:
    48:48:void <init>() -> <init>
okio.Util -> okio.Util:
    22:22:void <clinit>() -> <clinit>
    76:76:boolean arrayRangeEquals(byte[],int,byte[],int,int) -> arrayRangeEquals
    29:30:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    65:65:void sneakyRethrow(java.lang.Throwable) -> sneakyRethrow
    70:70:void sneakyThrow2(java.lang.Throwable) -> sneakyThrow2
org.apache.commons.io.FileUtils -> org.apache.commons.io.FileUtils:
    98:178:void <clinit>() -> <clinit>
    388:401:java.lang.String byteCountToDisplaySize(java.math.BigInteger) -> byteCountToDisplaySize
    422:422:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    2710:2711:void checkDirectory(java.io.File) -> checkDirectory
    1382:1377:void checkFileRequirements(java.io.File,java.io.File) -> checkFileRequirements
    1716:1728:void cleanDirectory(java.io.File) -> cleanDirectory
    1246:1246:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    1346:1348:void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean) -> copyDirectory
    1178:1176:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    1612:1623:void deleteDirectory(java.io.File) -> deleteDirectory
    1647:1654:boolean deleteQuietly(java.io.File) -> deleteQuietly
    1402:1404:void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List) -> doCopyDirectory
    1117:1137:void doCopyFile(java.io.File,java.io.File,boolean) -> doCopyFile
    2390:2400:void forceDelete(java.io.File) -> forceDelete
    473:483:void innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter,boolean) -> innerListFiles
    3107:3105:boolean isSymlink(java.io.File) -> isSymlink
    517:524:java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> listFiles
    684:689:java.util.Collection listFiles(java.io.File,java.lang.String[],boolean) -> listFiles
    289:297:java.io.FileInputStream openInputStream(java.io.File) -> openInputStream
    350:365:java.io.FileOutputStream openOutputStream(java.io.File,boolean) -> openOutputStream
    1851:1855:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    565:565:org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter) -> setUpEffectiveDirFilter
    555:555:org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> setUpEffectiveFileFilter
    2640:2643:long sizeOf0(java.io.File) -> sizeOf0
    2598:2599:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    2610:2619:long sizeOfDirectory0(java.io.File) -> sizeOfDirectory0
    662:664:java.lang.String[] toSuffixes(java.lang.String[]) -> toSuffixes
    540:541:void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter) -> validateListFilesParameters
    1739:1741:java.io.File[] verifiedListFiles(java.io.File) -> verifiedListFiles
    2186:2186:void writeByteArrayToFile(java.io.File,byte[],boolean) -> writeByteArrayToFile
    2222:2224:void writeByteArrayToFile(java.io.File,byte[],int,int,boolean) -> writeByteArrayToFile
org.apache.commons.io.FilenameUtils -> org.apache.commons.io.FilenameUtils:
    96:121:void <clinit>() -> <clinit>
    139:139:boolean isSystemWindows() -> isSystemWindows
org.apache.commons.io.IOCase -> org.apache.commons.io.IOCase:
    41:36:void <clinit>() -> <clinit>
    97:99:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    147:145:int checkCompareTo(java.lang.String,java.lang.String) -> checkCompareTo
    195:196:boolean checkEndsWith(java.lang.String,java.lang.String) -> checkEndsWith
    165:163:boolean checkEquals(java.lang.String,java.lang.String) -> checkEquals
    250:250:java.lang.String toString() -> toString
    36:36:org.apache.commons.io.IOCase valueOf(java.lang.String) -> valueOf
    36:36:org.apache.commons.io.IOCase[] values() -> values
org.apache.commons.io.IOUtils -> org.apache.commons.io.IOUtils:
    121:141:void <clinit>() -> <clinit>
    284:284:void closeQuietly(java.io.InputStream) -> closeQuietly
    317:317:void closeQuietly(java.io.OutputStream) -> closeQuietly
    363:363:void closeQuietly(java.io.Closeable) -> closeQuietly
    2246:2246:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    2270:2270:long copy(java.io.InputStream,java.io.OutputStream,int) -> copy
    2291:2291:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    2314:2315:long copyLarge(java.io.InputStream,java.io.OutputStream,byte[]) -> copyLarge
    764:767:byte[] toByteArray(java.io.InputStream) -> toByteArray
    793:790:byte[] toByteArray(java.io.InputStream,long) -> toByteArray
    816:812:byte[] toByteArray(java.io.InputStream,int) -> toByteArray
org.apache.commons.io.comparator.AbstractFileComparator -> org.apache.commons.io.comparator.AbstractFileComparator:
    30:30:void <init>() -> <init>
    73:73:java.lang.String toString() -> toString
org.apache.commons.io.comparator.NameFileComparator -> org.apache.commons.io.comparator.NameFileComparator:
    56:71:void <clinit>() -> <clinit>
    79:80:void <init>() -> <init>
    88:89:void <init>(org.apache.commons.io.IOCase) -> <init>
    51:51:int compare(java.lang.Object,java.lang.Object) -> compare
    104:104:int compare(java.io.File,java.io.File) -> compare
    114:114:java.lang.String toString() -> toString
org.apache.commons.io.comparator.ReverseComparator -> org.apache.commons.io.comparator.ReverseComparator:
    39:41:void <init>(java.util.Comparator) -> <init>
    29:29:int compare(java.lang.Object,java.lang.Object) -> compare
    56:56:int compare(java.io.File,java.io.File) -> compare
    66:66:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.AbstractFileFilter -> org.apache.commons.io.filefilter.AbstractFileFilter:
    31:31:void <init>() -> <init>
    53:53:boolean accept(java.io.File,java.lang.String) -> accept
    63:63:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.AndFileFilter -> org.apache.commons.io.filefilter.AndFileFilter:
    62:66:void <init>(java.util.List) -> <init>
    124:128:boolean accept(java.io.File) -> accept
    140:144:boolean accept(java.io.File,java.lang.String) -> accept
    158:171:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.DirectoryFileFilter -> org.apache.commons.io.filefilter.DirectoryFileFilter:
    48:55:void <clinit>() -> <clinit>
    60:60:void <init>() -> <init>
    71:71:boolean accept(java.io.File) -> accept
org.apache.commons.io.filefilter.FalseFileFilter -> org.apache.commons.io.filefilter.FalseFileFilter:
    37:44:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
org.apache.commons.io.filefilter.FileFilterUtils -> org.apache.commons.io.filefilter.FileFilterUtils:
    724:728:void <clinit>() -> <clinit>
    421:421:org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[]) -> and
    365:365:org.apache.commons.io.filefilter.IOFileFilter directoryFileFilter() -> directoryFileFilter
    342:342:org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String) -> nameFileFilter
    470:470:org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> notFileFilter
    436:436:org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[]) -> or
    452:450:java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[]) -> toList
org.apache.commons.io.filefilter.NameFileFilter -> org.apache.commons.io.filefilter.NameFileFilter:
    59:59:void <init>(java.lang.String) -> <init>
    69:71:void <init>(java.lang.String,org.apache.commons.io.IOCase) -> <init>
    142:144:boolean accept(java.io.File) -> accept
    160:161:boolean accept(java.io.File,java.lang.String) -> accept
    175:187:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.NotFileFilter -> org.apache.commons.io.filefilter.NotFileFilter:
    41:43:void <init>(org.apache.commons.io.filefilter.IOFileFilter) -> <init>
    56:56:boolean accept(java.io.File) -> accept
    68:68:boolean accept(java.io.File,java.lang.String) -> accept
    78:78:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.OrFileFilter -> org.apache.commons.io.filefilter.OrFileFilter:
    60:64:void <init>(java.util.List) -> <init>
    122:123:boolean accept(java.io.File) -> accept
    135:136:boolean accept(java.io.File,java.lang.String) -> accept
    150:163:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.SuffixFileFilter -> org.apache.commons.io.filefilter.SuffixFileFilter:
    92:92:void <init>(java.lang.String[]) -> <init>
    104:106:void <init>(java.lang.String[],org.apache.commons.io.IOCase) -> <init>
    150:152:boolean accept(java.io.File) -> accept
    168:169:boolean accept(java.io.File,java.lang.String) -> accept
    183:195:java.lang.String toString() -> toString
org.apache.commons.io.filefilter.TrueFileFilter -> org.apache.commons.io.filefilter.TrueFileFilter:
    36:43:void <clinit>() -> <clinit>
    48:48:void <init>() -> <init>
org.apache.commons.io.monitor.FileAlterationMonitor -> org.apache.commons.io.monitor.FileAlterationMonitor:
    43:43:void <init>() -> <init>
    52:53:void <init>(long) -> <init>
    97:97:void addObserver(org.apache.commons.io.monitor.FileAlterationObserver) -> addObserver
    108:108:void removeObserver(org.apache.commons.io.monitor.FileAlterationObserver) -> removeObserver
    181:189:void run() -> run
    129:130:void start() -> start
    150:151:void stop() -> stop
    162:163:void stop(long) -> stop
org.apache.commons.io.monitor.FileAlterationObserver -> org.apache.commons.io.monitor.FileAlterationObserver:
    136:136:void <init>(java.lang.String) -> <init>
    168:168:void <init>(java.io.File) -> <init>
    178:178:void <init>(java.io.File,java.io.FileFilter) -> <init>
    190:190:void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase) -> <init>
    202:204:void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase) -> <init>
    246:246:void addListener(org.apache.commons.io.monitor.FileAlterationListener) -> addListener
    296:312:void checkAndNotify() -> checkAndNotify
    325:346:void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[]) -> checkAndNotify
    357:360:org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File) -> createFileEntry
    385:394:void doCreate(org.apache.commons.io.monitor.FileEntry) -> doCreate
    422:426:void doDelete(org.apache.commons.io.monitor.FileEntry) -> doDelete
    371:374:org.apache.commons.io.monitor.FileEntry[] doListFiles(java.io.File,org.apache.commons.io.monitor.FileEntry) -> doListFiles
    405:410:void doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File) -> doMatch
    226:226:java.io.File getDirectory() -> getDirectory
    277:279:void initialize() -> initialize
    440:447:java.io.File[] listFiles(java.io.File) -> listFiles
    459:471:java.lang.String toString() -> toString
org.apache.commons.io.monitor.FileEntry -> org.apache.commons.io.monitor.FileEntry:
    47:47:void <clinit>() -> <clinit>
    64:64:void <init>(java.io.File) -> <init>
    73:75:void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File) -> <init>
    157:157:org.apache.commons.io.monitor.FileEntry[] getChildren() -> getChildren
    175:175:java.io.File getFile() -> getFile
    260:260:boolean isDirectory() -> isDirectory
    241:241:boolean isExists() -> isExists
    128:128:org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File) -> newChildInstance
    99:112:boolean refresh(java.io.File) -> refresh
    166:166:void setChildren(org.apache.commons.io.monitor.FileEntry[]) -> setChildren
org.apache.commons.io.output.ByteArrayOutputStream -> org.apache.commons.io.output.ByteArrayOutputStream:
    61:61:void <clinit>() -> <clinit>
    81:81:void <init>() -> <init>
    91:93:void <init>(int) -> <init>
    108:129:void needNewBuffer(int) -> needNewBuffer
    363:378:byte[] toByteArray() -> toByteArray
    392:392:java.lang.String toString() -> toString
    141:146:void write(byte[],int,int) -> write
    173:180:void write(int) -> write
org.apache.commons.io.output.StringBuilderWriter -> org.apache.commons.io.output.StringBuilderWriter:
    50:51:void <init>(int) -> <init>
    33:33:java.lang.Appendable append(char) -> append
    33:33:java.lang.Appendable append(java.lang.CharSequence) -> append
    33:33:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    73:73:java.io.Writer append(char) -> append
    85:85:java.io.Writer append(java.lang.CharSequence) -> append
    99:99:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    162:162:java.lang.String toString() -> toString
    128:128:void write(java.lang.String) -> write
    142:142:void write(char[],int,int) -> write
org.nibor.autolink.LinkExtractor -> org.nibor.autolink.LinkExtractor:
    15:15:void <init>(org.nibor.autolink.internal.UrlScanner,org.nibor.autolink.internal.WwwScanner,org.nibor.autolink.internal.EmailScanner,org.nibor.autolink.LinkExtractor$1) -> <init>
    21:24:void <init>(org.nibor.autolink.internal.UrlScanner,org.nibor.autolink.internal.WwwScanner,org.nibor.autolink.internal.EmailScanner) -> <init>
    15:15:org.nibor.autolink.internal.Scanner access$200(org.nibor.autolink.LinkExtractor,char) -> access$200
    28:28:org.nibor.autolink.LinkExtractor$Builder builder() -> builder
    38:38:java.lang.Iterable extractLinks(java.lang.CharSequence) -> extractLinks
    53:49:org.nibor.autolink.internal.Scanner trigger(char) -> trigger
org.nibor.autolink.LinkExtractor$1 -> org.nibor.autolink.LinkExtractor$1:
    38:38:void <init>(org.nibor.autolink.LinkExtractor,java.lang.CharSequence) -> <init>
    41:41:java.util.Iterator iterator() -> iterator
org.nibor.autolink.LinkExtractor$Builder -> org.nibor.autolink.LinkExtractor$Builder:
    61:61:void <init>(org.nibor.autolink.LinkExtractor$1) -> <init>
    66:64:void <init>() -> <init>
    95:98:org.nibor.autolink.LinkExtractor build() -> build
    77:75:org.nibor.autolink.LinkExtractor$Builder linkTypes(java.util.Set) -> linkTypes
org.nibor.autolink.LinkExtractor$LinkIterator -> org.nibor.autolink.LinkExtractor$LinkIterator:
    110:111:void <init>(org.nibor.autolink.LinkExtractor,java.lang.CharSequence) -> <init>
    116:117:boolean hasNext() -> hasNext
    102:102:java.lang.Object next() -> next
    122:127:org.nibor.autolink.LinkSpan next() -> next
    133:133:void remove() -> remove
    137:155:void setNext() -> setNext
org.nibor.autolink.LinkType -> org.nibor.autolink.LinkType:
    10:6:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
    6:6:org.nibor.autolink.LinkType valueOf(java.lang.String) -> valueOf
    6:6:org.nibor.autolink.LinkType[] values() -> values
org.nibor.autolink.internal.EmailScanner -> org.nibor.autolink.internal.EmailScanner:
    15:16:void <init>(boolean) -> <init>
    41:42:int findFirst(java.lang.CharSequence,int,int) -> findFirst
    63:92:int findLast(java.lang.CharSequence,int) -> findLast
    101:101:boolean localAtomAllowed(char) -> localAtomAllowed
    22:33:org.nibor.autolink.LinkSpan scan(java.lang.CharSequence,int,int) -> scan
    131:131:boolean subDomainAllowed(char) -> subDomainAllowed
org.nibor.autolink.internal.LinkSpanImpl -> org.nibor.autolink.internal.LinkSpanImpl:
    12:15:void <init>(org.nibor.autolink.LinkType,int,int) -> <init>
    25:25:int getBeginIndex() -> getBeginIndex
    30:30:int getEndIndex() -> getEndIndex
    20:20:org.nibor.autolink.LinkType getType() -> getType
    35:35:java.lang.String toString() -> toString
org.nibor.autolink.internal.Scanners -> org.nibor.autolink.internal.Scanners:
    29:30:int findUrlEnd(java.lang.CharSequence,int) -> findUrlEnd
    14:14:boolean isAlnum(char) -> isAlnum
org.nibor.autolink.internal.UrlScanner -> org.nibor.autolink.internal.UrlScanner:
    11:11:void <init>() -> <init>
    36:41:int findFirst(java.lang.CharSequence,int,int) -> findFirst
    15:28:org.nibor.autolink.LinkSpan scan(java.lang.CharSequence,int,int) -> scan
org.nibor.autolink.internal.WwwScanner -> org.nibor.autolink.internal.WwwScanner:
    12:12:void <init>() -> <init>
    40:40:int findFirst(java.lang.CharSequence,int,int) -> findFirst
    48:54:int findLast(java.lang.CharSequence,int) -> findLast
    61:61:boolean isAllowed(char) -> isAllowed
    66:68:boolean isWWW(java.lang.CharSequence,int) -> isWWW
    17:31:org.nibor.autolink.LinkSpan scan(java.lang.CharSequence,int,int) -> scan
org.slf4j.LoggerFactory -> org.slf4j.LoggerFactory:
    86:290:void <clinit>() -> <clinit>
    105:105:void <init>() -> <init>
    145:166:void bind() -> bind
    219:224:void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int) -> emitReplayOrSubstituionWarning
    256:258:void emitReplayWarning(int) -> emitReplayWarning
    248:252:void emitSubstitutionWarning() -> emitSubstitutionWarning
    195:196:void failedBinding(java.lang.Throwable) -> failedBinding
    296:310:java.util.Set findPossibleStaticLoggerBinderPathSet() -> findPossibleStaticLoggerBinderPathSet
    184:190:void fixSubstituteLoggers() -> fixSubstituteLoggers
    408:426:org.slf4j.ILoggerFactory getILoggerFactory() -> getILoggerFactory
    357:358:org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    316:316:boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set) -> isAmbiguousStaticLoggerBinderPathSet
    335:338:boolean isAndroid() -> isAndroid
    133:135:boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String) -> messageContainsOrgSlf4jImplStaticLoggerBinder
    124:126:void performInitialization() -> performInitialization
    200:214:void replayEvents() -> replayEvents
    232:235:void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent) -> replaySingleEvent
    343:344:void reportActualBinding(java.util.Set) -> reportActualBinding
    325:330:void reportMultipleBindingAmbiguity(java.util.Set) -> reportMultipleBindingAmbiguity
    263:283:void versionSanityCheck() -> versionSanityCheck
org.slf4j.event.EventRecodingLogger -> org.slf4j.event.EventRecodingLogger:
    15:18:void <init>(org.slf4j.helpers.SubstituteLogger,java.util.Queue) -> <init>
    99:99:void debug(java.lang.String) -> debug
    248:248:void error(java.lang.String) -> error
    267:267:void error(java.lang.String,java.lang.Throwable) -> error
    149:149:void info(java.lang.String) -> info
    26:26:void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> recordEvent
    31:41:void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable) -> recordEvent
    198:198:void warn(java.lang.String) -> warn
    202:202:void warn(java.lang.String,java.lang.Object) -> warn
    207:207:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    215:215:void warn(java.lang.String,java.lang.Throwable) -> warn
org.slf4j.event.Level -> org.slf4j.event.Level:
    16:14:void <clinit>() -> <clinit>
    21:23:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    34:34:java.lang.String toString() -> toString
    14:14:org.slf4j.event.Level valueOf(java.lang.String) -> valueOf
    14:14:org.slf4j.event.Level[] values() -> values
org.slf4j.event.SubstituteLoggingEvent -> org.slf4j.event.SubstituteLoggingEvent:
    6:6:void <init>() -> <init>
    43:43:org.slf4j.helpers.SubstituteLogger getLogger() -> getLogger
    63:63:void setArgumentArray(java.lang.Object[]) -> setArgumentArray
    23:23:void setLevel(org.slf4j.event.Level) -> setLevel
    47:47:void setLogger(org.slf4j.helpers.SubstituteLogger) -> setLogger
    39:39:void setLoggerName(java.lang.String) -> setLoggerName
    55:55:void setMessage(java.lang.String) -> setMessage
    79:79:void setThreadName(java.lang.String) -> setThreadName
    87:87:void setThrowable(java.lang.Throwable) -> setThrowable
    71:71:void setTimeStamp(long) -> setTimeStamp
org.slf4j.helpers.FormattingTuple -> org.slf4j.helpers.FormattingTuple:
    34:34:void <clinit>() -> <clinit>
    41:41:void <init>(java.lang.String) -> <init>
    44:47:void <init>(java.lang.String,java.lang.Object[],java.lang.Throwable) -> <init>
    51:51:java.lang.String getMessage() -> getMessage
    59:59:java.lang.Throwable getThrowable() -> getThrowable
org.slf4j.helpers.MarkerIgnoringBase -> org.slf4j.helpers.MarkerIgnoringBase:
    38:38:void <init>() -> <init>
    38:38:java.lang.String getName() -> getName
    163:163:java.lang.String toString() -> toString
org.slf4j.helpers.MessageFormatter -> org.slf4j.helpers.MessageFormatter:
    168:173:org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[]) -> arrayFormat
    189:240:org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[],java.lang.Throwable) -> arrayFormat
    327:334:void booleanArrayAppend(java.lang.StringBuilder,boolean[]) -> booleanArrayAppend
    338:345:void byteArrayAppend(java.lang.StringBuilder,byte[]) -> byteArrayAppend
    349:356:void charArrayAppend(java.lang.StringBuilder,char[]) -> charArrayAppend
    267:292:void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Map) -> deeplyAppendParameter
    404:411:void doubleArrayAppend(java.lang.StringBuilder,double[]) -> doubleArrayAppend
    393:400:void floatArrayAppend(java.lang.StringBuilder,float[]) -> floatArrayAppend
    156:162:java.lang.Throwable getThrowableCandidate(java.lang.Object[]) -> getThrowableCandidate
    371:378:void intArrayAppend(java.lang.StringBuilder,int[]) -> intArrayAppend
    257:257:boolean isDoubleEscaped(java.lang.String,int) -> isDoubleEscaped
    248:248:boolean isEscapedDelimeter(java.lang.String,int) -> isEscapedDelimeter
    382:389:void longArrayAppend(java.lang.StringBuilder,long[]) -> longArrayAppend
    309:323:void objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Map) -> objectArrayAppend
    299:303:void safeObjectAppend(java.lang.StringBuilder,java.lang.Object) -> safeObjectAppend
    360:367:void shortArrayAppend(java.lang.StringBuilder,short[]) -> shortArrayAppend
    177:178:java.lang.Object[] trimmedCopy(java.lang.Object[]) -> trimmedCopy
org.slf4j.helpers.NOPLogger -> org.slf4j.helpers.NOPLogger:
    42:42:void <clinit>() -> <clinit>
    48:48:void <init>() -> <init>
org.slf4j.helpers.NOPLoggerFactory -> org.slf4j.helpers.NOPLoggerFactory:
    40:40:void <init>() -> <init>
    45:45:org.slf4j.Logger getLogger(java.lang.String) -> getLogger
org.slf4j.helpers.NamedLoggerBase -> org.slf4j.helpers.NamedLoggerBase:
    40:40:void <init>() -> <init>
    47:47:java.lang.String getName() -> getName
org.slf4j.helpers.SubstituteLogger -> org.slf4j.helpers.SubstituteLogger:
    58:61:void <init>(java.lang.String,java.util.Queue,boolean) -> <init>
    121:121:void debug(java.lang.String) -> debug
    333:339:org.slf4j.Logger delegate() -> delegate
    312:317:boolean equals(java.lang.Object) -> equals
    265:265:void error(java.lang.String) -> error
    281:281:void error(java.lang.String,java.lang.Throwable) -> error
    344:347:org.slf4j.Logger getEventRecordingLogger() -> getEventRecordingLogger
    65:65:java.lang.String getName() -> getName
    325:325:int hashCode() -> hashCode
    169:169:void info(java.lang.String) -> info
    359:368:boolean isDelegateEventAware() -> isDelegateEventAware
    388:388:boolean isDelegateNOP() -> isDelegateNOP
    384:384:boolean isDelegateNull() -> isDelegateNull
    372:374:void log(org.slf4j.event.LoggingEvent) -> log
    355:355:void setDelegate(org.slf4j.Logger) -> setDelegate
    217:217:void warn(java.lang.String) -> warn
    221:221:void warn(java.lang.String,java.lang.Object) -> warn
    225:225:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    233:233:void warn(java.lang.String,java.lang.Throwable) -> warn
org.slf4j.helpers.SubstituteLoggerFactory -> org.slf4j.helpers.SubstituteLoggerFactory:
    43:49:void <init>() -> <init>
    77:78:void clear() -> clear
    69:69:java.util.concurrent.LinkedBlockingQueue getEventQueue() -> getEventQueue
    52:57:org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    65:65:java.util.List getLoggers() -> getLoggers
    73:73:void postInitialization() -> postInitialization
org.slf4j.helpers.Util -> org.slf4j.helpers.Util:
    121:123:void report(java.lang.String,java.lang.Throwable) -> report
    127:127:void report(java.lang.String) -> report
    52:56:boolean safeGetBooleanSystemProperty(java.lang.String) -> safeGetBooleanSystemProperty
    44:40:java.lang.String safeGetSystemProperty(java.lang.String) -> safeGetSystemProperty
org.slf4j.impl.AndroidLoggerAdapter -> org.slf4j.impl.AndroidLoggerAdapter:
    88:89:void <init>(java.lang.String) -> <init>
    195:195:void debug(java.lang.String) -> debug
    457:457:void error(java.lang.String) -> error
    526:526:void error(java.lang.String,java.lang.Throwable) -> error
    530:532:void formatAndLog(int,java.lang.String,java.lang.Object[]) -> formatAndLog
    281:281:void info(java.lang.String) -> info
    543:543:boolean isLoggable(int) -> isLoggable
    537:538:void log(int,java.lang.String,java.lang.Throwable) -> log
    548:550:void logInternal(int,java.lang.String,java.lang.Throwable) -> logInternal
    369:369:void warn(java.lang.String) -> warn
    387:387:void warn(java.lang.String,java.lang.Object) -> warn
    407:407:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    438:438:void warn(java.lang.String,java.lang.Throwable) -> warn
org.slf4j.impl.AndroidLoggerFactory -> org.slf4j.impl.AndroidLoggerFactory:
    39:43:void <init>() -> <init>
    49:53:org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    118:120:java.lang.String getSimpleName(java.lang.String) -> getSimpleName
    78:108:java.lang.String loggerNameToTag(java.lang.String) -> loggerNameToTag
org.slf4j.impl.StaticLoggerBinder -> org.slf4j.impl.StaticLoggerBinder:
    43:61:void <clinit>() -> <clinit>
    69:70:void <init>() -> <init>
    74:74:org.slf4j.ILoggerFactory getLoggerFactory() -> getLoggerFactory
    78:78:java.lang.String getLoggerFactoryClassStr() -> getLoggerFactoryClassStr
    51:51:org.slf4j.impl.StaticLoggerBinder getSingleton() -> getSingleton
<<<<<<< HEAD
org.spongycastle.asn1.ASN1ApplicationSpecific -> org.spongycastle.asn1.ASN1ApplicationSpecific:
    21:24:void <init>(boolean,int,byte[]) -> <init>
    170:179:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    159:164:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    150:150:int encodedLength() -> encodedLength
    106:106:int getApplicationTag() -> getApplicationTag
    184:184:int hashCode() -> hashCode
    86:86:boolean isConstructed() -> isConstructed
org.spongycastle.asn1.ASN1BitString -> org.spongycastle.asn1.ASN1BitString:
    18:18:void <clinit>() -> <clinit>
    111:114:void <init>(byte[],int) -> <init>
    221:229:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    234:238:byte[] derForm(byte[],int) -> derForm
    252:249:org.spongycastle.asn1.ASN1BitString fromInputStream(int,java.io.InputStream) -> fromInputStream
    200:200:byte[] getBytes() -> getBytes
    190:192:byte[] getOctets() -> getOctets
    205:205:int getPadBits() -> getPadBits
    136:146:java.lang.String getString() -> getString
    215:215:int hashCode() -> hashCode
    281:281:org.spongycastle.asn1.ASN1Primitive toDERObject() -> toDERObject
    286:286:org.spongycastle.asn1.ASN1Primitive toDLObject() -> toDLObject
    210:210:java.lang.String toString() -> toString
org.spongycastle.asn1.ASN1Boolean -> org.spongycastle.asn1.ASN1Boolean:
    22:28:void <clinit>() -> <clinit>
    111:114:void <init>(byte[]) -> <init>
    137:138:void <init>(boolean) -> <init>
    166:168:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    160:160:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    187:189:org.spongycastle.asn1.ASN1Boolean fromOctetString(byte[]) -> fromOctetString
    176:176:int hashCode() -> hashCode
    182:182:java.lang.String toString() -> toString
org.spongycastle.asn1.ASN1EncodableVector -> org.spongycastle.asn1.ASN1EncodableVector:
    17:11:void <init>() -> <init>
    27:27:void add(org.spongycastle.asn1.ASN1Encodable) -> add
    51:51:org.spongycastle.asn1.ASN1Encodable get(int) -> get
    61:61:int size() -> size
org.spongycastle.asn1.ASN1Enumerated -> org.spongycastle.asn1.ASN1Enumerated:
    153:153:void <clinit>() -> <clinit>
    102:110:void <init>(byte[]) -> <init>
    138:145:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    132:132:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    125:125:int encodedLength() -> encodedLength
    157:164:org.spongycastle.asn1.ASN1Enumerated fromOctetString(byte[]) -> fromOctetString
    150:150:int hashCode() -> hashCode
org.spongycastle.asn1.ASN1Exception -> org.spongycastle.asn1.ASN1Exception:
    20:20:void <init>(java.lang.String) -> <init>
    31:32:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:42:java.lang.Throwable getCause() -> getCause
org.spongycastle.asn1.ASN1GeneralizedTime -> org.spongycastle.asn1.ASN1GeneralizedTime:
    163:164:void <init>(byte[]) -> <init>
    387:392:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    381:381:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    372:374:int encodedLength() -> encodedLength
    397:397:int hashCode() -> hashCode
org.spongycastle.asn1.ASN1InputStream -> org.spongycastle.asn1.ASN1InputStream:
    29:29:void <init>(java.io.InputStream) -> <init>
    41:41:void <init>(byte[]) -> <init>
    55:55:void <init>(byte[],boolean) -> <init>
    68:68:void <init>(java.io.InputStream,int) -> <init>
    98:101:void <init>(java.io.InputStream,int,boolean) -> <init>
    210:210:org.spongycastle.asn1.ASN1EncodableVector buildDEREncodableVector(org.spongycastle.asn1.DefiniteLengthInputStream) -> buildDEREncodableVector
    196:201:org.spongycastle.asn1.ASN1EncodableVector buildEncodableVector() -> buildEncodableVector
    142:190:org.spongycastle.asn1.ASN1Primitive buildObject(int,int,int) -> buildObject
    473:439:org.spongycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.spongycastle.asn1.DefiniteLengthInputStream,byte[][]) -> createPrimitiveDERObject
    403:418:char[] getBMPCharBuffer(org.spongycastle.asn1.DefiniteLengthInputStream) -> getBMPCharBuffer
    380:396:byte[] getBuffer(org.spongycastle.asn1.DefiniteLengthInputStream,byte[][]) -> getBuffer
    106:106:int getLimit() -> getLimit
    112:112:int readLength() -> readLength
    329:332:int readLength(java.io.InputStream,int) -> readLength
    216:282:org.spongycastle.asn1.ASN1Primitive readObject() -> readObject
    299:305:int readTagNumber(java.io.InputStream,int) -> readTagNumber
org.spongycastle.asn1.ASN1Integer -> org.spongycastle.asn1.ASN1Integer:
    80:81:void <init>(long) -> <init>
    124:133:void <init>(byte[],boolean) -> <init>
    207:214:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    189:189:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    182:182:int encodedLength() -> encodedLength
    27:29:org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object) -> getInstance
    161:161:java.math.BigInteger getValue() -> getValue
    196:198:int hashCode() -> hashCode
    144:150:boolean isMalformed(byte[]) -> isMalformed
    219:219:java.lang.String toString() -> toString
org.spongycastle.asn1.ASN1Null -> org.spongycastle.asn1.ASN1Null:
    8:8:void <init>() -> <init>
    60:60:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
org.spongycastle.asn1.ASN1Object -> org.spongycastle.asn1.ASN1Object:
    11:11:void <init>() -> <init>
    77:84:boolean equals(java.lang.Object) -> equals
    23:28:byte[] getEncoded() -> getEncoded
    42:61:byte[] getEncoded(java.lang.String) -> getEncoded
    66:66:int hashCode() -> hashCode
org.spongycastle.asn1.ASN1ObjectIdentifier -> org.spongycastle.asn1.ASN1ObjectIdentifier:
    438:438:void <clinit>() -> <clinit>
    87:159:void <init>(byte[]) -> <init>
    169:172:void <init>(java.lang.String) -> <init>
    189:192:void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String) -> <init>
    349:354:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    216:216:org.spongycastle.asn1.ASN1ObjectIdentifier branch(java.lang.String) -> branch
    271:293:void doOutput(java.io.ByteArrayOutputStream) -> doOutput
    329:333:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    320:322:int encodedLength() -> encodedLength
    469:473:org.spongycastle.asn1.ASN1ObjectIdentifier fromOctetString(byte[]) -> fromOctetString
    300:309:byte[] getBody() -> getBody
    205:205:java.lang.String getId() -> getId
    31:33:org.spongycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object) -> getInstance
    338:338:int hashCode() -> hashCode
    367:370:boolean isValidBranchID(java.lang.String,int) -> isValidBranchID
    399:410:boolean isValidIdentifier(java.lang.String) -> isValidIdentifier
    359:359:java.lang.String toString() -> toString
    235:243:void writeField(java.io.ByteArrayOutputStream,long) -> writeField
    250:265:void writeField(java.io.ByteArrayOutputStream,java.math.BigInteger) -> writeField
org.spongycastle.asn1.ASN1ObjectIdentifier$OidHandle -> org.spongycastle.asn1.ASN1ObjectIdentifier$OidHandle:
    446:448:void <init>(byte[]) -> <init>
    458:460:boolean equals(java.lang.Object) -> equals
    453:453:int hashCode() -> hashCode
org.spongycastle.asn1.ASN1OctetString -> org.spongycastle.asn1.ASN1OctetString:
    175:178:void <init>(byte[]) -> <init>
    221:228:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    119:123:org.spongycastle.asn1.ASN1OctetString getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean) -> getInstance
    140:142:org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object) -> getInstance
    233:233:org.spongycastle.asn1.ASN1Primitive getLoadedObject() -> getLoadedObject
    190:190:java.io.InputStream getOctetStream() -> getOctetStream
    210:210:byte[] getOctets() -> getOctets
    215:215:int hashCode() -> hashCode
    238:238:org.spongycastle.asn1.ASN1Primitive toDERObject() -> toDERObject
    243:243:org.spongycastle.asn1.ASN1Primitive toDLObject() -> toDLObject
    251:251:java.lang.String toString() -> toString
org.spongycastle.asn1.ASN1OutputStream -> org.spongycastle.asn1.ASN1OutputStream:
    15:16:void <init>(java.io.OutputStream) -> <init>
    163:163:org.spongycastle.asn1.ASN1OutputStream getDERSubStream() -> getDERSubStream
    168:168:org.spongycastle.asn1.ASN1OutputStream getDLSubStream() -> getDLSubStream
    49:49:void write(int) -> write
    55:55:void write(byte[]) -> write
    61:61:void write(byte[],int,int) -> write
    69:71:void writeEncoded(int,byte[]) -> writeEncoded
    110:112:void writeEncoded(int,int,byte[]) -> writeEncoded
    141:145:void writeImplicitObject(org.spongycastle.asn1.ASN1Primitive) -> writeImplicitObject
    33:42:void writeLength(int) -> writeLength
    128:132:void writeObject(org.spongycastle.asn1.ASN1Encodable) -> writeObject
    79:102:void writeTag(int,int) -> writeTag
org.spongycastle.asn1.ASN1OutputStream$ImplicitOutputStream -> org.spongycastle.asn1.ASN1OutputStream$ImplicitOutputStream:
    177:174:void <init>(org.spongycastle.asn1.ASN1OutputStream,java.io.OutputStream) -> <init>
    184:190:void write(int) -> write
org.spongycastle.asn1.ASN1ParsingException -> org.spongycastle.asn1.ASN1ParsingException:
    18:18:void <init>(java.lang.String) -> <init>
    29:30:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    40:40:java.lang.Throwable getCause() -> getCause
org.spongycastle.asn1.ASN1Primitive -> org.spongycastle.asn1.ASN1Primitive:
    12:12:void <init>() -> <init>
    52:52:boolean equals(java.lang.Object) -> equals
    26:41:org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[]) -> fromByteArray
org.spongycastle.asn1.ASN1Sequence -> org.spongycastle.asn1.ASN1Sequence:
    171:63:void <init>() -> <init>
    190:193:void <init>(org.spongycastle.asn1.ASN1EncodableVector) -> <init>
    310:333:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    75:77:org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object) -> getInstance
    346:346:org.spongycastle.asn1.ASN1Encodable getNext(java.util.Enumeration) -> getNext
    278:278:org.spongycastle.asn1.ASN1Encodable getObjectAt(int) -> getObjectAt
    224:224:java.util.Enumeration getObjects() -> getObjects
    293:301:int hashCode() -> hashCode
    392:392:java.util.Iterator iterator() -> iterator
    288:288:int size() -> size
    212:216:org.spongycastle.asn1.ASN1Encodable[] toArray() -> toArray
    357:359:org.spongycastle.asn1.ASN1Primitive toDERObject() -> toDERObject
    370:372:org.spongycastle.asn1.ASN1Primitive toDLObject() -> toDLObject
    387:387:java.lang.String toString() -> toString
org.spongycastle.asn1.ASN1Set -> org.spongycastle.asn1.ASN1Set:
    225:102:void <init>() -> <init>
    234:235:void <init>(org.spongycastle.asn1.ASN1Encodable) -> <init>
    246:254:void <init>(org.spongycastle.asn1.ASN1EncodableVector,boolean) -> <init>
    266:274:void <init>(org.spongycastle.asn1.ASN1Encodable[],boolean) -> <init>
    424:447:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    494:498:byte[] getDEREncoded(org.spongycastle.asn1.ASN1Encodable) -> getDEREncoded
    169:221:org.spongycastle.asn1.ASN1Set getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean) -> getInstance
    460:465:org.spongycastle.asn1.ASN1Encodable getNext(java.util.Enumeration) -> getNext
    292:292:org.spongycastle.asn1.ASN1Encodable getObjectAt(int) -> getObjectAt
    280:280:java.util.Enumeration getObjects() -> getObjects
    361:369:int hashCode() -> hashCode
    563:563:java.util.Iterator iterator() -> iterator
    478:486:boolean lessThanOrEqual(byte[],byte[]) -> lessThanOrEqual
    302:302:int size() -> size
    504:533:void sort() -> sort
    307:311:org.spongycastle.asn1.ASN1Encodable[] toArray() -> toArray
    381:402:org.spongycastle.asn1.ASN1Primitive toDERObject() -> toDERObject
    414:416:org.spongycastle.asn1.ASN1Primitive toDLObject() -> toDLObject
    558:558:java.lang.String toString() -> toString
org.spongycastle.asn1.ASN1StreamParser -> org.spongycastle.asn1.ASN1StreamParser:
    19:19:void <init>(java.io.InputStream) -> <init>
    25:29:void <init>(java.io.InputStream,int) -> <init>
    52:48:org.spongycastle.asn1.ASN1Encodable readIndef(int) -> readIndef
    124:208:org.spongycastle.asn1.ASN1Encodable readObject() -> readObject
    103:118:org.spongycastle.asn1.ASN1Primitive readTaggedObject(boolean,int) -> readTaggedObject
    232:243:org.spongycastle.asn1.ASN1EncodableVector readVector() -> readVector
    224:226:void set00Check(boolean) -> set00Check
org.spongycastle.asn1.ASN1TaggedObject -> org.spongycastle.asn1.ASN1TaggedObject:
    67:92:void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable) -> <init>
    99:120:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    34:36:org.spongycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object) -> getInstance
    222:222:org.spongycastle.asn1.ASN1Primitive getLoadedObject() -> getLoadedObject
    184:186:org.spongycastle.asn1.ASN1Primitive getObject() -> getObject
    153:153:int getTagNo() -> getTagNo
    131:140:int hashCode() -> hashCode
    167:167:boolean isExplicit() -> isExplicit
    227:227:org.spongycastle.asn1.ASN1Primitive toDERObject() -> toDERObject
    232:232:org.spongycastle.asn1.ASN1Primitive toDLObject() -> toDLObject
    240:240:java.lang.String toString() -> toString
org.spongycastle.asn1.ASN1UTCTime -> org.spongycastle.asn1.ASN1UTCTime:
    153:154:void <init>(byte[]) -> <init>
    297:302:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    282:290:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    273:275:int encodedLength() -> encodedLength
    307:307:int hashCode() -> hashCode
    312:312:java.lang.String toString() -> toString
org.spongycastle.asn1.BERApplicationSpecific -> org.spongycastle.asn1.BERApplicationSpecific:
    76:76:void <init>(int,org.spongycastle.asn1.ASN1EncodableVector) -> <init>
    103:112:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    81:94:byte[] getEncodedVector(org.spongycastle.asn1.ASN1EncodableVector) -> getEncodedVector
org.spongycastle.asn1.BERApplicationSpecificParser -> org.spongycastle.asn1.BERApplicationSpecificParser:
    15:17:void <init>(int,org.spongycastle.asn1.ASN1StreamParser) -> <init>
    40:40:org.spongycastle.asn1.ASN1Primitive getLoadedObject() -> getLoadedObject
    52:56:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.asn1.BERFactory -> org.spongycastle.asn1.BERFactory:
    5:6:void <clinit>() -> <clinit>
    10:10:org.spongycastle.asn1.BERSequence createSequence(org.spongycastle.asn1.ASN1EncodableVector) -> createSequence
org.spongycastle.asn1.BEROctetString -> org.spongycastle.asn1.BEROctetString:
    65:65:void <init>(byte[]) -> <init>
    77:79:void <init>(org.spongycastle.asn1.ASN1OctetString[]) -> <init>
    22:22:org.spongycastle.asn1.ASN1OctetString[] access$000(org.spongycastle.asn1.BEROctetString) -> access$000
    166:179:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    154:156:int encodedLength() -> encodedLength
    184:193:org.spongycastle.asn1.BEROctetString fromSequence(org.spongycastle.asn1.ASN1Sequence) -> fromSequence
    121:139:java.util.Vector generateOcts() -> generateOcts
    98:103:java.util.Enumeration getObjects() -> getObjects
    88:88:byte[] getOctets() -> getOctets
    35:55:byte[] toBytes(org.spongycastle.asn1.ASN1OctetString[]) -> toBytes
org.spongycastle.asn1.BEROctetString$1 -> org.spongycastle.asn1.BEROctetString$1:
    104:105:void <init>(org.spongycastle.asn1.BEROctetString) -> <init>
    109:109:boolean hasMoreElements() -> hasMoreElements
    114:114:java.lang.Object nextElement() -> nextElement
org.spongycastle.asn1.BEROctetStringParser -> org.spongycastle.asn1.BEROctetStringParser:
    18:19:void <init>(org.spongycastle.asn1.ASN1StreamParser) -> <init>
    41:41:org.spongycastle.asn1.ASN1Primitive getLoadedObject() -> getLoadedObject
    29:29:java.io.InputStream getOctetStream() -> getOctetStream
    53:57:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.asn1.BERSequence -> org.spongycastle.asn1.BERSequence:
    21:21:void <init>() -> <init>
    39:39:void <init>(org.spongycastle.asn1.ASN1EncodableVector) -> <init>
    67:77:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    55:57:int encodedLength() -> encodedLength
org.spongycastle.asn1.BERSequenceParser -> org.spongycastle.asn1.BERSequenceParser:
    14:15:void <init>(org.spongycastle.asn1.ASN1StreamParser) -> <init>
    39:39:org.spongycastle.asn1.ASN1Primitive getLoadedObject() -> getLoadedObject
    51:55:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.asn1.BERSet -> org.spongycastle.asn1.BERSet:
    27:27:void <init>() -> <init>
    38:38:void <init>(org.spongycastle.asn1.ASN1Encodable) -> <init>
    48:48:void <init>(org.spongycastle.asn1.ASN1EncodableVector) -> <init>
    58:58:void <init>(org.spongycastle.asn1.ASN1Encodable[]) -> <init>
    77:87:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    65:67:int encodedLength() -> encodedLength
org.spongycastle.asn1.BERSetParser -> org.spongycastle.asn1.BERSetParser:
    14:15:void <init>(org.spongycastle.asn1.ASN1StreamParser) -> <init>
    39:39:org.spongycastle.asn1.ASN1Primitive getLoadedObject() -> getLoadedObject
    51:55:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.asn1.BERTaggedObject -> org.spongycastle.asn1.BERTaggedObject:
    35:35:void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable) -> <init>
    99:145:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    72:91:int encodedLength() -> encodedLength
    50:60:boolean isConstructed() -> isConstructed
org.spongycastle.asn1.BERTaggedObjectParser -> org.spongycastle.asn1.BERTaggedObjectParser:
    19:22:void <init>(boolean,int,org.spongycastle.asn1.ASN1StreamParser) -> <init>
    79:79:org.spongycastle.asn1.ASN1Primitive getLoadedObject() -> getLoadedObject
    91:95:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.asn1.ConstructedOctetStream -> org.spongycastle.asn1.ConstructedOctetStream:
    16:17:void <init>(org.spongycastle.asn1.ASN1StreamParser) -> <init>
    22:65:int read(byte[],int,int) -> read
    73:108:int read() -> read
org.spongycastle.asn1.DERApplicationSpecific -> org.spongycastle.asn1.DERApplicationSpecific:
    19:19:void <init>(boolean,int,byte[]) -> <init>
    119:124:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    129:149:java.lang.String toString() -> toString
org.spongycastle.asn1.DERBMPString -> org.spongycastle.asn1.DERBMPString:
    95:96:void <init>(char[]) -> <init>
    127:134:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    151:159:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    144:144:int encodedLength() -> encodedLength
    111:111:java.lang.String getString() -> getString
    121:121:int hashCode() -> hashCode
    116:116:java.lang.String toString() -> toString
org.spongycastle.asn1.DERBitString -> org.spongycastle.asn1.DERBitString:
    94:94:void <init>(byte[],int) -> <init>
    100:100:void <init>(byte[]) -> <init>
    113:113:void <init>(org.spongycastle.asn1.ASN1Encodable) -> <init>
    130:136:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    123:123:int encodedLength() -> encodedLength
    21:23:org.spongycastle.asn1.DERBitString getInstance(java.lang.Object) -> getInstance
org.spongycastle.asn1.DERExternal -> org.spongycastle.asn1.DERExternal:
    32:57:void <init>(org.spongycastle.asn1.ASN1EncodableVector) -> <init>
    171:201:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    148:163:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    139:139:int encodedLength() -> encodedLength
    71:73:org.spongycastle.asn1.ASN1Primitive getObjFromVector(org.spongycastle.asn1.ASN1EncodableVector,int) -> getObjFromVector
    115:127:int hashCode() -> hashCode
    287:285:void setEncoding(int) -> setEncoding
org.spongycastle.asn1.DERExternalParser -> org.spongycastle.asn1.DERExternalParser:
    19:20:void <init>(org.spongycastle.asn1.ASN1StreamParser) -> <init>
    40:44:org.spongycastle.asn1.ASN1Primitive getLoadedObject() -> getLoadedObject
    57:61:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.asn1.DERFactory -> org.spongycastle.asn1.DERFactory:
    5:6:void <clinit>() -> <clinit>
    10:10:org.spongycastle.asn1.ASN1Sequence createSequence(org.spongycastle.asn1.ASN1EncodableVector) -> createSequence
    15:15:org.spongycastle.asn1.ASN1Set createSet(org.spongycastle.asn1.ASN1EncodableVector) -> createSet
org.spongycastle.asn1.DERGeneralString -> org.spongycastle.asn1.DERGeneralString:
    79:80:void <init>(byte[]) -> <init>
    141:147:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    131:131:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    125:125:int encodedLength() -> encodedLength
    100:100:java.lang.String getString() -> getString
    136:136:int hashCode() -> hashCode
    105:105:java.lang.String toString() -> toString
org.spongycastle.asn1.DERGraphicString -> org.spongycastle.asn1.DERGraphicString:
    76:77:void <init>(byte[]) -> <init>
    110:117:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    99:99:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    92:92:int encodedLength() -> encodedLength
    104:104:int hashCode() -> hashCode
org.spongycastle.asn1.DERIA5String -> org.spongycastle.asn1.DERIA5String:
    82:83:void <init>(byte[]) -> <init>
    160:167:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    149:149:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    142:142:int encodedLength() -> encodedLength
    122:122:java.lang.String getString() -> getString
    154:154:int hashCode() -> hashCode
    127:127:java.lang.String toString() -> toString
org.spongycastle.asn1.DERNull -> org.spongycastle.asn1.DERNull:
    13:15:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    38:38:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
org.spongycastle.asn1.DERNumericString -> org.spongycastle.asn1.DERNumericString:
    85:86:void <init>(byte[]) -> <init>
    158:165:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    147:147:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    140:140:int encodedLength() -> encodedLength
    120:120:java.lang.String getString() -> getString
    152:152:int hashCode() -> hashCode
    125:125:java.lang.String toString() -> toString
org.spongycastle.asn1.DEROctetString -> org.spongycastle.asn1.DEROctetString:
    19:19:void <init>(byte[]) -> <init>
    48:48:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    41:41:int encodedLength() -> encodedLength
org.spongycastle.asn1.DEROctetStringParser -> org.spongycastle.asn1.DEROctetStringParser:
    16:17:void <init>(org.spongycastle.asn1.DefiniteLengthInputStream) -> <init>
    39:39:org.spongycastle.asn1.ASN1Primitive getLoadedObject() -> getLoadedObject
    27:27:java.io.InputStream getOctetStream() -> getOctetStream
    51:55:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.asn1.DEROutputStream -> org.spongycastle.asn1.DEROutputStream:
    15:15:void <init>(java.io.OutputStream) -> <init>
    24:28:void writeObject(org.spongycastle.asn1.ASN1Encodable) -> writeObject
org.spongycastle.asn1.DERPrintableString -> org.spongycastle.asn1.DERPrintableString:
    101:102:void <init>(byte[]) -> <init>
    169:176:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    158:158:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    151:151:int encodedLength() -> encodedLength
    136:136:java.lang.String getString() -> getString
    163:163:int hashCode() -> hashCode
    181:181:java.lang.String toString() -> toString
org.spongycastle.asn1.DERSequence -> org.spongycastle.asn1.DERSequence:
    21:15:void <init>() -> <init>
    41:15:void <init>(org.spongycastle.asn1.ASN1EncodableVector) -> <init>
    94:104:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    77:79:int encodedLength() -> encodedLength
    57:71:int getBodyLength() -> getBodyLength
org.spongycastle.asn1.DERSequenceParser -> org.spongycastle.asn1.DERSequenceParser:
    14:15:void <init>(org.spongycastle.asn1.ASN1StreamParser) -> <init>
    39:39:org.spongycastle.asn1.ASN1Primitive getLoadedObject() -> getLoadedObject
    51:55:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.asn1.DERSet -> org.spongycastle.asn1.DERSet:
    25:19:void <init>() -> <init>
    62:19:void <init>(org.spongycastle.asn1.ASN1EncodableVector,boolean) -> <init>
    105:115:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    88:90:int encodedLength() -> encodedLength
    68:82:int getBodyLength() -> getBodyLength
org.spongycastle.asn1.DERSetParser -> org.spongycastle.asn1.DERSetParser:
    14:15:void <init>(org.spongycastle.asn1.ASN1StreamParser) -> <init>
    39:39:org.spongycastle.asn1.ASN1Primitive getLoadedObject() -> getLoadedObject
    51:55:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.asn1.DERT61String -> org.spongycastle.asn1.DERT61String:
    81:82:void <init>(byte[]) -> <init>
    139:144:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    124:124:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    117:117:int encodedLength() -> encodedLength
    102:102:java.lang.String getString() -> getString
    149:149:int hashCode() -> hashCode
    107:107:java.lang.String toString() -> toString
org.spongycastle.asn1.DERTaggedObject -> org.spongycastle.asn1.DERTaggedObject:
    13:13:void <clinit>() -> <clinit>
    25:25:void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable) -> <init>
    84:115:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    57:76:int encodedLength() -> encodedLength
    35:45:boolean isConstructed() -> isConstructed
org.spongycastle.asn1.DERUTF8String -> org.spongycastle.asn1.DERUTF8String:
    80:81:void <init>(byte[]) -> <init>
    111:118:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    135:135:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    129:129:int encodedLength() -> encodedLength
    96:96:java.lang.String getString() -> getString
    106:106:int hashCode() -> hashCode
    101:101:java.lang.String toString() -> toString
org.spongycastle.asn1.DERUniversalString -> org.spongycastle.asn1.DERUniversalString:
    16:16:void <clinit>() -> <clinit>
    82:83:void <init>(byte[]) -> <init>
    142:147:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    136:136:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    129:129:int encodedLength() -> encodedLength
    119:119:byte[] getOctets() -> getOctets
    88:98:java.lang.String getString() -> getString
    152:152:int hashCode() -> hashCode
    114:114:java.lang.String toString() -> toString
org.spongycastle.asn1.DERVideotexString -> org.spongycastle.asn1.DERVideotexString:
    76:77:void <init>(byte[]) -> <init>
    110:117:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    99:99:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    92:92:int encodedLength() -> encodedLength
    104:104:int hashCode() -> hashCode
org.spongycastle.asn1.DERVisibleString -> org.spongycastle.asn1.DERVisibleString:
    81:82:void <init>(byte[]) -> <init>
    131:136:boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive) -> asn1Equals
    125:125:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    118:118:int encodedLength() -> encodedLength
    98:98:java.lang.String getString() -> getString
    141:141:int hashCode() -> hashCode
    103:103:java.lang.String toString() -> toString
org.spongycastle.asn1.DLBitString -> org.spongycastle.asn1.DLBitString:
    94:94:void <init>(byte[],int) -> <init>
    130:136:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    123:123:int encodedLength() -> encodedLength
org.spongycastle.asn1.DLOutputStream -> org.spongycastle.asn1.DLOutputStream:
    15:15:void <init>(java.io.OutputStream) -> <init>
    24:28:void writeObject(org.spongycastle.asn1.ASN1Encodable) -> writeObject
org.spongycastle.asn1.DLSequence -> org.spongycastle.asn1.DLSequence:
    18:12:void <init>() -> <init>
    38:12:void <init>(org.spongycastle.asn1.ASN1EncodableVector) -> <init>
    91:101:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    74:76:int encodedLength() -> encodedLength
    54:68:int getBodyLength() -> getBodyLength
org.spongycastle.asn1.DLSet -> org.spongycastle.asn1.DLSet:
    63:57:void <init>() -> <init>
    72:57:void <init>(org.spongycastle.asn1.ASN1Encodable) -> <init>
    81:57:void <init>(org.spongycastle.asn1.ASN1EncodableVector) -> <init>
    90:57:void <init>(org.spongycastle.asn1.ASN1Encodable[]) -> <init>
    133:143:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    116:118:int encodedLength() -> encodedLength
    96:110:int getBodyLength() -> getBodyLength
org.spongycastle.asn1.DLTaggedObject -> org.spongycastle.asn1.DLTaggedObject:
    13:13:void <clinit>() -> <clinit>
    25:25:void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable) -> <init>
    78:109:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    52:70:int encodedLength() -> encodedLength
    30:40:boolean isConstructed() -> isConstructed
org.spongycastle.asn1.DefiniteLengthInputStream -> org.spongycastle.asn1.DefiniteLengthInputStream:
    15:15:void <clinit>() -> <clinit>
    24:28:void <init>(java.io.InputStream,int) -> <init>
    42:42:int getRemaining() -> getRemaining
    48:57:int read() -> read
    71:81:int read(byte[],int,int) -> read
    95:103:byte[] toByteArray() -> toByteArray
org.spongycastle.asn1.IndefiniteLengthInputStream -> org.spongycastle.asn1.IndefiniteLengthInputStream:
    20:28:void <init>(java.io.InputStream,int) -> <init>
    43:48:boolean checkForEof() -> checkForEof
    55:57:int read(byte[],int,int) -> read
    91:101:int read() -> read
    37:38:void setEofOn00(boolean) -> setEofOn00
org.spongycastle.asn1.LazyConstructionEnumeration -> org.spongycastle.asn1.LazyConstructionEnumeration:
    13:15:void <init>(byte[]) -> <init>
    20:20:boolean hasMoreElements() -> hasMoreElements
    25:27:java.lang.Object nextElement() -> nextElement
    36:40:java.lang.Object readObject() -> readObject
org.spongycastle.asn1.LazyEncodedSequence -> org.spongycastle.asn1.LazyEncodedSequence:
    17:18:void <init>(byte[]) -> <init>
    100:106:void encode(org.spongycastle.asn1.ASN1OutputStream) -> encode
    86:92:int encodedLength() -> encodedLength
    35:40:org.spongycastle.asn1.ASN1Encodable getObjectAt(int) -> getObjectAt
    45:50:java.util.Enumeration getObjects() -> getObjects
    23:30:void parse() -> parse
    55:60:int size() -> size
    65:70:org.spongycastle.asn1.ASN1Primitive toDERObject() -> toDERObject
    75:80:org.spongycastle.asn1.ASN1Primitive toDLObject() -> toDLObject
org.spongycastle.asn1.LimitedInputStream -> org.spongycastle.asn1.LimitedInputStream:
    17:19:void <init>(java.io.InputStream,int) -> <init>
    25:25:int getRemaining() -> getRemaining
    30:32:void setParentEofDetect(boolean) -> setParentEofDetect
org.spongycastle.asn1.OIDTokenizer -> org.spongycastle.asn1.OIDTokenizer:
    21:23:void <init>(java.lang.String) -> <init>
    33:33:boolean hasMoreTokens() -> hasMoreTokens
    43:60:java.lang.String nextToken() -> nextToken
org.spongycastle.asn1.StreamUtil -> org.spongycastle.asn1.StreamUtil:
    11:11:void <clinit>() -> <clinit>
    96:108:int calculateTagLength(int) -> calculateTagLength
    21:51:int findLimit(java.io.InputStream) -> findLimit
org.spongycastle.asn1.bc.BCObjectIdentifiers -> org.spongycastle.asn1.bc.BCObjectIdentifiers:
    15:109:void <clinit>() -> <clinit>
org.spongycastle.asn1.nist.NISTObjectIdentifiers -> org.spongycastle.asn1.nist.NISTObjectIdentifiers:
    16:152:void <clinit>() -> <clinit>
org.spongycastle.asn1.oiw.OIWObjectIdentifiers -> org.spongycastle.asn1.oiw.OIWObjectIdentifiers:
    14:48:void <clinit>() -> <clinit>
org.spongycastle.asn1.pkcs.PrivateKeyInfo -> org.spongycastle.asn1.pkcs.PrivateKeyInfo:
    56:56:void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable) -> <init>
    64:67:void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable,org.spongycastle.asn1.ASN1Set) -> <init>
    76:82:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    39:45:org.spongycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object) -> getInstance
    96:96:org.spongycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm() -> getPrivateKeyAlgorithm
    109:109:org.spongycastle.asn1.ASN1Encodable parsePrivateKey() -> parsePrivateKey
    151:162:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.asn1.x509.AlgorithmIdentifier -> org.spongycastle.asn1.x509.AlgorithmIdentifier:
    42:43:void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier) -> <init>
    49:51:void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable) -> <init>
    56:60:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    77:77:org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm() -> getAlgorithm
    28:34:org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object) -> getInstance
    82:82:org.spongycastle.asn1.ASN1Encodable getParameters() -> getParameters
    95:104:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.asn1.x509.SubjectPublicKeyInfo -> org.spongycastle.asn1.x509.SubjectPublicKeyInfo:
    54:56:void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable) -> <init>
    62:64:void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[]) -> <init>
    72:76:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    87:87:org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm() -> getAlgorithm
    38:44:org.spongycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object) -> getInstance
    139:139:org.spongycastle.asn1.DERBitString getPublicKeyData() -> getPublicKeyData
    110:112:org.spongycastle.asn1.ASN1Primitive parsePublicKey() -> parsePublicKey
    152:157:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
=======
>>>>>>> rename package name,fix action event info list same time crash
org.spongycastle.crypto.PBEParametersGenerator -> org.spongycastle.crypto.PBEParametersGenerator:
    18:18:void <init>() -> <init>
    135:139:byte[] PKCS5PasswordToUTF8Bytes(char[]) -> PKCS5PasswordToUTF8Bytes
    34:36:void init(byte[],byte[],int) -> init
org.spongycastle.crypto.digests.GeneralDigest -> org.spongycastle.crypto.digests.GeneralDigest:
    25:26:void <init>() -> <init>
    35:36:void <init>(org.spongycastle.crypto.digests.GeneralDigest) -> <init>
    48:51:void copyIn(org.spongycastle.crypto.digests.GeneralDigest) -> copyIn
    115:129:void finish() -> finish
    134:139:void reset() -> reset
    57:65:void update(byte) -> update
    73:110:void update(byte[],int,int) -> update
<<<<<<< HEAD
org.spongycastle.crypto.digests.KeccakDigest -> org.spongycastle.crypto.digests.KeccakDigest:
    15:17:void <clinit>() -> <clinit>
    90:91:void <init>(int) -> <init>
    333:340:void KeccakAbsorb(byte[],int) -> KeccakAbsorb
    345:345:void KeccakExtract() -> KeccakExtract
    356:368:void KeccakPermutation() -> KeccakPermutation
    45:52:boolean LFSR86540(byte[]) -> LFSR86540
    202:204:void absorb(byte[],int,int) -> absorb
    251:249:void absorbBits(int,int) -> absorbBits
    471:481:void chi(long[]) -> chi
    162:162:int getByteLength() -> getByteLength
    111:111:int getDigestSize() -> getDigestSize
    178:175:void init(int) -> init
    184:186:void initSponge(int) -> initSponge
    487:487:void iota(long[],int) -> iota
    60:70:int[] keccakInitializeRhoOffsets() -> keccakInitializeRhoOffsets
    21:35:long[] keccakInitializeRoundConstants() -> keccakInitializeRoundConstants
    269:300:void padAndSwitchToSqueezingPhase() -> padAndSwitchToSqueezingPhase
    438:462:void pi(long[]) -> pi
    152:152:void reset() -> reset
    432:432:void rho(long[]) -> rho
    305:311:void squeeze(byte[],int,long) -> squeeze
    380:424:void theta(long[]) -> theta
    121:121:void update(byte[],int,int) -> update
org.spongycastle.crypto.digests.LongDigest -> org.spongycastle.crypto.digests.LongDigest:
    386:386:void <clinit>() -> <clinit>
    30:33:void <init>() -> <init>
    42:43:void <init>(org.spongycastle.crypto.digests.LongDigest) -> <init>
    234:237:void adjustByteCounts() -> adjustByteCounts
    48:64:void copyIn(org.spongycastle.crypto.digests.LongDigest) -> copyIn
    173:190:void finish() -> finish
    256:337:void processBlock() -> processBlock
    245:251:void processLength(long,long) -> processLength
    220:224:void processWord(byte[],int) -> processWord
    195:207:void reset() -> reset
    120:128:void update(byte) -> update
    139:164:void update(byte[],int,int) -> update
org.spongycastle.crypto.digests.SHA1Digest -> org.spongycastle.crypto.digests.SHA1Digest:
    27:28:void <init>() -> <init>
    37:39:void <init>(org.spongycastle.crypto.digests.SHA1Digest) -> <init>
    318:318:org.spongycastle.util.Memoable copy() -> copy
    66:73:void copyIn(org.spongycastle.crypto.digests.SHA1Digest) -> copyIn
    120:128:int doFinal(byte[],int) -> doFinal
    192:312:void processBlock() -> processBlock
    107:113:void processLength(long) -> processLength
    92:100:void processWord(byte[],int) -> processWord
    138:149:void reset() -> reset
    323:326:void reset(org.spongycastle.util.Memoable) -> reset
org.spongycastle.crypto.digests.SHA224Digest -> org.spongycastle.crypto.digests.SHA224Digest:
    315:315:void <clinit>() -> <clinit>
    34:35:void <init>() -> <init>
    44:46:void <init>(org.spongycastle.crypto.digests.SHA224Digest) -> <init>
    327:327:org.spongycastle.util.Memoable copy() -> copy
    51:63:void doCopy(org.spongycastle.crypto.digests.SHA224Digest) -> doCopy
    135:145:int doFinal(byte[],int) -> doFinal
    183:266:void processBlock() -> processBlock
    122:128:void processLength(long) -> processLength
    107:115:void processWord(byte[],int) -> processWord
    155:172:void reset() -> reset
    332:334:void reset(org.spongycastle.util.Memoable) -> reset
org.spongycastle.crypto.digests.SHA256Digest -> org.spongycastle.crypto.digests.SHA256Digest:
    318:318:void <clinit>() -> <clinit>
    34:35:void <init>() -> <init>
    44:46:void <init>(org.spongycastle.crypto.digests.SHA256Digest) -> <init>
    331:331:org.spongycastle.util.Memoable copy() -> copy
    51:63:void copyIn(org.spongycastle.crypto.digests.SHA256Digest) -> copyIn
    136:147:int doFinal(byte[],int) -> doFinal
    187:269:void processBlock() -> processBlock
    123:129:void processLength(long) -> processLength
    108:116:void processWord(byte[],int) -> processWord
    157:176:void reset() -> reset
    336:338:void reset(org.spongycastle.util.Memoable) -> reset
org.spongycastle.crypto.digests.SHA384Digest -> org.spongycastle.crypto.digests.SHA384Digest:
    27:27:void <init>() -> <init>
    36:36:void <init>(org.spongycastle.crypto.digests.SHA384Digest) -> <init>
    100:100:org.spongycastle.util.Memoable copy() -> copy
    63:72:int doFinal(byte[],int) -> doFinal
    82:95:void reset() -> reset
    105:107:void reset(org.spongycastle.util.Memoable) -> reset
org.spongycastle.crypto.digests.SHA512Digest -> org.spongycastle.crypto.digests.SHA512Digest:
    27:27:void <init>() -> <init>
    36:36:void <init>(org.spongycastle.crypto.digests.SHA512Digest) -> <init>
    102:102:org.spongycastle.util.Memoable copy() -> copy
    63:74:int doFinal(byte[],int) -> doFinal
    84:97:void reset() -> reset
    107:109:void reset(org.spongycastle.util.Memoable) -> reset
org.spongycastle.crypto.digests.SHAKEDigest -> org.spongycastle.crypto.digests.SHAKEDigest:
    34:34:void <init>(int) -> <init>
    23:23:int checkBitLength(int) -> checkBitLength
    48:48:int doFinal(byte[],int) -> doFinal
    53:55:int doFinal(byte[],int,int) -> doFinal
    62:67:int doOutput(byte[],int,int) -> doOutput
    43:43:java.lang.String getAlgorithmName() -> getAlgorithmName
=======
org.spongycastle.crypto.digests.SHA256Digest -> org.spongycastle.crypto.digests.SHA256Digest:
    313:313:void <clinit>() -> <clinit>
    34:35:void <init>() -> <init>
    44:46:void <init>(org.spongycastle.crypto.digests.SHA256Digest) -> <init>
    326:326:org.spongycastle.util.Memoable copy() -> copy
    51:63:void copyIn(org.spongycastle.crypto.digests.SHA256Digest) -> copyIn
    131:142:int doFinal(byte[],int) -> doFinal
    182:264:void processBlock() -> processBlock
    118:124:void processLength(long) -> processLength
    103:111:void processWord(byte[],int) -> processWord
    152:171:void reset() -> reset
    331:333:void reset(org.spongycastle.util.Memoable) -> reset
>>>>>>> rename package name,fix action event info list same time crash
org.spongycastle.crypto.generators.PKCS5S2ParametersGenerator -> org.spongycastle.crypto.generators.PKCS5S2ParametersGenerator:
    36:38:void <init>(org.spongycastle.crypto.Digest) -> <init>
    55:50:void F(byte[],int,byte[],byte[],int) -> F
    78:97:byte[] generateDerivedKey(int) -> generateDerivedKey
    152:152:org.spongycastle.crypto.CipherParameters generateDerivedMacParameters(int) -> generateDerivedMacParameters
    114:118:org.spongycastle.crypto.CipherParameters generateDerivedParameters(int) -> generateDerivedParameters
org.spongycastle.crypto.macs.HMac -> org.spongycastle.crypto.macs.HMac:
    37:55:void <clinit>() -> <clinit>
    85:85:void <init>(org.spongycastle.crypto.Digest) -> <init>
    91:96:void <init>(org.spongycastle.crypto.Digest,int) -> <init>
    177:202:int doFinal(byte[],int) -> doFinal
    61:70:int getByteLength(org.spongycastle.crypto.Digest) -> getByteLength
    156:156:int getMacSize() -> getMacSize
    112:150:void init(org.spongycastle.crypto.CipherParameters) -> init
    170:170:void update(byte[],int,int) -> update
    228:228:void xorPad(byte[],int,byte) -> xorPad
<<<<<<< HEAD
org.spongycastle.crypto.params.AsymmetricKeyParameter -> org.spongycastle.crypto.params.AsymmetricKeyParameter:
    12:13:void <init>(boolean) -> <init>
=======
>>>>>>> rename package name,fix action event info list same time crash
org.spongycastle.crypto.params.KeyParameter -> org.spongycastle.crypto.params.KeyParameter:
    13:13:void <init>(byte[]) -> <init>
    20:23:void <init>(byte[],int,int) -> <init>
    28:28:byte[] getKey() -> getKey
<<<<<<< HEAD
org.spongycastle.crypto.util.DigestFactory -> org.spongycastle.crypto.util.DigestFactory:
    25:25:org.spongycastle.crypto.Digest createSHA1() -> createSHA1
    30:30:org.spongycastle.crypto.Digest createSHA224() -> createSHA224
    35:35:org.spongycastle.crypto.Digest createSHA256() -> createSHA256
    40:40:org.spongycastle.crypto.Digest createSHA384() -> createSHA384
    45:45:org.spongycastle.crypto.Digest createSHA512() -> createSHA512
org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission -> org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission:
    61:63:void <init>(java.lang.String,java.lang.String) -> <init>
    69:108:int calculateMask(java.lang.String) -> calculateMask
    145:149:boolean equals(java.lang.Object) -> equals
    116:116:java.lang.String getActions() -> getActions
    157:157:int hashCode() -> hashCode
    122:134:boolean implies(java.security.Permission) -> implies
org.spongycastle.jcajce.provider.symmetric.util.ClassUtil -> org.spongycastle.jcajce.provider.symmetric.util.ClassUtil:
    12:20:java.lang.Class loadClass(java.lang.Class,java.lang.String) -> loadClass
org.spongycastle.jcajce.provider.symmetric.util.ClassUtil$1 -> org.spongycastle.jcajce.provider.symmetric.util.ClassUtil$1:
    21:21:void <init>(java.lang.String) -> <init>
    26:26:java.lang.Object run() -> run
org.spongycastle.jcajce.provider.util.AlgorithmProvider -> org.spongycastle.jcajce.provider.util.AlgorithmProvider:
    5:5:void <init>() -> <init>
org.spongycastle.jce.provider.BouncyCastleProvider -> org.spongycastle.jce.provider.BouncyCastleProvider:
    61:128:void <clinit>() -> <clinit>
    140:142:void <init>() -> <init>
    54:54:void access$000(org.spongycastle.jce.provider.BouncyCastleProvider) -> access$000
    278:281:void addKeyInfoConverter(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter) -> addKeyInfoConverter
    217:229:void loadAlgorithms(java.lang.String,java.lang.String[]) -> loadAlgorithms
    238:244:void loadPQCKeys() -> loadPQCKeys
    154:212:void setup() -> setup
org.spongycastle.jce.provider.BouncyCastleProvider$1 -> org.spongycastle.jce.provider.BouncyCastleProvider$1:
    143:143:void <init>(org.spongycastle.jce.provider.BouncyCastleProvider) -> <init>
    146:146:java.lang.Object run() -> run
org.spongycastle.jce.provider.BouncyCastleProviderConfiguration -> org.spongycastle.jce.provider.BouncyCastleProviderConfiguration:
    21:31:void <clinit>() -> <clinit>
    18:40:void <init>() -> <init>
org.spongycastle.pqc.asn1.McElieceCCA2PrivateKey -> org.spongycastle.pqc.asn1.McElieceCCA2PrivateKey:
    46:52:void <init>(int,int,org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.asn1.x509.AlgorithmIdentifier) -> <init>
    56:69:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    99:99:org.spongycastle.asn1.x509.AlgorithmIdentifier getDigest() -> getDigest
    84:84:org.spongycastle.pqc.math.linearalgebra.GF2mField getField() -> getField
    89:89:org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly() -> getGoppaPoly
    129:135:org.spongycastle.pqc.asn1.McElieceCCA2PrivateKey getInstance(java.lang.Object) -> getInstance
    79:79:int getK() -> getK
    74:74:int getN() -> getN
    94:94:org.spongycastle.pqc.math.linearalgebra.Permutation getP() -> getP
    105:124:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.asn1.McElieceCCA2PublicKey -> org.spongycastle.pqc.asn1.McElieceCCA2PublicKey:
    25:29:void <init>(int,int,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.asn1.x509.AlgorithmIdentifier) -> <init>
    33:42:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    62:62:org.spongycastle.asn1.x509.AlgorithmIdentifier getDigest() -> getDigest
    57:57:org.spongycastle.pqc.math.linearalgebra.GF2Matrix getG() -> getG
    85:91:org.spongycastle.pqc.asn1.McElieceCCA2PublicKey getInstance(java.lang.Object) -> getInstance
    47:47:int getN() -> getN
    52:52:int getT() -> getT
    67:80:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.asn1.McEliecePrivateKey -> org.spongycastle.pqc.asn1.McEliecePrivateKey:
    30:37:void <init>(int,int,org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.GF2Matrix) -> <init>
    55:70:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    85:85:org.spongycastle.pqc.math.linearalgebra.GF2mField getField() -> getField
    90:90:org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly() -> getGoppaPoly
    42:48:org.spongycastle.pqc.asn1.McEliecePrivateKey getInstance(java.lang.Object) -> getInstance
    80:80:int getK() -> getK
    75:75:int getN() -> getN
    100:100:org.spongycastle.pqc.math.linearalgebra.Permutation getP1() -> getP1
    105:105:org.spongycastle.pqc.math.linearalgebra.Permutation getP2() -> getP2
    95:95:org.spongycastle.pqc.math.linearalgebra.GF2Matrix getSInv() -> getSInv
    112:135:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.asn1.McEliecePublicKey -> org.spongycastle.pqc.asn1.McEliecePublicKey:
    23:26:void <init>(int,int,org.spongycastle.pqc.math.linearalgebra.GF2Matrix) -> <init>
    30:37:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    52:52:org.spongycastle.pqc.math.linearalgebra.GF2Matrix getG() -> getG
    73:79:org.spongycastle.pqc.asn1.McEliecePublicKey getInstance(java.lang.Object) -> getInstance
    42:42:int getN() -> getN
    47:47:int getT() -> getT
    57:68:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.asn1.PQCObjectIdentifiers -> org.spongycastle.pqc.asn1.PQCObjectIdentifiers:
    14:74:void <clinit>() -> <clinit>
org.spongycastle.pqc.asn1.RainbowPrivateKey -> org.spongycastle.pqc.asn1.RainbowPrivateKey:
    58:153:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    160:167:void <init>(short[][],short[],short[][],short[],int[],org.spongycastle.pqc.crypto.rainbow.Layer[]) -> <init>
    206:206:short[] getB1() -> getB1
    216:216:short[] getB2() -> getB2
    172:178:org.spongycastle.pqc.asn1.RainbowPrivateKey getInstance(java.lang.Object) -> getInstance
    196:196:short[][] getInvA1() -> getInvA1
    226:226:short[][] getInvA2() -> getInvA2
    236:236:org.spongycastle.pqc.crypto.rainbow.Layer[] getLayers() -> getLayers
    246:246:int[] getVi() -> getVi
    251:347:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.asn1.RainbowPublicKey -> org.spongycastle.pqc.asn1.RainbowPublicKey:
    42:70:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    74:79:void <init>(int,short[][],short[][],short[]) -> <init>
    114:114:short[][] getCoeffQuadratic() -> getCoeffQuadratic
    130:130:short[] getCoeffScalar() -> getCoeffScalar
    122:122:short[][] getCoeffSingular() -> getCoeffSingular
    106:106:int getDocLength() -> getDocLength
    84:90:org.spongycastle.pqc.asn1.RainbowPublicKey getInstance(java.lang.Object) -> getInstance
    135:172:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.asn1.SPHINCS256KeyParams -> org.spongycastle.pqc.asn1.SPHINCS256KeyParams:
    18:20:void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier) -> <init>
    24:26:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    31:37:org.spongycastle.pqc.asn1.SPHINCS256KeyParams getInstance(java.lang.Object) -> getInstance
    45:45:org.spongycastle.asn1.x509.AlgorithmIdentifier getTreeDigest() -> getTreeDigest
    50:55:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.asn1.XMSSKeyParams -> org.spongycastle.pqc.asn1.XMSSKeyParams:
    29:32:void <init>(int,org.spongycastle.asn1.x509.AlgorithmIdentifier) -> <init>
    36:39:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    58:58:int getHeight() -> getHeight
    44:50:org.spongycastle.pqc.asn1.XMSSKeyParams getInstance(java.lang.Object) -> getInstance
    63:63:org.spongycastle.asn1.x509.AlgorithmIdentifier getTreeDigest() -> getTreeDigest
    68:74:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.asn1.XMSSMTKeyParams -> org.spongycastle.pqc.asn1.XMSSMTKeyParams:
    31:35:void <init>(int,int,org.spongycastle.asn1.x509.AlgorithmIdentifier) -> <init>
    39:43:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    62:62:int getHeight() -> getHeight
    48:54:org.spongycastle.pqc.asn1.XMSSMTKeyParams getInstance(java.lang.Object) -> getInstance
    67:67:int getLayers() -> getLayers
    72:72:org.spongycastle.asn1.x509.AlgorithmIdentifier getTreeDigest() -> getTreeDigest
    77:84:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.asn1.XMSSMTPrivateKey -> org.spongycastle.pqc.asn1.XMSSMTPrivateKey:
    45:51:void <init>(int,byte[],byte[],byte[],byte[],byte[]) -> <init>
    130:145:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.asn1.XMSSPrivateKey -> org.spongycastle.pqc.asn1.XMSSPrivateKey:
    45:51:void <init>(int,byte[],byte[],byte[],byte[],byte[]) -> <init>
    55:58:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    125:125:byte[] getBdsState() -> getBdsState
    100:100:int getIndex() -> getIndex
    86:92:org.spongycastle.pqc.asn1.XMSSPrivateKey getInstance(java.lang.Object) -> getInstance
    115:115:byte[] getPublicSeed() -> getPublicSeed
    120:120:byte[] getRoot() -> getRoot
    110:110:byte[] getSecretKeyPRF() -> getSecretKeyPRF
    105:105:byte[] getSecretKeySeed() -> getSecretKeySeed
    130:145:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.asn1.XMSSPublicKey -> org.spongycastle.pqc.asn1.XMSSPublicKey:
    31:33:void <init>(byte[],byte[]) -> <init>
    37:40:void <init>(org.spongycastle.asn1.ASN1Sequence) -> <init>
    49:55:org.spongycastle.pqc.asn1.XMSSPublicKey getInstance(java.lang.Object) -> getInstance
    63:63:byte[] getPublicSeed() -> getPublicSeed
    68:68:byte[] getRoot() -> getRoot
    73:80:org.spongycastle.asn1.ASN1Primitive toASN1Primitive() -> toASN1Primitive
org.spongycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters -> org.spongycastle.pqc.crypto.mceliece.McElieceCCA2KeyParameters:
    15:16:void <init>(boolean,java.lang.String) -> <init>
    22:22:java.lang.String getDigest() -> getDigest
org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters -> org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters:
    53:53:void <init>(int,int,org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM,org.spongycastle.pqc.math.linearalgebra.Permutation,java.lang.String) -> <init>
    70:82:void <init>(int,int,org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.math.linearalgebra.Permutation,java.lang.String) -> <init>
    114:114:org.spongycastle.pqc.math.linearalgebra.GF2mField getField() -> getField
    122:122:org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly() -> getGoppaPoly
    138:138:org.spongycastle.pqc.math.linearalgebra.GF2Matrix getH() -> getH
    98:98:int getK() -> getK
    90:90:int getN() -> getN
    130:130:org.spongycastle.pqc.math.linearalgebra.Permutation getP() -> getP
org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters -> org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters:
    31:35:void <init>(int,int,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,java.lang.String) -> <init>
    59:59:org.spongycastle.pqc.math.linearalgebra.GF2Matrix getG() -> getG
    43:43:int getN() -> getN
    51:51:int getT() -> getT
org.spongycastle.pqc.crypto.mceliece.McElieceKeyParameters -> org.spongycastle.pqc.crypto.mceliece.McElieceKeyParameters:
    15:16:void <init>(boolean,org.spongycastle.pqc.crypto.mceliece.McElieceParameters) -> <init>
org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters -> org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters:
    62:75:void <init>(int,int,org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.GF2Matrix) -> <init>
    136:136:org.spongycastle.pqc.math.linearalgebra.GF2mField getField() -> getField
    144:144:org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly() -> getGoppaPoly
    128:128:int getK() -> getK
    120:120:int getN() -> getN
    160:160:org.spongycastle.pqc.math.linearalgebra.Permutation getP1() -> getP1
    168:168:org.spongycastle.pqc.math.linearalgebra.Permutation getP2() -> getP2
    152:152:org.spongycastle.pqc.math.linearalgebra.GF2Matrix getSInv() -> getSInv
org.spongycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters -> org.spongycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters:
    27:30:void <init>(int,int,org.spongycastle.pqc.math.linearalgebra.GF2Matrix) -> <init>
    54:54:org.spongycastle.pqc.math.linearalgebra.GF2Matrix getG() -> getG
    38:38:int getN() -> getN
    46:46:int getT() -> getT
org.spongycastle.pqc.crypto.newhope.NHPrivateKeyParameters -> org.spongycastle.pqc.crypto.newhope.NHPrivateKeyParameters:
    13:15:void <init>(short[]) -> <init>
    20:20:short[] getSecData() -> getSecData
org.spongycastle.pqc.crypto.newhope.NHPublicKeyParameters -> org.spongycastle.pqc.crypto.newhope.NHPublicKeyParameters:
    13:14:void <init>(byte[]) -> <init>
    24:24:byte[] getPubData() -> getPubData
org.spongycastle.pqc.crypto.rainbow.Layer -> org.spongycastle.pqc.crypto.rainbow.Layer:
    54:63:void <init>(byte,byte,short[][][],short[][][],short[][],short[]) -> <init>
    295:307:boolean equals(java.lang.Object) -> equals
    253:253:short[][][] getCoeffAlpha() -> getCoeffAlpha
    264:264:short[][][] getCoeffBeta() -> getCoeffBeta
    284:284:short[] getCoeffEta() -> getCoeffEta
    274:274:short[][] getCoeffGamma() -> getCoeffGamma
    243:243:int getOi() -> getOi
    223:223:int getVi() -> getVi
    233:233:int getViNext() -> getViNext
    312:318:int hashCode() -> hashCode
org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil -> org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil:
    38:41:short[] convertArray(byte[]) -> convertArray
    55:60:short[][] convertArray(byte[][]) -> convertArray
    75:82:short[][][] convertArray(byte[][][]) -> convertArray
    116:119:byte[] convertArray(short[]) -> convertArray
    133:138:byte[][] convertArray(short[][]) -> convertArray
    153:160:byte[][][] convertArray(short[][][]) -> convertArray
    20:23:int[] convertArraytoInt(byte[]) -> convertArraytoInt
    98:101:byte[] convertIntArray(int[]) -> convertIntArray
    176:183:boolean equals(short[],short[]) -> equals
    197:204:boolean equals(short[][],short[][]) -> equals
    218:225:boolean equals(short[][][],short[][][]) -> equals
org.spongycastle.pqc.crypto.sphincs.SPHINCSPrivateKeyParameters -> org.spongycastle.pqc.crypto.sphincs.SPHINCSPrivateKeyParameters:
    13:14:void <init>(byte[]) -> <init>
    19:19:byte[] getKeyData() -> getKeyData
org.spongycastle.pqc.crypto.sphincs.SPHINCSPublicKeyParameters -> org.spongycastle.pqc.crypto.sphincs.SPHINCSPublicKeyParameters:
    13:14:void <init>(byte[]) -> <init>
    19:19:byte[] getKeyData() -> getKeyData
org.spongycastle.pqc.crypto.xmss.BDS -> org.spongycastle.pqc.crypto.xmss.BDS:
    41:43:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSParameters,int) -> <init>
    56:57:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSParameters,byte[],byte[],org.spongycastle.pqc.crypto.xmss.OTSHashAddress) -> <init>
    71:78:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSParameters,byte[],byte[],org.spongycastle.pqc.crypto.xmss.OTSHashAddress,int) -> <init>
    83:89:void <init>(org.spongycastle.pqc.crypto.xmss.WOTSPlus,int,int) -> <init>
    107:121:void <init>(org.spongycastle.pqc.crypto.xmss.BDS,byte[],byte[],org.spongycastle.pqc.crypto.xmss.OTSHashAddress) -> <init>
    324:342:org.spongycastle.pqc.crypto.xmss.BDSTreeHash getBDSTreeHashInstanceForUpdate() -> getBDSTreeHashInstanceForUpdate
    411:411:int getIndex() -> getIndex
    126:126:org.spongycastle.pqc.crypto.xmss.BDS getNextState(byte[],byte[],org.spongycastle.pqc.crypto.xmss.OTSHashAddress) -> getNextState
    136:133:void initialize(byte[],byte[],org.spongycastle.pqc.crypto.xmss.OTSHashAddress) -> initialize
    222:220:void nextAuthenticationPath(byte[],byte[],org.spongycastle.pqc.crypto.xmss.OTSHashAddress) -> nextAuthenticationPath
    401:403:void setXMSS(org.spongycastle.pqc.crypto.xmss.XMSSParameters) -> setXMSS
    353:355:void validate() -> validate
org.spongycastle.pqc.crypto.xmss.BDSStateMap -> org.spongycastle.pqc.crypto.xmss.BDSStateMap:
    16:13:void <init>() -> <init>
    21:24:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSMTParameters,long,byte[],byte[]) -> <init>
    108:108:org.spongycastle.pqc.crypto.xmss.BDS get(int) -> get
    118:118:void put(int,org.spongycastle.pqc.crypto.xmss.BDS) -> put
    91:97:void setXMSS(org.spongycastle.pqc.crypto.xmss.XMSSParameters) -> setXMSS
    113:113:org.spongycastle.pqc.crypto.xmss.BDS update(int,byte[],byte[],org.spongycastle.pqc.crypto.xmss.OTSHashAddress) -> update
    42:84:void updateState(org.spongycastle.pqc.crypto.xmss.XMSSMTParameters,long,byte[],byte[]) -> updateState
org.spongycastle.pqc.crypto.xmss.BDSTreeHash -> org.spongycastle.pqc.crypto.xmss.BDSTreeHash:
    21:24:void <init>(int) -> <init>
    125:129:int getHeight() -> getHeight
    134:134:int getIndexLeaf() -> getIndexLeaf
    159:159:org.spongycastle.pqc.crypto.xmss.XMSSNode getTailNode() -> getTailNode
    29:33:void initialize(int) -> initialize
    149:149:boolean isFinished() -> isFinished
    154:154:boolean isInitialized() -> isInitialized
    139:143:void setNode(org.spongycastle.pqc.crypto.xmss.XMSSNode) -> setNode
    42:40:void update(java.util.Stack,org.spongycastle.pqc.crypto.xmss.WOTSPlus,byte[],byte[],org.spongycastle.pqc.crypto.xmss.OTSHashAddress) -> update
org.spongycastle.pqc.crypto.xmss.DefaultXMSSMTOid -> org.spongycastle.pqc.crypto.xmss.DefaultXMSSMTOid:
    19:84:void <clinit>() -> <clinit>
    105:107:void <init>(int,java.lang.String) -> <init>
    145:143:java.lang.String createKey(java.lang.String,int,int,int,int,int) -> createKey
    126:124:org.spongycastle.pqc.crypto.xmss.DefaultXMSSMTOid lookup(java.lang.String,int,int,int,int,int) -> lookup
    158:158:java.lang.String toString() -> toString
org.spongycastle.pqc.crypto.xmss.DefaultXMSSOid -> org.spongycastle.pqc.crypto.xmss.DefaultXMSSOid:
    19:32:void <clinit>() -> <clinit>
    53:55:void <init>(int,java.lang.String) -> <init>
    93:91:java.lang.String createKey(java.lang.String,int,int,int,int) -> createKey
    74:72:org.spongycastle.pqc.crypto.xmss.DefaultXMSSOid lookup(java.lang.String,int,int,int,int) -> lookup
    107:107:java.lang.String toString() -> toString
org.spongycastle.pqc.crypto.xmss.HashTreeAddress -> org.spongycastle.pqc.crypto.xmss.HashTreeAddress:
    8:8:void <init>(org.spongycastle.pqc.crypto.xmss.HashTreeAddress$Builder,org.spongycastle.pqc.crypto.xmss.HashTreeAddress$1) -> <init>
    21:24:void <init>(org.spongycastle.pqc.crypto.xmss.HashTreeAddress$Builder) -> <init>
    82:82:int getTreeHeight() -> getTreeHeight
    87:87:int getTreeIndex() -> getTreeIndex
    68:71:byte[] toByteArray() -> toByteArray
org.spongycastle.pqc.crypto.xmss.HashTreeAddress$Builder -> org.spongycastle.pqc.crypto.xmss.HashTreeAddress$Builder:
    37:33:void <init>() -> <init>
    27:27:int access$000(org.spongycastle.pqc.crypto.xmss.HashTreeAddress$Builder) -> access$000
    27:27:int access$100(org.spongycastle.pqc.crypto.xmss.HashTreeAddress$Builder) -> access$100
    55:55:org.spongycastle.pqc.crypto.xmss.XMSSAddress build() -> build
    27:27:org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder getThis() -> getThis
    42:42:org.spongycastle.pqc.crypto.xmss.HashTreeAddress$Builder withTreeHeight(int) -> withTreeHeight
    48:48:org.spongycastle.pqc.crypto.xmss.HashTreeAddress$Builder withTreeIndex(int) -> withTreeIndex
org.spongycastle.pqc.crypto.xmss.KeyedHashFunctions -> org.spongycastle.pqc.crypto.xmss.KeyedHashFunctions:
    17:20:void <init>(org.spongycastle.crypto.Digest,int) -> <init>
    50:52:byte[] F(byte[],byte[]) -> F
    63:65:byte[] H(byte[],byte[]) -> H
    85:87:byte[] PRF(byte[],byte[]) -> PRF
    28:43:byte[] coreDigest(int,byte[],byte[]) -> coreDigest
org.spongycastle.pqc.crypto.xmss.LTreeAddress -> org.spongycastle.pqc.crypto.xmss.LTreeAddress:
    9:9:void <init>(org.spongycastle.pqc.crypto.xmss.LTreeAddress$Builder,org.spongycastle.pqc.crypto.xmss.LTreeAddress$1) -> <init>
    18:21:void <init>(org.spongycastle.pqc.crypto.xmss.LTreeAddress$Builder) -> <init>
    71:71:int getLTreeAddress() -> getLTreeAddress
    75:75:int getTreeHeight() -> getTreeHeight
    79:79:int getTreeIndex() -> getTreeIndex
    63:66:byte[] toByteArray() -> toByteArray
org.spongycastle.pqc.crypto.xmss.LTreeAddress$Builder -> org.spongycastle.pqc.crypto.xmss.LTreeAddress$Builder:
    32:29:void <init>() -> <init>
    24:24:int access$000(org.spongycastle.pqc.crypto.xmss.LTreeAddress$Builder) -> access$000
    24:24:int access$100(org.spongycastle.pqc.crypto.xmss.LTreeAddress$Builder) -> access$100
    24:24:int access$200(org.spongycastle.pqc.crypto.xmss.LTreeAddress$Builder) -> access$200
    52:52:org.spongycastle.pqc.crypto.xmss.XMSSAddress build() -> build
    24:24:org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder getThis() -> getThis
    36:36:org.spongycastle.pqc.crypto.xmss.LTreeAddress$Builder withLTreeAddress(int) -> withLTreeAddress
    41:41:org.spongycastle.pqc.crypto.xmss.LTreeAddress$Builder withTreeHeight(int) -> withTreeHeight
    46:46:org.spongycastle.pqc.crypto.xmss.LTreeAddress$Builder withTreeIndex(int) -> withTreeIndex
org.spongycastle.pqc.crypto.xmss.OTSHashAddress -> org.spongycastle.pqc.crypto.xmss.OTSHashAddress:
    8:8:void <init>(org.spongycastle.pqc.crypto.xmss.OTSHashAddress$Builder,org.spongycastle.pqc.crypto.xmss.OTSHashAddress$1) -> <init>
    20:23:void <init>(org.spongycastle.pqc.crypto.xmss.OTSHashAddress$Builder) -> <init>
    88:88:int getChainAddress() -> getChainAddress
    93:93:int getHashAddress() -> getHashAddress
    83:83:int getOTSAddress() -> getOTSAddress
    74:77:byte[] toByteArray() -> toByteArray
org.spongycastle.pqc.crypto.xmss.OTSHashAddress$Builder -> org.spongycastle.pqc.crypto.xmss.OTSHashAddress$Builder:
    37:33:void <init>() -> <init>
    26:26:int access$000(org.spongycastle.pqc.crypto.xmss.OTSHashAddress$Builder) -> access$000
    26:26:int access$100(org.spongycastle.pqc.crypto.xmss.OTSHashAddress$Builder) -> access$100
    26:26:int access$200(org.spongycastle.pqc.crypto.xmss.OTSHashAddress$Builder) -> access$200
    61:61:org.spongycastle.pqc.crypto.xmss.XMSSAddress build() -> build
    26:26:org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder getThis() -> getThis
    48:48:org.spongycastle.pqc.crypto.xmss.OTSHashAddress$Builder withChainAddress(int) -> withChainAddress
    54:54:org.spongycastle.pqc.crypto.xmss.OTSHashAddress$Builder withHashAddress(int) -> withHashAddress
    42:42:org.spongycastle.pqc.crypto.xmss.OTSHashAddress$Builder withOTSAddress(int) -> withOTSAddress
org.spongycastle.pqc.crypto.xmss.WOTSPlus -> org.spongycastle.pqc.crypto.xmss.WOTSPlus:
    37:40:void <init>(org.spongycastle.pqc.crypto.xmss.WOTSPlusParameters) -> <init>
    229:232:byte[] chain(byte[],int,int,org.spongycastle.pqc.crypto.xmss.OTSHashAddress) -> chain
    338:340:byte[] expandSecretKeySeed(int) -> expandSecretKeySeed
    362:362:org.spongycastle.pqc.crypto.xmss.KeyedHashFunctions getKhf() -> getKhf
    352:352:org.spongycastle.pqc.crypto.xmss.WOTSPlusParameters getParams() -> getParams
    413:411:org.spongycastle.pqc.crypto.xmss.WOTSPlusPublicKeyParameters getPublicKey(org.spongycastle.pqc.crypto.xmss.OTSHashAddress) -> getPublicKey
    382:382:byte[] getPublicSeed() -> getPublicSeed
    324:327:byte[] getWOTSPlusSecretKey(byte[],org.spongycastle.pqc.crypto.xmss.OTSHashAddress) -> getWOTSPlusSecretKey
    61:59:void importKeys(byte[],byte[]) -> importKeys
org.spongycastle.pqc.crypto.xmss.WOTSPlusOid -> org.spongycastle.pqc.crypto.xmss.WOTSPlusOid:
    21:26:void <clinit>() -> <clinit>
    46:48:void <init>(int,java.lang.String) -> <init>
    80:78:java.lang.String createKey(java.lang.String,int,int,int) -> createKey
    64:62:org.spongycastle.pqc.crypto.xmss.WOTSPlusOid lookup(java.lang.String,int,int,int) -> lookup
    95:95:java.lang.String toString() -> toString
org.spongycastle.pqc.crypto.xmss.WOTSPlusParameters -> org.spongycastle.pqc.crypto.xmss.WOTSPlusParameters:
    48:51:void <init>(org.spongycastle.crypto.Digest) -> <init>
    84:84:org.spongycastle.crypto.Digest getDigest() -> getDigest
    94:94:int getDigestSize() -> getDigestSize
    114:114:int getLen() -> getLen
    104:104:int getWinternitzParameter() -> getWinternitzParameter
org.spongycastle.pqc.crypto.xmss.WOTSPlusPublicKeyParameters -> org.spongycastle.pqc.crypto.xmss.WOTSPlusPublicKeyParameters:
    13:16:void <init>(org.spongycastle.pqc.crypto.xmss.WOTSPlusParameters,byte[][]) -> <init>
    42:42:byte[][] toByteArray() -> toByteArray
org.spongycastle.pqc.crypto.xmss.XMSSAddress -> org.spongycastle.pqc.crypto.xmss.XMSSAddress:
    17:21:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder) -> <init>
    90:90:int getKeyAndMask() -> getKeyAndMask
    75:75:int getLayerAddress() -> getLayerAddress
    80:80:long getTreeAddress() -> getTreeAddress
    65:69:byte[] toByteArray() -> toByteArray
org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder -> org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder:
    36:37:void <init>(int) -> <init>
    24:24:int access$000(org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder) -> access$000
    24:24:long access$100(org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder) -> access$100
    24:24:int access$200(org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder) -> access$200
    24:24:int access$300(org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder) -> access$300
    54:55:org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder withKeyAndMask(int) -> withKeyAndMask
    42:43:org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder withLayerAddress(int) -> withLayerAddress
    48:49:org.spongycastle.pqc.crypto.xmss.XMSSAddress$Builder withTreeAddress(long) -> withTreeAddress
org.spongycastle.pqc.crypto.xmss.XMSSMTParameters -> org.spongycastle.pqc.crypto.xmss.XMSSMTParameters:
    25:29:void <init>(int,int,org.spongycastle.crypto.Digest) -> <init>
    86:86:org.spongycastle.crypto.Digest getDigest() -> getDigest
    96:96:int getDigestSize() -> getDigestSize
    61:61:int getHeight() -> getHeight
    71:71:int getLayers() -> getLayers
    111:111:int getLen() -> getLen
    106:106:int getWinternitzParameter() -> getWinternitzParameter
    76:76:org.spongycastle.pqc.crypto.xmss.XMSSParameters getXMSSParameters() -> getXMSSParameters
    43:41:int xmssTreeHeight(int,int) -> xmssTreeHeight
org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters -> org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters:
    11:11:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder,org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$1) -> <init>
    26:30:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder) -> <init>
    308:308:org.spongycastle.pqc.crypto.xmss.XMSSMTParameters getParameters() -> getParameters
    238:271:byte[] toByteArray() -> toByteArray
org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder -> org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder:
    182:183:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSMTParameters) -> <init>
    165:165:org.spongycastle.pqc.crypto.xmss.XMSSMTParameters access$000(org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder) -> access$000
    165:165:byte[] access$100(org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder) -> access$100
    165:165:org.spongycastle.pqc.crypto.xmss.XMSSParameters access$200(org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder) -> access$200
    165:165:long access$300(org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder) -> access$300
    165:165:byte[] access$400(org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder) -> access$400
    165:165:byte[] access$500(org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder) -> access$500
    165:165:byte[] access$600(org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder) -> access$600
    165:165:byte[] access$700(org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder) -> access$700
    165:165:org.spongycastle.pqc.crypto.xmss.BDSStateMap access$800(org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder) -> access$800
    231:231:org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters build() -> build
    218:218:org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder withBDSState(org.spongycastle.pqc.crypto.xmss.BDSStateMap) -> withBDSState
    188:188:org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder withIndex(long) -> withIndex
    206:206:org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder withPublicSeed(byte[]) -> withPublicSeed
    212:212:org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder withRoot(byte[]) -> withRoot
    200:200:org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder withSecretKeyPRF(byte[]) -> withSecretKeyPRF
    194:194:org.spongycastle.pqc.crypto.xmss.XMSSMTPrivateKeyParameters$Builder withSecretKeySeed(byte[]) -> withSecretKeySeed
org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters -> org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters:
    8:8:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters$Builder,org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters$1) -> <init>
    20:24:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters$Builder) -> <init>
    157:157:org.spongycastle.pqc.crypto.xmss.XMSSMTParameters getParameters() -> getParameters
    152:152:byte[] getPublicSeed() -> getPublicSeed
    147:147:byte[] getRoot() -> getRoot
    124:141:byte[] toByteArray() -> toByteArray
org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters$Builder -> org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters$Builder:
    93:94:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSMTParameters) -> <init>
    81:81:org.spongycastle.pqc.crypto.xmss.XMSSMTParameters access$000(org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters$Builder) -> access$000
    81:81:byte[] access$100(org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters$Builder) -> access$100
    81:81:byte[] access$200(org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters$Builder) -> access$200
    81:81:byte[] access$300(org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters$Builder) -> access$300
    117:117:org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters build() -> build
    105:105:org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters$Builder withPublicSeed(byte[]) -> withPublicSeed
    99:99:org.spongycastle.pqc.crypto.xmss.XMSSMTPublicKeyParameters$Builder withRoot(byte[]) -> withRoot
org.spongycastle.pqc.crypto.xmss.XMSSNode -> org.spongycastle.pqc.crypto.xmss.XMSSNode:
    19:21:void <init>(int,byte[]) -> <init>
    8:8:java.lang.Object clone() -> clone
    36:36:org.spongycastle.pqc.crypto.xmss.XMSSNode clone() -> clone
    26:26:int getHeight() -> getHeight
    31:31:byte[] getValue() -> getValue
org.spongycastle.pqc.crypto.xmss.XMSSNodeUtil -> org.spongycastle.pqc.crypto.xmss.XMSSNodeUtil:
    22:16:org.spongycastle.pqc.crypto.xmss.XMSSNode lTree(org.spongycastle.pqc.crypto.xmss.WOTSPlus,org.spongycastle.pqc.crypto.xmss.WOTSPlusPublicKeyParameters,org.spongycastle.pqc.crypto.xmss.LTreeAddress) -> lTree
    74:68:org.spongycastle.pqc.crypto.xmss.XMSSNode randomizeHash(org.spongycastle.pqc.crypto.xmss.WOTSPlus,org.spongycastle.pqc.crypto.xmss.XMSSNode,org.spongycastle.pqc.crypto.xmss.XMSSNode,org.spongycastle.pqc.crypto.xmss.XMSSAddress) -> randomizeHash
org.spongycastle.pqc.crypto.xmss.XMSSParameters -> org.spongycastle.pqc.crypto.xmss.XMSSParameters:
    25:28:void <init>(int,org.spongycastle.crypto.Digest) -> <init>
    47:54:int determineMinK() -> determineMinK
    59:59:org.spongycastle.crypto.Digest getDigest() -> getDigest
    69:69:int getDigestSize() -> getDigestSize
    89:89:int getHeight() -> getHeight
    99:99:int getK() -> getK
    94:94:org.spongycastle.pqc.crypto.xmss.WOTSPlus getWOTSPlus() -> getWOTSPlus
    79:79:int getWinternitzParameter() -> getWinternitzParameter
org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters -> org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters:
    12:12:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder,org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$1) -> <init>
    45:49:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder) -> <init>
    326:326:org.spongycastle.pqc.crypto.xmss.XMSSParameters getParameters() -> getParameters
    257:288:byte[] toByteArray() -> toByteArray
org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder -> org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder:
    201:202:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSParameters) -> <init>
    184:184:org.spongycastle.pqc.crypto.xmss.XMSSParameters access$000(org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder) -> access$000
    184:184:byte[] access$100(org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder) -> access$100
    184:184:org.spongycastle.pqc.crypto.xmss.XMSSParameters access$200(org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder) -> access$200
    184:184:byte[] access$300(org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder) -> access$300
    184:184:byte[] access$400(org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder) -> access$400
    184:184:byte[] access$500(org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder) -> access$500
    184:184:byte[] access$600(org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder) -> access$600
    184:184:org.spongycastle.pqc.crypto.xmss.BDS access$700(org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder) -> access$700
    184:184:int access$800(org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder) -> access$800
    250:250:org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters build() -> build
    237:237:org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder withBDSState(org.spongycastle.pqc.crypto.xmss.BDS) -> withBDSState
    207:207:org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder withIndex(int) -> withIndex
    225:225:org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder withPublicSeed(byte[]) -> withPublicSeed
    231:231:org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder withRoot(byte[]) -> withRoot
    219:219:org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder withSecretKeyPRF(byte[]) -> withSecretKeyPRF
    213:213:org.spongycastle.pqc.crypto.xmss.XMSSPrivateKeyParameters$Builder withSecretKeySeed(byte[]) -> withSecretKeySeed
org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters -> org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters:
    8:8:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters$Builder,org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters$1) -> <init>
    23:27:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters$Builder) -> <init>
    162:162:org.spongycastle.pqc.crypto.xmss.XMSSParameters getParameters() -> getParameters
    157:157:byte[] getPublicSeed() -> getPublicSeed
    152:152:byte[] getRoot() -> getRoot
    129:146:byte[] toByteArray() -> toByteArray
org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters$Builder -> org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters$Builder:
    98:99:void <init>(org.spongycastle.pqc.crypto.xmss.XMSSParameters) -> <init>
    86:86:org.spongycastle.pqc.crypto.xmss.XMSSParameters access$000(org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters$Builder) -> access$000
    86:86:byte[] access$100(org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters$Builder) -> access$100
    86:86:byte[] access$200(org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters$Builder) -> access$200
    86:86:byte[] access$300(org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters$Builder) -> access$300
    122:122:org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters build() -> build
    110:110:org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters$Builder withPublicSeed(byte[]) -> withPublicSeed
    104:104:org.spongycastle.pqc.crypto.xmss.XMSSPublicKeyParameters$Builder withRoot(byte[]) -> withRoot
org.spongycastle.pqc.crypto.xmss.XMSSUtil -> org.spongycastle.pqc.crypto.xmss.XMSSUtil:
    88:83:long bytesToXBigEndian(byte[],int,int) -> bytesToXBigEndian
    105:103:byte[] cloneArray(byte[]) -> cloneArray
    121:123:byte[][] cloneArray(byte[][]) -> cloneArray
    220:210:void copyBytesAtOffset(byte[],byte[],int) -> copyBytesAtOffset
    327:329:java.lang.Object deserialize(byte[]) -> deserialize
    252:242:byte[] extractBytesAtOffset(byte[],int,int) -> extractBytesAtOffset
    292:290:int getDigestSize(org.spongycastle.crypto.Digest) -> getDigestSize
    189:191:boolean hasNullPointer(byte[][]) -> hasNullPointer
    275:275:boolean isIndexValid(int,long) -> isIndexValid
    361:361:boolean isNewAuthenticationPathNeeded(long,int,int) -> isNewAuthenticationPathNeeded
    317:321:byte[] serialize(java.lang.Object) -> serialize
    44:47:byte[] toBytesBigEndian(long,int) -> toBytesBigEndian
org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey -> org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey:
    32:33:void <init>(org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters) -> <init>
    131:141:boolean equals(java.lang.Object) -> equals
    183:188:byte[] getEncoded() -> getEncoded
    75:75:org.spongycastle.pqc.math.linearalgebra.GF2mField getField() -> getField
    83:83:org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly() -> getGoppaPoly
    99:99:org.spongycastle.pqc.math.linearalgebra.GF2Matrix getH() -> getH
    59:59:int getK() -> getK
    51:51:int getN() -> getN
    91:91:org.spongycastle.pqc.math.linearalgebra.Permutation getP() -> getP
    149:156:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey -> org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey:
    33:34:void <init>(org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters) -> <init>
    99:106:boolean equals(java.lang.Object) -> equals
    133:140:byte[] getEncoded() -> getEncoded
    76:76:org.spongycastle.pqc.math.linearalgebra.GF2Matrix getG() -> getG
    52:52:int getN() -> getN
    68:68:int getT() -> getT
    114:114:int hashCode() -> hashCode
    85:87:java.lang.String toString() -> toString
org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey -> org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey:
    35:36:void <init>(org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters) -> <init>
    144:154:boolean equals(java.lang.Object) -> equals
    197:210:byte[] getEncoded() -> getEncoded
    70:70:org.spongycastle.pqc.math.linearalgebra.GF2mField getField() -> getField
    78:78:org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly() -> getGoppaPoly
    62:62:int getK() -> getK
    54:54:int getN() -> getN
    94:94:org.spongycastle.pqc.math.linearalgebra.Permutation getP1() -> getP1
    102:102:org.spongycastle.pqc.math.linearalgebra.Permutation getP2() -> getP2
    86:86:org.spongycastle.pqc.math.linearalgebra.GF2Matrix getSInv() -> getSInv
    162:170:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey -> org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey:
    27:28:void <init>(org.spongycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters) -> <init>
    93:97:boolean equals(java.lang.Object) -> equals
    127:134:byte[] getEncoded() -> getEncoded
    70:70:org.spongycastle.pqc.math.linearalgebra.GF2Matrix getG() -> getG
    46:46:int getN() -> getN
    62:62:int getT() -> getT
    108:108:int hashCode() -> hashCode
    79:81:java.lang.String toString() -> toString
org.spongycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi -> org.spongycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:
    31:31:void <init>() -> <init>
    109:146:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) -> engineGeneratePrivate
    54:93:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) -> engineGeneratePublic
org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi -> org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:
    33:33:void <init>() -> <init>
    105:143:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) -> engineGeneratePrivate
    53:91:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) -> engineGeneratePublic
org.spongycastle.pqc.jcajce.provider.mceliece.Utils -> org.spongycastle.pqc.jcajce.provider.mceliece.Utils:
    14:35:org.spongycastle.asn1.x509.AlgorithmIdentifier getDigAlgId(java.lang.String) -> getDigAlgId
    40:60:org.spongycastle.crypto.Digest getDigest(org.spongycastle.asn1.x509.AlgorithmIdentifier) -> getDigest
org.spongycastle.pqc.jcajce.provider.newhope.BCNHPrivateKey -> org.spongycastle.pqc.jcajce.provider.newhope.BCNHPrivateKey:
    31:32:void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo) -> <init>
    107:111:short[] convert(byte[]) -> convert
    43:49:boolean equals(java.lang.Object) -> equals
    70:82:byte[] getEncoded() -> getEncoded
    54:54:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.newhope.BCNHPublicKey -> org.spongycastle.pqc.jcajce.provider.newhope.BCNHPublicKey:
    27:28:void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) -> <init>
    39:45:boolean equals(java.lang.Object) -> equals
    66:69:byte[] getEncoded() -> getEncoded
    50:50:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.newhope.NHKeyFactorySpi -> org.spongycastle.pqc.jcajce.provider.newhope.NHKeyFactorySpi:
    19:19:void <init>() -> <init>
    26:42:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) -> engineGeneratePrivate
    48:64:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) -> engineGeneratePublic
    70:87:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class) -> engineGetKeySpec
    97:102:java.security.Key engineTranslateKey(java.security.Key) -> engineTranslateKey
    108:108:java.security.PrivateKey generatePrivate(org.spongycastle.asn1.pkcs.PrivateKeyInfo) -> generatePrivate
    114:114:java.security.PublicKey generatePublic(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) -> generatePublic
org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey -> org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey:
    68:74:void <init>(short[][],short[],short[][],short[],int[],org.spongycastle.pqc.crypto.rainbow.Layer[]) -> <init>
    84:84:void <init>(org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec) -> <init>
    162:181:boolean equals(java.lang.Object) -> equals
    111:111:short[] getB1() -> getB1
    121:121:short[] getB2() -> getB2
    215:229:byte[] getEncoded() -> getEncoded
    101:101:short[][] getInvA1() -> getInvA1
    131:131:short[][] getInvA2() -> getInvA2
    141:141:org.spongycastle.pqc.crypto.rainbow.Layer[] getLayers() -> getLayers
    151:151:int[] getVi() -> getVi
    188:198:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey -> org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey:
    56:60:void <init>(int,short[][],short[][],short[]) -> <init>
    70:70:void <init>(org.spongycastle.pqc.jcajce.spec.RainbowPublicKeySpec) -> <init>
    128:137:boolean equals(java.lang.Object) -> equals
    93:93:short[][] getCoeffQuadratic() -> getCoeffQuadratic
    117:117:short[] getCoeffScalar() -> getCoeffScalar
    101:105:short[][] getCoeffSingular() -> getCoeffSingular
    85:85:int getDocLength() -> getDocLength
    166:169:byte[] getEncoded() -> getEncoded
    142:146:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi -> org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:
    32:32:void <init>() -> <init>
    70:90:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) -> engineGeneratePrivate
    117:137:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) -> engineGeneratePublic
    156:187:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class) -> engineGetKeySpec
    205:210:java.security.Key engineTranslateKey(java.security.Key) -> engineTranslateKey
    216:218:java.security.PrivateKey generatePrivate(org.spongycastle.asn1.pkcs.PrivateKeyInfo) -> generatePrivate
    224:226:java.security.PublicKey generatePublic(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) -> generatePublic
org.spongycastle.pqc.jcajce.provider.sphincs.BCSphincs256PrivateKey -> org.spongycastle.pqc.jcajce.provider.sphincs.BCSphincs256PrivateKey:
    36:38:void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo) -> <init>
    54:58:boolean equals(java.lang.Object) -> equals
    82:85:byte[] getEncoded() -> getEncoded
    66:66:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.sphincs.BCSphincs256PublicKey -> org.spongycastle.pqc.jcajce.provider.sphincs.BCSphincs256PublicKey:
    33:35:void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) -> <init>
    51:55:boolean equals(java.lang.Object) -> equals
    79:82:byte[] getEncoded() -> getEncoded
    63:63:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.sphincs.Sphincs256KeyFactorySpi -> org.spongycastle.pqc.jcajce.provider.sphincs.Sphincs256KeyFactorySpi:
    19:19:void <init>() -> <init>
    26:42:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) -> engineGeneratePrivate
    48:64:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) -> engineGeneratePublic
    70:87:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class) -> engineGetKeySpec
    97:102:java.security.Key engineTranslateKey(java.security.Key) -> engineTranslateKey
    108:108:java.security.PrivateKey generatePrivate(org.spongycastle.asn1.pkcs.PrivateKeyInfo) -> generatePrivate
    114:114:java.security.PublicKey generatePublic(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) -> generatePublic
org.spongycastle.pqc.jcajce.provider.util.KeyUtil -> org.spongycastle.pqc.jcajce.provider.util.KeyUtil:
    15:15:byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable) -> getEncodedSubjectPublicKeyInfo
    39:39:byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) -> getEncodedSubjectPublicKeyInfo
org.spongycastle.pqc.jcajce.provider.xmss.BCXMSSMTPrivateKey -> org.spongycastle.pqc.jcajce.provider.xmss.BCXMSSMTPrivateKey:
    37:62:void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo) -> <init>
    121:135:org.spongycastle.pqc.asn1.XMSSMTPrivateKey createKeyStructure() -> createKeyStructure
    104:108:boolean equals(java.lang.Object) -> equals
    81:84:byte[] getEncoded() -> getEncoded
    116:116:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.xmss.BCXMSSMTPublicKey -> org.spongycastle.pqc.jcajce.provider.xmss.BCXMSSMTPublicKey:
    32:41:void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) -> <init>
    51:55:boolean equals(java.lang.Object) -> equals
    79:82:byte[] getEncoded() -> getEncoded
    63:63:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.xmss.BCXMSSPrivateKey -> org.spongycastle.pqc.jcajce.provider.xmss.BCXMSSPrivateKey:
    36:61:void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo) -> <init>
    120:134:org.spongycastle.pqc.asn1.XMSSPrivateKey createKeyStructure() -> createKeyStructure
    98:102:boolean equals(java.lang.Object) -> equals
    80:83:byte[] getEncoded() -> getEncoded
    110:110:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.xmss.BCXMSSPublicKey -> org.spongycastle.pqc.jcajce.provider.xmss.BCXMSSPublicKey:
    34:43:void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) -> <init>
    87:91:boolean equals(java.lang.Object) -> equals
    59:62:byte[] getEncoded() -> getEncoded
    99:99:int hashCode() -> hashCode
org.spongycastle.pqc.jcajce.provider.xmss.DigestUtil -> org.spongycastle.pqc.jcajce.provider.xmss.DigestUtil:
    16:33:org.spongycastle.crypto.Digest getDigest(org.spongycastle.asn1.ASN1ObjectIdentifier) -> getDigest
org.spongycastle.pqc.jcajce.provider.xmss.XMSSKeyFactorySpi -> org.spongycastle.pqc.jcajce.provider.xmss.XMSSKeyFactorySpi:
    19:19:void <init>() -> <init>
    26:42:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) -> engineGeneratePrivate
    48:64:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) -> engineGeneratePublic
    70:87:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class) -> engineGetKeySpec
    97:102:java.security.Key engineTranslateKey(java.security.Key) -> engineTranslateKey
    108:108:java.security.PrivateKey generatePrivate(org.spongycastle.asn1.pkcs.PrivateKeyInfo) -> generatePrivate
    114:114:java.security.PublicKey generatePublic(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) -> generatePublic
org.spongycastle.pqc.jcajce.provider.xmss.XMSSMTKeyFactorySpi -> org.spongycastle.pqc.jcajce.provider.xmss.XMSSMTKeyFactorySpi:
    19:19:void <init>() -> <init>
    26:42:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) -> engineGeneratePrivate
    48:64:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) -> engineGeneratePublic
    70:87:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class) -> engineGetKeySpec
    97:102:java.security.Key engineTranslateKey(java.security.Key) -> engineTranslateKey
    108:108:java.security.PrivateKey generatePrivate(org.spongycastle.asn1.pkcs.PrivateKeyInfo) -> generatePrivate
    114:114:java.security.PublicKey generatePublic(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) -> generatePublic
org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec -> org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec:
    56:62:void <init>(short[][],short[],short[][],short[],int[],org.spongycastle.pqc.crypto.rainbow.Layer[]) -> <init>
    72:72:short[] getB1() -> getB1
    92:92:short[] getB2() -> getB2
    82:82:short[][] getInvA1() -> getInvA1
    102:102:short[][] getInvA2() -> getInvA2
    112:112:org.spongycastle.pqc.crypto.rainbow.Layer[] getLayers() -> getLayers
    122:122:int[] getVi() -> getVi
org.spongycastle.pqc.jcajce.spec.RainbowPublicKeySpec -> org.spongycastle.pqc.jcajce.spec.RainbowPublicKeySpec:
    30:34:void <init>(int,short[][],short[][],short[]) -> <init>
    50:50:short[][] getCoeffQuadratic() -> getCoeffQuadratic
    66:66:short[] getCoeffScalar() -> getCoeffScalar
    58:58:short[][] getCoeffSingular() -> getCoeffSingular
    42:42:int getDocLength() -> getDocLength
org.spongycastle.pqc.math.linearalgebra.GF2Matrix -> org.spongycastle.pqc.math.linearalgebra.GF2Matrix:
    33:36:void <init>(byte[]) -> <init>
    81:84:void <init>(int,int[][]) -> <init>
    167:174:void <init>(org.spongycastle.pqc.math.linearalgebra.GF2Matrix) -> <init>
    1201:1216:boolean equals(java.lang.Object) -> equals
    451:473:byte[] getEncoded() -> getEncoded
    1230:1233:int hashCode() -> hashCode
    1243:1291:java.lang.String toString() -> toString
org.spongycastle.pqc.math.linearalgebra.GF2mField -> org.spongycastle.pqc.math.linearalgebra.GF2mField:
    74:77:void <init>(byte[]) -> <init>
    281:289:java.lang.String elementToStr(int) -> elementToStr
    306:313:boolean equals(java.lang.Object) -> equals
    174:183:int exp(int,int) -> exp
    103:103:int getDegree() -> getDegree
    123:123:byte[] getEncoded() -> getEncoded
    324:324:int hashCode() -> hashCode
    197:199:int inverse(int) -> inverse
    268:268:boolean isElementOfThisField(int) -> isElementOfThisField
    147:147:int mult(int,int) -> mult
    360:360:java.lang.String polyToString(int) -> polyToString
    334:335:java.lang.String toString() -> toString
org.spongycastle.pqc.math.linearalgebra.GoppaCode -> org.spongycastle.pqc.math.linearalgebra.GoppaCode:
    139:200:org.spongycastle.pqc.math.linearalgebra.GF2Matrix createCanonicalCheckMatrix(org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM) -> createCanonicalCheckMatrix
org.spongycastle.pqc.math.linearalgebra.IntUtils -> org.spongycastle.pqc.math.linearalgebra.IntUtils:
    43:44:int[] clone(int[]) -> clone
    23:30:boolean equals(int[],int[]) -> equals
org.spongycastle.pqc.math.linearalgebra.IntegerFunctions -> org.spongycastle.pqc.math.linearalgebra.IntegerFunctions:
    13:30:void <clinit>() -> <clinit>
org.spongycastle.pqc.math.linearalgebra.LittleEndianConversions -> org.spongycastle.pqc.math.linearalgebra.LittleEndianConversions:
    99:99:byte[] I2OSP(int) -> I2OSP
    116:119:void I2OSP(int,byte[],int) -> I2OSP
    136:136:void I2OSP(int,byte[],int,int) -> I2OSP
    30:30:int OS2IP(byte[]) -> OS2IP
    44:47:int OS2IP(byte[],int) -> OS2IP
    65:65:int OS2IP(byte[],int,int) -> OS2IP
org.spongycastle.pqc.math.linearalgebra.Matrix -> org.spongycastle.pqc.math.linearalgebra.Matrix:
    7:7:void <init>() -> <init>
    66:66:int getNumColumns() -> getNumColumns
    58:58:int getNumRows() -> getNumRows
org.spongycastle.pqc.math.linearalgebra.Permutation -> org.spongycastle.pqc.math.linearalgebra.Permutation:
    61:64:void <init>(byte[]) -> <init>
    192:198:boolean equals(java.lang.Object) -> equals
    126:132:byte[] getEncoded() -> getEncoded
    220:220:int hashCode() -> hashCode
    232:241:boolean isPermutation(int[]) -> isPermutation
    206:211:java.lang.String toString() -> toString
org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM -> org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM:
    121:125:void <init>(org.spongycastle.pqc.math.linearalgebra.GF2mField,int) -> <init>
    136:139:void <init>(org.spongycastle.pqc.math.linearalgebra.GF2mField,int[]) -> <init>
    149:163:void <init>(org.spongycastle.pqc.math.linearalgebra.GF2mField,byte[]) -> <init>
    197:201:void <init>(org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM) -> <init>
    358:373:int[] add(int[],int[]) -> add
    343:344:void addToThis(org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM) -> addToThis
    1070:1071:void computeDegree() -> computeDegree
    1087:1087:int computeDegree(int[]) -> computeDegree
    991:999:boolean equals(java.lang.Object) -> equals
    316:319:int evaluateAt(int) -> evaluateAt
    272:276:int getCoefficient(int) -> getCoefficient
    228:229:int getDegree() -> getDegree
    288:300:byte[] getEncoded() -> getEncoded
    1038:1041:int hashCode() -> hashCode
    256:261:int headCoefficient(int[]) -> headCoefficient
    1017:1025:boolean isEqual(int[],int[]) -> isEqual
    721:722:org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM mod(org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM) -> mod
    734:737:int[] mod(int[],int[]) -> mod
    421:423:void multThisWithElement(int) -> multThisWithElement
    403:405:org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM multWithElement(int) -> multWithElement
    440:443:int[] multWithElement(int[],int) -> multWithElement
    481:487:int[] multWithMonomial(int[],int) -> multWithMonomial
    1102:1120:int[] normalForm(int[]) -> normalForm
    1053:1059:java.lang.String toString() -> toString
org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2 -> org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2:
    209:209:int gcd(int,int) -> gcd
    230:235:boolean isIrreducible(int) -> isIrreducible
    78:82:int modMultiply(int,int,int) -> modMultiply
    151:157:int remainder(int,int) -> remainder
org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m -> org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m:
    41:45:void <init>(org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM) -> <init>
    94:160:void computeSquareRootMatrix() -> computeSquareRootMatrix
    70:84:void computeSquaringMatrix() -> computeSquaringMatrix
    61:61:org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getSquareRootMatrix() -> getSquareRootMatrix
    170:172:void swapColumns(org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[],int,int) -> swapColumns
org.spongycastle.util.Arrays -> org.spongycastle.util.Arrays:
    60:67:boolean areEqual(char[],char[]) -> areEqual
    90:97:boolean areEqual(byte[],byte[]) -> areEqual
    120:127:boolean areEqual(short[],short[]) -> areEqual
    597:599:byte[] clone(byte[]) -> clone
    711:713:short[] clone(short[]) -> clone
    968:981:byte[] concatenate(byte[],byte[]) -> concatenate
    824:834:byte[] copyOfRange(byte[],int,int) -> copyOfRange
    332:334:void fill(byte[],byte) -> fill
    899:901:int getLength(int,int) -> getLength
    385:391:int hashCode(byte[]) -> hashCode
    423:429:int hashCode(char[]) -> hashCode
    454:460:int hashCode(int[]) -> hashCode
    533:535:int hashCode(short[][][]) -> hashCode
    545:547:int hashCode(short[][]) -> hashCode
    560:566:int hashCode(short[]) -> hashCode
org.spongycastle.util.Arrays$Iterator -> org.spongycastle.util.Arrays$Iterator:
    1176:1177:void <init>(java.lang.Object[]) -> <init>
    1182:1182:boolean hasNext() -> hasNext
    1187:1189:java.lang.Object next() -> next
    1197:1197:void remove() -> remove
org.spongycastle.util.Integers -> org.spongycastle.util.Integers:
    20:20:java.lang.Integer valueOf(int) -> valueOf
org.spongycastle.util.Pack -> org.spongycastle.util.Pack:
    17:20:int bigEndianToInt(byte[],int) -> bigEndianToInt
    66:67:long bigEndianToLong(byte[],int) -> bigEndianToLong
    42:45:void intToBigEndian(int,byte[],int) -> intToBigEndian
    176:179:void intToLittleEndian(int,byte[],int) -> intToLittleEndian
    118:121:int littleEndianToInt(byte[],int) -> littleEndianToInt
    200:201:long littleEndianToLong(byte[],int) -> littleEndianToLong
    111:112:short littleEndianToShort(byte[],int) -> littleEndianToShort
    89:90:void longToBigEndian(long,byte[],int) -> longToBigEndian
    232:233:void longToLittleEndian(long,byte[],int) -> longToLittleEndian
    256:256:void longToLittleEndian(long[],int,int,byte[],int) -> longToLittleEndian
    163:164:void shortToLittleEndian(short,byte[],int) -> shortToLittleEndian
org.spongycastle.util.Properties -> org.spongycastle.util.Properties:
    24:24:void <clinit>() -> <clinit>
    17:17:java.lang.ThreadLocal access$000() -> access$000
    137:137:java.lang.String fetchProperty(java.lang.String) -> fetchProperty
    36:40:boolean isOverrideSet(java.lang.String) -> isOverrideSet
org.spongycastle.util.Properties$1 -> org.spongycastle.util.Properties$1:
    138:138:void <init>(java.lang.String) -> <init>
    141:147:java.lang.Object run() -> run
org.spongycastle.util.Strings -> org.spongycastle.util.Strings:
    22:41:void <clinit>() -> <clinit>
    310:314:char[] asCharArray(byte[]) -> asCharArray
    299:299:java.lang.String fromByteArray(byte[]) -> fromByteArray
    51:118:java.lang.String fromUTF8ByteArray(byte[]) -> fromUTF8ByteArray
=======
org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission -> org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission:
    56:58:void <init>(java.lang.String,java.lang.String) -> <init>
    64:95:int calculateMask(java.lang.String) -> calculateMask
    132:136:boolean equals(java.lang.Object) -> equals
    103:103:java.lang.String getActions() -> getActions
    144:144:int hashCode() -> hashCode
    109:121:boolean implies(java.security.Permission) -> implies
org.spongycastle.jcajce.provider.util.AlgorithmProvider -> org.spongycastle.jcajce.provider.util.AlgorithmProvider:
    5:5:void <init>() -> <init>
org.spongycastle.jce.provider.BouncyCastleProvider -> org.spongycastle.jce.provider.BouncyCastleProvider:
    51:109:void <clinit>() -> <clinit>
    121:123:void <init>() -> <init>
    44:44:void access$000(org.spongycastle.jce.provider.BouncyCastleProvider) -> access$000
    195:224:void loadAlgorithms(java.lang.String,java.lang.String[]) -> loadAlgorithms
    135:190:void setup() -> setup
org.spongycastle.jce.provider.BouncyCastleProvider$1 -> org.spongycastle.jce.provider.BouncyCastleProvider$1:
    124:124:void <init>(org.spongycastle.jce.provider.BouncyCastleProvider) -> <init>
    127:127:java.lang.Object run() -> run
org.spongycastle.jce.provider.BouncyCastleProviderConfiguration -> org.spongycastle.jce.provider.BouncyCastleProviderConfiguration:
    16:22:void <clinit>() -> <clinit>
    13:26:void <init>() -> <init>
org.spongycastle.util.Arrays -> org.spongycastle.util.Arrays:
    755:765:byte[] copyOfRange(byte[],int,int) -> copyOfRange
    830:832:int getLength(int,int) -> getLength
org.spongycastle.util.Integers -> org.spongycastle.util.Integers:
    20:20:java.lang.Integer valueOf(int) -> valueOf
org.spongycastle.util.Pack -> org.spongycastle.util.Pack:
    35:38:void intToBigEndian(int,byte[],int) -> intToBigEndian
org.spongycastle.util.Strings -> org.spongycastle.util.Strings:
    22:41:void <clinit>() -> <clinit>
>>>>>>> rename package name,fix action event info list same time crash
    234:248:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
    128:136:byte[] toUTF8ByteArray(char[]) -> toUTF8ByteArray
    148:189:void toUTF8ByteArray(char[],java.io.OutputStream) -> toUTF8ByteArray
org.spongycastle.util.Strings$1 -> org.spongycastle.util.Strings$1:
    23:23:void <init>() -> <init>
    23:23:java.lang.Object run() -> run
    27:27:java.lang.String run() -> run
<<<<<<< HEAD
org.spongycastle.util.encoders.EncoderException -> org.spongycastle.util.encoders.EncoderException:
    13:15:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    20:20:java.lang.Throwable getCause() -> getCause
org.spongycastle.util.encoders.Hex -> org.spongycastle.util.encoders.Hex:
    14:14:void <clinit>() -> <clinit>
    39:39:byte[] encode(byte[]) -> encode
    52:60:byte[] encode(byte[],int,int) -> encode
    19:19:java.lang.String toHexString(byte[]) -> toHexString
    27:28:java.lang.String toHexString(byte[],int,int) -> toHexString
org.spongycastle.util.encoders.HexEncoder -> org.spongycastle.util.encoders.HexEncoder:
    44:45:void <init>() -> <init>
    62:65:int encode(byte[],int,int,java.io.OutputStream) -> encode
    25:40:void initialiseDecodingTable() -> initialiseDecodingTable
org.spongycastle.util.io.Streams -> org.spongycastle.util.io.Streams:
    112:116:void pipeAll(java.io.InputStream,java.io.OutputStream) -> pipeAll
    40:42:byte[] readAll(java.io.InputStream) -> readAll
    73:73:int readFully(java.io.InputStream,byte[]) -> readFully
    92:92:int readFully(java.io.InputStream,byte[],int,int) -> readFully
=======
>>>>>>> rename package name,fix action event info list same time crash
ren.qinc.edit.PerformEdit -> ren.qinc.edit.PerformEdit:
    44:48:void <init>(android.widget.EditText) -> <init>
    247:247:void CheckNull(java.lang.Object,java.lang.String) -> CheckNull
    31:31:boolean access$100(ren.qinc.edit.PerformEdit) -> access$100
    31:31:android.text.Editable access$200(ren.qinc.edit.PerformEdit) -> access$200
    31:31:android.text.Editable access$202(ren.qinc.edit.PerformEdit,android.text.Editable) -> access$202
    65:66:void clearHistory() -> clearHistory
    106:126:void redo() -> redo
    134:137:void setDefaultText(java.lang.CharSequence) -> setDefaultText
    75:97:void undo() -> undo
ren.qinc.edit.PerformEdit$Action -> ren.qinc.edit.PerformEdit$Action:
    229:233:void <init>(ren.qinc.edit.PerformEdit,java.lang.CharSequence,int,boolean) -> <init>
    241:241:void setIndex(int) -> setIndex
    237:237:void setSelectCount(int) -> setSelectCount
ren.qinc.edit.PerformEdit$Watcher -> ren.qinc.edit.PerformEdit$Watcher:
    140:140:void <init>(ren.qinc.edit.PerformEdit) -> <init>
    140:140:void <init>(ren.qinc.edit.PerformEdit,ren.qinc.edit.PerformEdit$1) -> <init>
    207:212:void afterTextChanged(android.text.Editable) -> afterTextChanged
    152:170:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    185:199:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
tv.danmaku.ijk.media.exo.BuildConfig -> tv.danmaku.ijk.media.exo.BuildConfig:
    6:6:void <init>() -> <init>
tv.danmaku.ijk.media.exo.IjkExoMediaPlayer -> tv.danmaku.ijk.media.exo.IjkExoMediaPlayer:
    54:60:void <init>(android.content.Context) -> <init>
    43:43:tv.danmaku.ijk.media.exo.demo.player.DemoPlayer access$100(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer) -> access$100
    43:43:void access$1000(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer,int,int,int,int) -> access$1000
    43:43:boolean access$1100(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer,int,int) -> access$1100
    43:43:boolean access$200(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer,int,int) -> access$200
    43:43:void access$300(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer) -> access$300
    43:43:void access$400(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer) -> access$400
    43:43:boolean access$500(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer,int,int) -> access$500
    43:43:void access$600(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer) -> access$600
    43:43:boolean access$700(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer,int,int) -> access$700
    43:43:int access$802(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer,int) -> access$802
    43:43:int access$902(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer,int) -> access$902
    299:302:int getBufferedPercentage() -> getBufferedPercentage
    197:199:long getCurrentPosition() -> getCurrentPosition
    103:103:java.lang.String getDataSource() -> getDataSource
    204:206:long getDuration() -> getDuration
    306:311:tv.danmaku.ijk.media.exo.demo.player.DemoPlayer$RendererBuilder getRendererBuilder() -> getRendererBuilder
    43:43:tv.danmaku.ijk.media.player.misc.ITrackInfo[] getTrackInfo() -> getTrackInfo
    168:168:int getVideoHeight() -> getVideoHeight
    163:163:int getVideoWidth() -> getVideoWidth
    331:332:int inferContentType(android.net.Uri) -> inferContentType
    173:179:boolean isPlaying() -> isPlaying
    140:142:void pause() -> pause
    108:109:void prepareAsync() -> prepareAsync
    288:294:void release() -> release
    221:233:void reset() -> reset
    190:192:void seekTo(long) -> seekTo
    80:81:void setDataSource(android.content.Context,android.net.Uri) -> setDataSource
    87:87:void setDataSource(android.content.Context,android.net.Uri,java.util.Map) -> setDataSource
    92:92:void setDataSource(java.lang.String) -> setDataSource
    98:98:void setDataSource(java.io.FileDescriptor) -> setDataSource
    66:68:void setDisplay(android.view.SurfaceHolder) -> setDisplay
    239:239:void setLooping(boolean) -> setLooping
    73:75:void setSurface(android.view.Surface) -> setSurface
    126:128:void start() -> start
    133:135:void stop() -> stop
tv.danmaku.ijk.media.exo.IjkExoMediaPlayer$DemoPlayerListener -> tv.danmaku.ijk.media.exo.IjkExoMediaPlayer$DemoPlayerListener:
    335:338:void <init>(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer) -> <init>
    335:335:void <init>(tv.danmaku.ijk.media.exo.IjkExoMediaPlayer,tv.danmaku.ijk.media.exo.IjkExoMediaPlayer$1) -> <init>
    385:385:void onError(java.lang.Exception) -> onError
    342:364:void onStateChanged(boolean,int) -> onStateChanged
    391:395:void onVideoSizeChanged(int,int,int,float) -> onVideoSizeChanged
tv.danmaku.ijk.media.exo.R -> tv.danmaku.ijk.media.exo.R:
    10:10:void <init>() -> <init>
tv.danmaku.ijk.media.exo.R$string -> tv.danmaku.ijk.media.exo.R$string:
    13:13:void <init>() -> <init>
tv.danmaku.ijk.media.exo.demo.EventLogger -> tv.danmaku.ijk.media.exo.demo.EventLogger:
    41:43:void <clinit>() -> <clinit>
    50:51:void <init>() -> <init>
    60:60:void endSession() -> endSession
    206:206:java.lang.String getSessionTimeString() -> getSessionTimeString
    210:210:java.lang.String getTimeString(long) -> getTimeString
    124:124:void onAudioFormatEnabled(com.google.android.exoplayer.chunk.Format,int,long) -> onAudioFormatEnabled
    152:152:void onAudioTrackInitializationError(com.google.android.exoplayer.audio.AudioTrack$InitializationException) -> onAudioTrackInitializationError
    162:162:void onAudioTrackUnderrun(int,long,long) -> onAudioTrackUnderrun
    157:157:void onAudioTrackWriteError(com.google.android.exoplayer.audio.AudioTrack$WriteException) -> onAudioTrackWriteError
    179:180:void onAvailableRangeChanged(int,com.google.android.exoplayer.TimeRange) -> onAvailableRangeChanged
    87:87:void onBandwidthSample(int,long,long) -> onBandwidthSample
    168:168:void onCryptoError(android.media.MediaCodec$CryptoException) -> onCryptoError
    147:147:void onDecoderInitializationError(com.google.android.exoplayer.MediaCodecTrackRenderer$DecoderInitializationException) -> onDecoderInitializationError
    174:174:void onDecoderInitialized(java.lang.String,long,long) -> onDecoderInitialized
    142:142:void onDrmSessionManagerError(java.lang.Exception) -> onDrmSessionManagerError
    93:93:void onDroppedFrames(int,long) -> onDroppedFrames
    73:73:void onError(java.lang.Exception) -> onError
    109:111:void onLoadCompleted(int,long,int,int,com.google.android.exoplayer.chunk.Format,long,long,long,long) -> onLoadCompleted
    132:132:void onLoadError(int,java.io.IOException) -> onLoadError
    99:101:void onLoadStarted(int,long,int,int,com.google.android.exoplayer.chunk.Format,long,long) -> onLoadStarted
    137:137:void onRendererInitializationError(java.lang.Exception) -> onRendererInitializationError
    67:67:void onStateChanged(boolean,int) -> onStateChanged
    118:118:void onVideoFormatEnabled(com.google.android.exoplayer.chunk.Format,int,long) -> onVideoFormatEnabled
    79:79:void onVideoSizeChanged(int,int,int,float) -> onVideoSizeChanged
    185:185:void printInternalError(java.lang.String,java.lang.Exception) -> printInternalError
    55:56:void startSession() -> startSession
tv.danmaku.ijk.media.exo.demo.SmoothStreamingTestMediaDrmCallback -> tv.danmaku.ijk.media.exo.demo.SmoothStreamingTestMediaDrmCallback:
    40:47:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
    58:62:byte[] executeKeyRequest(java.util.UUID,com.google.android.exoplayer.drm.ExoMediaDrm$KeyRequest) -> executeKeyRequest
    52:53:byte[] executeProvisionRequest(java.util.UUID,com.google.android.exoplayer.drm.ExoMediaDrm$ProvisionRequest) -> executeProvisionRequest
tv.danmaku.ijk.media.exo.demo.player.DashRendererBuilder -> tv.danmaku.ijk.media.exo.demo.player.DashRendererBuilder:
    82:86:void <init>(android.content.Context,java.lang.String,java.lang.String,com.google.android.exoplayer.drm.MediaDrmCallback) -> <init>
    91:92:void buildRenderers(tv.danmaku.ijk.media.exo.demo.player.DemoPlayer) -> buildRenderers
    97:99:void cancel() -> cancel
tv.danmaku.ijk.media.exo.demo.player.DashRendererBuilder$AsyncRendererBuilder -> tv.danmaku.ijk.media.exo.demo.player.DashRendererBuilder$AsyncRendererBuilder:
    118:125:void <init>(android.content.Context,java.lang.String,java.lang.String,com.google.android.exoplayer.drm.MediaDrmCallback,tv.danmaku.ijk.media.exo.demo.player.DemoPlayer) -> <init>
    182:255:void buildRenderers() -> buildRenderers
    133:133:void cancel() -> cancel
    259:261:int getWidevineSecurityLevel(com.google.android.exoplayer.drm.StreamingDrmSessionManager) -> getWidevineSecurityLevel
    129:129:void init() -> init
    103:103:void onSingleManifest(java.lang.Object) -> onSingleManifest
    138:147:void onSingleManifest(com.google.android.exoplayer.dash.mpd.MediaPresentationDescription) -> onSingleManifest
    153:157:void onSingleManifestError(java.io.IOException) -> onSingleManifestError
    172:178:void onTimestampError(com.google.android.exoplayer.dash.mpd.UtcTimingElement,java.io.IOException) -> onTimestampError
    162:167:void onTimestampResolved(com.google.android.exoplayer.dash.mpd.UtcTimingElement,long) -> onTimestampResolved
tv.danmaku.ijk.media.exo.demo.player.DemoPlayer -> tv.danmaku.ijk.media.exo.demo.player.DemoPlayer:
    190:200:void <init>(tv.danmaku.ijk.media.exo.demo.player.DemoPlayer$RendererBuilder) -> <init>
    208:208:void addListener(tv.danmaku.ijk.media.exo.demo.player.DemoPlayer$Listener) -> addListener
    241:242:void blockingClearSurface() -> blockingClearSurface
    265:265:boolean getBackgrounded() -> getBackgrounded
    371:371:com.google.android.exoplayer.upstream.BandwidthMeter getBandwidthMeter() -> getBandwidthMeter
    389:389:int getBufferedPercentage() -> getBufferedPercentage
    376:376:com.google.android.exoplayer.CodecCounters getCodecCounters() -> getCodecCounters
    381:381:long getCurrentPosition() -> getCurrentPosition
    385:385:long getDuration() -> getDuration
    366:366:com.google.android.exoplayer.chunk.Format getFormat() -> getFormat
    401:401:android.os.Handler getMainHandler() -> getMainHandler
    393:393:boolean getPlayWhenReady() -> getPlayWhenReady
    397:397:android.os.Looper getPlaybackLooper() -> getPlaybackLooper
    352:356:int getPlaybackState() -> getPlaybackState
    204:204:com.google.android.exoplayer.util.PlayerControl getPlayerControl() -> getPlayerControl
    254:254:int getSelectedTrack(int) -> getSelectedTrack
    237:237:android.view.Surface getSurface() -> getSurface
    246:246:int getTrackCount(int) -> getTrackCount
    250:250:com.google.android.exoplayer.MediaFormat getTrackFormat(int,int) -> getTrackFormat
    575:582:void maybeReportPlayerState() -> maybeReportPlayerState
    474:475:void onAudioTrackInitializationError(com.google.android.exoplayer.audio.AudioTrack$InitializationException) -> onAudioTrackInitializationError
    488:489:void onAudioTrackUnderrun(int,long,long) -> onAudioTrackUnderrun
    481:482:void onAudioTrackWriteError(com.google.android.exoplayer.audio.AudioTrack$WriteException) -> onAudioTrackWriteError
    531:532:void onAvailableRangeChanged(int,com.google.android.exoplayer.TimeRange) -> onAvailableRangeChanged
    434:435:void onBandwidthSample(int,long,long) -> onBandwidthSample
    495:496:void onCryptoError(android.media.MediaCodec$CryptoException) -> onCryptoError
    517:518:void onCues(java.util.List) -> onCues
    467:468:void onDecoderInitializationError(com.google.android.exoplayer.MediaCodecTrackRenderer$DecoderInitializationException) -> onDecoderInitializationError
    503:504:void onDecoderInitialized(java.lang.String,long,long) -> onDecoderInitialized
    442:449:void onDownstreamFormatChanged(int,com.google.android.exoplayer.chunk.Format,int,long) -> onDownstreamFormatChanged
    460:461:void onDrmSessionManagerError(java.lang.Exception) -> onDrmSessionManagerError
    427:428:void onDroppedFrames(int,long) -> onDroppedFrames
    558:559:void onLoadCompleted(int,long,int,int,com.google.android.exoplayer.chunk.Format,long,long,long,long) -> onLoadCompleted
    510:511:void onLoadError(int,java.io.IOException) -> onLoadError
    549:550:void onLoadStarted(int,long,int,int,com.google.android.exoplayer.chunk.Format,long,long) -> onLoadStarted
    59:59:void onMetadata(java.lang.Object) -> onMetadata
    524:525:void onMetadata(java.util.List) -> onMetadata
    411:413:void onPlayerError(com.google.android.exoplayer.ExoPlaybackException) -> onPlayerError
    406:406:void onPlayerStateChanged(boolean,int) -> onPlayerStateChanged
    303:317:void onRenderers(com.google.android.exoplayer.TrackRenderer[],com.google.android.exoplayer.upstream.BandwidthMeter) -> onRenderers
    326:333:void onRenderersError(java.lang.Exception) -> onRenderersError
    420:421:void onVideoSizeChanged(int,int,int,float) -> onVideoSizeChanged
    283:291:void prepare() -> prepare
    587:595:void pushSurface(boolean) -> pushSurface
    345:348:void release() -> release
    212:212:void removeListener(tv.danmaku.ijk.media.exo.demo.player.DemoPlayer$Listener) -> removeListener
    341:341:void seekTo(long) -> seekTo
    269:278:void setBackgrounded(boolean) -> setBackgrounded
    224:224:void setCaptionListener(tv.danmaku.ijk.media.exo.demo.player.DemoPlayer$CaptionListener) -> setCaptionListener
    220:220:void setInfoListener(tv.danmaku.ijk.media.exo.demo.player.DemoPlayer$InfoListener) -> setInfoListener
    216:216:void setInternalErrorListener(tv.danmaku.ijk.media.exo.demo.player.DemoPlayer$InternalErrorListener) -> setInternalErrorListener
    228:228:void setMetadataListener(tv.danmaku.ijk.media.exo.demo.player.DemoPlayer$Id3MetadataListener) -> setMetadataListener
    337:337:void setPlayWhenReady(boolean) -> setPlayWhenReady
    258:260:void setSelectedTrack(int,int) -> setSelectedTrack
    232:233:void setSurface(android.view.Surface) -> setSurface
tv.danmaku.ijk.media.exo.demo.player.ExtractorRendererBuilder -> tv.danmaku.ijk.media.exo.demo.player.ExtractorRendererBuilder:
    50:53:void <init>(android.content.Context,java.lang.String,android.net.Uri) -> <init>
    58:80:void buildRenderers(tv.danmaku.ijk.media.exo.demo.player.DemoPlayer) -> buildRenderers
tv.danmaku.ijk.media.exo.demo.player.HlsRendererBuilder -> tv.danmaku.ijk.media.exo.demo.player.HlsRendererBuilder:
    68:71:void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
    76:77:void buildRenderers(tv.danmaku.ijk.media.exo.demo.player.DemoPlayer) -> buildRenderers
    82:84:void cancel() -> cancel
tv.danmaku.ijk.media.exo.demo.player.HlsRendererBuilder$AsyncRendererBuilder -> tv.danmaku.ijk.media.exo.demo.player.HlsRendererBuilder$AsyncRendererBuilder:
    97:102:void <init>(android.content.Context,java.lang.String,java.lang.String,tv.danmaku.ijk.media.exo.demo.player.DemoPlayer) -> <init>
    111:111:void cancel() -> cancel
    107:107:void init() -> init
    88:88:void onSingleManifest(java.lang.Object) -> onSingleManifest
    125:194:void onSingleManifest(com.google.android.exoplayer.hls.HlsPlaylist) -> onSingleManifest
    116:120:void onSingleManifestError(java.io.IOException) -> onSingleManifestError
tv.danmaku.ijk.media.exo.demo.player.SmoothStreamingRendererBuilder -> tv.danmaku.ijk.media.exo.demo.player.SmoothStreamingRendererBuilder:
    71:75:void <init>(android.content.Context,java.lang.String,java.lang.String,com.google.android.exoplayer.drm.MediaDrmCallback) -> <init>
    80:81:void buildRenderers(tv.danmaku.ijk.media.exo.demo.player.DemoPlayer) -> buildRenderers
    86:88:void cancel() -> cancel
tv.danmaku.ijk.media.exo.demo.player.SmoothStreamingRendererBuilder$AsyncRendererBuilder -> tv.danmaku.ijk.media.exo.demo.player.SmoothStreamingRendererBuilder$AsyncRendererBuilder:
    104:110:void <init>(android.content.Context,java.lang.String,java.lang.String,com.google.android.exoplayer.drm.MediaDrmCallback,tv.danmaku.ijk.media.exo.demo.player.DemoPlayer) -> <init>
    119:119:void cancel() -> cancel
    115:115:void init() -> init
    92:92:void onSingleManifest(java.lang.Object) -> onSingleManifest
    133:199:void onSingleManifest(com.google.android.exoplayer.smoothstreaming.SmoothStreamingManifest) -> onSingleManifest
    124:128:void onSingleManifestError(java.io.IOException) -> onSingleManifestError
tv.danmaku.ijk.media.player.AbstractMediaPlayer -> tv.danmaku.ijk.media.player.AbstractMediaPlayer:
    23:23:void <init>() -> <init>
    89:90:void notifyOnBufferingUpdate(int) -> notifyOnBufferingUpdate
    84:85:void notifyOnCompletion() -> notifyOnCompletion
    106:106:boolean notifyOnError(int,int) -> notifyOnError
    110:110:boolean notifyOnInfo(int,int) -> notifyOnInfo
    79:80:void notifyOnPrepared() -> notifyOnPrepared
    94:95:void notifyOnSeekComplete() -> notifyOnSeekComplete
    114:115:void notifyOnTimedText(tv.danmaku.ijk.media.player.IjkTimedText) -> notifyOnTimedText
    100:101:void notifyOnVideoSizeChanged(int,int,int,int) -> notifyOnVideoSizeChanged
    68:75:void resetListeners() -> resetListeners
    119:119:void setDataSource(tv.danmaku.ijk.media.player.misc.IMediaDataSource) -> setDataSource
    43:43:void setOnBufferingUpdateListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnBufferingUpdateListener) -> setOnBufferingUpdateListener
    38:38:void setOnCompletionListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnCompletionListener) -> setOnCompletionListener
    56:56:void setOnErrorListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnErrorListener) -> setOnErrorListener
    60:60:void setOnInfoListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnInfoListener) -> setOnInfoListener
    34:34:void setOnPreparedListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnPreparedListener) -> setOnPreparedListener
    47:47:void setOnSeekCompleteListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnSeekCompleteListener) -> setOnSeekCompleteListener
    64:64:void setOnTimedTextListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnTimedTextListener) -> setOnTimedTextListener
    52:52:void setOnVideoSizeChangedListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnVideoSizeChangedListener) -> setOnVideoSizeChangedListener
tv.danmaku.ijk.media.player.AndroidMediaPlayer -> tv.danmaku.ijk.media.player.AndroidMediaPlayer:
    54:57:void <init>() -> <init>
    337:347:void attachInternalListeners() -> attachInternalListeners
    287:287:int getAudioSessionId() -> getAudioSessionId
    232:234:long getCurrentPosition() -> getCurrentPosition
    150:150:java.lang.String getDataSource() -> getDataSource
    242:244:long getDuration() -> getDuration
    64:64:android.media.MediaPlayer getInternalMediaPlayer() -> getInternalMediaPlayer
    292:304:tv.danmaku.ijk.media.player.MediaInfo getMediaInfo() -> getMediaInfo
    191:191:tv.danmaku.ijk.media.player.misc.ITrackInfo[] getTrackInfo() -> getTrackInfo
    201:201:int getVideoHeight() -> getVideoHeight
    196:196:int getVideoWidth() -> getVideoWidth
    277:277:boolean isLooping() -> isLooping
    217:219:boolean isPlaying() -> isPlaying
    181:181:void pause() -> pause
    166:166:void prepareAsync() -> prepareAsync
    251:255:void release() -> release
    154:160:void releaseMediaDataSource() -> releaseMediaDataSource
    261:267:void reset() -> reset
    226:226:void seekTo(long) -> seekTo
    326:326:void setAudioStreamType(int) -> setAudioStreamType
    85:85:void setDataSource(android.content.Context,android.net.Uri) -> setDataSource
    92:92:void setDataSource(android.content.Context,android.net.Uri,java.util.Map) -> setDataSource
    98:98:void setDataSource(java.io.FileDescriptor) -> setDataSource
    104:111:void setDataSource(java.lang.String) -> setDataSource
    118:121:void setDataSource(tv.danmaku.ijk.media.player.misc.IMediaDataSource) -> setDataSource
    69:73:void setDisplay(android.view.SurfaceHolder) -> setDisplay
    272:272:void setLooping(boolean) -> setLooping
    186:186:void setScreenOnWhilePlaying(boolean) -> setScreenOnWhilePlaying
    79:79:void setSurface(android.view.Surface) -> setSurface
    282:282:void setVolume(float,float) -> setVolume
    321:321:void setWakeMode(android.content.Context,int) -> setWakeMode
    171:171:void start() -> start
    176:176:void stop() -> stop
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder -> tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder:
    359:360:void <init>(tv.danmaku.ijk.media.player.AndroidMediaPlayer,tv.danmaku.ijk.media.player.AndroidMediaPlayer) -> <init>
    397:401:void onBufferingUpdate(android.media.MediaPlayer,int) -> onBufferingUpdate
    406:410:void onCompletion(android.media.MediaPlayer) -> onCompletion
    372:373:boolean onError(android.media.MediaPlayer,int,int) -> onError
    365:366:boolean onInfo(android.media.MediaPlayer,int,int) -> onInfo
    415:419:void onPrepared(android.media.MediaPlayer) -> onPrepared
    388:392:void onSeekComplete(android.media.MediaPlayer) -> onSeekComplete
    424:434:void onTimedText(android.media.MediaPlayer,android.media.TimedText) -> onTimedText
    379:383:void onVideoSizeChanged(android.media.MediaPlayer,int,int) -> onVideoSizeChanged
tv.danmaku.ijk.media.player.AndroidMediaPlayer$MediaDataSourceProxy -> tv.danmaku.ijk.media.player.AndroidMediaPlayer$MediaDataSourceProxy:
    128:129:void <init>(tv.danmaku.ijk.media.player.misc.IMediaDataSource) -> <init>
    144:144:void close() -> close
    139:139:long getSize() -> getSize
    134:134:int readAt(long,byte[],int,int) -> readAt
tv.danmaku.ijk.media.player.BuildConfig -> tv.danmaku.ijk.media.player.BuildConfig:
    6:6:void <init>() -> <init>
tv.danmaku.ijk.media.player.IjkMediaCodecInfo -> tv.danmaku.ijk.media.player.IjkMediaCodecInfo:
    15:28:void <init>() -> <init>
    199:223:void dumpProfileLevels(java.lang.String) -> dumpProfileLevels
    34:134:java.util.Map getKnownCodecList() -> getKnownCodecList
    228:228:java.lang.String getProfileLevelName(int,int) -> getProfileLevelName
    140:193:tv.danmaku.ijk.media.player.IjkMediaCodecInfo setupCandidate(android.media.MediaCodecInfo,java.lang.String) -> setupCandidate
tv.danmaku.ijk.media.player.IjkMediaMeta -> tv.danmaku.ijk.media.player.IjkMediaMeta:
    10:139:void <init>() -> <init>
    184:190:java.lang.String getDurationInline() -> getDurationInline
    148:148:int getInt(java.lang.String) -> getInt
    152:157:int getInt(java.lang.String,int) -> getInt
    164:164:long getLong(java.lang.String) -> getLong
    168:173:long getLong(java.lang.String,long) -> getLong
    180:180:java.util.ArrayList getParcelableArrayList(java.lang.String) -> getParcelableArrayList
    144:144:java.lang.String getString(java.lang.String) -> getString
    197:259:tv.danmaku.ijk.media.player.IjkMediaMeta parse(android.os.Bundle) -> parse
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta -> tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta:
    292:293:void <init>(int) -> <init>
    370:375:java.lang.String getBitrateInline() -> getBitrateInline
    388:396:java.lang.String getChannelLayoutInline() -> getChannelLayoutInline
    333:336:java.lang.String getCodecLongNameInline() -> getCodecLongNameInline
    343:344:java.lang.String getCodecShortNameInline() -> getCodecShortNameInline
    362:365:java.lang.String getFpsInline() -> getFpsInline
    301:301:int getInt(java.lang.String) -> getInt
    305:310:int getInt(java.lang.String,int) -> getInt
    317:317:long getLong(java.lang.String) -> getLong
    321:326:long getLong(java.lang.String,long) -> getLong
    351:354:java.lang.String getResolutionInline() -> getResolutionInline
    380:383:java.lang.String getSampleRateInline() -> getSampleRateInline
    297:297:java.lang.String getString(java.lang.String) -> getString
tv.danmaku.ijk.media.player.IjkMediaPlayer -> tv.danmaku.ijk.media.player.IjkMediaPlayer:
    175:197:void <clinit>() -> <clinit>
    217:217:void <init>() -> <init>
    225:226:void <init>(tv.danmaku.ijk.media.player.IjkLibLoader) -> <init>
    68:68:long access$000(tv.danmaku.ijk.media.player.IjkMediaPlayer) -> access$000
    68:68:java.lang.String access$100() -> access$100
    68:68:void access$200(tv.danmaku.ijk.media.player.IjkMediaPlayer,boolean) -> access$200
    68:68:int access$300(tv.danmaku.ijk.media.player.IjkMediaPlayer) -> access$300
    68:68:int access$302(tv.danmaku.ijk.media.player.IjkMediaPlayer,int) -> access$302
    68:68:int access$400(tv.danmaku.ijk.media.player.IjkMediaPlayer) -> access$400
    68:68:int access$402(tv.danmaku.ijk.media.player.IjkMediaPlayer,int) -> access$402
    68:68:int access$500(tv.danmaku.ijk.media.player.IjkMediaPlayer) -> access$500
    68:68:int access$502(tv.danmaku.ijk.media.player.IjkMediaPlayer,int) -> access$502
    68:68:int access$600(tv.danmaku.ijk.media.player.IjkMediaPlayer) -> access$600
    68:68:int access$602(tv.danmaku.ijk.media.player.IjkMediaPlayer,int) -> access$602
    645:645:void deselectTrack(int) -> deselectTrack
    948:949:void finalize() -> finalize
    793:793:long getAsyncStatisticBufBackwards() -> getAsyncStatisticBufBackwards
    801:801:long getAsyncStatisticBufCapacity() -> getAsyncStatisticBufCapacity
    797:797:long getAsyncStatisticBufForwards() -> getAsyncStatisticBufForwards
    781:781:long getAudioCachedBytes() -> getAudioCachedBytes
    773:773:long getAudioCachedDuration() -> getAudioCachedDuration
    789:789:long getAudioCachedPackets() -> getAudioCachedPackets
    829:829:long getBitRate() -> getBitRate
    821:821:long getCacheStatisticCountBytes() -> getCacheStatisticCountBytes
    813:813:long getCacheStatisticFileForwards() -> getCacheStatisticFileForwards
    817:817:long getCacheStatisticFilePos() -> getCacheStatisticFilePos
    809:809:long getCacheStatisticPhysicalPos() -> getCacheStatisticPhysicalPos
    924:924:java.lang.String getColorFormatName(int) -> getColorFormatName
    509:509:java.lang.String getDataSource() -> getDataSource
    846:846:float getDropFrameRate() -> getDropFrameRate
    825:825:long getFileSize() -> getFileSize
    857:887:tv.danmaku.ijk.media.player.MediaInfo getMediaInfo() -> getMediaInfo
    919:919:android.os.Bundle getMediaMeta() -> getMediaMeta
    837:837:long getSeekLoadDuration() -> getSeekLoadDuration
    630:626:int getSelectedTrack(int) -> getSelectedTrack
    753:753:float getSpeed(float) -> getSpeed
    833:833:long getTcpSpeed() -> getTcpSpeed
    68:68:tv.danmaku.ijk.media.player.misc.ITrackInfo[] getTrackInfo() -> getTrackInfo
    598:619:tv.danmaku.ijk.media.player.misc.IjkTrackInfo[] getTrackInfo() -> getTrackInfo
    805:805:long getTrafficStatisticByteCount() -> getTrafficStatisticByteCount
    777:777:long getVideoCachedBytes() -> getVideoCachedBytes
    769:769:long getVideoCachedDuration() -> getVideoCachedDuration
    785:785:long getVideoCachedPackets() -> getVideoCachedPackets
    765:765:float getVideoDecodeFramesPerSecond() -> getVideoDecodeFramesPerSecond
    757:757:int getVideoDecoder() -> getVideoDecoder
    657:657:int getVideoHeight() -> getVideoHeight
    761:761:float getVideoOutputFramesPerSecond() -> getVideoOutputFramesPerSecond
    667:667:int getVideoSarDen() -> getVideoSarDen
    662:662:int getVideoSarNum() -> getVideoSarNum
    652:652:int getVideoWidth() -> getVideoWidth
    199:204:void initNativeOnce() -> initNativeOnce
    230:246:void initPlayer(tv.danmaku.ijk.media.player.IjkLibLoader) -> initPlayer
    742:742:boolean isLooping() -> isLooping
    184:194:void loadLibrariesOnce(tv.danmaku.ijk.media.player.IjkLibLoader) -> loadLibrariesOnce
    1142:1144:boolean onNativeInvoke(java.lang.Object,int,android.os.Bundle) -> onNativeInvoke
    1197:1210:java.lang.String onSelectCodec(java.lang.Object,java.lang.String,int,int) -> onSelectCodec
    537:538:void pause() -> pause
    1068:1080:void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object) -> postEventFromNative
    514:514:void prepareAsync() -> prepareAsync
    700:703:void release() -> release
    710:716:void reset() -> reset
    1191:1192:void resetListeners() -> resetListeners
    639:639:void selectTrack(int) -> selectTrack
    492:492:void setAndroidIOCallback(tv.danmaku.ijk.media.player.misc.IAndroidIO) -> setAndroidIOCallback
    953:953:void setCacheShare(int) -> setCacheShare
    324:324:void setDataSource(android.content.Context,android.net.Uri) -> setDataSource
    343:383:void setDataSource(android.content.Context,android.net.Uri,java.util.Map) -> setDataSource
    406:407:void setDataSource(java.lang.String) -> setDataSource
    420:433:void setDataSource(java.lang.String,java.util.Map) -> setDataSource
    447:464:void setDataSource(java.io.FileDescriptor) -> setDataSource
    482:482:void setDataSource(java.io.FileDescriptor,long,long) -> setDataSource
    487:487:void setDataSource(tv.danmaku.ijk.media.player.misc.IMediaDataSource) -> setDataSource
    273:281:void setDisplay(android.view.SurfaceHolder) -> setDisplay
    729:730:void setLooping(boolean) -> setLooping
    1090:1090:void setOnControlMessageListener(tv.danmaku.ijk.media.player.IjkMediaPlayer$OnControlMessageListener) -> setOnControlMessageListener
    1187:1187:void setOnMediaCodecSelectListener(tv.danmaku.ijk.media.player.IjkMediaPlayer$OnMediaCodecSelectListener) -> setOnMediaCodecSelectListener
    1103:1103:void setOnNativeInvokeListener(tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener) -> setOnNativeInvokeListener
    907:907:void setOption(int,java.lang.String,java.lang.String) -> setOption
    912:912:void setOption(int,java.lang.String,long) -> setOption
    567:573:void setScreenOnWhilePlaying(boolean) -> setScreenOnWhilePlaying
    749:749:void setSpeed(float) -> setSpeed
    305:311:void setSurface(android.view.Surface) -> setSurface
    547:561:void setWakeMode(android.content.Context,int) -> setWakeMode
    521:522:void start() -> start
    579:587:void stayAwake(boolean) -> stayAwake
    529:530:void stop() -> stop
    591:592:void updateSurfaceScreenOn() -> updateSurfaceScreenOn
tv.danmaku.ijk.media.player.IjkMediaPlayer$1 -> tv.danmaku.ijk.media.player.IjkMediaPlayer$1:
    175:175:void <init>() -> <init>
    178:178:void loadLibrary(java.lang.String) -> loadLibrary
tv.danmaku.ijk.media.player.IjkMediaPlayer$DefaultMediaCodecSelector -> tv.danmaku.ijk.media.player.IjkMediaPlayer$DefaultMediaCodecSelector:
    1214:1214:void <clinit>() -> <clinit>
    1213:1213:void <init>() -> <init>
    1219:1274:java.lang.String onMediaCodecSelect(tv.danmaku.ijk.media.player.IMediaPlayer,java.lang.String,int,int) -> onMediaCodecSelect
tv.danmaku.ijk.media.player.IjkMediaPlayer$EventHandler -> tv.danmaku.ijk.media.player.IjkMediaPlayer$EventHandler:
    960:961:void <init>(tv.danmaku.ijk.media.player.IjkMediaPlayer,android.os.Looper) -> <init>
    966:968:void handleMessage(android.os.Message) -> handleMessage
tv.danmaku.ijk.media.player.IjkTimedText -> tv.danmaku.ijk.media.player.IjkTimedText:
    27:29:void <init>(android.graphics.Rect,java.lang.String) -> <init>
    33:33:android.graphics.Rect getBounds() -> getBounds
    37:37:java.lang.String getText() -> getText
tv.danmaku.ijk.media.player.MediaInfo -> tv.danmaku.ijk.media.player.MediaInfo:
    20:20:void <init>() -> <init>
tv.danmaku.ijk.media.player.MediaPlayerProxy -> tv.danmaku.ijk.media.player.MediaPlayerProxy:
    37:38:void <init>(tv.danmaku.ijk.media.player.IMediaPlayer) -> <init>
    162:162:int getAudioSessionId() -> getAudioSessionId
    137:137:long getCurrentPosition() -> getCurrentPosition
    87:87:java.lang.String getDataSource() -> getDataSource
    142:142:long getDuration() -> getDuration
    42:42:tv.danmaku.ijk.media.player.IMediaPlayer getInternalMediaPlayer() -> getInternalMediaPlayer
    167:167:tv.danmaku.ijk.media.player.MediaInfo getMediaInfo() -> getMediaInfo
    327:327:tv.danmaku.ijk.media.player.misc.ITrackInfo[] getTrackInfo() -> getTrackInfo
    122:122:int getVideoHeight() -> getVideoHeight
    317:317:int getVideoSarDen() -> getVideoSarDen
    312:312:int getVideoSarNum() -> getVideoSarNum
    117:117:int getVideoWidth() -> getVideoWidth
    337:337:boolean isLooping() -> isLooping
    127:127:boolean isPlaying() -> isPlaying
    107:107:void pause() -> pause
    92:92:void prepareAsync() -> prepareAsync
    147:147:void release() -> release
    152:152:void reset() -> reset
    132:132:void seekTo(long) -> seekTo
    302:302:void setAudioStreamType(int) -> setAudioStreamType
    59:59:void setDataSource(android.content.Context,android.net.Uri) -> setDataSource
    66:66:void setDataSource(android.content.Context,android.net.Uri,java.util.Map) -> setDataSource
    72:72:void setDataSource(java.io.FileDescriptor) -> setDataSource
    77:77:void setDataSource(java.lang.String) -> setDataSource
    82:82:void setDataSource(tv.danmaku.ijk.media.player.misc.IMediaDataSource) -> setDataSource
    47:47:void setDisplay(android.view.SurfaceHolder) -> setDisplay
    307:307:void setKeepInBackground(boolean) -> setKeepInBackground
    332:332:void setLooping(boolean) -> setLooping
    214:221:void setOnBufferingUpdateListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnBufferingUpdateListener) -> setOnBufferingUpdateListener
    199:206:void setOnCompletionListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnCompletionListener) -> setOnCompletionListener
    259:266:void setOnErrorListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnErrorListener) -> setOnErrorListener
    274:281:void setOnInfoListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnInfoListener) -> setOnInfoListener
    184:191:void setOnPreparedListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnPreparedListener) -> setOnPreparedListener
    229:236:void setOnSeekCompleteListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnSeekCompleteListener) -> setOnSeekCompleteListener
    289:296:void setOnTimedTextListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnTimedTextListener) -> setOnTimedTextListener
    244:251:void setOnVideoSizeChangedListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnVideoSizeChangedListener) -> setOnVideoSizeChangedListener
    112:112:void setScreenOnWhilePlaying(boolean) -> setScreenOnWhilePlaying
    53:53:void setSurface(android.view.Surface) -> setSurface
    157:157:void setVolume(float,float) -> setVolume
    322:322:void setWakeMode(android.content.Context,int) -> setWakeMode
    97:97:void start() -> start
    102:102:void stop() -> stop
tv.danmaku.ijk.media.player.MediaPlayerProxy$1 -> tv.danmaku.ijk.media.player.MediaPlayerProxy$1:
    184:184:void <init>(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnPreparedListener) -> <init>
    187:187:void onPrepared(tv.danmaku.ijk.media.player.IMediaPlayer) -> onPrepared
tv.danmaku.ijk.media.player.MediaPlayerProxy$2 -> tv.danmaku.ijk.media.player.MediaPlayerProxy$2:
    199:199:void <init>(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnCompletionListener) -> <init>
    202:202:void onCompletion(tv.danmaku.ijk.media.player.IMediaPlayer) -> onCompletion
tv.danmaku.ijk.media.player.MediaPlayerProxy$3 -> tv.danmaku.ijk.media.player.MediaPlayerProxy$3:
    214:214:void <init>(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnBufferingUpdateListener) -> <init>
    217:217:void onBufferingUpdate(tv.danmaku.ijk.media.player.IMediaPlayer,int) -> onBufferingUpdate
tv.danmaku.ijk.media.player.MediaPlayerProxy$4 -> tv.danmaku.ijk.media.player.MediaPlayerProxy$4:
    229:229:void <init>(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnSeekCompleteListener) -> <init>
    232:232:void onSeekComplete(tv.danmaku.ijk.media.player.IMediaPlayer) -> onSeekComplete
tv.danmaku.ijk.media.player.MediaPlayerProxy$5 -> tv.danmaku.ijk.media.player.MediaPlayerProxy$5:
    244:244:void <init>(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnVideoSizeChangedListener) -> <init>
    247:247:void onVideoSizeChanged(tv.danmaku.ijk.media.player.IMediaPlayer,int,int,int,int) -> onVideoSizeChanged
tv.danmaku.ijk.media.player.MediaPlayerProxy$6 -> tv.danmaku.ijk.media.player.MediaPlayerProxy$6:
    259:259:void <init>(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnErrorListener) -> <init>
    262:262:boolean onError(tv.danmaku.ijk.media.player.IMediaPlayer,int,int) -> onError
tv.danmaku.ijk.media.player.MediaPlayerProxy$7 -> tv.danmaku.ijk.media.player.MediaPlayerProxy$7:
    274:274:void <init>(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnInfoListener) -> <init>
    277:277:boolean onInfo(tv.danmaku.ijk.media.player.IMediaPlayer,int,int) -> onInfo
tv.danmaku.ijk.media.player.MediaPlayerProxy$8 -> tv.danmaku.ijk.media.player.MediaPlayerProxy$8:
    289:289:void <init>(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnTimedTextListener) -> <init>
    292:292:void onTimedText(tv.danmaku.ijk.media.player.IMediaPlayer,tv.danmaku.ijk.media.player.IjkTimedText) -> onTimedText
tv.danmaku.ijk.media.player.R -> tv.danmaku.ijk.media.player.R:
    10:10:void <init>() -> <init>
tv.danmaku.ijk.media.player.R$string -> tv.danmaku.ijk.media.player.R$string:
    13:13:void <init>() -> <init>
tv.danmaku.ijk.media.player.TextureMediaPlayer -> tv.danmaku.ijk.media.player.TextureMediaPlayer:
    32:32:void <init>(tv.danmaku.ijk.media.player.IMediaPlayer) -> <init>
    93:93:android.graphics.SurfaceTexture getSurfaceTexture() -> getSurfaceTexture
    57:58:void release() -> release
    36:42:void releaseSurfaceTexture() -> releaseSurfaceTexture
    51:52:void reset() -> reset
    63:64:void setDisplay(android.view.SurfaceHolder) -> setDisplay
    69:70:void setSurface(android.view.Surface) -> setSurface
    79:87:void setSurfaceTexture(android.graphics.SurfaceTexture) -> setSurfaceTexture
    98:98:void setSurfaceTextureHost(tv.danmaku.ijk.media.player.ISurfaceTextureHost) -> setSurfaceTextureHost
tv.danmaku.ijk.media.player.exceptions.IjkMediaException -> tv.danmaku.ijk.media.player.exceptions.IjkMediaException:
    20:20:void <init>() -> <init>
tv.danmaku.ijk.media.player.ffmpeg.FFmpegApi -> tv.danmaku.ijk.media.player.ffmpeg.FFmpegApi:
    3:3:void <init>() -> <init>
tv.danmaku.ijk.media.player.misc.AndroidMediaFormat -> tv.danmaku.ijk.media.player.misc.AndroidMediaFormat:
    27:28:void <init>(android.media.MediaFormat) -> <init>
    34:37:int getInteger(java.lang.String) -> getInteger
    43:46:java.lang.String getString(java.lang.String) -> getString
    52:61:java.lang.String toString() -> toString
tv.danmaku.ijk.media.player.misc.AndroidTrackInfo -> tv.danmaku.ijk.media.player.misc.AndroidTrackInfo:
    47:48:void <init>(android.media.MediaPlayer$TrackInfo) -> <init>
    29:30:tv.danmaku.ijk.media.player.misc.AndroidTrackInfo[] fromMediaPlayer(android.media.MediaPlayer) -> fromMediaPlayer
    39:41:tv.danmaku.ijk.media.player.misc.AndroidTrackInfo[] fromTrackInfo(android.media.MediaPlayer$TrackInfo[]) -> fromTrackInfo
    54:64:tv.danmaku.ijk.media.player.misc.IMediaFormat getFormat() -> getFormat
    103:104:java.lang.String getInfoInline() -> getInfoInline
    70:73:java.lang.String getLanguage() -> getLanguage
    79:82:int getTrackType() -> getTrackType
    88:97:java.lang.String toString() -> toString
tv.danmaku.ijk.media.player.misc.IjkMediaFormat -> tv.danmaku.ijk.media.player.misc.IjkMediaFormat:
    97:97:void <clinit>() -> <clinit>
    51:52:void <init>(tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta) -> <init>
    58:61:int getInteger(java.lang.String) -> getInteger
    66:74:java.lang.String getString(java.lang.String) -> getString
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$1 -> tv.danmaku.ijk.media.player.misc.IjkMediaFormat$1:
    100:100:void <init>(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> <init>
    103:103:java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> doFormat
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$2 -> tv.danmaku.ijk.media.player.misc.IjkMediaFormat$2:
    106:106:void <init>(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> <init>
    109:109:java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> doFormat
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$3 -> tv.danmaku.ijk.media.player.misc.IjkMediaFormat$3:
    112:112:void <init>(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> <init>
    115:121:java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> doFormat
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$4 -> tv.danmaku.ijk.media.player.misc.IjkMediaFormat$4:
    125:125:void <init>(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> <init>
    128:191:java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> doFormat
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$5 -> tv.danmaku.ijk.media.player.misc.IjkMediaFormat$5:
    194:194:void <init>(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> <init>
    197:197:java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> doFormat
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$6 -> tv.danmaku.ijk.media.player.misc.IjkMediaFormat$6:
    200:200:void <init>(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> <init>
    203:211:java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> doFormat
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$7 -> tv.danmaku.ijk.media.player.misc.IjkMediaFormat$7:
    218:218:void <init>(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> <init>
    221:226:java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> doFormat
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$8 -> tv.danmaku.ijk.media.player.misc.IjkMediaFormat$8:
    230:230:void <init>(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> <init>
    233:237:java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> doFormat
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$9 -> tv.danmaku.ijk.media.player.misc.IjkMediaFormat$9:
    241:241:void <init>(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> <init>
    244:253:java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> doFormat
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$Formatter -> tv.danmaku.ijk.media.player.misc.IjkMediaFormat$Formatter:
    81:81:void <init>() -> <init>
    81:81:void <init>(tv.danmaku.ijk.media.player.misc.IjkMediaFormat$1) -> <init>
    83:85:java.lang.String format(tv.danmaku.ijk.media.player.misc.IjkMediaFormat) -> format
tv.danmaku.ijk.media.player.misc.IjkTrackInfo -> tv.danmaku.ijk.media.player.misc.IjkTrackInfo:
    28:29:void <init>(tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta) -> <init>
    38:38:tv.danmaku.ijk.media.player.misc.IMediaFormat getFormat() -> getFormat
    65:97:java.lang.String getInfoInline() -> getInfoInline
    43:46:java.lang.String getLanguage() -> getLanguage
    51:51:int getTrackType() -> getTrackType
    33:33:void setMediaMeta(tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta) -> setMediaMeta
    55:55:void setTrackType(int) -> setTrackType
    60:60:java.lang.String toString() -> toString
tv.danmaku.ijk.media.player.pragma.DebugLog -> tv.danmaku.ijk.media.player.pragma.DebugLog:
    26:26:void <init>() -> <init>
    92:92:void d(java.lang.String,java.lang.String) -> d
    98:98:void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    104:105:void dfmt(java.lang.String,java.lang.String,java.lang.Object[]) -> dfmt
    35:35:void e(java.lang.String,java.lang.String) -> e
    41:41:void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    47:48:void efmt(java.lang.String,java.lang.String,java.lang.Object[]) -> efmt
    54:54:void i(java.lang.String,java.lang.String) -> i
    60:60:void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    66:67:void ifmt(java.lang.String,java.lang.String,java.lang.Object[]) -> ifmt
    136:140:void printCause(java.lang.Throwable) -> printCause
    130:130:void printStackTrace(java.lang.Throwable) -> printStackTrace
    111:111:void v(java.lang.String,java.lang.String) -> v
    117:117:void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    123:124:void vfmt(java.lang.String,java.lang.String,java.lang.Object[]) -> vfmt
    73:73:void w(java.lang.String,java.lang.String) -> w
    79:79:void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    85:86:void wfmt(java.lang.String,java.lang.String,java.lang.Object[]) -> wfmt
tv.danmaku.ijk.media.player.pragma.Pragma -> tv.danmaku.ijk.media.player.pragma.Pragma:
    22:22:void <init>() -> <init>
uk.co.senab.photoview.Compat -> uk.co.senab.photoview.Compat:
    43:46:int getPointerIndex(int) -> getPointerIndex
    30:33:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    39:39:void postOnAnimationJellyBean(android.view.View,java.lang.Runnable) -> postOnAnimationJellyBean
uk.co.senab.photoview.DefaultOnDoubleTapListener -> uk.co.senab.photoview.DefaultOnDoubleTapListener:
    22:23:void <init>(uk.co.senab.photoview.PhotoViewAttacher) -> <init>
    70:83:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    37:62:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    32:32:void setPhotoViewAttacher(uk.co.senab.photoview.PhotoViewAttacher) -> setPhotoViewAttacher
uk.co.senab.photoview.PhotoView -> uk.co.senab.photoview.PhotoView:
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    93:93:android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    88:88:android.graphics.RectF getDisplayRect() -> getDisplayRect
    283:283:uk.co.senab.photoview.IPhotoView getIPhotoViewImplementation() -> getIPhotoViewImplementation
    126:126:float getMaxScale() -> getMaxScale
    131:131:float getMaximumScale() -> getMaximumScale
    120:120:float getMediumScale() -> getMediumScale
    115:115:float getMidScale() -> getMidScale
    104:104:float getMinScale() -> getMinScale
    109:109:float getMinimumScale() -> getMinimumScale
    229:229:uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener getOnPhotoTapListener() -> getOnPhotoTapListener
    239:239:uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener getOnViewTapListener() -> getOnViewTapListener
    136:136:float getScale() -> getScale
    141:141:android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    273:273:android.graphics.Bitmap getVisibleRectangleBitmap() -> getVisibleRectangleBitmap
    53:59:void init() -> init
    304:305:void onAttachedToWindow() -> onAttachedToWindow
    298:299:void onDetachedFromWindow() -> onDetachedFromWindow
    146:146:void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    190:192:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    198:200:void setImageResource(int) -> setImageResource
    206:208:void setImageURI(android.net.Uri) -> setImageURI
    174:174:void setMaxScale(float) -> setMaxScale
    179:179:void setMaximumScale(float) -> setMaximumScale
    168:168:void setMediumScale(float) -> setMediumScale
    163:163:void setMidScale(float) -> setMidScale
    152:152:void setMinScale(float) -> setMinScale
    157:157:void setMinimumScale(float) -> setMinimumScale
    288:288:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    219:219:void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    214:214:void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    224:224:void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    293:293:void setOnScaleChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnScaleChangeListener) -> setOnScaleChangeListener
    234:234:void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    68:68:void setPhotoViewRotation(float) -> setPhotoViewRotation
    78:78:void setRotationBy(float) -> setRotationBy
    73:73:void setRotationTo(float) -> setRotationTo
    244:244:void setScale(float) -> setScale
    249:249:void setScale(float,boolean) -> setScale
    254:254:void setScale(float,float,float,boolean) -> setScale
    184:184:void setScaleLevels(float,float,float) -> setScaleLevels
    259:262:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    278:278:void setZoomTransitionDuration(int) -> setZoomTransitionDuration
    268:268:void setZoomable(boolean) -> setZoomable
uk.co.senab.photoview.PhotoViewAttacher -> uk.co.senab.photoview.PhotoViewAttacher:
    56:58:void <clinit>() -> <clinit>
    152:152:void <init>(android.widget.ImageView) -> <init>
    155:190:void <init>(android.widget.ImageView,boolean) -> <init>
    48:48:android.view.View$OnLongClickListener access$000(uk.co.senab.photoview.PhotoViewAttacher) -> access$000
    48:48:boolean access$100() -> access$100
    48:48:android.graphics.Matrix access$200(uk.co.senab.photoview.PhotoViewAttacher) -> access$200
    48:48:void access$300(uk.co.senab.photoview.PhotoViewAttacher,android.graphics.Matrix) -> access$300
    693:695:void cancelFling() -> cancelFling
    703:704:void checkAndDisplayMatrix() -> checkAndDisplayMatrix
    709:717:void checkImageViewScaleType() -> checkImageViewScaleType
    724:781:boolean checkMatrixBounds() -> checkMatrixBounds
    79:76:void checkZoomLevels(float,float,float) -> checkZoomLevels
    220:250:void cleanup() -> cleanup
    683:683:android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    255:256:android.graphics.RectF getDisplayRect() -> getDisplayRect
    792:800:android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> getDisplayRect
    687:689:android.graphics.Matrix getDrawMatrix() -> getDrawMatrix
    302:309:android.widget.ImageView getImageView() -> getImageView
    937:937:int getImageViewHeight(android.widget.ImageView) -> getImageViewHeight
    931:931:int getImageViewWidth(android.widget.ImageView) -> getImageViewWidth
    346:346:float getMaximumScale() -> getMaximumScale
    335:335:float getMediumScale() -> getMediumScale
    324:324:float getMinimumScale() -> getMinimumScale
    593:593:uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener getOnPhotoTapListener() -> getOnPhotoTapListener
    603:603:uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener getOnViewTapListener() -> getOnViewTapListener
    351:351:float getScale() -> getScale
    356:356:android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    831:832:float getValue(android.graphics.Matrix,int) -> getValue
    807:808:android.graphics.Bitmap getVisibleRectangleBitmap() -> getVisibleRectangleBitmap
    88:88:boolean hasDrawable(android.widget.ImageView) -> hasDrawable
    99:101:boolean isSupportedScaleType(android.widget.ImageView$ScaleType) -> isSupportedScaleType
    361:393:void onDrag(float,float) -> onDrag
    401:411:void onFling(float,float,float,float) -> onFling
    416:444:void onGlobalLayout() -> onGlobalLayout
    451:463:void onScale(float,float,float) -> onScale
    472:518:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    839:841:void resetMatrix() -> resetMatrix
    529:529:void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    845:855:void setImageViewMatrix(android.graphics.Matrix) -> setImageViewMatrix
    117:119:void setImageViewScaleTypeMatrix(android.widget.ImageView) -> setImageViewScaleTypeMatrix
    564:565:void setMaximumScale(float) -> setMaximumScale
    552:553:void setMediumScale(float) -> setMediumScale
    540:541:void setMinimumScale(float) -> setMinimumScale
    196:198:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    578:578:void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    583:583:void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    588:588:void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    204:204:void setOnScaleChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnScaleChangeListener) -> setOnScaleChangeListener
    598:598:void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    295:296:void setRotationBy(float) -> setRotationBy
    289:290:void setRotationTo(float) -> setRotationTo
    608:608:void setScale(float) -> setScale
    613:616:void setScale(float,boolean) -> setScale
    626:633:void setScale(float,float,float,boolean) -> setScale
    570:573:void setScaleLevels(float,float,float) -> setScaleLevels
    650:654:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    815:815:void setZoomTransitionDuration(int) -> setZoomTransitionDuration
    660:661:void setZoomable(boolean) -> setZoomable
    665:676:void update() -> update
    867:925:void updateBaseMatrix(android.graphics.drawable.Drawable) -> updateBaseMatrix
uk.co.senab.photoview.PhotoViewAttacher$1 -> uk.co.senab.photoview.PhotoViewAttacher$1:
    176:176:void <init>(uk.co.senab.photoview.PhotoViewAttacher) -> <init>
    181:182:void onLongPress(android.view.MotionEvent) -> onLongPress
uk.co.senab.photoview.PhotoViewAttacher$2 -> uk.co.senab.photoview.PhotoViewAttacher$2:
    99:99:void <clinit>() -> <clinit>
uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable:
    1019:1024:void <init>(uk.co.senab.photoview.PhotoViewAttacher,float,float,float,float) -> <init>
    1047:1049:float interpolate() -> interpolate
    1029:1042:void run() -> run
uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable -> uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable:
    1059:1060:void <init>(uk.co.senab.photoview.PhotoViewAttacher,android.content.Context) -> <init>
    1064:1067:void cancelFling() -> cancelFling
    1072:1107:void fling(int,int,int,int) -> fling
    1114:1139:void run() -> run
uk.co.senab.photoview.gestures.CupcakeGestureDetector -> uk.co.senab.photoview.gestures.CupcakeGestureDetector:
    39:43:void <init>(android.content.Context) -> <init>
    50:50:float getActiveX(android.view.MotionEvent) -> getActiveX
    54:54:float getActiveY(android.view.MotionEvent) -> getActiveY
    62:62:boolean isDragging() -> isDragging
    67:78:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    36:36:void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener) -> setOnGestureListener
uk.co.senab.photoview.gestures.EclairGestureDetector -> uk.co.senab.photoview.gestures.EclairGestureDetector:
    32:29:void <init>(android.content.Context) -> <init>
    38:40:float getActiveX(android.view.MotionEvent) -> getActiveX
    47:49:float getActiveY(android.view.MotionEvent) -> getActiveY
    55:84:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
uk.co.senab.photoview.gestures.FroyoGestureDetector -> uk.co.senab.photoview.gestures.FroyoGestureDetector:
    29:54:void <init>(android.content.Context) -> <init>
    59:59:boolean isScaling() -> isScaling
    64:65:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
uk.co.senab.photoview.gestures.FroyoGestureDetector$1 -> uk.co.senab.photoview.gestures.FroyoGestureDetector$1:
    30:30:void <init>(uk.co.senab.photoview.gestures.FroyoGestureDetector) -> <init>
    34:39:boolean onScale(android.view.ScaleGestureDetector) -> onScale
uk.co.senab.photoview.gestures.VersionedGestureDetector -> uk.co.senab.photoview.gestures.VersionedGestureDetector:
    26:37:uk.co.senab.photoview.gestures.GestureDetector newInstance(android.content.Context,uk.co.senab.photoview.gestures.OnGestureListener) -> newInstance
uk.co.senab.photoview.log.LogManager -> uk.co.senab.photoview.log.LogManager:
    25:25:void <clinit>() -> <clinit>
    32:32:uk.co.senab.photoview.log.Logger getLogger() -> getLogger
uk.co.senab.photoview.log.LoggerDefault -> uk.co.senab.photoview.log.LoggerDefault:
    23:23:void <init>() -> <init>
    37:37:int d(java.lang.String,java.lang.String) -> d
    47:47:int i(java.lang.String,java.lang.String) -> i
uk.co.senab.photoview.scrollerproxy.GingerScroller -> uk.co.senab.photoview.scrollerproxy.GingerScroller:
    28:29:void <init>(android.content.Context) -> <init>
    36:40:boolean computeScrollOffset() -> computeScrollOffset
    46:46:void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    51:51:void forceFinished(boolean) -> forceFinished
    61:61:int getCurrX() -> getCurrX
    66:66:int getCurrY() -> getCurrY
    56:56:boolean isFinished() -> isFinished
uk.co.senab.photoview.scrollerproxy.IcsScroller -> uk.co.senab.photoview.scrollerproxy.IcsScroller:
    25:25:void <init>(android.content.Context) -> <init>
    30:30:boolean computeScrollOffset() -> computeScrollOffset
uk.co.senab.photoview.scrollerproxy.PreGingerScroller -> uk.co.senab.photoview.scrollerproxy.PreGingerScroller:
    25:26:void <init>(android.content.Context) -> <init>
    31:31:boolean computeScrollOffset() -> computeScrollOffset
    37:37:void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    42:42:void forceFinished(boolean) -> forceFinished
    51:51:int getCurrX() -> getCurrX
    56:56:int getCurrY() -> getCurrY
    46:46:boolean isFinished() -> isFinished
uk.co.senab.photoview.scrollerproxy.ScrollerProxy -> uk.co.senab.photoview.scrollerproxy.ScrollerProxy:
    22:22:void <init>() -> <init>
    25:30:uk.co.senab.photoview.scrollerproxy.ScrollerProxy getScroller(android.content.Context) -> getScroller
